From: "Saved by Internet Explorer 11"
Subject: 
Date: Thu, 1 Sep 2016 14:00:56 +0800
MIME-Version: 1.0
Content-Type: text/html;
	charset="utf-8"
Content-Transfer-Encoding: quoted-printable
Content-Location: https://raw.githubusercontent.com/bpampuch/pdfmake/master/build/pdfmake.min.js.map
X-MimeOLE: Produced By Microsoft MimeOLE V6.1.7601.17609

=EF=BB=BF<!DOCTYPE HTML>
<!DOCTYPE html PUBLIC "" ""><HTML><HEAD><META content=3D"IE=3D11.0000"=20
http-equiv=3D"X-UA-Compatible">

<META http-equiv=3D"Content-Type" content=3D"text/html; =
charset=3Dutf-8">
<META name=3D"GENERATOR" content=3D"MSHTML 11.00.9600.18231"></HEAD>
<BODY>
<PRE>{"version":3,"sources":["pdfmake.js"],"names":["modules","__webpack_=
require__","moduleId","installedModules","exports","module","id","loaded"=
,"call","m","c","p","global","this","Buffer","Document","docDefinition","=
fonts","vfs","defaultClientFonts","PdfPrinter","FileSaver","saveAs","Robo=
to","normal","bold","italics","bolditalics","prototype","_createDoc","opt=
ions","callback","printer","fs","bindFS","result","doc","createPdfKitDocu=
ment","chunks","on","chunk","push","concat","_pdfMakePages","end","_getPa=
ges","cb","ignoreBuffer","pages","open","message","win","window","getData=
Url","location","href","e","close","print","dataUrl","iFrame","document",=
"createElement","style","position","left","src","onload","removeIFrame","=
body","removeChild","removeEventListener","addEventListener","appendChild=
","autoPrint","download","defaultFileName","getBuffer","blob","Blob","typ=
e","name","byteArray","Uint8Array","buffer","getBase64","toString","creat=
ePdf","pdfMake","typedArraySupport","Bar","arr","foo","constructor","suba=
rray","byteLength","kMaxLength","TYPED_ARRAY_SUPPORT","arg","length","par=
ent","undefined","fromNumber","fromString","arguments","fromObject","that=
","allocate","checked","i","string","encoding","write","object","isBuffer=
","fromBuffer","isArray","fromArray","TypeError","ArrayBuffer","fromTyped=
Array","fromArrayBuffer","fromArrayLike","fromJsonObject","copy","array",=
"_augment","data","__proto__","_isBuffer","fromPool","poolSize","rootPare=
nt","RangeError","SlowBuffer","subject","buf","len","loweredCase","utf8To=
Bytes","base64ToBytes","toLowerCase","slowToString","start","Infinity","h=
exSlice","utf8Slice","asciiSlice","binarySlice","base64Slice","utf16leSli=
ce","hexWrite","offset","Number","remaining","strLen","Error","parsed","p=
arseInt","substr","isNaN","utf8Write","blitBuffer","asciiWrite","asciiToB=
ytes","binaryWrite","base64Write","ucs2Write","utf16leToBytes","base64","=
fromByteArray","slice","Math","min","res","firstByte","codePoint","bytesP=
erSequence","secondByte","thirdByte","fourthByte","tempCodePoint","decode=
CodePointsArray","codePoints","MAX_ARGUMENTS_LENGTH","String","fromCharCo=
de","apply","ret","out","toHex","bytes","checkOffset","ext","checkInt","v=
alue","max","objectWriteUInt16","littleEndian","j","objectWriteUInt32","c=
heckIEEE754","writeFloat","noAssert","ieee754","writeDouble","base64clean=
","str","stringtrim","replace","INVALID_BASE64_RE","trim","n","units","le=
adSurrogate","charCodeAt","hi","lo","toByteArray","dst","INSPECT_MAX_BYTE=
S","b","compare","a","x","y","isEncoding","list","pos","item","equals","i=
nspect","match","join","indexOf","val","byteOffset","arrayIndexOf","found=
Index","get","readUInt8","set","v","writeUInt8","isFinite","swap","toJSON=
","Array","_arr","newBuf","sliceLen","readUIntLE","mul","readUIntBE","rea=
dUInt16LE","readUInt16BE","readUInt32LE","readUInt32BE","readIntLE","pow"=
,"readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readIn=
t32BE","readFloatLE","read","readFloatBE","readDoubleLE","readDoubleBE","=
writeUIntLE","writeUIntBE","floor","writeUInt16LE","writeUInt16BE","write=
UInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeI=
nt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFl=
oatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","target","targetSta=
rt","_set","fill","toArrayBuffer","BP","toLocaleString","lookup","decode"=
,"elt","code","PLUS","PLUS_URL_SAFE","SLASH","SLASH_URL_SAFE","NUMBER","U=
PPER","LOWER","b64ToByteArray","b64","L","l","tmp","placeHolders","charAt=
","Arr","uint8ToBase64","uint8","encode","num","tripletToBase64","temp","=
extraBytes","output","isLE","mLen","nBytes","eLen","eMax","eBias","nBits"=
,"d","s","NaN","rt","abs","log","LN2","Object","fontDescriptors","fixPage=
Margins","margin","right","top","bottom","registerDefaultTableLayouts","l=
ayoutBuilder","registerTableLayouts","noBorders","hLineWidth","vLineWidth=
","paddingLeft","paddingRight","node","table","widths","headerLineOnly","=
headerRows","lightHorizontalLines","hLineColor","pageSize2widthAndHeight"=
,"pageSize","size","sizes","toUpperCase","width","height","updatePageOrie=
ntationInOptions","currentPage","pdfKitDoc","previousPageOrientation","or=
ientation","renderPages","fontProvider","addPage","page","ii","il","items=
","renderVector","renderLine","renderImage","watermark","renderWatermark"=
,"setFontRefsToPdfDoc","line","lineHeight","getHeight","ascenderHeight","=
getAscenderHeight","textDecorator","drawBackground","inlines","inline","c=
olor","save","transform","encoded","font","text","addContent","fontId","f=
ontSize","encodedText","link","restore","drawDecorations","opacity","angl=
e","atan2","PI","rotate","origin","vector","pdfDoc","lineWidth","dash","s=
pace","undash","fillOpacity","strokeOpacity","lineJoin","ellipse","r1","r=
2","r","roundedRect","w","h","rect","moveTo","x1","y1","lineTo","x2","y2"=
,"points","p1","pn","closePath","lineColor","fillAndStroke","stroke","ima=
ge","_width","_height","_","FontProvider","LayoutBuilder","PdfKit","Image=
Measure","noConflict","pageOrientation","compress","info","Producer","Cre=
ator","Title","title","Author","author","Subject","Keywords","keywords","=
images","builder","pageMargins","tableLayouts","layoutDocument","content"=
,"styles","defaultStyle","background","header","footer","pageBreakBefore"=
,"printActionRef","ref","Type","S","N","_root","OpenAction","__WEBPACK_AM=
D_DEFINE_RESULT__","baseCompareAscending","other","valIsNull","valIsUndef=
","valIsReflexive","othIsNull","othIsUndef","othIsReflexive","baseFindInd=
ex","predicate","fromRight","index","baseIndexOf","fromIndex","indexOfNaN=
","baseIsFunction","baseToString","charsLeftIndex","chars","charsRightInd=
ex","compareAscending","criteria","compareMultiple","orders","objCriteria=
","othCriteria","ordersLength","order","deburrLetter","letter","deburredL=
etters","escapeHtmlChar","chr","htmlEscapes","escapeRegExpChar","leadingC=
har","whitespaceChar","regexpEscapes","stringEscapes","escapeStringChar",=
"isObjectLike","isSpace","charCode","replaceHolders","placeholder","resIn=
dex","PLACEHOLDER","sortedUniq","iteratee","seen","computed","trimmedLeft=
Index","trimmedRightIndex","unescapeHtmlChar","htmlUnescapes","runInConte=
xt","context","lodash","LazyWrapper","LodashWrapper","hasOwnProperty","wr=
apperClone","baseLodash","chainAll","actions","__wrapped__","__actions__"=
,"__chain__","__dir__","__filtered__","__iteratees__","__takeCount__","PO=
SITIVE_INFINITY","__views__","lazyClone","arrayCopy","lazyReverse","clone=
","lazyValue","dir","isArr","isRight","arrLength","view","getView","itera=
tees","iterLength","takeCount","nativeMin","LARGE_ARRAY_SIZE","baseWrappe=
rValue","reverse","outer","iterIndex","LAZY_MAP_FLAG","LAZY_FILTER_FLAG",=
"MapCache","__data__","mapDelete","key","has","mapGet","mapHas","mapSet",=
"SetCache","values","hash","nativeCreate","Set","cacheIndexOf","cache","i=
sObject","cachePush","add","arrayConcat","othIndex","othLength","source",=
"arrayEach","arrayEachRight","arrayEvery","arrayExtremum","comparator","e=
xValue","current","arrayFilter","arrayMap","arrayPush","arrayReduce","acc=
umulator","initFromArray","arrayReduceRight","arraySome","arraySum","assi=
gnDefaults","objectValue","sourceValue","assignOwnDefaults","assignWith",=
"customizer","props","keys","baseAssign","baseCopy","baseAt","collection"=
,"isNil","isArrayLike","propsLength","isIndex","baseCallback","func","thi=
sArg","argCount","bindCallback","identity","baseMatches","property","base=
MatchesProperty","baseClone","isDeep","stackA","stackB","initCloneArray",=
"tag","objToString","isFunc","funcTag","objectTag","argsTag","cloneableTa=
gs","initCloneByTag","initCloneObject","baseForOwn","subValue","baseDelay=
","wait","args","FUNC_ERROR_TEXT","setTimeout","baseDifference","getIndex=
Of","isCommon","createCache","valuesLength","valuesIndex","baseEvery","ba=
seEach","baseExtremum","baseFill","baseFilter","baseFind","eachFunc","ret=
Key","baseFlatten","isStrict","isArguments","baseForIn","baseFor","keysIn=
","baseForOwnRight","baseForRight","baseFunctions","isFunction","baseGet"=
,"path","pathKey","toObject","baseIsEqual","isLoose","baseIsEqualDeep","e=
qualFunc","objIsArr","othIsArr","objTag","arrayTag","othTag","isTypedArra=
y","objIsObj","othIsObj","isSameTag","equalByTag","objIsWrapped","othIsWr=
apped","equalArrays","equalObjects","pop","baseIsMatch","matchData","noCu=
stomizer","objValue","srcValue","baseMap","getMatchData","isKey","isStric=
tComparable","toPath","baseSlice","last","baseMerge","isSrcArr","baseMerg=
eDeep","mergeFunc","isPlainObject","toPlainObject","baseProperty","basePr=
opertyDeep","basePullAt","indexes","previous","splice","baseRandom","nati=
veFloor","nativeRandom","baseReduce","initFromCollection","baseSome","bas=
eSortBy","comparer","sort","baseSortByOrder","getCallback","baseSum","bas=
eUniq","isLarge","seenIndex","baseValues","baseWhile","isDrop","action","=
binaryIndex","retHighest","low","high","HALF_MAX_ARRAY_LENGTH","mid","bin=
aryIndexBy","valIsNaN","isDef","isReflexive","setLow","MAX_ARRAY_INDEX","=
bufferClone","composeArgs","partials","holders","holdersLength","argsInde=
x","argsLength","nativeMax","leftIndex","leftLength","composeArgsRight","=
holdersIndex","rightIndex","rightLength","createAggregator","setter","ini=
tializer","createAssigner","assigner","restParam","sources","guard","isIt=
erateeCall","createBaseEach","getLength","isLength","iterable","createBas=
eFor","keysFunc","createBindWrapper","wrapper","fn","root","Ctor","create=
CtorWrapper","createCompounder","words","deburr","thisBinding","baseCreat=
e","createCurry","flag","curryFunc","arity","createWrapper","createDefaul=
ts","createExtremum","toIterable","createFind","createFindIndex","createF=
indKey","objectFunc","createFlow","funcs","thru","getFuncName","funcName"=
,"getData","isLaziable","ARY_FLAG","CURRY_FLAG","PARTIAL_FLAG","REARG_FLA=
G","plant","createForEach","arrayFunc","createForIn","createForOwn","crea=
teObjectMapper","isMapKeys","mapped","createPadDir","createPadding","crea=
tePartial","partialFunc","createReduce","createHybridWrapper","bitmask","=
partialsRight","holdersRight","argPos","ary","isCurry","isCurryRight","ar=
gsHolders","newArgPos","newArity","newsHolders","newHoldersRight","newPar=
tials","newPartialsRight","PARTIAL_RIGHT_FLAG","isCurryBound","BIND_FLAG"=
,"BIND_KEY_FLAG","newData","setData","isBind","isBindKey","reorder","isAr=
y","CURRY_BOUND_FLAG","CURRY_RIGHT_FLAG","strLength","nativeIsFinite","pa=
dLength","repeat","nativeCeil","createPartialWrapper","createRound","meth=
odName","number","precision","createSortedIndex","mergeData","baseSetData=
","arrValue","othValue","boolTag","dateTag","errorTag","numberTag","regex=
pTag","stringTag","objProps","objLength","othProps","skipCtor","objCtor",=
"othCtor","realNames","otherFunc","pairs","getNative","isNative","transfo=
rms","input","arrayBufferTag","float32Tag","float64Tag","int8Tag","int16T=
ag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","reFl=
ags","exec","lastIndex","invokePath","reIsUint","test","MAX_SAFE_INTEGER"=
,"reIsPlainProp","reIsDeepProp","srcBitmask","newBitmask","isCombo","merg=
eDefaults","merge","pickByArray","pickByCallback","oldArray","shimKeys","=
allowIndexes","rePropName","quote","reEscapeChar","compact","drop","dropR=
ight","dropRightWhile","dropWhile","first","flatten","flattenDeep","initi=
al","lastIndexOf","pull","remove","rest","take","takeRight","takeRightWhi=
le","takeWhile","uniq","isSorted","unzip","group","unzipWith","xor","zipO=
bject","chain","tap","interceptor","wrapperChain","wrapperCommit","wrappe=
rPlant","wrapperReverse","wrapped","wrapperToString","wrapperValue","ever=
y","filter","findWhere","find","includes","isString","map","pluck","rejec=
t","sample","toArray","rand","shuffle","some","sortBy","sortByOrder","whe=
re","after","before","debounce","cancel","timeoutId","clearTimeout","maxT=
imeoutId","lastCalled","trailingCall","complete","isCalled","now","delaye=
d","stamp","maxDelayed","trailing","debounced","leading","maxWait","leadi=
ngCall","memoize","resolver","memoized","Cache","negate","once","otherArg=
s","spread","throttle","wrap","cloneDeep","gt","gte","propertyIsEnumerabl=
e","isBoolean","isDate","isElement","nodeType","isEmpty","isEqual","isErr=
or","isMatch","isNumber","reIsNative","fnToString","reIsHostCtor","isNull=
","isRegExp","typedArrayTags","isUndefined","lt","lte","create","properti=
es","functions","defaultValue","invert","multiValue","isProto","skipIndex=
es","nested","valuesIn","inRange","random","floating","noMin","noMax","pa=
rseFloat","capitalize","reLatin1","reComboMark","endsWith","escape","reHa=
sUnescapedHtml","reUnescapedHtml","escapeRegExp","reHasRegExpChars","reRe=
gExpChars","pad","radix","nativeParseInt","reHasHexPrefix","startsWith","=
template","otherOptions","settings","templateSettings","isEscaping","isEv=
aluating","imports","importsKeys","importsValues","interpolate","reNoMatc=
h","reDelimiters","RegExp","reInterpolate","reEsTemplate","evaluate","sou=
rceURL","templateCounter","escapeValue","interpolateValue","esTemplateVal=
ue","evaluateValue","reUnescapedString","variable","reEmptyStringLeading"=
,"reEmptyStringMiddle","reEmptyStringTrailing","attempt","Function","trim=
Left","trimRight","trunc","DEFAULT_TRUNC_LENGTH","omission","DEFAULT_TRUN=
C_OMISSION","separator","search","newEnd","substring","unescape","reHasEs=
capedHtml","reEscapedHtml","pattern","reWords","matches","constant","matc=
hesProperty","mixin","isObj","methodNames","oldDash","noop","propertyOf",=
"range","step","times","MAX_ARRAY_LENGTH","uniqueId","prefix","idCounter"=
,"augend","addend","sum","defaults","pick","contextProps","Date","arrayPr=
oto","objectProto","stringProto","WeakMap","ceil","nativeIsArray","native=
Keys","nativeNow","NEGATIVE_INFINITY","metaMap","support","reEscape","reE=
valuate","baseEachRight","count","HOT_SPAN","HOT_COUNT","difference","fin=
dIndex","findLastIndex","intersection","arrays","caches","pullAt","sorted=
Index","sortedLastIndex","union","without","zip","zipWith","wrapperConcat=
","at","countBy","findLast","forEach","forEachRight","groupBy","indexBy",=
"invoke","isProp","partition","reduce","reduceRight","sortByAll","getTime=
","bind","bindAll","bindKey","curry","curryRight","defer","delay","flow",=
"flowRight","modArgs","partial","partialRight","rearg","assign","defaults=
Deep","findKey","findLastKey","forIn","forInRight","forOwn","forOwnRight"=
,"mapKeys","mapValues","omit","camelCase","word","kebabCase","padLeft","p=
adRight","snakeCase","startCase","method","methodOf","round","backflow","=
collect","compose","each","eachRight","extend","methods","select","tail",=
"unique","all","any","contains","eq","detect","foldl","foldr","head","inc=
lude","inject","VERSION","filtered","isFilter","takeName","dropName","ope=
rationName","createCallback","checkIteratee","retUnwrapped","lodashFunc",=
"isHybrid","isLazy","useLazy","onlyLazy","chainName","names","commit","ru=
n","valueOf","mapTag","setTag","weakMapTag","upper","lower","=C3=80","=C3=
=81","=C3=82","=C3=83","=C3=84","=C3=85","=C3=A0","=C3=A1","=C3=A2","=C3=A3=
","=C3=A4","=C3=A5","=C3=87","=C3=A7","=C3=90","=C3=B0","=C3=88","=C3=89"=
,"=C3=8A","=C3=8B","=C3=A8","=C3=A9","=C3=AA","=C3=AB","=C3=8C","=C3=8D",=
"=C3=8E","=C3=8F","=C3=AC","=C3=AD","=C3=AE","=C3=AF","=C3=91","=C3=B1","=
=C3=92","=C3=93","=C3=94","=C3=95","=C3=96","=C3=98","=C3=B2","=C3=B3","=C3=
=B4","=C3=B5","=C3=B6","=C3=B8","=C3=99","=C3=9A","=C3=9B","=C3=9C","=C3=B9=
","=C3=BA","=C3=BB","=C3=BC","=C3=9D","=C3=BD","=C3=BF","=C3=86","=C3=A6"=
,"=C3=9E","=C3=BE","=C3=9F","&amp;","&lt;","&gt;","\"","'","`","&amp;amp;=
","&amp;lt;","&amp;gt;","&amp;quot;","&amp;#39;","&amp;#96;","objectTypes=
","function","0","1","2","3","4","5","6","7","8","9","A","B","C","D","E",=
"F","f","t","u","\\","\n","\r","=E2=80=A8","=E2=80=A9","freeExports","fre=
eModule","freeGlobal","freeSelf","self","freeWindow","webpackPolyfill","d=
eprecate","paths","children","typeName","fontWrappers","fontDef","FontWra=
pper","provideFont","familyName","fontFamily","fontWrapper","pdfFonts","p=
dfkitDoc","fontName","MAX_CHAR_TYPES","charCatalogue","defineProperty","g=
etFont","ascender","decender","pseudoName","postscriptName","_fontFamilie=
s","_font","widthOfString","toCharCode","char","charTypesInInline","split=
","characterFitInFontWithIndex","use","addAll","otherArray","imageMeasure=
","tracker","TraversalTracker","decorateNode","positions","canvas","reset=
XY","DocMeasure","DocumentContext","PageElementWriter","ColumnCalculator"=
,"TableProcessor","Line","pack","offsetVector","fontStringify","TextTools=
","StyleContextStack","docStructure","styleDictionary","pageBreakBeforeFc=
t","addPageBreaksIfNecessary","linearNodeList","nodeInfo","startPosition"=
,"pageNumbers","stack","followingNodeList","pageBreak","pageBreakCalculat=
ed","pageNumber","followingNodesOnPage","node0","nodesOnNextPage","previo=
usNodesOnPage","resetXYs","docMeasure","tryLayoutDocument","measureDocume=
nt","writer","_this","startTracking","addBackground","processNode","addHe=
adersAndFooters","addWatermark","backgroundGetter","pageBackground","getC=
urrentPage","beginUnbreakableBlock","commitUnbreakableBlock","addStaticRe=
peatable","headerOrFooter","sizeFunction","addDynamicRepeatable","nodeGet=
ter","pageIndex","headerSizeFct","footerSizeFct","getSize","targetWidth",=
"sqrt","textTools","styleContextStack","sizeOfString","defaultFont","getO=
wnPropertyNames","watermarkObject","applyMargins","_margin","moveToNextPa=
ge","moveDown","addMargin","absPosition","absolutePosition","beginDetache=
dBlock","processVerticalContainer","columns","processColumns","ul","proce=
ssList","ol","processTable","processLeaf","processImage","processCanvas",=
"qr","processQr","_span","JSON","stringify","endDetachedBlock","columnNod=
e","gapArray","gap","gaps","availableWidth","_gap","buildColumnWidths","p=
rocessRow","tableBody","tableRow","storePageBreakData","pageDesc","pageBr=
eaks","desc","prevPage","prevY","colLeftOffset","getEndingCell","column",=
"columnIndex","rowSpan","endingRow","auto","beginColumnGroup","_calcWidth=
","leftOffset","colSpan","beginColumn","_columnEndingContext","markEnding=
","completeColumnGroup","orderedList","addMarkerToFirstLeaf","nextMarker"=
,"marker","_minWidth","addVector","markerLine","addInline","_inlines","ad=
dLine","gapSize","_gapSize","listMarker","tableNode","processor","beginTa=
ble","beginRow","_offsets","offsets","endRow","endTable","buildNextLine",=
"currentHeight","maxHeight","textNode","hasEnoughSpaceForInline","shift",=
"lastLineInParagraph","addImage","_minHeight","availableHeight","addQr","=
events","event","callbacks","stopTracking","emit","innerBlock","styleStac=
k","autoImageIndex","qrEncoder","measureNode","extendMargins","_maxWidth"=
,"getNodeMargin","processSingleMargins","currentMargin","marginLeft","mar=
ginTop","marginRight","marginBottom","flattenStyleArray","styleArray","fl=
attenedStyles","styleName","convertMargin","flattenedStyleArray","measure=
Columns","measureVerticalContainer","measureList","measureTable","measure=
Leaf","measureImage","measureCanvas","measureQr","convertIfBase64Image","=
label","imageSize","fit","factor","_alignment","getProperty","buildInline=
s","minWidth","maxWidth","gapSizeForList","isOrderedList","listItems","lo=
ngestNo","buildMarker","counter","radius","_maxHeight","isOrdered","nextI=
tem","measures","measureMinMax","measureCb","fillColor","getLayout","layo=
ut","defaultLayout","vLineColor","paddingTop","paddingBottom","getOffsets=
","totalOffset","prevRightPadding","lOffset","total","extendWidthsForColS=
pans","q","colSpans","span","currentMinMax","getMinMax","col","minDiffere=
nce","maxDifference","markSpans","rowData","markVSpans","row","extendTabl=
eWidths","_layout","cols","rows","i2","l2","measure","splitWords","noWrap=
","results","WORD_RE","isNewLine","shouldAddLine","lineEnd","copyStyle","=
destination","normalizeTextArray","removeDiacritics","diacriticsMap","get=
StyleProperty","textArray","normalized","decoration","decorationColor","d=
ecorationStyle","leadingSpaces","LEADING","trailingSpaces","TRAILING","le=
adingCut","trailingCut","alignment","getTrimmedWidth","currentLineWidth",=
"measured","=C4=84","=C4=86","=C4=98","=C5=81","=C5=83","=C5=9A","=C5=B9"=
,"=C5=BB","=C4=85","=C4=87","=C4=99","=C5=82","=C5=84","=C5=9B","=C5=BA",=
"=C5=BC","styleOverrides","styleNameOrOverride","howMany","autopush","sty=
leNames","styleOverrideObject","pushSOO","pushedItems","autoColumns","aut=
oMin","autoMax","starColumns","starMaxMin","starMaxMax","fixedColumns","i=
nitial_availableWidth","isAutoColumn","isStarColumn","elasticWidth","minW=
","maxW","W","starSize","maxStar","starCount","obj","functionToCheck","ge=
tType","generateFrame","MODES","numeric","MODE_NUMERIC","alphanumeric","M=
ODE_ALPHANUMERIC","octet","MODE_OCTET","ECCLEVELS","ECCLEVEL_L","M","ECCL=
EVEL_M","Q","ECCLEVEL_Q","H","ECCLEVEL_H","ver","version","ecclevel","ecc=
Level","mode","mask","NUMERIC_REGEXP","ALPHANUMERIC_OUT_REGEXP","validate=
data","getmaxdatalen","generate","buildCanvas","foreground","matrix","mod=
Size","cd","_canvas","VERSIONS","MODE_TERMINATOR","MODE_KANJI","ALPHANUME=
RIC_REGEXP","GF256_MAP","GF256_INVMAP","GF256_GENPOLY","prevpoly","poly",=
"ALPHANUMERIC_MAP","MASKFUNCS","needsverinfo","getsizebyver","nfullbits",=
"nbits","ndatabits","ndatalenbits","newdata","ch","maxbuflen","bits","dat=
alen","nlenbits","calculateecc","genpoly","modulus","polylen","genpolylen=
","quotient","augumenteccs","nblocks","subsizes","subsize","subsize0","pi=
vot","eccs","nitemsperblock","augumentbch","makebasematrix","reserved","b=
lit","aligns","minj","maxj","k","putdata","jj","maskdata","maskf","putfor=
matinfo","evaluatematrix","PENALTY_CONSECUTIVE","PENALTY_TWOBYTWO","PENAL=
TY_FINDERLIKE","PENALTY_DENSITY","evaluategroup","groups","score","nblack=
s","nextrow","bestmask","bestscore","snapshots","endingCell","pageOrienta=
tionString","currentPageOrientation","bottomMostContext","c1","c2","botto=
mMost","lastColumnWidth","saved","calculateBottomMost","destContext","sav=
eContextInEndingCell","initializePage","pageSnapshot","getPageSize","newP=
ageOrientation","nextPageIndex","createNewPage","newPageCreated","getCurr=
entPosition","innerHeight","innerWidth","pageInnerHeight","pageInnerWidth=
","verticalRatio","horizontalRatio","transactionLevel","repeatables","Ele=
mentWriter","fitOnPage","addFct","dontUpdateContextPosition","ignoreConte=
xtX","ignoreContextY","addFragment","fragment","useBlockXOffset","useBloc=
kYOffset","nextPage","rep","originalX","pushContext","forcedX","forcedY",=
"unbreakableContext","popContext","nbPages","xOffset","yOffset","currentB=
lockToRepeatable","pushToRepeatables","popFromRepeatables","contextStack"=
,"addPageItem","cloneLine","getCurrentPositionOnPage","alignLine","getWid=
th","newLineForced","additionalSpacing","alignImage","imageWidth","block"=
,"ctx","img","contextOrWidth","inlineWidths","getTableInnerContentWidth",=
"prepareRowSpanData","rsd","lastWidth","paddings","lBorder","tableWidth",=
"rowSpanData","cleanUpRepeatables","rowsWithoutPageBreak","keepWithHeader=
Rows","dontBreakRows","drawHorizontalLine","onRowBreak","rowIndex","rowPa=
ddingTop","topLineWidth","bottomLineWidth","rowPaddingBottom","rowCallbac=
k","rowTopY","reservedAtBottom","lineIndex","overrideY","currentLine","sh=
ouldDrawLine","drawVerticalLine","y0","vLineIndex","getLineXs","_colSpan"=
,"endingPage","endingY","xs","ys","hasBreaks","skipOrphanePadding","yi","=
yl","willBreak","rowBreakWithoutHeader","hzLineOffset","colIndex","wBorde=
r","xf","yf","hLineWhenBroken","headerRepeatable","PDFDocument","PDFObjec=
t","PDFPage","PDFReference","stream","__hasProp","__extends","child","cto=
r","__super__","_super","_ref","_ref1","_pageBuffer","_pageBufferStart","=
_waiting","_ended","_offset","Pages","Count","Kids","initColor","initVect=
or","initFonts","initText","initImages","CreationDate","_write","_results=
","bufferPages","flushPages","dictionary","margins","_ctm","bufferedPageR=
ange","switchToPage","_i","_len","_read","_refEnd","_finalize","filename"=
,"err","pipe","createWriteStream","_info","embed","xRefOffset","convert",=
"Size","Root","Info","Readable","Stream","EE","EventEmitter","inherits","=
Writable","Duplex","Transform","PassThrough","dest","ondata","writable","=
pause","ondrain","readable","resume","onend","didOnEnd","onclose","destro=
y","onerror","er","cleanup","listenerCount","removeListener","_isStdio","=
_events","_maxListeners","defaultMaxListeners","setMaxListeners","handler=
","listeners","error","addListener","listener","newListener","warned","co=
nsole","trace","g","fired","removeAllListeners","evlistener","emitter","s=
uperCtor","super_","enumerable","configurable","TempCtor","process","Read=
ableState","hwm","highWaterMark","defaultHwm","objectMode","pipes","pipes=
Count","flowing","ended","endEmitted","reading","sync","needReadable","em=
ittedReadable","readableListening","readableObjectMode","defaultEncoding"=
,"ranOut","awaitDrain","readingMore","decoder","StringDecoder","_readable=
State","readableAddChunk","state","addToFront","chunkInvalid","util","isN=
ullOrUndefined","onEofChunk","unshift","emitReadable","maybeReadMore","ne=
edMoreData","roundUpToNextPowerOf2","MAX_HWM","howMuchToRead","debug","ne=
xtTick","emitReadable_","maybeReadMore_","pipeOnDrain","resumeScheduled",=
"resume_","fromList","stringMode","cpy","endReadable","debuglog","setEnco=
ding","enc","nOrig","doRead","pipeOpts","onunpipe","onfinish","_writableS=
tate","needDrain","unpipe","doEnd","stdout","stderr","endFn","dests","ev"=
,"paused","_fromList","cleanUpNextTick","draining","currentQueue","queue"=
,"queueIndex","drainQueue","timeout","Item","fun","browser","env","argv",=
"versions","off","binding","cwd","chdir","umask","objectToString","isSymb=
ol","re","isPrimitive","o","allowHalfOpen","objectKeys","WriteReq","Writa=
bleState","writableObjectMode","ending","finished","noDecode","decodeStri=
ngs","writing","corked","bufferProcessing","onwrite","writecb","writelen"=
,"pendingcb","prefinished","errorEmitted","writeAfterEnd","validChunk","v=
alid","decodeChunk","writeOrBuffer","doWrite","writev","_writev","onwrite=
Error","onwriteStateUpdate","needFinish","clearBuffer","afterWrite","onwr=
iteDrain","finishMaybe","cbs","entry","prefinish","need","endWritable","c=
ork","uncork","assertEncoding","isBufferEncoding","passThroughWrite","utf=
16DetectIncompleteChar","charReceived","charLength","base64DetectIncomple=
teChar","surrogateSize","detectIncompleteChar","charBuffer","charStr","av=
ailable","cr","TransformState","afterTransform","needTransform","transfor=
ming","writechunk","ts","_transformState","rs","_flush","done","ws","_tra=
nsform","writeencoding","__dirname","VirtualFileSystem","fileSystem","bas=
eSystem","fixFilename","readFileSync","base64content","writeFileSync","es=
capable","escapableRe","swapBytes","\t","\b","\f","(",")","buff","isUnico=
de","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinu=
tes","getUTCSeconds","_j","zlib","__bind","me","finalize","gen","deflate"=
,"Filter","uncompressedLength","initDeflate","createDeflate","Length","_b=
ase","zlibBuffer","engine","buffers","nread","onError","onEnd","zlibBuffe=
rSync","flushFlag","Z_FINISH","_processChunk","Deflate","opts","Zlib","DE=
FLATE","Inflate","INFLATE","Gzip","GZIP","Gunzip","GUNZIP","DeflateRaw","=
DEFLATERAW","InflateRaw","INFLATERAW","Unzip","UNZIP","_opts","_chunkSize=
","chunkSize","Z_DEFAULT_CHUNK","flush","Z_NO_FLUSH","Z_PARTIAL_FLUSH","Z=
_SYNC_FLUSH","Z_FULL_FLUSH","Z_BLOCK","_flushFlag","Z_MIN_CHUNK","Z_MAX_C=
HUNK","windowBits","Z_MIN_WINDOWBITS","Z_MAX_WINDOWBITS","level","Z_MIN_L=
EVEL","Z_MAX_LEVEL","memLevel","Z_MIN_MEMLEVEL","Z_MAX_MEMLEVEL","strateg=
y","Z_FILTERED","Z_HUFFMAN_ONLY","Z_RLE","Z_FIXED","Z_DEFAULT_STRATEGY","=
_binding","_hadError","errno","codes","Z_DEFAULT_COMPRESSION","init","Z_D=
EFAULT_WINDOWBITS","Z_DEFAULT_MEMLEVEL","_buffer","_closed","_level","_st=
rategy","assert","ok","Z_DEFAULT_LEVEL","Z_OK","Z_STREAM_END","Z_NEED_DIC=
T","Z_ERRNO","Z_STREAM_ERROR","Z_DATA_ERROR","Z_MEM_ERROR","Z_BUF_ERROR",=
"Z_VERSION_ERROR","createInflate","createDeflateRaw","createInflateRaw","=
createGzip","createGunzip","createUnzip","deflateSync","gzip","gzipSync",=
"deflateRaw","deflateRawSync","unzipSync","inflate","inflateSync","gunzip=
","gunzipSync","inflateRaw","inflateRawSync","params","reset","kind","ava=
ilInAfter","availOutAfter","have","availOutBefore","async","inOff","avail=
InBefore","newReq","writeSync","req","init_done","write_in_progress","pen=
ding_close","bufferSet","msg","zstream","zlib_deflate","zlib_inflate","co=
nstants","NONE","strm","status","deflateInit2","Z_DEFLATED","inflateInit2=
","_error","_writeCheck","in_off","in_len","out_off","out_len","avail_in"=
,"next_in","avail_out","next_out","deflateEnd","inflateEnd","deflateReset=
","inflateReset","-1","-2","-3","-4","-5","-6","ZStream","total_in","tota=
l_out","data_type","adler","errorCode","rank","zero","flush_pending","pen=
ding","utils","arraySet","pending_buf","pending_out","flush_block_only","=
trees","_tr_flush_block","block_start","strstart","put_byte","putShortMSB=
","read_buf","adler32","crc32","longest_match","cur_match","chain_length"=
,"max_chain_length","scan","best_len","prev_length","nice_match","w_size"=
,"MIN_LOOKAHEAD","_win","wmask","w_mask","prev","strend","MAX_MATCH","sca=
n_end1","scan_end","good_match","lookahead","match_start","fill_window","=
more","_w_size","window_size","hash_size","insert","MIN_MATCH","ins_h","h=
ash_shift","hash_mask","deflate_stored","max_block_size","pending_buf_siz=
e","BS_NEED_MORE","max_start","BS_FINISH_STARTED","BS_FINISH_DONE","defla=
te_fast","hash_head","bflush","match_length","_tr_tally","max_lazy_match"=
,"last_lit","BS_BLOCK_DONE","deflate_slow","max_insert","prev_match","mat=
ch_available","deflate_rle","deflate_huff","lm_init","configuration_table=
","max_lazy","good_length","nice_length","max_chain","DeflateState","gzhe=
ad","gzindex","last_flush","w_bits","hash_bits","dyn_ltree","Buf16","HEAP=
_SIZE","dyn_dtree","D_CODES","bl_tree","BL_CODES","l_desc","d_desc","bl_d=
esc","bl_count","MAX_BITS","heap","L_CODES","heap_len","heap_max","depth"=
,"l_buf","lit_bufsize","d_buf","opt_len","static_len","bi_buf","bi_valid"=
,"deflateResetKeep","Z_UNKNOWN","INIT_STATE","BUSY_STATE","_tr_init","def=
lateSetHeader","MAX_MEM_LEVEL","Buf8","deflateInit","MAX_WBITS","DEF_MEM_=
LEVEL","old_flush","beg","FINISH_STATE","hcrc","extra","comment","time","=
os","EXTRA_STATE","OS_CODE","level_flags","PRESET_DICT","NAME_STATE","COM=
MENT_STATE","HCRC_STATE","bstate","_tr_align","_tr_stored_block","LENGTH_=
CODES","LITERALS","Config","deflateInfo","TYPED_OK","Uint16Array","Int32A=
rray","shrinkBuf","fnTyped","src_offs","dest_offs","flattenChunks","fnUnt=
yped","setTyped","Buf32","d_code","dist","_dist_code","put_short","send_b=
its","Buf_size","send_code","tree","bi_reverse","bi_flush","gen_bitlen","=
xbits","dyn_tree","max_code","stree","stat_desc","static_tree","has_stree=
","extra_bits","base","extra_base","max_length","overflow","gen_codes","n=
ext_code","tr_static_init","base_length","extra_lbits","_length_code","ba=
se_dist","extra_dbits","static_ltree","static_dtree","static_l_desc","Sta=
ticTreeDesc","static_d_desc","static_bl_desc","extra_blbits","MAX_BL_BITS=
","init_block","END_BLOCK","bi_windup","copy_block","smaller","_n2","_m2"=
,"pqdownheap","compress_block","ltree","dtree","lc","lx","build_tree","el=
ems","scan_tree","curlen","prevlen","nextlen","max_count","min_count","RE=
P_3_6","REPZ_3_10","REPZ_11_138","send_tree","build_bl_tree","max_blindex=
","bl_order","send_all_trees","lcodes","dcodes","blcodes","detect_data_ty=
pe","black_mask","Z_BINARY","Z_TEXT","static_init_done","TreeDesc","store=
d_len","STORED_BLOCK","STATIC_TREES","opt_lenb","static_lenb","DYN_TREES"=
,"DIST_CODE_LEN","s1","s2","makeTable","crc","crcTable","ZSWAP32","Inflat=
eState","havedict","flags","dmax","check","wbits","wsize","whave","wnext"=
,"hold","lencode","distcode","lenbits","distbits","ncode","nlen","ndist",=
"next","lens","work","lendyn","distdyn","sane","back","was","inflateReset=
Keep","HEAD","ENOUGH_LENS","ENOUGH_DISTS","inflateReset2","inflateInit","=
DEF_WBITS","fixedtables","virgin","sym","lenfix","distfix","inflate_table=
","LENS","DISTS","updatewindow","put","_in","_out","from","from_source","=
here_bits","here_op","here_val","last_bits","last_op","last_val","here","=
hbuf","TYPE","TYPEDO","inf_leave","FLAGS","BAD","DICTID","TIME","OS","xfl=
ags","EXLEN","extra_len","EXTRA","NAME","COMMENT","HCRC","DICT","Z_TREES"=
,"CHECK","STORED","LEN_","TABLE","COPY_","COPY","LENLENS","CODES","CODELE=
NS","LEN","inflate_fast","LIT","LENEXT","DIST","DISTEXT","MATCH","LENGTH"=
,"DONE","MEM","SYNC","inflateGetHeader","inflateInfo","s_window","lcode",=
"dcode","lmask","dmask","op","dolen","dodist","MAXBITS","lbase","lext","d=
base","dext","lens_index","table_index","incr","curr","used","huff","base=
_index","offs","extra_index","Z_NO_COMPRESSION","Z_BEST_SPEED","Z_BEST_CO=
MPRESSION","stylize","stylizeNoColor","colors","showHidden","_extend","cu=
stomInspect","stylizeWithColor","formatValue","styleType","arrayToHash","=
idx","recurseTimes","primitive","formatPrimitive","visibleKeys","formatEr=
ror","braces","toUTCString","formatArray","formatProperty","reduceToSingl=
eString","simple","getOwnPropertyDescriptor","numLinesEst","cur","ar","pr=
op","formatRegExp","format","objects","deprecated","throwDeprecation","tr=
aceDeprecation","noDeprecation","debugEnviron","debugs","NODE_DEBUG","pid=
","italic","underline","inverse","white","grey","black","blue","cyan","gr=
een","magenta","red","yellow","special","boolean","null","date","regexp",=
"replacer","truncate","getMessage","actual","operator","expected","fail",=
"stackStartFunction","AssertionError","_deepEqual","multiline","ignoreCas=
e","objEquiv","aIsArgs","bIsArgs","pSlice","ka","kb","expectedException",=
"_throws","shouldThrow","hasOwn","generatedMessage","captureStackTrace","=
fn_name","next_line","equal","notEqual","deepEqual","notDeepEqual","stric=
tEqual","notStrictEqual","doesNotThrow","ifError","dimensions","DEFAULT_M=
ARGINS","SIZES","resources","ProcSet","defineProperties","Font","xobjects=
","XObject","ext_gstates","ExtGState","patterns","Pattern","annotations",=
"Annots","Parent","MediaBox","Contents","Resources","maxY","4A0","2A0","A=
0","A1","A2","A3","A4","A5","A6","A7","A8","A9","A10","B0","B1","B2","B3"=
,"B4","B5","B6","B7","B8","B9","B10","C0","C1","C2","C3","C4","C5","C6","=
C7","C8","C9","C10","RA0","RA1","RA2","RA3","RA4","SRA0","SRA1","SRA2","S=
RA3","SRA4","EXECUTIVE","FOLIO","LEGAL","LETTER","TABLOID","PDFGradient",=
"PDFLinearGradient","PDFRadialGradient","namedColors","_opacityRegistry",=
"_opacityCount","_gradCount","_normalizeColor","hex","part","_setColor","=
gstate","_sMasked","SMask","_setColorSpace","_fillColor","strokeColor","_=
doOpacity","ca","CA","linearGradient","radialGradient","aliceblue","antiq=
uewhite","aqua","aquamarine","azure","beige","bisque","blanchedalmond","b=
lueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","cora=
l","cornflowerblue","cornsilk","crimson","darkblue","darkcyan","darkgolde=
nrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkol=
ivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen"=
,"darkslateblue","darkslategray","darkslategrey","darkturquoise","darkvio=
let","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick=
","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","=
goldenrod","gray","greenyellow","honeydew","hotpink","indianred","indigo"=
,"ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","l=
ightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","li=
ghtgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightsky=
blue","lightslategray","lightslategrey","lightsteelblue","lightyellow","l=
ime","limegreen","linen","maroon","mediumaquamarine","mediumblue","medium=
orchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgr=
een","mediumturquoise","mediumvioletred","midnightblue","mintcream","mist=
yrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","ora=
nge","orangered","orchid","palegoldenrod","palegreen","paleturquoise","pa=
levioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","=
purple","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seag=
reen","seashell","sienna","silver","skyblue","slateblue","slategray","sla=
tegrey","snow","springgreen","steelblue","tan","teal","thistle","tomato",=
"turquoise","violet","wheat","whitesmoke","yellowgreen","stops","embedded=
","_colorSpace","stop","bounds","dx","dy","form","grad","m0","m1","m11","=
m12","m2","m21","m22","m3","m4","m5","sMask","shader","_ref2","FunctionTy=
pe","Domain","Functions","Bounds","Encode","PatternType","Shading","Matri=
x","toFixed","opacityGradient","CS","Sh1","Subtype","FormType","BBox","Gr=
oup","G","opacity_id","ShadingType","ColorSpace","Coords","Extend","KAPPA=
","SVGPath","__slice","_ctmStack","_CAP_STYLES","BUTT","ROUND","SQUARE","=
lineCap","_JOIN_STYLES","MITER","BEVEL","miterLimit","phase","bezierCurve=
To","cp1x","cp1y","cp2x","cp2y","quadraticCurveTo","cpx","ox","oy","xe","=
xm","ye","ym","circle","polygon","point","_windingRule","rule","isFillRul=
e","clip","translate","cos","rad","sin","scale","xFactor","yFactor","arcT=
oSegments","cx","cy","parameters","parse","px","py","runners","segmentToB=
ezier","solveArc","sx","sy","commands","T","V","Z","z","cmd","curArg","fo=
undDecimal","_name","coords","bez","ex","ey","large","rot","rx","ry","seg=
","segs","sweep","rotateX","a00","a01","a10","a11","cos_th","pl","segment=
s","sfactor","sfactor_sq","sin_th","th","th0","th1","th2","th3","th_arc",=
"x0","xc","yc","th_half","x3","y3","PDFFont","_fontCount","_fontSize","_r=
egisteredFonts","family","cacheKey","currentLineHeight","includeGap","reg=
isterFont","AFMFont","Subset","TTFFont","STANDARD_FONTS","isAFM","registe=
rAFM","fromDFont","subset","registerTTF","toUnicodeCmap","Courier","Couri=
er-Bold","Courier-Oblique","Courier-BoldOblique","Helvetica","Helvetica-B=
old","Helvetica-Oblique","Helvetica-BoldOblique","Times-Roman","Times-Bol=
d","Times-Italic","Times-BoldItalic","Symbol","ZapfDingbats","characters"=
,"embedAFM","embedTTF","encodeText","raw","scaleFactor","unitsPerEm","bbo=
x","stemV","post","exists","italic_angle","italicAngle","lineGap","capHei=
ght","os2","xHeight","familyClass","isSerif","isScript","isFixedPitch","c=
map","unicode","charWidths","descriptor","firstChar","fontfile","glyph","=
Length1","FontName","FontFile2","FontBBox","Flags","StemV","ItalicAngle",=
"Ascent","Descent","CapHeight","XHeight","widthOfGlyph","BaseFont","FontD=
escriptor","FirstChar","LastChar","Widths","Encoding","ToUnicode","unicod=
eMap","characterToGlyph","CmapTable","DFont","Data","Directory","GlyfTabl=
e","HeadTable","HheaTable","HmtxTable","LocaTable","MaxpTable","NameTable=
","OS2Table","PostTable","rawData","numFonts","contents","readString","re=
adInt","dfont","getNamedFont","ttf","directory","hhea","maxp","hmtx","loc=
a","glyf","xMin","yMin","xMax","yMax","character","codeMap","forGlyph","a=
dvance","readByte","writeByte","byte","byteAt","readBool","writeBool","re=
adUInt32","b1","b2","b3","b4","writeUInt32","readInt32","int","writeInt32=
","readUInt16","writeUInt16","readInt16","writeInt16","writeString","stri=
ngAt","readShort","writeShort","readLongLong","b5","b6","b7","b8","writeL=
ongLong","writeInt","attr","dataLength","dataOffset","dataOfs","handle","=
mapLength","mapOffset","maxIndex","maxTypeIndex","nameListOffset","nameOf=
s","refListOffset","typeListOffset","named","attributes","sfnt","scalarTy=
pe","tableCount","searchRange","entrySelector","rangeShift","tables","che=
cksum","adjustment","directoryLength","headOffset","log2","tableData","Na=
meEntry","Table","subsetTag","entries","stringOffset","strings","platform=
ID","encodingID","languageID","nameID","copyright","fontSubfamily","uniqu=
eSubfamily","trademark","manufacturer","designer","description","vendorUr=
l","designerUrl","license","licenseUrl","preferredFamily","preferredSubfa=
mily","compatibleFull","sampleText","nameTable","strCount","strTable","su=
ccessorOf","file","added","alphabet","carry","isUpperCase","revision","ch=
eckSumAdjustment","magicNumber","created","modified","macStyle","lowestRe=
cPPEM","fontDirectionHint","indexToLocFormat","glyphDataFormat","CmapEntr=
y","charmap","subtable","endCode","glyphId","glyphIds","idDelta","idRange=
Offset","saveOffset","segCount","segCountX2","startCode","_k","language",=
"charMap","delta","deltas","diff","endCodes","glyphIDs","nextID","old","r=
angeOffsets","startCodes","startGlyph","_l","_len1","_len2","_len3","_len=
4","_len5","_len6","_len7","_m","_n","_o","_p","_q","new","maxGlyphID","l=
sbCount","metrics","numberOfMetrics","lsb","numGlyphs","leftSideBearings"=
,"mapping","metric","advanceWidthMax","minLeftSideBearing","minRightSideB=
earing","xMaxExtent","caretSlopeRise","caretSlopeRun","caretOffset","metr=
icDataFormat","ids","maxPoints","maxContours","maxCompositePoints","maxCo=
mponentContours","maxZones","maxTwilightPoints","maxStorage","maxFunction=
Defs","maxInstructionDefs","maxStackElements","maxSizeOfInstructions","ma=
xComponentElements","maxComponentDepth","POSTSCRIPT_GLYPHS","numberOfGlyp=
hs","underlinePosition","underlineThickness","minMemType42","maxMemType42=
","minMemType1","maxMemType1","glyphNameIndex","_results1","glyphFor","av=
erageCharWidth","weightClass","widthClass","ySubscriptXSize","ySubscriptY=
Size","ySubscriptXOffset","ySubscriptYOffset","ySuperscriptXSize","ySuper=
scriptYSize","ySuperscriptXOffset","ySuperscriptYOffset","yStrikeoutSize"=
,"yStrikeoutPosition","panose","charRange","vendorID","selection","firstC=
harIndex","lastCharIndex","ascent","descent","winAscent","winDescent","co=
dePageRange","defaultChar","breakChar","maxContext","lengthOf","CompoundG=
lyph","SimpleGlyph","numberOfContours","glyphs","old2new","compound","gly=
phOffsets","MORE_COMPONENTS","ARG_1_AND_2_ARE_WORDS","WE_HAVE_A_TWO_BY_TW=
O","WE_HAVE_AN_X_AND_Y_SCALE","WE_HAVE_A_SCALE","WE_HAVE_INSTRUCTIONS","g=
lyphWidths","boundingBoxes","WIN_ANSI_MAP","section",402,8211,8212,8216,8=
217,8218,8220,8221,8222,8224,8225,8226,8230,8364,8240,8249,8250,710,8482,=
338,339,732,352,353,376,381,382,"__indexOf","unicodes","generateCmap","ro=
man","unicodeCmap","glyphsFor","additionalIDs","new2old","newIDs","nextGl=
yphID","oldID","oldIDs","LineWrapper","_lineGap","lines","moveUp","_text"=
,"lineCallback","_initOptions","wordSpacing","_wrapper","continued","_tex=
tOptions","_line","characterSpacing","heightOfString","indent","itemInden=
t","levels","textIndent","bulletIndent","lineBreak","columnGap","_fragmen=
t","align","lineY","renderedWidth","spaceWidth","textWidth","wordCount","=
strike","LineBreaker","spaceLeft","startX","startY","ellipsis","continued=
X","lastLine","paragraphGap","wordWidth","eachWord","bk","breaker","fbk",=
"lbk","shouldContinue","wordWidths","nextBreak","required","emitLine","ne=
xtY","wc","nextSection","lh","AI","AL","BA","BK","CB","CI_BRK","CJ","CP_B=
RK","CR","DI_BRK","ID","IN_BRK","LF","NL","NS","PR_BRK","SA","SG","SP","U=
nicodeTrie","WJ","XX","characterClasses","classTrie","pairTable","lastPos=
","curClass","nextClass","Break","mapClass","mapFirst","nextCodePoint","n=
extCharClass","lastClass","shouldBreak","json","highStart","errorValue","=
DATA_BLOCK_LENGTH","DATA_GRANULARITY","DATA_MASK","INDEX_1_OFFSET","INDEX=
_2_BLOCK_LENGTH","INDEX_2_BMP_LENGTH","INDEX_2_MASK","INDEX_SHIFT","LSCP_=
INDEX_2_LENGTH","LSCP_INDEX_2_OFFSET","OMITTED_BMP_INDEX_1_LENGTH","SHIFT=
_1","SHIFT_1_2","SHIFT_2","UTF8_2B_INDEX_2_LENGTH","UTF8_2B_INDEX_2_OFFSE=
T","BB","CL","CM","CP","EX","GL","H2","H3","HL","HY","IN","IS","JL","JT",=
"JV","NU","OP","PO","PR","QU","RI","SY","ZW","PDFImage","_imageRegistry",=
"_imageCount","bh","bp","bw","hp","ip","wp","valign","JPEG","PNG","channe=
ls","MARKERS","colorSpace","BitsPerComponent","Width","Height","PNGImage"=
,"imgData","palette","rgb","hasAlphaChannel","Predictor","Colors","Column=
s","transparency","grayscale","greyscale","indexed","loadIndexedAlphaChan=
nel","splitAlphaChannel","alphaChannel","Decode","decodePixels","pixels",=
"colorByteSize","pixelCount","short","colorType","compressionMethod","fil=
terMethod","interlaceMethod","pixelBitlength","readFile","png","load","pa=
","paeth","pb","pc","pixelBytes","scanlineLength","upperLeft","decodePale=
tte","copyToImageData","imageData","alpha","_decodedPalette","annotate","=
Rect","_convertRect","Border","Dest","note","Name","url","URI","_markup",=
"QuadPoints","highlight","lineAnnotation","rectAnnotation","ellipseAnnota=
tion","textAnnotation","DA","imageDictionary","realImageSrc","groupDecora=
tions","curGroup","ll","deco","drawDecoration","maxInline","inl","firstIn=
line","biggerInline","totalWidth","lineAscent","lw","nbDashes","rdx","nbD=
ots","sh","sv","nbWaves","rwx","iii","__WEBPACK_AMD_DEFINE_ARRAY__","navi=
gator","userAgent","get_URL","URL","webkitURL","save_link","createElement=
NS","can_use_save_link","click","MouseEvent","dispatchEvent","webkit_req_=
fs","webkitRequestFileSystem","req_fs","requestFileSystem","mozRequestFil=
eSystem","throw_outside","setImmediate","force_saveable_type","fs_min_siz=
e","arbitrary_revoke_timeout","revoke","revoker","revokeObjectURL","chrom=
e","dispatch","filesaver","event_types","auto_bom","no_auto_bom","object_=
url","target_view","blob_changed","dispatch_all","fs_error","createObject=
URL","new_tab","safari","readyState","abortable","create_if_not_found","e=
xclusive","INIT","webkitSlice","TEMPORARY","getDirectory","getFile","crea=
teWriter","onwriteend","toURL","ABORT_ERR","abort","WRITING","NOT_FOUND_E=
RR","FS_proto","msSaveOrOpenBlob","onwritestart","onprogress","onabort","=
__webpack_amd_options__"],"mappings":"CAAS,SAAUA,GAKT,QAASC,GAAoBC,GAG5B,=
GAAGC,EAAiBD,GACnB,MAAOC,GAAiBD,GAAUE,OAGnC,IAAIC,GAASF,EAAiBD,IAC7BE,WAC=
AE,GAAIJ,EACJK,QAAQ,EAUT,OANAP,GAAQE,GAAUM,KAAKH,EAAOD,QAASC,EAAQA,EAAOD,=
QAASH,GAG/DI,EAAOE,QAAS,EAGTF,EAAOD,QAvBf,GAAID,KAqCJ,OATAF,GAAoBQ,EAAIT,=
EAGxBC,EAAoBS,EAAIP,EAGxBF,EAAoBU,EAAI,GAGjBV,EAAoB,KAK/B,SAASI,EAAQD,EAA=
SH,IAEH,SAASW,GAASP,EAAOD,QAAUQ,EAAgB,QAAIX,EAAoB,KAC1EO,KAAKJ,EAAU,WAAa,=
MAAOS,WAI3D,SAASR,EAAQD,EAASH,IAEH,SAASa,GAGrC,YAeA,SAASC,GAASC,EAAeC,EAA=
OC,GACvCL,KAAKG,cAAgBA,EACrBH,KAAKI,MAAQA,GAASE,EACtBN,KAAKK,IAAMA,EAhBZ,=
GAAIE,GAAanB,EAAoB,GACjCoB,EAAYpB,EAAoB,KAChCqB,EAASD,EAAUC,OAEnBH,GACHI,=
QACCC,OAAQ,qBACRC,KAAM,oBACNC,QAAS,oBACTC,YAAa,qBAUfZ,GAASa,UAAUC,WAAa,SA=
ASC,EAASC,GACjD,GAAIC,GAAU,GAAIZ,GAAWP,KAAKI,MAClCe,GAAQC,GAAGC,OAAOrB,KA=
AKK,IAEvB,IAEIiB,GAFAC,EAAMJ,EAAQK,qBAAqBxB,KAAKG,cAAec,GACvDQ,IAGJF,GAAI=
G,GAAG,OAAQ,SAASC,GACvBF,EAAOG,KAAKD,KAEbJ,EAAIG,GAAG,MAAO,WACbJ,EAASrB,E=
AAO4B,OAAOJ,GACvBP,EAASI,EAAQC,EAAIO,iBAEtBP,EAAIQ,OAGL7B,EAASa,UAAUiB,UA=
AY,SAASf,EAASgB,GAC/C,IAAKA,EAAI,KAAM,4DACfjC,MAAKgB,WAAWC,EAAS,SAASiB,EA=
AcC,GAC9CF,EAAGE,MAIPjC,EAASa,UAAUqB,KAAO,SAASC,GAGlC,GAAIC,GAAMC,OAAOH,K=
AAK,GAAI,SAE1B,KACCpC,KAAKwC,WAAW,SAASlB,GACxBgB,EAAIG,SAASC,KAAOpB,IAEpB=
,MAAMqB,GAEP,KADAL,GAAIM,QACED,IAKRzC,EAASa,UAAU8B,MAAQ,WACzB7C,KAAKwC,WA=
AW,SAASM,GACvB,GAAIC,GAASC,SAASC,cAAc,SACpCF,GAAOG,MAAMC,SAAW,WACxBJ,EAAO=
G,MAAME,KAAO,WACpBL,EAAOM,IAAMP,EACbC,EAAOO,OAAS,WACd,QAASC,KACPP,SAASQ,K=
AAKC,YAAYV,GAC1BC,SAASU,oBAAoB,QAASH,GAExCP,SAASW,iBAAiB,QAASJ,GAAc,IAGnD=
P,SAASQ,KAAKI,YAAYb,KACvBc,WAAW,KAGlB3D,EAASa,UAAU+C,SAAW,SAASC,EAAiB9B,G=
ACvB,kBAApB8B,KACP9B,EAAK8B,EACLA,EAAkB,MAGrBA,EAAkBA,GAAmB,WACrC/D,KAAKg=
E,UAAU,SAAU1C,GACrB,GAAI2C,EACJ,KACIA,EAAO,GAAIC,OAAM5C,IAAW6C,KAAM,oBAEt=
C,MAAOxB,GAEH,GAAc,qBAAVA,EAAEyB,KAA6B,CAC/B,GAAIC,GAAY,GAAIC,YAAWhD,EAC/=
B2C,GAAO,GAAIC,OAAMG,EAAUE,SAAWJ,KAAM,qBAGpD,IAAIF,EAIA,KAAM,yBAHNxD,GAAO=
wD,EAAMF,GAKC,kBAAP9B,IACPA,OAKX/B,EAASa,UAAUyD,UAAY,SAASvC,EAAIhB,GAC3C,=
IAAKgB,EAAI,KAAM,4DACfjC,MAAKgB,WAAWC,EAAS,SAASsD,GACjCtC,EAAGsC,EAAOE,SA=
AS,cAIrBvE,EAASa,UAAUyB,WAAa,SAASP,EAAIhB,GAC5C,IAAKgB,EAAI,KAAM,6DACfjC,=
MAAKgB,WAAWC,EAAS,SAASsD,GACjCtC,EAAG,+BAAiCsC,EAAOE,SAAS,cAItDvE,EAASa,U=
AAUiD,UAAY,SAAS/B,EAAIhB,GAC3C,IAAKgB,EAAI,KAAM,4DACfjC,MAAKgB,WAAWC,EAAS=
,SAASsD,GAC/BtC,EAAGsC,MAIP/E,EAAOD,SACNmF,UAAW,SAASvE,GACnB,MAAO,IAAID,G=
AASC,EAAeoC,OAAOoC,QAAQvE,MAAOmC,OAAOoC,QAAQtE,SAI7CV,KAAKJ,EAASH,EAAoB,G=
AAGa,SAI7D,SAAST,EAAQD,EAASH,IAEH,SAASa,EAAQF,GAkD7C,QAAS6E,KACP,QAASC,MA=
CT,IACE,GAAIC,GAAM,GAAIR,YAAW,EAGzB,OAFAQ,GAAIC,IAAM,WAAc,MAAO,KAC/BD,EAA=
IE,YAAcH,EACG,KAAdC,EAAIC,OACPD,EAAIE,cAAgBH,GACI,kBAAjBC,GAAIG,UACuB,IAA=
lCH,EAAIG,SAAS,EAAG,GAAGC,WACvB,MAAOvC,GACP,OAAO,GAIX,QAASwC,KACP,MAAOlF,=
GAAOmF,oBACV,WACA,WAeN,QAASnF,GAAQoF,GACf,MAAMrF,gBAAgBC,IAMtBD,KAAKsF,OA=
AS,EACdtF,KAAKuF,OAASC,OAGK,gBAARH,GACFI,EAAWzF,KAAMqF,GAIP,gBAARA,GACFK,=
EAAW1F,KAAMqF,EAAKM,UAAUL,OAAS,EAAIK,UAAU,GAAK,QAI9DC,EAAW5F,KAAMqF,IAlBl=
BM,UAAUL,OAAS,EAAU,GAAIrF,GAAOoF,EAAKM,UAAU,IACpD,GAAI1F,GAAOoF,GAoBtB,QA=
ASI,GAAYI,EAAMP,GAEzB,GADAO,EAAOC,EAASD,EAAe,EAATP,EAAa,EAAsB,EAAlBS,EAAQ=
T,KAC1CrF,EAAOmF,oBACV,IAAK,GAAIY,GAAI,EAAOV,EAAJU,EAAYA,IAC1BH,EAAKG,GAA=
K,CAGd,OAAOH,GAGT,QAASH,GAAYG,EAAMI,EAAQC,IACT,gBAAbA,IAAsC,KAAbA,KAAiBA,=
EAAW,OAGhE,IAAIZ,GAAwC,EAA/BJ,EAAWe,EAAQC,EAIhC,OAHAL,GAAOC,EAASD,EAAMP,G=
AEtBO,EAAKM,MAAMF,EAAQC,GACZL,EAGT,QAASD,GAAYC,EAAMO,GACzB,GAAInG,EAAOoG,=
SAASD,GAAS,MAAOE,GAAWT,EAAMO,EAErD,IAAIG,EAAQH,GAAS,MAAOI,GAAUX,EAAMO,EAE=
5C,IAAc,MAAVA,EACF,KAAM,IAAIK,WAAU,kDAGtB,IAA2B,mBAAhBC,aAA6B,CACtC,GAAIN=
,EAAO7B,iBAAkBmC,aAC3B,MAAOC,GAAed,EAAMO,EAE9B,IAAIA,YAAkBM,aACpB,MAAOE,G=
AAgBf,EAAMO,GAIjC,MAAIA,GAAOd,OAAeuB,EAAchB,EAAMO,GAEvCU,EAAejB,EAAMO,GAG=
9B,QAASE,GAAYT,EAAMtB,GACzB,GAAIe,GAAkC,EAAzBS,EAAQxB,EAAOe,OAG5B,OAFAO,G=
AAOC,EAASD,EAAMP,GACtBf,EAAOwC,KAAKlB,EAAM,EAAG,EAAGP,GACjBO,EAGT,QAASW,G=
AAWX,EAAMmB,GACxB,GAAI1B,GAAiC,EAAxBS,EAAQiB,EAAM1B,OAC3BO,GAAOC,EAASD,EA=
AMP,EACtB,KAAK,GAAIU,GAAI,EAAOV,EAAJU,EAAYA,GAAK,EAC/BH,EAAKG,GAAgB,IAAXg=
B,EAAMhB,EAElB,OAAOH,GAIT,QAASc,GAAgBd,EAAMmB,GAC7B,GAAI1B,GAAiC,EAAxBS,E=
AAQiB,EAAM1B,OAC3BO,GAAOC,EAASD,EAAMP,EAItB,KAAK,GAAIU,GAAI,EAAOV,EAAJU,E=
AAYA,GAAK,EAC/BH,EAAKG,GAAgB,IAAXgB,EAAMhB,EAElB,OAAOH,GAGT,QAASe,GAAiBf,=
EAAMmB,GAS9B,MARI/G,GAAOmF,qBAET4B,EAAM9B,WACNW,EAAO5F,EAAOgH,SAAS,GAAI3C=
,YAAW0C,KAGtCnB,EAAOc,EAAed,EAAM,GAAIvB,YAAW0C,IAEtCnB,EAGT,QAASgB,GAAehB=
,EAAMmB,GAC5B,GAAI1B,GAAiC,EAAxBS,EAAQiB,EAAM1B,OAC3BO,GAAOC,EAASD,EAAMP,=
EACtB,KAAK,GAAIU,GAAI,EAAOV,EAAJU,EAAYA,GAAK,EAC/BH,EAAKG,GAAgB,IAAXgB,EA=
AMhB,EAElB,OAAOH,GAKT,QAASiB,GAAgBjB,EAAMO,GAC7B,GAAIY,GACA1B,EAAS,CAEO,Y=
AAhBc,EAAOjC,MAAqBoC,EAAQH,EAAOc,QAC7CF,EAAQZ,EAAOc,KACf5B,EAAiC,EAAxBS,E=
AAQiB,EAAM1B,SAEzBO,EAAOC,EAASD,EAAMP,EAEtB,KAAK,GAAIU,GAAI,EAAOV,EAAJU,E=
AAYA,GAAK,EAC/BH,EAAKG,GAAgB,IAAXgB,EAAMhB,EAElB,OAAOH,GAQT,QAASC,GAAUD,E=
AAMP,GACnBrF,EAAOmF,qBAETS,EAAO5F,EAAOgH,SAAS,GAAI3C,YAAWgB,IACtCO,EAAKsB=
,UAAYlH,EAAOc,YAGxB8E,EAAKP,OAASA,EACdO,EAAKuB,WAAY,EAGnB,IAAIC,GAAsB,IAA=
X/B,GAAgBA,GAAUrF,EAAOqH,WAAa,CAG7D,OAFID,KAAUxB,EAAKN,OAASgC,GAErB1B,EAG=
T,QAASE,GAAST,GAGhB,GAAIA,GAAUH,IACZ,KAAM,IAAIqC,YAAW,0DACarC,IAAaV,SAAS,=
IAAM,SAEhE,OAAgB,GAATa,EAGT,QAASmC,GAAYC,EAASxB,GAC5B,KAAMlG,eAAgByH,IAAa=
,MAAO,IAAIA,GAAWC,EAASxB,EAElE,IAAIyB,GAAM,GAAI1H,GAAOyH,EAASxB,EAE9B,cAD=
OyB,GAAIpC,OACJoC,EA+ET,QAASzC,GAAYe,EAAQC,GACL,gBAAXD,KAAqBA,EAAS,GAAKA,=
EAE9C,IAAI2B,GAAM3B,EAAOX,MACjB,IAAY,IAARsC,EAAW,MAAO,EAItB,KADA,GAAIC,IA=
Ac,IAEhB,OAAQ3B,GACN,IAAK,QACL,IAAK,SAEL,IAAK,MACL,IAAK,OACH,MAAO0B,EACT,=
KAAK,OACL,IAAK,QACH,MAAOE,GAAY7B,GAAQX,MAC7B,KAAK,OACL,IAAK,QACL,IAAK,UAC=
L,IAAK,WACH,MAAa,GAANsC,CACT,KAAK,MACH,MAAOA,KAAQ,CACjB,KAAK,SACH,MAAOG,G=
AAc9B,GAAQX,MAC/B,SACE,GAAIuC,EAAa,MAAOC,GAAY7B,GAAQX,MAC5CY,IAAY,GAAKA,G=
AAU8B,cAC3BH,GAAc,GAUtB,QAASI,GAAc/B,EAAUgC,EAAOnG,GACtC,GAAI8F,IAAc,CAQl=
B,IANAK,EAAgB,EAARA,EACRnG,EAAcyD,SAARzD,GAAqBA,IAAQoG,EAAAA,EAAWnI,KAAKs=
F,OAAe,EAANvD,EAEvDmE,IAAUA,EAAW,QACd,EAARgC,IAAWA,EAAQ,GACnBnG,EAAM/B,KA=
AKsF,SAAQvD,EAAM/B,KAAKsF,QACvB4C,GAAPnG,EAAc,MAAO,EAEzB,QACE,OAAQmE,GACN=
,IAAK,MACH,MAAOkC,GAASpI,KAAMkI,EAAOnG,EAE/B,KAAK,OACL,IAAK,QACH,MAAOsG,G=
AAUrI,KAAMkI,EAAOnG,EAEhC,KAAK,QACH,MAAOuG,GAAWtI,KAAMkI,EAAOnG,EAEjC,KAA=
K,SACH,MAAOwG,GAAYvI,KAAMkI,EAAOnG,EAElC,KAAK,SACH,MAAOyG,GAAYxI,KAAMkI,E=
AAOnG,EAElC,KAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,MAAO0G,GAAazI,KAAMkI,=
EAAOnG,EAEnC,SACE,GAAI8F,EAAa,KAAM,IAAIpB,WAAU,qBAAuBP,EAC5DA,IAAYA,EAAW,=
IAAI8B,cAC3BH,GAAc,GAuFtB,QAASa,GAAUf,EAAK1B,EAAQ0C,EAAQrD,GACtCqD,EAASC,=
OAAOD,IAAW,CAC3B,IAAIE,GAAYlB,EAAIrC,OAASqD,CACxBrD,IAGHA,EAASsD,OAAOtD,G=
ACZA,EAASuD,IACXvD,EAASuD,IAJXvD,EAASuD,CASX,IAAIC,GAAS7C,EAAOX,MACpB,IAA=
IwD,EAAS,IAAM,EAAG,KAAM,IAAIC,OAAM,qBAElCzD,GAASwD,EAAS,IACpBxD,EAASwD,EA=
AS,EAEpB,KAAK,GAAI9C,GAAI,EAAOV,EAAJU,EAAYA,IAAK,CAC/B,GAAIgD,GAASC,SAASh=
D,EAAOiD,OAAW,EAAJlD,EAAO,GAAI,GAC/C,IAAImD,MAAMH,GAAS,KAAM,IAAID,OAAM,qB=
ACnCpB,GAAIgB,EAAS3C,GAAKgD,EAEpB,MAAOhD,GAGT,QAASoD,GAAWzB,EAAK1B,EAAQ0C=
,EAAQrD,GACvC,MAAO+D,GAAWvB,EAAY7B,EAAQ0B,EAAIrC,OAASqD,GAAShB,EAAKgB,EAA=
QrD,GAG3E,QAASgE,GAAY3B,EAAK1B,EAAQ0C,EAAQrD,GACxC,MAAO+D,GAAWE,EAAatD,GA=
AS0B,EAAKgB,EAAQrD,GAGvD,QAASkE,GAAa7B,EAAK1B,EAAQ0C,EAAQrD,GACzC,MAAOgE,=
GAAW3B,EAAK1B,EAAQ0C,EAAQrD,GAGzC,QAASmE,GAAa9B,EAAK1B,EAAQ0C,EAAQrD,GACz=
C,MAAO+D,GAAWtB,EAAc9B,GAAS0B,EAAKgB,EAAQrD,GAGxD,QAASoE,GAAW/B,EAAK1B,EA=
AQ0C,EAAQrD,GACvC,MAAO+D,GAAWM,EAAe1D,EAAQ0B,EAAIrC,OAASqD,GAAShB,EAAKgB,=
EAAQrD,GAkF9E,QAASkD,GAAab,EAAKO,EAAOnG,GAChC,MAAc,KAAVmG,GAAenG,IAAQ4F,E=
AAIrC,OACtBsE,EAAOC,cAAclC,GAErBiC,EAAOC,cAAclC,EAAImC,MAAM5B,EAAOnG,IAIj=
D,QAASsG,GAAWV,EAAKO,EAAOnG,GAC9BA,EAAMgI,KAAKC,IAAIrC,EAAIrC,OAAQvD,EAI3=
B,KAHA,GAAIkI,MAEAjE,EAAIkC,EACGnG,EAAJiE,GAAS,CACd,GAAIkE,GAAYvC,EAAI3B,=
GAChBmE,EAAY,KACZC,EAAoBF,EAAY,IAAQ,EACvCA,EAAY,IAAQ,EACpBA,EAAY,IAAQ,EAC=
rB,CAEJ,IAA4BnI,GAAxBiE,EAAIoE,EAAyB,CAC/B,GAAIC,GAAYC,EAAWC,EAAYC,CAEvC,=
QAAQJ,GACN,IAAK,GACa,IAAZF,IACFC,EAAYD,EAEd,MACF,KAAK,GACHG,EAAa1C,EAAI3B=
,EAAI,GACO,OAAV,IAAbqE,KACHG,GAA6B,GAAZN,IAAqB,EAAoB,GAAbG,EACzCG,EAAgB,M=
AClBL,EAAYK,GAGhB,MACF,KAAK,GACHH,EAAa1C,EAAI3B,EAAI,GACrBsE,EAAY3C,EAAI3=
B,EAAI,GACQ,OAAV,IAAbqE,IAAsD,OAAV,IAAZC,KACnCE,GAA6B,GAAZN,IAAoB,IAAoB,G=
AAbG,IAAsB,EAAmB,GAAZC,EACrEE,EAAgB,OAA0B,MAAhBA,GAA0BA,EAAgB,SACtEL,EAAY=
K,GAGhB,MACF,KAAK,GACHH,EAAa1C,EAAI3B,EAAI,GACrBsE,EAAY3C,EAAI3B,EAAI,GAC=
pBuE,EAAa5C,EAAI3B,EAAI,GACO,OAAV,IAAbqE,IAAsD,OAAV,IAAZC,IAAsD,OAAV,IAAb=
C,KAClEC,GAA6B,GAAZN,IAAoB,IAAqB,GAAbG,IAAsB,IAAmB,GAAZC,IAAqB,EAAoB,GAAb=
C,EAClGC,EAAgB,OAA0B,QAAhBA,IAC5BL,EAAYK,KAMJ,OAAdL,GAGFA,EAAY,MACZC,EAAm=
B,GACVD,EAAY,QAErBA,GAAa,MACbF,EAAIrI,KAAKuI,IAAc,GAAK,KAAQ,OACpCA,EAAY,M=
AAqB,KAAZA,GAGvBF,EAAIrI,KAAKuI,GACTnE,GAAKoE,EAGP,MAAOK,GAAsBR,GAQ/B,QAA=
SQ,GAAuBC,GAC9B,GAAI9C,GAAM8C,EAAWpF,MACrB,IAAWqF,GAAP/C,EACF,MAAOgD,QAAO=
C,aAAaC,MAAMF,OAAQF,EAM3C,KAFA,GAAIT,GAAM,GACNjE,EAAI,EACG4B,EAAJ5B,GACLi=
E,GAAOW,OAAOC,aAAaC,MACzBF,OACAF,EAAWZ,MAAM9D,EAAGA,GAAK2E,GAG7B,OAAOV,GA=
GT,QAAS3B,GAAYX,EAAKO,EAAOnG,GAC/B,GAAIgJ,GAAM,EACVhJ,GAAMgI,KAAKC,IAAIrC=
,EAAIrC,OAAQvD,EAE3B,KAAK,GAAIiE,GAAIkC,EAAWnG,EAAJiE,EAASA,IAC3B+E,GAAOH=
,OAAOC,aAAsB,IAATlD,EAAI3B,GAEjC,OAAO+E,GAGT,QAASxC,GAAaZ,EAAKO,EAAOnG,GA=
ChC,GAAIgJ,GAAM,EACVhJ,GAAMgI,KAAKC,IAAIrC,EAAIrC,OAAQvD,EAE3B,KAAK,GAAIi=
E,GAAIkC,EAAWnG,EAAJiE,EAASA,IAC3B+E,GAAOH,OAAOC,aAAalD,EAAI3B,GAEjC,OAAO=
+E,GAGT,QAAS3C,GAAUT,EAAKO,EAAOnG,GAC7B,GAAI6F,GAAMD,EAAIrC,SAET4C,GAAiB,=
EAARA,KAAWA,EAAQ,KAC5BnG,GAAa,EAANA,GAAWA,EAAM6F,KAAK7F,EAAM6F,EAGxC,KAAK=
,GADDoD,GAAM,GACDhF,EAAIkC,EAAWnG,EAAJiE,EAASA,IAC3BgF,GAAOC,EAAMtD,EAAI3=
B,GAEnB,OAAOgF,GAGT,QAASvC,GAAcd,EAAKO,EAAOnG,GAGjC,IAAK,GAFDmJ,GAAQvD,EA=
AImC,MAAM5B,EAAOnG,GACzBkI,EAAM,GACDjE,EAAI,EAAGA,EAAIkF,EAAM5F,OAAQU,GAA=
K,EACrCiE,GAAOW,OAAOC,aAAaK,EAAMlF,GAAoB,IAAfkF,EAAMlF,EAAI,GAElD,OAAOiE,=
GA2CT,QAASkB,GAAaxC,EAAQyC,EAAK9F,GACjC,GAAKqD,EAAS,IAAO,GAAc,EAATA,EAAY,=
KAAM,IAAInB,YAAW,qBAC3D,IAAImB,EAASyC,EAAM9F,EAAQ,KAAM,IAAIkC,YAAW,yCA+Jl=
D,QAAS6D,GAAU1D,EAAK2D,EAAO3C,EAAQyC,EAAKG,EAAKvB,GAC/C,IAAK/J,EAAOoG,SAA=
SsB,GAAM,KAAM,IAAIlB,WAAU,mCAC/C,IAAI6E,EAAQC,GAAevB,EAARsB,EAAa,KAAM,IAA=
I9D,YAAW,yBACrD,IAAImB,EAASyC,EAAMzD,EAAIrC,OAAQ,KAAM,IAAIkC,YAAW,sBA4CtD=
,QAASgE,GAAmB7D,EAAK2D,EAAO3C,EAAQ8C,GAClC,EAARH,IAAWA,EAAQ,MAASA,EAAQ,EA=
CxC,KAAK,GAAItF,GAAI,EAAG0F,EAAI3B,KAAKC,IAAIrC,EAAIrC,OAASqD,EAAQ,GAAQ+C=
,EAAJ1F,EAAOA,IAC3D2B,EAAIgB,EAAS3C,IAAMsF,EAAS,KAAS,GAAKG,EAAezF,EAAI,EA=
AIA,MAClC,GAA5ByF,EAAezF,EAAI,EAAIA,GA8B9B,QAAS2F,GAAmBhE,EAAK2D,EAAO3C,E=
AAQ8C,GAClC,EAARH,IAAWA,EAAQ,WAAaA,EAAQ,EAC5C,KAAK,GAAItF,GAAI,EAAG0F,EAA=
I3B,KAAKC,IAAIrC,EAAIrC,OAASqD,EAAQ,GAAQ+C,EAAJ1F,EAAOA,IAC3D2B,EAAIgB,EA=
AS3C,GAAMsF,IAAuC,GAA5BG,EAAezF,EAAI,EAAIA,GAAU,IA6InE,QAAS4F,GAAcjE,EAAK=
2D,EAAO3C,EAAQyC,EAAKG,EAAKvB,GACnD,GAAIsB,EAAQC,GAAevB,EAARsB,EAAa,KAAM,=
IAAI9D,YAAW,yBACrD,IAAImB,EAASyC,EAAMzD,EAAIrC,OAAQ,KAAM,IAAIkC,YAAW,qBAC=
pD,IAAa,EAATmB,EAAY,KAAM,IAAInB,YAAW,sBAGvC,QAASqE,GAAYlE,EAAK2D,EAAO3C,E=
AAQ8C,EAAcK,GAKrD,MAJKA,IACHF,EAAajE,EAAK2D,EAAO3C,EAAQ,EAAG,sBAAwB,wBAE9=
DoD,EAAQ5F,MAAMwB,EAAK2D,EAAO3C,EAAQ8C,EAAc,GAAI,GAC7C9C,EAAS,EAWlB,QAASq=
D,GAAarE,EAAK2D,EAAO3C,EAAQ8C,EAAcK,GAKtD,MAJKA,IACHF,EAAajE,EAAK2D,EAAO3=
C,EAAQ,EAAG,uBAAyB,yBAE/DoD,EAAQ5F,MAAMwB,EAAK2D,EAAO3C,EAAQ8C,EAAc,GAAI,=
GAC7C9C,EAAS,EAoLlB,QAASsD,GAAaC,GAIpB,GAFAA,EAAMC,EAAWD,GAAKE,QAAQC,GAAm=
B,IAE7CH,EAAI5G,OAAS,EAAG,MAAO,EAE3B,MAAO4G,EAAI5G,OAAS,IAAM,GACxB4G,GAAY=
,GAEd,OAAOA,GAGT,QAASC,GAAYD,GACnB,MAAIA,GAAII,KAAaJ,EAAII,OAClBJ,EAAIE,Q=
AAQ,aAAc,IAGnC,QAASnB,GAAOsB,GACd,MAAQ,IAAJA,EAAe,IAAMA,EAAE9H,SAAS,IAC7B=
8H,EAAE9H,SAAS,IAGpB,QAASqD,GAAa7B,EAAQuG,GAC5BA,EAAQA,GAASrE,EAAAA,CAMjB=
,KAAK,GALDgC,GACA7E,EAASW,EAAOX,OAChBmH,EAAgB,KAChBvB,KAEKlF,EAAI,EAAOV,E=
AAJU,EAAYA,IAAK,CAI/B,GAHAmE,EAAYlE,EAAOyG,WAAW1G,GAG1BmE,EAAY,OAAsB,MAAZ=
A,EAAoB,CAE5C,IAAKsC,EAAe,CAElB,GAAItC,EAAY,MAAQ,EAEjBqC,GAAS,GAAK,IAAItB=
,EAAMtJ,KAAK,IAAM,IAAM,IAC9C,UACK,GAAIoE,EAAI,IAAMV,EAAQ,EAEtBkH,GAAS,GAA=
K,IAAItB,EAAMtJ,KAAK,IAAM,IAAM,IAC9C,UAIF6K,EAAgBtC,CAEhB,UAIF,GAAgB,MAAZ=
A,EAAoB,EACjBqC,GAAS,GAAK,IAAItB,EAAMtJ,KAAK,IAAM,IAAM,KAC9C6K,EAAgBtC,CA=
ChB,UAIFA,GAAasC,EAAgB,OAAU,GAAKtC,EAAY,OAAU,UACzDsC,KAEJD,GAAS,GAAK,IAAI=
tB,EAAMtJ,KAAK,IAAM,IAAM,IAMhD,IAHA6K,EAAgB,KAGA,IAAZtC,EAAkB,CACpB,IAAKq=
C,GAAS,GAAK,EAAG,KACtBtB,GAAMtJ,KAAKuI,OACN,IAAgB,KAAZA,EAAmB,CAC5B,IAAKq=
C,GAAS,GAAK,EAAG,KACtBtB,GAAMtJ,KACJuI,GAAa,EAAM,IACP,GAAZA,EAAmB,SAEhB,I=
AAgB,MAAZA,EAAqB,CAC9B,IAAKqC,GAAS,GAAK,EAAG,KACtBtB,GAAMtJ,KACJuI,GAAa,G=
AAM,IACnBA,GAAa,EAAM,GAAO,IACd,GAAZA,EAAmB,SAEhB,CAAA,KAAgB,QAAZA,GAST,KA=
AM,IAAIpB,OAAM,qBARhB,KAAKyD,GAAS,GAAK,EAAG,KACtBtB,GAAMtJ,KACJuI,GAAa,GA=
AO,IACpBA,GAAa,GAAM,GAAO,IAC1BA,GAAa,EAAM,GAAO,IACd,GAAZA,EAAmB,MAOzB,MAA=
Oe,GAGT,QAAS3B,GAAc2C,GAErB,IAAK,GADD7H,MACK2B,EAAI,EAAGA,EAAIkG,EAAI5G,O=
AAQU,IAE9B3B,EAAUzC,KAAyB,IAApBsK,EAAIQ,WAAW1G,GAEhC,OAAO3B,GAGT,QAASsF,G=
AAgBuC,EAAKM,GAG5B,IAAK,GAFD3M,GAAG8M,EAAIC,EACPvI,KACK2B,EAAI,EAAGA,EAAI=
kG,EAAI5G,WACjBkH,GAAS,GAAK,GADWxG,IAG9BnG,EAAIqM,EAAIQ,WAAW1G,GACnB2G,EA=
AK9M,GAAK,EACV+M,EAAK/M,EAAI,IACTwE,EAAUzC,KAAKgL,GACfvI,EAAUzC,KAAK+K,EA=
GjB,OAAOtI,GAGT,QAAS0D,GAAemE,GACtB,MAAOtC,GAAOiD,YAAYZ,EAAYC,IAGxC,QAAS7=
C,GAAYhG,EAAKyJ,EAAKnE,EAAQrD,GACrC,IAAK,GAAIU,GAAI,EAAOV,EAAJU,KACTA,EAA=
I2C,GAAUmE,EAAIxH,QAAYU,GAAK3C,EAAIiC,QADlBU,IAE1B8G,EAAI9G,EAAI2C,GAAUtF=
,EAAI2C,EAExB,OAAOA;;;;;;AA9/CT,GAAI4D,GAASxK,EAAoB,GAC7B2M,EAAU3M,EAAoB,=
GAC9BmH,EAAUnH,EAAoB,EAElCG,GAAQU,OAASA,EACjBV,EAAQkI,WAAaA,EACrBlI,EAAQw=
N,kBAAoB,GAC5B9M,EAAOqH,SAAW,IAElB,IAAIC,KA6BJtH,GAAOmF,oBAAqDI,SAA/BzF,E=
AAOqF,oBAChCrF,EAAOqF,oBACPR,IA2KA3E,EAAOmF,sBACTnF,EAAOc,UAAUoG,UAAY7C,W=
AAWvD,UACxCd,EAAOkH,UAAY7C,YAsCrBrE,EAAOoG,SAAW,SAAmB2G,GACnC,QAAe,MAALA,=
IAAaA,EAAE5F,YAG3BnH,EAAOgN,QAAU,SAAkBC,EAAGF,GACpC,IAAK/M,EAAOoG,SAAS6G,=
KAAOjN,EAAOoG,SAAS2G,GAC1C,KAAM,IAAIvG,WAAU,4BAGtB,IAAIyG,IAAMF,EAAG,MAAO=
,EAOpB,KALA,GAAIG,GAAID,EAAE5H,OACN8H,EAAIJ,EAAE1H,OAENU,EAAI,EACJ4B,EAAM=
mC,KAAKC,IAAImD,EAAGC,GACXxF,EAAJ5B,GACDkH,EAAElH,KAAOgH,EAAEhH,MAEbA,CAQ=
J,OALIA,KAAM4B,IACRuF,EAAID,EAAElH,GACNoH,EAAIJ,EAAEhH,IAGAoH,EAAJD,EAAc,=
GACVA,EAAJC,EAAc,EACX,GAGTnN,EAAOoN,WAAa,SAAqBnH,GACvC,OAAQ0E,OAAO1E,GAAU=
8B,eACvB,IAAK,MACL,IAAK,OACL,IAAK,QACL,IAAK,QACL,IAAK,SACL,IAAK,SACL,IAAK=
,MACL,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAO,CACT,SACE,OAAO,IAIb/H,=
EAAO4B,OAAS,SAAiByL,EAAMhI,GACrC,IAAKiB,EAAQ+G,GAAO,KAAM,IAAI7G,WAAU,6CAE=
xC,IAAoB,IAAhB6G,EAAKhI,OACP,MAAO,IAAIrF,GAAO,EAGpB,IAAI+F,EACJ,IAAeR,SAA=
XF,EAEF,IADAA,EAAS,EACJU,EAAI,EAAGA,EAAIsH,EAAKhI,OAAQU,IAC3BV,GAAUgI,EAA=
KtH,GAAGV,MAItB,IAAIqC,GAAM,GAAI1H,GAAOqF,GACjBiI,EAAM,CACV,KAAKvH,EAAI,E=
AAGA,EAAIsH,EAAKhI,OAAQU,IAAK,CAChC,GAAIwH,GAAOF,EAAKtH,EAChBwH,GAAKzG,KA=
AKY,EAAK4F,GACfA,GAAOC,EAAKlI,OAEd,MAAOqC,IAsCT1H,EAAOiF,WAAaA,EAGpBjF,EA=
AOc,UAAUuE,OAASE,OAC1BvF,EAAOc,UAAUwE,OAASC,OA6C1BvF,EAAOc,UAAU0D,SAAW,WA=
C1B,GAAIa,GAAuB,EAAdtF,KAAKsF,MAClB,OAAe,KAAXA,EAAqB,GACA,IAArBK,UAAUL,OA=
AqB+C,EAAUrI,KAAM,EAAGsF,GAC/C2C,EAAa6C,MAAM9K,KAAM2F,YAGlC1F,EAAOc,UAAU0=
M,OAAS,SAAiBT,GACzC,IAAK/M,EAAOoG,SAAS2G,GAAI,KAAM,IAAIvG,WAAU,4BAC7C,OAA=
IzG,QAASgN,GAAU,EACY,IAA5B/M,EAAOgN,QAAQjN,KAAMgN,IAG9B/M,EAAOc,UAAU2M,QA=
AU,WACzB,GAAIxB,GAAM,GACNX,EAAMhM,EAAQwN,iBAKlB,OAJI/M,MAAKsF,OAAS,IAChB4=
G,EAAMlM,KAAKyE,SAAS,MAAO,EAAG8G,GAAKoC,MAAM,SAASC,KAAK,KACnD5N,KAAKsF,OA=
ASiG,IAAKW,GAAO,UAEzB,WAAaA,EAAM,KAG5BjM,EAAOc,UAAUkM,QAAU,SAAkBD,GAC3C,I=
AAK/M,EAAOoG,SAAS2G,GAAI,KAAM,IAAIvG,WAAU,4BAC7C,OAAIzG,QAASgN,EAAU,EAChB=
/M,EAAOgN,QAAQjN,KAAMgN,IAG9B/M,EAAOc,UAAU8M,QAAU,SAAkBC,EAAKC,GAyBhD,QAA=
SC,GAAclJ,EAAKgJ,EAAKC,GAE/B,IAAK,GADDE,GAAa,GACRjI,EAAI,EAAG+H,EAAa/H,EA=
AIlB,EAAIQ,OAAQU,IAC3C,GAAIlB,EAAIiJ,EAAa/H,KAAO8H,EAAmB,KAAfG,EAAoB,EAAI=
jI,EAAIiI,IAE1D,GADmB,KAAfA,IAAmBA,EAAajI,GAChCA,EAAIiI,EAAa,IAAMH,EAAIxI=
,OAAQ,MAAOyI,GAAaE,MAE3DA,GAAa,EAGjB,OAAO,GA9BT,GAJIF,EAAa,WAAYA,EAAa,WAC=
pB,YAAbA,IAA0BA,EAAa,aAChDA,IAAe,EAEK,IAAhB/N,KAAKsF,OAAc,MAAO,EAC9B,IAAI=
yI,GAAc/N,KAAKsF,OAAQ,MAAO,EAKtC,IAFiB,EAAbyI,IAAgBA,EAAahE,KAAKwB,IAAIvL=
,KAAKsF,OAASyI,EAAY,IAEjD,gBAARD,GACT,MAAmB,KAAfA,EAAIxI,OAAqB,GACtBsF,OA=
AO7J,UAAU8M,QAAQlO,KAAKK,KAAM8N,EAAKC,EAElD,IAAI9N,EAAOoG,SAASyH,GAClB,MA=
AOE,GAAahO,KAAM8N,EAAKC,EAEjC,IAAmB,gBAARD,GACT,MAAI7N,GAAOmF,qBAAwD,aAAj=
Cd,WAAWvD,UAAU8M,QAC9CvJ,WAAWvD,UAAU8M,QAAQlO,KAAKK,KAAM8N,EAAKC,GAE/CC,E=
AAahO,MAAQ8N,GAAOC,EAgBrC,MAAM,IAAItH,WAAU,yCAItBxG,EAAOc,UAAUmN,IAAM,SAA=
cvF,GAEnC,MAAO3I,MAAKmO,UAAUxF,IAIxB1I,EAAOc,UAAUqN,IAAM,SAAcC,EAAG1F,GAE=
tC,MAAO3I,MAAKsO,WAAWD,EAAG1F,IAkD5B1I,EAAOc,UAAUoF,MAAQ,SAAgBF,EAAQ0C,EA=
AQrD,EAAQY,GAE/D,GAAeV,SAAXmD,EACFzC,EAAW,OACXZ,EAAStF,KAAKsF,OACdqD,EAAS=
,MAEJ,IAAenD,SAAXF,GAA0C,gBAAXqD,GACxCzC,EAAWyC,EACXrD,EAAStF,KAAKsF,OACd=
qD,EAAS,MAEJ,IAAI4F,SAAS5F,GAClBA,EAAkB,EAATA,EACL4F,SAASjJ,IACXA,EAAkB,E=
AATA,EACQE,SAAbU,IAAwBA,EAAW,UAEvCA,EAAWZ,EACXA,EAASE,YAGN,CACL,GAAIgJ,GA=
AOtI,CACXA,GAAWyC,EACXA,EAAkB,EAATrD,EACTA,EAASkJ,EAGX,GAAI3F,GAAY7I,KAAK=
sF,OAASqD,CAG9B,KAFenD,SAAXF,GAAwBA,EAASuD,KAAWvD,EAASuD,GAEpD5C,EAAOX,OA=
AS,IAAe,EAATA,GAAuB,EAATqD,IAAgBA,EAAS3I,KAAKsF,OACrE,KAAM,IAAIkC,YAAW,yC=
AGlBtB,KAAUA,EAAW,OAG1B,KADA,GAAI2B,IAAc,IAEhB,OAAQ3B,GACN,IAAK,MACH,MAAO=
wC,GAAS1I,KAAMiG,EAAQ0C,EAAQrD,EAExC,KAAK,OACL,IAAK,QACH,MAAO8D,GAAUpJ,KA=
AMiG,EAAQ0C,EAAQrD,EAEzC,KAAK,QACH,MAAOgE,GAAWtJ,KAAMiG,EAAQ0C,EAAQrD,EAE=
1C,KAAK,SACH,MAAOkE,GAAYxJ,KAAMiG,EAAQ0C,EAAQrD,EAE3C,KAAK,SAEH,MAAOmE,GA=
AYzJ,KAAMiG,EAAQ0C,EAAQrD,EAE3C,KAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,M=
AAOoE,GAAU1J,KAAMiG,EAAQ0C,EAAQrD,EAEzC,SACE,GAAIuC,EAAa,KAAM,IAAIpB,WAAU=
,qBAAuBP,EAC5DA,IAAY,GAAKA,GAAU8B,cAC3BH,GAAc,IAKtB5H,EAAOc,UAAU0N,OAAS,W=
ACxB,OACEtK,KAAM,SACN+C,KAAMwH,MAAM3N,UAAU+I,MAAMnK,KAAKK,KAAK2O,MAAQ3O,K=
AAM,IAwFxD,IAAI2K,GAAuB,IA8D3B1K,GAAOc,UAAU+I,MAAQ,SAAgB5B,EAAOnG,GAC9C,G=
AAI6F,GAAM5H,KAAKsF,MACf4C,KAAUA,EACVnG,EAAcyD,SAARzD,EAAoB6F,IAAQ7F,EAEt=
B,EAARmG,GACFA,GAASN,EACG,EAARM,IAAWA,EAAQ,IACdA,EAAQN,IACjBM,EAAQN,GAGA,=
EAAN7F,GACFA,GAAO6F,EACG,EAAN7F,IAASA,EAAM,IACVA,EAAM6F,IACf7F,EAAM6F,GAG=
EM,EAANnG,IAAaA,EAAMmG,EAEvB,IAAI0G,EACJ,IAAI3O,EAAOmF,oBACTwJ,EAAS3O,EAA=
OgH,SAASjH,KAAKiF,SAASiD,EAAOnG,QACzC,CACL,GAAI8M,GAAW9M,EAAMmG,CACrB0G,G=
AAS,GAAI3O,GAAO4O,EAAUrJ,OAC9B,KAAK,GAAIQ,GAAI,EAAO6I,EAAJ7I,EAAcA,IAC5B4=
I,EAAO5I,GAAKhG,KAAKgG,EAAIkC,GAMzB,MAFI0G,GAAOtJ,SAAQsJ,EAAOrJ,OAASvF,KA=
AKuF,QAAUvF,MAE3C4O,GAWT3O,EAAOc,UAAU+N,WAAa,SAAqBnG,EAAQzD,EAAY4G,GACrEn=
D,EAAkB,EAATA,EACTzD,EAA0B,EAAbA,EACR4G,GAAUX,EAAYxC,EAAQzD,EAAYlF,KAAKsF=
,OAKpD,KAHA,GAAIwI,GAAM9N,KAAK2I,GACXoG,EAAM,EACN/I,EAAI,IACCA,EAAId,IAAe=
6J,GAAO,MACjCjB,GAAO9N,KAAK2I,EAAS3C,GAAK+I,CAG5B,OAAOjB,IAGT7N,EAAOc,UAA=
UiO,WAAa,SAAqBrG,EAAQzD,EAAY4G,GACrEnD,EAAkB,EAATA,EACTzD,EAA0B,EAAbA,EAC=
R4G,GACHX,EAAYxC,EAAQzD,EAAYlF,KAAKsF,OAKvC,KAFA,GAAIwI,GAAM9N,KAAK2I,IAA=
WzD,GACtB6J,EAAM,EACH7J,EAAa,IAAM6J,GAAO,MAC/BjB,GAAO9N,KAAK2I,IAAWzD,GAA=
c6J,CAGvC,OAAOjB,IAGT7N,EAAOc,UAAUoN,UAAY,SAAoBxF,EAAQmD,GAEvD,MADKA,IAAU=
X,EAAYxC,EAAQ,EAAG3I,KAAKsF,QACpCtF,KAAK2I,IAGd1I,EAAOc,UAAUkO,aAAe,SAAuB=
tG,EAAQmD,GAE7D,MADKA,IAAUX,EAAYxC,EAAQ,EAAG3I,KAAKsF,QACpCtF,KAAK2I,GAAW=
3I,KAAK2I,EAAS,IAAM,GAG7C1I,EAAOc,UAAUmO,aAAe,SAAuBvG,EAAQmD,GAE7D,MADKA,=
IAAUX,EAAYxC,EAAQ,EAAG3I,KAAKsF,QACnCtF,KAAK2I,IAAW,EAAK3I,KAAK2I,EAAS,IA=
G7C1I,EAAOc,UAAUoO,aAAe,SAAuBxG,EAAQmD,GAG7D,MAFKA,IAAUX,EAAYxC,EAAQ,EAAG=
3I,KAAKsF,SAElCtF,KAAK2I,GACT3I,KAAK2I,EAAS,IAAM,EACpB3I,KAAK2I,EAAS,IAAM=
,IACD,SAAnB3I,KAAK2I,EAAS,IAGrB1I,EAAOc,UAAUqO,aAAe,SAAuBzG,EAAQmD,GAG7D,=
MAFKA,IAAUX,EAAYxC,EAAQ,EAAG3I,KAAKsF,QAEpB,SAAftF,KAAK2I,IACT3I,KAAK2I,E=
AAS,IAAM,GACrB3I,KAAK2I,EAAS,IAAM,EACrB3I,KAAK2I,EAAS,KAGlB1I,EAAOc,UAAUs=
O,UAAY,SAAoB1G,EAAQzD,EAAY4G,GACnEnD,EAAkB,EAATA,EACTzD,EAA0B,EAAbA,EACR4=
G,GAAUX,EAAYxC,EAAQzD,EAAYlF,KAAKsF,OAKpD,KAHA,GAAIwI,GAAM9N,KAAK2I,GACXo=
G,EAAM,EACN/I,EAAI,IACCA,EAAId,IAAe6J,GAAO,MACjCjB,GAAO9N,KAAK2I,EAAS3C,G=
AAK+I,CAM5B,OAJAA,IAAO,IAEHjB,GAAOiB,IAAKjB,GAAO/D,KAAKuF,IAAI,EAAG,EAAIp=
K,IAEhC4I,GAGT7N,EAAOc,UAAUwO,UAAY,SAAoB5G,EAAQzD,EAAY4G,GACnEnD,EAAkB,EA=
ATA,EACTzD,EAA0B,EAAbA,EACR4G,GAAUX,EAAYxC,EAAQzD,EAAYlF,KAAKsF,OAKpD,KAH=
A,GAAIU,GAAId,EACJ6J,EAAM,EACNjB,EAAM9N,KAAK2I,IAAW3C,GACnBA,EAAI,IAAM+I,=
GAAO,MACtBjB,GAAO9N,KAAK2I,IAAW3C,GAAK+I,CAM9B,OAJAA,IAAO,IAEHjB,GAAOiB,I=
AAKjB,GAAO/D,KAAKuF,IAAI,EAAG,EAAIpK,IAEhC4I,GAGT7N,EAAOc,UAAUyO,SAAW,SAA=
mB7G,EAAQmD,GAErD,MADKA,IAAUX,EAAYxC,EAAQ,EAAG3I,KAAKsF,QACtB,IAAftF,KAAK=
2I,GACyB,IAA3B,IAAO3I,KAAK2I,GAAU,GADK3I,KAAK2I,IAI3C1I,EAAOc,UAAU0O,YAAc=
,SAAsB9G,EAAQmD,GACtDA,GAAUX,EAAYxC,EAAQ,EAAG3I,KAAKsF,OAC3C,IAAIwI,GAAM9=
N,KAAK2I,GAAW3I,KAAK2I,EAAS,IAAM,CAC9C,OAAc,OAANmF,EAAsB,WAANA,EAAmBA,GAG=
7C7N,EAAOc,UAAU2O,YAAc,SAAsB/G,EAAQmD,GACtDA,GAAUX,EAAYxC,EAAQ,EAAG3I,KAA=
KsF,OAC3C,IAAIwI,GAAM9N,KAAK2I,EAAS,GAAM3I,KAAK2I,IAAW,CAC9C,OAAc,OAANmF,=
EAAsB,WAANA,EAAmBA,GAG7C7N,EAAOc,UAAU4O,YAAc,SAAsBhH,EAAQmD,GAG3D,MAFKA,I=
AAUX,EAAYxC,EAAQ,EAAG3I,KAAKsF,QAEnCtF,KAAK2I,GACV3I,KAAK2I,EAAS,IAAM,EAC=
pB3I,KAAK2I,EAAS,IAAM,GACpB3I,KAAK2I,EAAS,IAAM,IAGzB1I,EAAOc,UAAU6O,YAAc,=
SAAsBjH,EAAQmD,GAG3D,MAFKA,IAAUX,EAAYxC,EAAQ,EAAG3I,KAAKsF,QAEnCtF,KAAK2I=
,IAAW,GACrB3I,KAAK2I,EAAS,IAAM,GACpB3I,KAAK2I,EAAS,IAAM,EACpB3I,KAAK2I,EA=
AS,IAGnB1I,EAAOc,UAAU8O,YAAc,SAAsBlH,EAAQmD,GAE3D,MADKA,IAAUX,EAAYxC,EAAQ=
,EAAG3I,KAAKsF,QACpCyG,EAAQ+D,KAAK9P,KAAM2I,GAAQ,EAAM,GAAI,IAG9C1I,EAAOc,=
UAAUgP,YAAc,SAAsBpH,EAAQmD,GAE3D,MADKA,IAAUX,EAAYxC,EAAQ,EAAG3I,KAAKsF,QA=
CpCyG,EAAQ+D,KAAK9P,KAAM2I,GAAQ,EAAO,GAAI,IAG/C1I,EAAOc,UAAUiP,aAAe,SAAuB=
rH,EAAQmD,GAE7D,MADKA,IAAUX,EAAYxC,EAAQ,EAAG3I,KAAKsF,QACpCyG,EAAQ+D,KAAK=
9P,KAAM2I,GAAQ,EAAM,GAAI,IAG9C1I,EAAOc,UAAUkP,aAAe,SAAuBtH,EAAQmD,GAE7D,M=
ADKA,IAAUX,EAAYxC,EAAQ,EAAG3I,KAAKsF,QACpCyG,EAAQ+D,KAAK9P,KAAM2I,GAAQ,EA=
AO,GAAI,IAS/C1I,EAAOc,UAAUmP,YAAc,SAAsB5E,EAAO3C,EAAQzD,EAAY4G,GAC9ER,GAA=
SA,EACT3C,EAAkB,EAATA,EACTzD,EAA0B,EAAbA,EACR4G,GAAUT,EAASrL,KAAMsL,EAAO3=
C,EAAQzD,EAAY6E,KAAKuF,IAAI,EAAG,EAAIpK,GAAa,EAEtF,IAAI6J,GAAM,EACN/I,EAA=
I,CAER,KADAhG,KAAK2I,GAAkB,IAAR2C,IACNtF,EAAId,IAAe6J,GAAO,MACjC/O,KAAK2I=
,EAAS3C,GAAMsF,EAAQyD,EAAO,GAGrC,OAAOpG,GAASzD,GAGlBjF,EAAOc,UAAUoP,YAAc,=
SAAsB7E,EAAO3C,EAAQzD,EAAY4G,GAC9ER,GAASA,EACT3C,EAAkB,EAATA,EACTzD,EAA0B=
,EAAbA,EACR4G,GAAUT,EAASrL,KAAMsL,EAAO3C,EAAQzD,EAAY6E,KAAKuF,IAAI,EAAG,E=
AAIpK,GAAa,EAEtF,IAAIc,GAAId,EAAa,EACjB6J,EAAM,CAEV,KADA/O,KAAK2I,EAAS3C,=
GAAa,IAARsF,IACVtF,GAAK,IAAM+I,GAAO,MACzB/O,KAAK2I,EAAS3C,GAAMsF,EAAQyD,E=
AAO,GAGrC,OAAOpG,GAASzD,GAGlBjF,EAAOc,UAAUuN,WAAa,SAAqBhD,EAAO3C,EAAQmD,G=
AMhE,MALAR,IAASA,EACT3C,EAAkB,EAATA,EACJmD,GAAUT,EAASrL,KAAMsL,EAAO3C,EAA=
Q,EAAG,IAAM,GACjD1I,EAAOmF,sBAAqBkG,EAAQvB,KAAKqG,MAAM9E,IACpDtL,KAAK2I,G=
AAmB,IAAR2C,EACT3C,EAAS,GAWlB1I,EAAOc,UAAUsP,cAAgB,SAAwB/E,EAAO3C,EAAQmD,=
GAUtE,MATAR,IAASA,EACT3C,EAAkB,EAATA,EACJmD,GAAUT,EAASrL,KAAMsL,EAAO3C,EA=
AQ,EAAG,MAAQ,GACpD1I,EAAOmF,qBACTpF,KAAK2I,GAAmB,IAAR2C,EAChBtL,KAAK2I,EA=
AS,GAAM2C,IAAU,GAE9BE,EAAkBxL,KAAMsL,EAAO3C,GAAQ,GAElCA,EAAS,GAGlB1I,EAAO=
c,UAAUuP,cAAgB,SAAwBhF,EAAO3C,EAAQmD,GAUtE,MATAR,IAASA,EACT3C,EAAkB,EAATA=
,EACJmD,GAAUT,EAASrL,KAAMsL,EAAO3C,EAAQ,EAAG,MAAQ,GACpD1I,EAAOmF,qBACTpF,=
KAAK2I,GAAW2C,IAAU,EAC1BtL,KAAK2I,EAAS,GAAc,IAAR2C,GAEpBE,EAAkBxL,KAAMsL,=
EAAO3C,GAAQ,GAElCA,EAAS,GAUlB1I,EAAOc,UAAUwP,cAAgB,SAAwBjF,EAAO3C,EAAQmD,=
GAYtE,MAXAR,IAASA,EACT3C,EAAkB,EAATA,EACJmD,GAAUT,EAASrL,KAAMsL,EAAO3C,EA=
AQ,EAAG,WAAY,GACxD1I,EAAOmF,qBACTpF,KAAK2I,EAAS,GAAM2C,IAAU,GAC9BtL,KAAK2=
I,EAAS,GAAM2C,IAAU,GAC9BtL,KAAK2I,EAAS,GAAM2C,IAAU,EAC9BtL,KAAK2I,GAAmB,I=
AAR2C,GAEhBK,EAAkB3L,KAAMsL,EAAO3C,GAAQ,GAElCA,EAAS,GAGlB1I,EAAOc,UAAUyP,=
cAAgB,SAAwBlF,EAAO3C,EAAQmD,GAYtE,MAXAR,IAASA,EACT3C,EAAkB,EAATA,EACJmD,G=
AAUT,EAASrL,KAAMsL,EAAO3C,EAAQ,EAAG,WAAY,GACxD1I,EAAOmF,qBACTpF,KAAK2I,GA=
AW2C,IAAU,GAC1BtL,KAAK2I,EAAS,GAAM2C,IAAU,GAC9BtL,KAAK2I,EAAS,GAAM2C,IAAU=
,EAC9BtL,KAAK2I,EAAS,GAAc,IAAR2C,GAEpBK,EAAkB3L,KAAMsL,EAAO3C,GAAQ,GAElCA=
,EAAS,GAGlB1I,EAAOc,UAAU0P,WAAa,SAAqBnF,EAAO3C,EAAQzD,EAAY4G,GAG5E,GAFAR,=
GAASA,EACT3C,EAAkB,EAATA,GACJmD,EAAU,CACb,GAAI4E,GAAQ3G,KAAKuF,IAAI,EAAG,=
EAAIpK,EAAa,EAEzCmG,GAASrL,KAAMsL,EAAO3C,EAAQzD,EAAYwL,EAAQ,GAAIA,GAGxD,G=
AAI1K,GAAI,EACJ+I,EAAM,EACN4B,EAAc,EAARrF,EAAY,EAAI,CAE1B,KADAtL,KAAK2I,G=
AAkB,IAAR2C,IACNtF,EAAId,IAAe6J,GAAO,MACjC/O,KAAK2I,EAAS3C,IAAOsF,EAAQyD,=
GAAQ,GAAK4B,EAAM,GAGlD,OAAOhI,GAASzD,GAGlBjF,EAAOc,UAAU6P,WAAa,SAAqBtF,EA=
AO3C,EAAQzD,EAAY4G,GAG5E,GAFAR,GAASA,EACT3C,EAAkB,EAATA,GACJmD,EAAU,CACb,=
GAAI4E,GAAQ3G,KAAKuF,IAAI,EAAG,EAAIpK,EAAa,EAEzCmG,GAASrL,KAAMsL,EAAO3C,E=
AAQzD,EAAYwL,EAAQ,GAAIA,GAGxD,GAAI1K,GAAId,EAAa,EACjB6J,EAAM,EACN4B,EAAc,=
EAARrF,EAAY,EAAI,CAE1B,KADAtL,KAAK2I,EAAS3C,GAAa,IAARsF,IACVtF,GAAK,IAAM+=
I,GAAO,MACzB/O,KAAK2I,EAAS3C,IAAOsF,EAAQyD,GAAQ,GAAK4B,EAAM,GAGlD,OAAOhI,=
GAASzD,GAGlBjF,EAAOc,UAAU8P,UAAY,SAAoBvF,EAAO3C,EAAQmD,GAO9D,MANAR,IAASA,=
EACT3C,EAAkB,EAATA,EACJmD,GAAUT,EAASrL,KAAMsL,EAAO3C,EAAQ,EAAG,IAAM,MACjD=
1I,EAAOmF,sBAAqBkG,EAAQvB,KAAKqG,MAAM9E,IACxC,EAARA,IAAWA,EAAQ,IAAOA,EAAQ=
,GACtCtL,KAAK2I,GAAmB,IAAR2C,EACT3C,EAAS,GAGlB1I,EAAOc,UAAU+P,aAAe,SAAuBx=
F,EAAO3C,EAAQmD,GAUpE,MATAR,IAASA,EACT3C,EAAkB,EAATA,EACJmD,GAAUT,EAASrL,=
KAAMsL,EAAO3C,EAAQ,EAAG,MAAQ,QACpD1I,EAAOmF,qBACTpF,KAAK2I,GAAmB,IAAR2C,E=
AChBtL,KAAK2I,EAAS,GAAM2C,IAAU,GAE9BE,EAAkBxL,KAAMsL,EAAO3C,GAAQ,GAElCA,E=
AAS,GAGlB1I,EAAOc,UAAUgQ,aAAe,SAAuBzF,EAAO3C,EAAQmD,GAUpE,MATAR,IAASA,EAC=
T3C,EAAkB,EAATA,EACJmD,GAAUT,EAASrL,KAAMsL,EAAO3C,EAAQ,EAAG,MAAQ,QACpD1I,=
EAAOmF,qBACTpF,KAAK2I,GAAW2C,IAAU,EAC1BtL,KAAK2I,EAAS,GAAc,IAAR2C,GAEpBE,=
EAAkBxL,KAAMsL,EAAO3C,GAAQ,GAElCA,EAAS,GAGlB1I,EAAOc,UAAUiQ,aAAe,SAAuB1F,=
EAAO3C,EAAQmD,GAYpE,MAXAR,IAASA,EACT3C,EAAkB,EAATA,EACJmD,GAAUT,EAASrL,KA=
AMsL,EAAO3C,EAAQ,EAAG,WAAY,aACxD1I,EAAOmF,qBACTpF,KAAK2I,GAAmB,IAAR2C,EAC=
hBtL,KAAK2I,EAAS,GAAM2C,IAAU,EAC9BtL,KAAK2I,EAAS,GAAM2C,IAAU,GAC9BtL,KAAK=
2I,EAAS,GAAM2C,IAAU,IAE9BK,EAAkB3L,KAAMsL,EAAO3C,GAAQ,GAElCA,EAAS,GAGlB1I=
,EAAOc,UAAUkQ,aAAe,SAAuB3F,EAAO3C,EAAQmD,GAapE,MAZAR,IAASA,EACT3C,EAAkB,E=
AATA,EACJmD,GAAUT,EAASrL,KAAMsL,EAAO3C,EAAQ,EAAG,WAAY,aAChD,EAAR2C,IAAWA,=
EAAQ,WAAaA,EAAQ,GACxCrL,EAAOmF,qBACTpF,KAAK2I,GAAW2C,IAAU,GAC1BtL,KAAK2I,=
EAAS,GAAM2C,IAAU,GAC9BtL,KAAK2I,EAAS,GAAM2C,IAAU,EAC9BtL,KAAK2I,EAAS,GAAc=
,IAAR2C,GAEpBK,EAAkB3L,KAAMsL,EAAO3C,GAAQ,GAElCA,EAAS,GAiBlB1I,EAAOc,UAAU=
mQ,aAAe,SAAuB5F,EAAO3C,EAAQmD,GACpE,MAAOD,GAAW7L,KAAMsL,EAAO3C,GAAQ,EAAMm=
D,IAG/C7L,EAAOc,UAAUoQ,aAAe,SAAuB7F,EAAO3C,EAAQmD,GACpE,MAAOD,GAAW7L,KAAM=
sL,EAAO3C,GAAQ,EAAOmD,IAWhD7L,EAAOc,UAAUqQ,cAAgB,SAAwB9F,EAAO3C,EAAQmD,GA=
CtE,MAAOE,GAAYhM,KAAMsL,EAAO3C,GAAQ,EAAMmD,IAGhD7L,EAAOc,UAAUsQ,cAAgB,SAA=
wB/F,EAAO3C,EAAQmD,GACtE,MAAOE,GAAYhM,KAAMsL,EAAO3C,GAAQ,EAAOmD,IAIjD7L,E=
AAOc,UAAUgG,KAAO,SAAeuK,EAAQC,EAAarJ,EAAOnG,GAQjE,GAPKmG,IAAOA,EAAQ,GACfn=
G,GAAe,IAARA,IAAWA,EAAM/B,KAAKsF,QAC9BiM,GAAeD,EAAOhM,SAAQiM,EAAcD,EAAOhM=
,QAClDiM,IAAaA,EAAc,GAC5BxP,EAAM,GAAWmG,EAANnG,IAAaA,EAAMmG,GAG9BnG,IAAQm=
G,EAAO,MAAO,EAC1B,IAAsB,IAAlBoJ,EAAOhM,QAAgC,IAAhBtF,KAAKsF,OAAc,MAAO,EAG=
rD,IAAkB,EAAdiM,EACF,KAAM,IAAI/J,YAAW,4BAEvB,IAAY,EAARU,GAAaA,GAASlI,KAAK=
sF,OAAQ,KAAM,IAAIkC,YAAW,4BAC5D,IAAU,EAANzF,EAAS,KAAM,IAAIyF,YAAW,0BAG9Bz=
F,GAAM/B,KAAKsF,SAAQvD,EAAM/B,KAAKsF,QAC9BgM,EAAOhM,OAASiM,EAAcxP,EAAMmG,=
IACtCnG,EAAMuP,EAAOhM,OAASiM,EAAcrJ,EAGtC,IACIlC,GADA4B,EAAM7F,EAAMmG,CAG=
hB,IAAIlI,OAASsR,GAAkBC,EAARrJ,GAAqCnG,EAAdwP,EAE5C,IAAKvL,EAAI4B,EAAM,EA=
AG5B,GAAK,EAAGA,IACxBsL,EAAOtL,EAAIuL,GAAevR,KAAKgG,EAAIkC,OAEhC,IAAU,IAA=
NN,IAAe3H,EAAOmF,oBAE/B,IAAKY,EAAI,EAAO4B,EAAJ5B,EAASA,IACnBsL,EAAOtL,EAA=
IuL,GAAevR,KAAKgG,EAAIkC,OAGrCoJ,GAAOE,KAAKxR,KAAKiF,SAASiD,EAAOA,EAAQN,G=
AAM2J,EAGjD,OAAO3J,IAIT3H,EAAOc,UAAU0Q,KAAO,SAAenG,EAAOpD,EAAOnG,GAKnD,GA=
JKuJ,IAAOA,EAAQ,GACfpD,IAAOA,EAAQ,GACfnG,IAAKA,EAAM/B,KAAKsF,QAEX4C,EAANn=
G,EAAa,KAAM,IAAIyF,YAAW,cAGtC,IAAIzF,IAAQmG,GACQ,IAAhBlI,KAAKsF,OAAT,CAEA=
,GAAY,EAAR4C,GAAaA,GAASlI,KAAKsF,OAAQ,KAAM,IAAIkC,YAAW,sBAC5D,IAAU,EAANzF=
,GAAWA,EAAM/B,KAAKsF,OAAQ,KAAM,IAAIkC,YAAW,oBAEvD,IAAIxB,EACJ,IAAqB,gBAAV=
sF,GACT,IAAKtF,EAAIkC,EAAWnG,EAAJiE,EAASA,IACvBhG,KAAKgG,GAAKsF,MAEP,CACL=
,GAAIJ,GAAQpD,EAAYwD,EAAM7G,YAC1BmD,EAAMsD,EAAM5F,MAChB,KAAKU,EAAIkC,EAAW=
nG,EAAJiE,EAASA,IACvBhG,KAAKgG,GAAKkF,EAAMlF,EAAI4B,GAIxB,MAAO5H,QAOTC,EA=
AOc,UAAU2Q,cAAgB,WAC/B,GAA0B,mBAAfpN,YAA4B,CACrC,GAAIrE,EAAOmF,oBACT,MAAO=
,IAAKnF,GAAOD,MAAOuE,MAG1B,KAAK,GADDoD,GAAM,GAAIrD,YAAWtE,KAAKsF,QACrBU,E=
AAI,EAAG4B,EAAMD,EAAIrC,OAAYsC,EAAJ5B,EAASA,GAAK,EAC9C2B,EAAI3B,GAAKhG,KA=
AKgG,EAEhB,OAAO2B,GAAIpD,OAGb,KAAM,IAAIkC,WAAU,sDAOxB,IAAIkL,GAAK1R,EAAOc=
,SAKhBd,GAAOgH,SAAW,SAAmBnC,GA4DnC,MA3DAA,GAAIE,YAAc/E,EAClB6E,EAAIsC,WAA=
Y,EAGhBtC,EAAI0M,KAAO1M,EAAIsJ,IAGftJ,EAAIoJ,IAAMyD,EAAGzD,IACbpJ,EAAIsJ,=
IAAMuD,EAAGvD,IAEbtJ,EAAIqB,MAAQwL,EAAGxL,MACfrB,EAAIL,SAAWkN,EAAGlN,SACl=
BK,EAAI8M,eAAiBD,EAAGlN,SACxBK,EAAI2J,OAASkD,EAAGlD,OAChB3J,EAAI2I,OAASkE=
,EAAGlE,OAChB3I,EAAImI,QAAU0E,EAAG1E,QACjBnI,EAAI+I,QAAU8D,EAAG9D,QACjB/I=
,EAAIiC,KAAO4K,EAAG5K,KACdjC,EAAIgF,MAAQ6H,EAAG7H,MACfhF,EAAIgK,WAAa6C,EA=
AG7C,WACpBhK,EAAIkK,WAAa2C,EAAG3C,WACpBlK,EAAIqJ,UAAYwD,EAAGxD,UACnBrJ,EA=
AImK,aAAe0C,EAAG1C,aACtBnK,EAAIoK,aAAeyC,EAAGzC,aACtBpK,EAAIqK,aAAewC,EAA=
GxC,aACtBrK,EAAIsK,aAAeuC,EAAGvC,aACtBtK,EAAIuK,UAAYsC,EAAGtC,UACnBvK,EAA=
IyK,UAAYoC,EAAGpC,UACnBzK,EAAI0K,SAAWmC,EAAGnC,SAClB1K,EAAI2K,YAAckC,EAAG=
lC,YACrB3K,EAAI4K,YAAciC,EAAGjC,YACrB5K,EAAI6K,YAAcgC,EAAGhC,YACrB7K,EAAI=
8K,YAAc+B,EAAG/B,YACrB9K,EAAI+K,YAAc8B,EAAG9B,YACrB/K,EAAIiL,YAAc4B,EAAG5=
B,YACrBjL,EAAIkL,aAAe2B,EAAG3B,aACtBlL,EAAImL,aAAe0B,EAAG1B,aACtBnL,EAAIw=
J,WAAaqD,EAAGrD,WACpBxJ,EAAIoL,YAAcyB,EAAGzB,YACrBpL,EAAIqL,YAAcwB,EAAGxB=
,YACrBrL,EAAIuL,cAAgBsB,EAAGtB,cACvBvL,EAAIwL,cAAgBqB,EAAGrB,cACvBxL,EAAI=
yL,cAAgBoB,EAAGpB,cACvBzL,EAAI0L,cAAgBmB,EAAGnB,cACvB1L,EAAI2L,WAAakB,EAA=
GlB,WACpB3L,EAAI8L,WAAae,EAAGf,WACpB9L,EAAI+L,UAAYc,EAAGd,UACnB/L,EAAIgM,=
aAAea,EAAGb,aACtBhM,EAAIiM,aAAeY,EAAGZ,aACtBjM,EAAIkM,aAAeW,EAAGX,aACtBlM=
,EAAImM,aAAeU,EAAGV,aACtBnM,EAAIoM,aAAeS,EAAGT,aACtBpM,EAAIqM,aAAeQ,EAAGR=
,aACtBrM,EAAIsM,cAAgBO,EAAGP,cACvBtM,EAAIuM,cAAgBM,EAAGN,cACvBvM,EAAI2M,K=
AAOE,EAAGF,KACd3M,EAAI4I,QAAUiE,EAAGjE,QACjB5I,EAAI4M,cAAgBC,EAAGD,cAEhB5=
M,EAGT,IAAIuH,IAAoB,uBA6IK1M,KAAKJ,EAASH,EAAoB,GAAGa,OAAS,WAAa,MAAOD,WAI1=
F,SAASR,EAAQD,EAASH,GAE/B,GAAIyS,GAAS,oEAEX,SAAUtS,GACX,YAcA,SAASuS,GAAQC=
,GAChB,GAAIC,GAAOD,EAAIrF,WAAW,EAC1B,OAAIsF,KAASC,GACTD,IAASE,EACL,GACJF,=
IAASG,GACTH,IAASI,EACL,GACGC,EAAPL,EACI,GACGK,EAAS,GAAhBL,EACIA,EAAOK,EAA=
S,GAAK,GAClBC,EAAQ,GAAfN,EACIA,EAAOM,EACJC,EAAQ,GAAfP,EACIA,EAAOO,EAAQ,GA=
DvB,OAID,QAASC,GAAgBC,GAuBxB,QAAS7Q,GAAMyM,GACdvJ,EAAI4N,KAAOrE,EAvBZ,GAA=
IrI,GAAG0F,EAAGiH,EAAGC,EAAKC,EAAc/N,CAEhC,IAAI2N,EAAInN,OAAS,EAAI,EACpB,=
KAAM,IAAIyD,OAAM,iDAQjB,IAAInB,GAAM6K,EAAInN,MACduN,GAAe,MAAQJ,EAAIK,OAAO=
lL,EAAM,GAAK,EAAI,MAAQ6K,EAAIK,OAAOlL,EAAM,GAAK,EAAI,EAGnF9C,EAAM,GAAIiO,=
GAAiB,EAAbN,EAAInN,OAAa,EAAIuN,GAGnCF,EAAIE,EAAe,EAAIJ,EAAInN,OAAS,EAAImN=
,EAAInN,MAE5C,IAAIoN,GAAI,CAMR,KAAK1M,EAAI,EAAG0F,EAAI,EAAOiH,EAAJ3M,EAAO=
A,GAAK,EAAG0F,GAAK,EACtCkH,EAAOd,EAAOW,EAAIK,OAAO9M,KAAO,GAAO8L,EAAOW,EAA=
IK,OAAO9M,EAAI,KAAO,GAAO8L,EAAOW,EAAIK,OAAO9M,EAAI,KAAO,EAAK8L,EAAOW,EAAI=
K,OAAO9M,EAAI,IACnIpE,GAAY,SAANgR,IAAmB,IACzBhR,GAAY,MAANgR,IAAiB,GACvBhR=
,EAAW,IAANgR,EAYN,OATqB,KAAjBC,GACHD,EAAOd,EAAOW,EAAIK,OAAO9M,KAAO,EAAM8L=
,EAAOW,EAAIK,OAAO9M,EAAI,KAAO,EACnEpE,EAAW,IAANgR,IACsB,IAAjBC,IACVD,EAAO=
d,EAAOW,EAAIK,OAAO9M,KAAO,GAAO8L,EAAOW,EAAIK,OAAO9M,EAAI,KAAO,EAAM8L,EAAO=
W,EAAIK,OAAO9M,EAAI,KAAO,EACvGpE,EAAMgR,GAAO,EAAK,KAClBhR,EAAW,IAANgR,IAG=
C9N,EAGR,QAASkO,GAAeC,GAMvB,QAASC,GAAQC,GAChB,MAAOtB,GAAOiB,OAAOK,GAGtB,Q=
AASC,GAAiBD,GACzB,MAAOD,GAAOC,GAAO,GAAK,IAAQD,EAAOC,GAAO,GAAK,IAAQD,EAAOC=
,GAAO,EAAI,IAAQD,EAAa,GAANC,GAV/F,GAAInN,GAGHqN,EAAM/N,EAFNgO,EAAaL,EAAM3=
N,OAAS,EAC5BiO,EAAS,EAYV,KAAKvN,EAAI,EAAGV,EAAS2N,EAAM3N,OAASgO,EAAgBhO,E=
AAJU,EAAYA,GAAK,EAChEqN,GAAQJ,EAAMjN,IAAM,KAAOiN,EAAMjN,EAAI,IAAM,GAAMiN,=
EAAMjN,EAAI,GAC3DuN,GAAUH,EAAgBC,EAI3B,QAAQC,GACP,IAAK,GACJD,EAAOJ,EAAMA,=
EAAM3N,OAAS,GAC5BiO,GAAUL,EAAOG,GAAQ,GACzBE,GAAUL,EAAQG,GAAQ,EAAK,IAC/BE,=
GAAU,IACV,MACD,KAAK,GACJF,GAAQJ,EAAMA,EAAM3N,OAAS,IAAM,GAAM2N,EAAMA,EAAM3=
N,OAAS,GAC9DiO,GAAUL,EAAOG,GAAQ,IACzBE,GAAUL,EAAQG,GAAQ,EAAK,IAC/BE,GAAUL=
,EAAQG,GAAQ,EAAK,IAC/BE,GAAU,IAIZ,MAAOA,GAjHP,GAAIR,GAA6B,mBAAfzO,YACdA,W=
ACAoK,MAEDuD,EAAS,IAAIvF,WAAW,GACxByF,EAAS,IAAIzF,WAAW,GACxB2F,EAAS,IAAI3=
F,WAAW,GACxB6F,EAAS,IAAI7F,WAAW,GACxB4F,EAAS,IAAI5F,WAAW,GACxBwF,EAAgB,IA=
AIxF,WAAW,GAC/B0F,EAAiB,IAAI1F,WAAW,EA0GpCnN,GAAQsN,YAAc2F,EACtBjT,EAAQsK=
,cAAgBmJ,GACSzT,IAK7B,SAASC,EAAQD,GAEtBA,EAAQuQ,KAAO,SAAUvL,EAAQoE,EAAQ6K=
,EAAMC,EAAMC,GACnD,GAAI/Q,GAAG/C,EACH+T,EAAgB,EAATD,EAAaD,EAAO,EAC3BG,GAA=
Q,GAAKD,GAAQ,EACrBE,EAAQD,GAAQ,EAChBE,EAAQ,GACR9N,EAAIwN,EAAQE,EAAS,EAAK,=
EAC1BK,EAAIP,EAAO,GAAK,EAChBQ,EAAIzP,EAAOoE,EAAS3C,EAOxB,KALAA,GAAK+N,EAE=
LpR,EAAIqR,GAAM,IAAOF,GAAU,EAC3BE,KAAQF,EACRA,GAASH,EACFG,EAAQ,EAAGnR,EAA=
Q,IAAJA,EAAU4B,EAAOoE,EAAS3C,GAAIA,GAAK+N,EAAGD,GAAS,GAKrE,IAHAlU,EAAI+C,=
GAAM,IAAOmR,GAAU,EAC3BnR,KAAQmR,EACRA,GAASL,EACFK,EAAQ,EAAGlU,EAAQ,IAAJA,=
EAAU2E,EAAOoE,EAAS3C,GAAIA,GAAK+N,EAAGD,GAAS,GAErE,GAAU,IAANnR,EACFA,EAAI=
,EAAIkR,MACH,CAAA,GAAIlR,IAAMiR,EACf,MAAOhU,GAAIqU,KAAQD,EAAI,GAAK,IAAK7L=
,EAAAA,EAEjCvI,IAAQmK,KAAKuF,IAAI,EAAGmE,GACpB9Q,GAAQkR,EAEV,OAAQG,EAAI,G=
AAK,GAAKpU,EAAImK,KAAKuF,IAAI,EAAG3M,EAAI8Q,IAG5ClU,EAAQ4G,MAAQ,SAAU5B,EA=
AQ+G,EAAO3C,EAAQ6K,EAAMC,EAAMC,GAC3D,GAAI/Q,GAAG/C,EAAGC,EACN8T,EAAgB,EAA=
TD,EAAaD,EAAO,EAC3BG,GAAQ,GAAKD,GAAQ,EACrBE,EAAQD,GAAQ,EAChBM,EAAe,KAATT,=
EAAc1J,KAAKuF,IAAI,EAAG,KAAOvF,KAAKuF,IAAI,EAAG,KAAO,EAC1DtJ,EAAIwN,EAAO,=
EAAKE,EAAS,EACzBK,EAAIP,EAAO,EAAI,GACfQ,EAAY,EAAR1I,GAAwB,IAAVA,GAA2B,EAA=
Z,EAAIA,EAAa,EAAI,CAmC1D,KAjCAA,EAAQvB,KAAKoK,IAAI7I,GAEbnC,MAAMmC,IAAUA,=
IAAUnD,EAAAA,GAC5BvI,EAAIuJ,MAAMmC,GAAS,EAAI,EACvB3I,EAAIiR,IAEJjR,EAAIoH=
,KAAKqG,MAAMrG,KAAKqK,IAAI9I,GAASvB,KAAKsK,KAClC/I,GAASzL,EAAIkK,KAAKuF,I=
AAI,GAAI3M,IAAM,IAClCA,IACA9C,GAAK,GAGLyL,GADE3I,EAAIkR,GAAS,EACNK,EAAKrU=
,EAELqU,EAAKnK,KAAKuF,IAAI,EAAG,EAAIuE,GAE5BvI,EAAQzL,GAAK,IACf8C,IACA9C,=
GAAK,GAGH8C,EAAIkR,GAASD,GACfhU,EAAI,EACJ+C,EAAIiR,GACKjR,EAAIkR,GAAS,GAC=
tBjU,GAAK0L,EAAQzL,EAAI,GAAKkK,KAAKuF,IAAI,EAAGmE,GAClC9Q,GAAQkR,IAERjU,E=
AAI0L,EAAQvB,KAAKuF,IAAI,EAAGuE,EAAQ,GAAK9J,KAAKuF,IAAI,EAAGmE,GACjD9Q,EA=
AI,IAID8Q,GAAQ,EAAGlP,EAAOoE,EAAS3C,GAAS,IAAJpG,EAAUoG,GAAK+N,EAAGnU,GAAK=
,IAAK6T,GAAQ,GAI3E,IAFA9Q,EAAKA,GAAK8Q,EAAQ7T,EAClB+T,GAAQF,EACDE,EAAO,EA=
AGpP,EAAOoE,EAAS3C,GAAS,IAAJrD,EAAUqD,GAAK+N,EAAGpR,GAAK,IAAKgR,GAAQ,GAE1=
EpP,EAAOoE,EAAS3C,EAAI+N,IAAU,IAAJC,IAMvB,SAASxU,EAAQD,GAOtB,GAAIgH,GAAUm=
I,MAAMnI,QAMhB2F,EAAMoI,OAAOvT,UAAU0D,QAmB3BjF,GAAOD,QAAUgH,GAAW,SAAUuH,G=
ACpC,QAAUA,GAAO,kBAAoB5B,EAAIvM,KAAKmO,KAM3C,SAAStO,EAAQD,EAASH,GAI/B,YAk=
CA,SAASmB,GAAWgU,GACnBvU,KAAKuU,gBAAkBA,EAoGxB,QAASC,GAAeC,GACpB,IAAKA,EA=
AQ,MAAO,KAEpB,IAAsB,gBAAXA,IAAuBA,YAAkB7L,QAChD6L,GAAWrR,KAAMqR,EAAQC,MAA=
OD,EAAQE,IAAKF,EAAQG,OAAQH,OAC1D,IAAIA,YAAkB/F,OACzB,GAAsB,IAAlB+F,EAAOnP=
,OACPmP,GAAWrR,KAAMqR,EAAO,GAAIE,IAAKF,EAAO,GAAIC,MAAOD,EAAO,GAAIG,OAAQH,=
EAAO,QAC1E,CAAA,GAAsB,IAAlBA,EAAOnP,OAEX,KAAM,gCADTmP,IAAWrR,KAAMqR,EAAO,=
GAAIE,IAAKF,EAAO,GAAIC,MAAOD,EAAO,GAAIG,OAAQH,EAAO,IAIrF,MAAOA,GAGX,QAASI=
,GAA4BC,GACnCA,EAAcC,sBACZC,WACEC,WAAY,SAASjP,GAAK,MAAO,IACjCkP,WAAY,SAAS=
lP,GAAK,MAAO,IACjCmP,YAAa,SAASnP,GAAK,MAAOA,IAAK,GAAK,GAC5CoP,aAAc,SAASpP=
,EAAGqP,GAAQ,MAAQrP,GAAIqP,EAAKC,MAAMC,OAAOjQ,OAAS,EAAK,EAAI,IAEpFkQ,gBAC=
EP,WAAY,SAASjP,EAAGqP,GACtB,MAAU,KAANrP,GAAWA,IAAMqP,EAAKC,MAAM9R,KAAK8B,=
OAAe,EAC5CU,IAAMqP,EAAKC,MAAMG,WAAc,EAAI,GAE7CP,WAAY,SAASlP,GAAK,MAAO,IAC=
jCmP,YAAa,SAASnP,GACpB,MAAa,KAANA,EAAU,EAAI,GAEvBoP,aAAc,SAASpP,EAAGqP,GA=
CxB,MAAQrP,KAAMqP,EAAKC,MAAMC,OAAOjQ,OAAS,EAAK,EAAI,IAGtDoQ,sBACET,WAAY,S=
AASjP,EAAGqP,GACtB,MAAU,KAANrP,GAAWA,IAAMqP,EAAKC,MAAM9R,KAAK8B,OAAe,EAC5=
CU,IAAMqP,EAAKC,MAAMG,WAAc,EAAI,GAE7CP,WAAY,SAASlP,GAAK,MAAO,IACjC2P,WAAY=
,SAAS3P,GAAK,MAAa,KAANA,EAAU,QAAU,QACrDmP,YAAa,SAASnP,GACpB,MAAa,KAANA,EA=
AU,EAAI,GAEvBoP,aAAc,SAASpP,EAAGqP,GACxB,MAAQrP,KAAMqP,EAAKC,MAAMC,OAAOjQ=
,OAAS,EAAK,EAAI,MAiB1D,QAASsQ,GAAwBC,GAC7B,GAAuB,gBAAZA,IAAwBA,YAAoBjL,QA=
AQ,CAC3D,GAAIkL,GAAOC,EAAMF,EAASG,cAC1B,KAAKF,EAAM,KAAO,aAAeD,EAAW,iBAC5C=
,QAASI,MAAOH,EAAK,GAAII,OAAQJ,EAAK,IAG1C,MAAOD,GAUX,QAASM,GAA+BC,EAAaC,GA=
CpD,GAAIC,GAA0BD,EAAUpV,QAAQ6U,KAAK,GAAKO,EAAUpV,QAAQ6U,KAAK,GAAK,YAAc,UA=
EpG,IAAGM,EAAYP,SAASU,cAAgBD,EAAyB,CAChE,GAAIL,GAAQI,EAAUpV,QAAQ6U,KAAK,G=
AC/BI,EAASG,EAAUpV,QAAQ6U,KAAK,EACpCO,GAAUpV,QAAQ6U,MAAQI,EAAQD,IAIpC,QAA=
SO,GAAYrU,EAAOsU,EAAcJ,GACxCA,EAAUvU,cAAgBK,CAC3B,KAAK,GAAI6D,GAAI,EAAGA,=
EAAI7D,EAAMmD,OAAQU,IAAK,CAClCA,EAAI,IACPmQ,EAA+BhU,EAAM6D,GAAIqQ,GACzCA,=
EAAUK,QAAQL,EAAUpV,SAI3B,KAAI,GADF0V,GAAOxU,EAAM6D,GACP4Q,EAAK,EAAGC,EAAK=
F,EAAKG,MAAMxR,OAAauR,EAALD,EAASA,IAAM,CACnD,GAAIpJ,GAAOmJ,EAAKG,MAAMF,EA=
CtB,QAAOpJ,EAAKrJ,MACV,IAAK,SACD4S,EAAavJ,EAAKA,KAAM6I,EACxB,MACJ,KAAK,OA=
CDW,EAAWxJ,EAAKA,KAAMA,EAAKA,KAAKL,EAAGK,EAAKA,KAAKJ,EAAGiJ,EAChD,MACJ,KA=
AK,QACDY,EAAYzJ,EAAKA,KAAMA,EAAKA,KAAKL,EAAGK,EAAKA,KAAKJ,EAAGiJ,IAIxDM,E=
AAKO,WACNC,EAAgBR,EAAMN,GAGxBI,EAAaW,uBAIjB,QAASJ,GAAWK,EAAMlK,EAAGC,EAAG=
iJ,GAC/BlJ,EAAIA,GAAK,EACTC,EAAIA,GAAK,CAET,IAAIkK,GAAaD,EAAKE,YAClBC,EAA=
iBH,EAAKI,mBAE1BC,GAAcC,eAAeN,EAAMlK,EAAGC,EAAGiJ,EAGzC,KAAI,GAAIrQ,GAAI,=
EAAG2M,EAAI0E,EAAKO,QAAQtS,OAAYqN,EAAJ3M,EAAOA,IAAK,CACnD,GAAI6R,GAASR,EA=
AKO,QAAQ5R,EAE1BqQ,GAAU5E,KAAKoG,EAAOC,OAAS,SAE/BzB,EAAU0B,OACV1B,EAAU2B,=
UAAU,EAAG,EAAG,EAAG,GAAI,EAAG3B,EAAUM,KAAKT,OAGjD,IAAI+B,GAAUJ,EAAOK,KAAK=
hF,OAAO2E,EAAOM,KAC1C9B,GAAU+B,WAAW,MAErB/B,EAAU+B,WAAW,IAAMjL,EAAI0K,EAA=
O1K,GAAK,KAAOkJ,EAAUM,KAAKT,OAAS9I,EAAIoK,GAAkB,OAChGnB,EAAU+B,WAAW,IAAMH=
,EAAQI,OAAS,IAAMR,EAAOS,SAAW,OAE9DjC,EAAU+B,WAAW,IAAMH,EAAQM,YAAc,QAEvDlC=
,EAAU+B,WAAW,MAEjBP,EAAOW,MACVnC,EAAUmC,KAAKrL,EAAI0K,EAAO1K,EAAGkJ,EAAUM=
,KAAKT,OAAS9I,EAAIkK,EAAYO,EAAO5B,MAAOqB,EAAYO,EAAOW,MAGvGnC,EAAUoC,UAGXf=
,EAAcgB,gBAAgBrB,EAAMlK,EAAGC,EAAGiJ,GAI3C,QAASc,GAAgBR,EAAMN,GAC9B,GAAIa=
,GAAYP,EAAKO,SAErBb,GAAU5E,KAAK,SACf4E,EAAUsC,QAAQ,IAElBtC,EAAU0B,OACV1B,=
EAAU2B,UAAU,EAAG,EAAG,EAAG,GAAI,EAAG3B,EAAUM,KAAKT,OAEnD,IAAI0C,GAAkE,IAA=
1D7O,KAAK8O,MAAMxC,EAAUM,KAAKT,OAAQG,EAAUM,KAAKV,OAAalM,KAAK+O,EAC/EzC,GA=
AU0C,OAAOH,GAAQI,QAAS3C,EAAUM,KAAKV,MAAM,EAAGI,EAAUM,KAAKT,OAAO,IAE/E,IAA=
I+B,GAAUf,EAAUgB,KAAKhF,OAAOgE,EAAUiB,KAC/C9B,GAAU+B,WAAW,MACrB/B,EAAU+B,=
WAAW,IAAM/B,EAAUM,KAAKV,MAAM,EAAIiB,EAAUpB,KAAKA,KAAKG,MAAM,GAAK,KAAOI,EA=
AUM,KAAKT,OAAO,EAAIgB,EAAUpB,KAAKA,KAAKI,OAAO,GAAK,OACpJG,EAAU+B,WAAW,IAA=
MH,EAAQI,OAAS,IAAMnB,EAAUpB,KAAKwC,SAAW,OAC5EjC,EAAU+B,WAAW,IAAMH,EAAQM,Y=
AAc,QACjDlC,EAAU+B,WAAW,MACrB/B,EAAUoC,UAGX,QAAS1B,GAAakC,EAAQC,GAc7B,OAZ=
AA,EAAOC,UAAUF,EAAOE,WAAa,GACjCF,EAAOG,KACVF,EAAOE,KAAKH,EAAOG,KAAK9T,QAA=
U+T,MAAOJ,EAAOG,KAAKC,OAASJ,EAAOG,KAAK9T,SAE1E4T,EAAOI,SAERJ,EAAOK,YAAYN,=
EAAOM,aAAe,GACzCL,EAAOM,cAAcP,EAAOO,eAAiB,GAC7CN,EAAOO,SAASR,EAAOQ,UAAY,S=
AI5BR,EAAO9U,MACb,IAAK,UACJ+U,EAAOQ,QAAQT,EAAO9L,EAAG8L,EAAO7L,EAAG6L,EAA=
OU,GAAIV,EAAOW,GACrD,MACD,KAAK,OACAX,EAAOY,EACVX,EAAOY,YAAYb,EAAO9L,EAAG8=
L,EAAO7L,EAAG6L,EAAOc,EAAGd,EAAOe,EAAGf,EAAOY,GAElEX,EAAOe,KAAKhB,EAAO9L,=
EAAG8L,EAAO7L,EAAG6L,EAAOc,EAAGd,EAAOe,EAElD,MACD,KAAK,OACJd,EAAOgB,OAAOj=
B,EAAOkB,GAAIlB,EAAOmB,IAChClB,EAAOmB,OAAOpB,EAAOqB,GAAIrB,EAAOsB,GAChC,M=
ACD,KAAK,WACJ,GAA6B,IAAzBtB,EAAOuB,OAAOlV,OAAc,KAEhC4T,GAAOgB,OAAOjB,EAAO=
uB,OAAO,GAAGrN,EAAG8L,EAAOuB,OAAO,GAAGpN,EACnD,KAAI,GAAIpH,GAAI,EAAG2M,EA=
AIsG,EAAOuB,OAAOlV,OAAYqN,EAAJ3M,EAAOA,IAC/CkT,EAAOmB,OAAOpB,EAAOuB,OAAOx=
U,GAAGmH,EAAG8L,EAAOuB,OAAOxU,GAAGoH,EAGpD,IAAI6L,EAAOuB,OAAOlV,OAAS,EAAG=
,CAC7B,GAAImV,GAAKxB,EAAOuB,OAAO,GACnBE,EAAKzB,EAAOuB,OAAOvB,EAAOuB,OAAOl=
V,OAAS,IAE1C2T,EAAO0B,WAAaF,EAAGtN,IAAMuN,EAAGvN,GAAKsN,EAAGrN,IAAMsN,EAA=
GtN,IACpD8L,EAAOyB,aAMP1B,EAAOnB,OAASmB,EAAO2B,UAC1B1B,EAAO2B,cAAc5B,EAAO=
nB,MAAOmB,EAAO2B,WAChC3B,EAAOnB,MACjBoB,EAAOzH,KAAKwH,EAAOnB,OAEnBoB,EAAO=
4B,OAAO7B,EAAO2B,WAAa,SAIpC,QAAS3D,GAAY8D,EAAO5N,EAAGC,EAAGiJ,GAC9BA,EAAU=
0E,MAAMA,EAAMA,MAAOA,EAAM5N,EAAG4N,EAAM3N,GAAK6I,MAAO8E,EAAMC,OAAQ9E,OAAQ=
6E,EAAME,UAvXxF,GAAIC,GAAI9b,EAAoB,GACxB+b,EAAe/b,EAAoB,GACnCgc,EAAgBhc,E=
AAoB,IACpCic,EAASjc,EAAoB,IAE7B2W,GADe3W,EAAoB,IAC3BA,EAAoB,MAC5Bkc,EAAel=
c,EAAoB,KACnCsY,EAAgBtY,EAAoB,KACpC+b,EAAe/b,EAAoB,EAEvC8b,GAAEK,aAoEFhb,=
EAAWQ,UAAUS,qBAAuB,SAASrB,EAAec,GACnEA,EAAUA,KAEV,IAAI4U,GAAWD,EAAwBzV,EA=
Ac0V,UAAY,KAajE,IAXsC,cAAlC1V,EAAcqb,kBACf3F,GAAaI,MAAOJ,EAASK,OAAQA,OAAQ=
L,EAASI,QAEzDJ,EAASU,YAAgD,cAAlCpW,EAAcqb,gBAAkCrb,EAAcqb,gBAAkB,WAEvGxb,=
KAAKqW,UAAY,GAAIgF,IAASvF,MAAQD,EAASI,MAAOJ,EAASK,QAAUuF,UAAU,IACnFzb,KAA=
KqW,UAAUqF,KAAKC,SAAW,UAC/B3b,KAAKqW,UAAUqF,KAAKE,QAAU,UAI3Bzb,EAAcub,KAA=
K,CACVvb,EAAcub,IAEzB1b,MAAKqW,UAAUqF,KAAKG,MAAQ1b,EAAcub,KAAKI,MAAQ3b,EA=
Acub,KAAKI,MAAQ,KAClF9b,KAAKqW,UAAUqF,KAAKK,OAAS5b,EAAcub,KAAKM,OAAS7b,EA=
Acub,KAAKM,OAAS,KACrFhc,KAAKqW,UAAUqF,KAAKO,QAAU9b,EAAcub,KAAKhU,QAAUvH,E=
AAcub,KAAKhU,QAAU,KACxF1H,KAAKqW,UAAUqF,KAAKQ,SAAW/b,EAAcub,KAAKS,SAAWhc,=
EAAcub,KAAKS,SAAW,KAG5Fnc,KAAKyW,aAAe,GAAI0E,GAAanb,KAAKuU,gBAAiBvU,KAAKq=
W,WAE/DlW,EAAcic,OAASjc,EAAcic,UAEtC,IAAIC,GAAU,GAAIjB,GACjBvF,EACArB,EAA=
erU,EAAcmc,aAAe,IACtC,GAAIhB,GAAatb,KAAKqW,UAAWlW,EAAcic,QAErDvH,GAA4BwH,=
GACxBpb,EAAQsb,cACVF,EAAQtH,qBAAqB9T,EAAQsb,aAGxC,IAAIpa,GAAQka,EAAQG,eAA=
erc,EAAcsc,QAASzc,KAAKyW,aAActW,EAAcuc,WAAcvc,EAAcwc,eAAkBrE,SAAU,GAAIJ,K=
AAM,UAAY/X,EAAcyc,WAAYzc,EAAc0c,OAAQ1c,EAAc2c,OAAQ3c,EAAcic,OAAQjc,EAAc+W=
,UAAW/W,EAAc4c,gBAI5S,IAFAvG,EAAYrU,EAAOnC,KAAKyW,aAAczW,KAAKqW,WAExCpV,E=
AAQ4C,UAAU,CAClB,GAAImZ,GAAiBhd,KAAKqW,UAAU4G,KAClCC,KAAM,SACNC,EAAG,QACH=
C,EAAG,SAELpd,MAAKqW,UAAUgH,MAAMnW,KAAKoW,WAAaN,EACvCA,EAAejb,MAElB,MAAO/=
B,MAAKqW,UAwPb7W,GAAOD,QAAUgB,EAIjBA,EAAWQ,UAAUK,GAAKhC,EAAoB,KAKzC,SAASI=
,EAAQD,EAASH,GAE/B,GAAIme,IAA0D,SAAS/d,EAAQO,IAS7E,WAqRA,QAASyd,GAAqBlS,E=
AAOmS,GACnC,GAAInS,IAAUmS,EAAO,CACnB,GAAIC,GAAsB,OAAVpS,EACZqS,EAAarS,IAA=
U9F,EACvBoY,EAAiBtS,IAAUA,EAE3BuS,EAAsB,OAAVJ,EACZK,EAAaL,IAAUjY,EACvBuY,=
EAAiBN,IAAUA,CAE/B,IAAKnS,EAAQmS,IAAUI,IAAeD,GACjCF,IAAcI,GAAcC,GAC5BJ,GA=
AcI,EACjB,MAAO,EAET,IAAaN,EAARnS,IAAkBoS,IAAeK,GACjCF,IAAcF,GAAcC,GAC5BE,=
GAAcF,EACjB,MAAO,GAGX,MAAO,GAaT,QAASI,GAAchX,EAAOiX,EAAWC,GAIvC,IAHA,GAAI=
5Y,GAAS0B,EAAM1B,OACf6Y,EAAQD,EAAY5Y,EAAS,GAEzB4Y,EAAYC,MAAYA,EAAQ7Y,GACt=
C,GAAI2Y,EAAUjX,EAAMmX,GAAQA,EAAOnX,GACjC,MAAOmX,EAGX,OAAO,GAYT,QAASC,GAA=
YpX,EAAOsE,EAAO+S,GACjC,GAAI/S,IAAUA,EACZ,MAAOgT,GAAWtX,EAAOqX,EAK3B,KAHA=
,GAAIF,GAAQE,EAAY,EACpB/Y,EAAS0B,EAAM1B,SAEV6Y,EAAQ7Y,GACf,GAAI0B,EAAMmX,=
KAAW7S,EACnB,MAAO6S,EAGX,OAAO,GAWT,QAASI,GAAejT,GAGtB,MAAuB,kBAATA,KAAuB,=
EAWvC,QAASkT,GAAalT,GACpB,MAAgB,OAATA,EAAgB,GAAMA,EAAQ,GAYvC,QAASmT,GAAex=
Y,EAAQyY,GAI9B,IAHA,GAAIP,GAAQ,GACR7Y,EAASW,EAAOX,SAEX6Y,EAAQ7Y,GAAUoZ,EA=
AM7Q,QAAQ5H,EAAO6M,OAAOqL,IAAU,KACjE,MAAOA,GAYT,QAASQ,GAAgB1Y,EAAQyY,GAG/=
B,IAFA,GAAIP,GAAQlY,EAAOX,OAEZ6Y,KAAWO,EAAM7Q,QAAQ5H,EAAO6M,OAAOqL,IAAU,K=
ACxD,MAAOA,GAYT,QAASS,GAAiBxY,EAAQqX,GAChC,MAAOD,GAAqBpX,EAAOyY,SAAUpB,EA=
AMoB,WAAczY,EAAO+X,MAAQV,EAAMU,MAiBxF,QAASW,GAAgB1Y,EAAQqX,EAAOsB,GAOtC,I=
ANA,GAAIZ,GAAQ,GACRa,EAAc5Y,EAAOyY,SACrBI,EAAcxB,EAAMoB,SACpBvZ,EAAS0Z,EA=
AY1Z,OACrB4Z,EAAeH,EAAOzZ,SAEjB6Y,EAAQ7Y,GAAQ,CACvB,GAAIhE,GAASkc,EAAqBwB=
,EAAYb,GAAQc,EAAYd,GAClE,IAAI7c,EAAQ,CACV,GAAI6c,GAASe,EACX,MAAO5d,EAET,I=
AAI6d,GAAQJ,EAAOZ,EACnB,OAAO7c,IAAqB,QAAV6d,GAAmBA,KAAU,EAAQ,EAAI,KAU/D,M=
AAO/Y,GAAO+X,MAAQV,EAAMU,MAU9B,QAASiB,GAAaC,GACpB,MAAOC,IAAgBD,GAUzB,QAAS=
E,GAAeC,GACtB,MAAOC,IAAYD,GAYrB,QAASE,GAAiBF,EAAKG,EAAaC,GAM1C,MALID,GACF=
H,EAAMK,GAAcL,GACXI,IACTJ,EAAMM,GAAcN,IAEf,KAAOA,EAUhB,QAASO,GAAiBP,GACxB=
,MAAO,KAAOM,GAAcN,GAY9B,QAASlB,GAAWtX,EAAOqX,EAAWH,GAIpC,IAHA,GAAI5Y,GAAS=
0B,EAAM1B,OACf6Y,EAAQE,GAAaH,EAAY,EAAI,IAEjCA,EAAYC,MAAYA,EAAQ7Y,GAAS,CAC=
/C,GAAImY,GAAQzW,EAAMmX,EAClB,IAAIV,IAAUA,EACZ,MAAOU,GAGX,MAAO,GAUT,QAAS6=
B,GAAa1U,GACpB,QAASA,GAAyB,gBAATA,GAW3B,QAAS2U,GAAQC,GACf,MAAqB,MAAZA,GAA=
oBA,GAAY,GAAiB,IAAZA,GAA+B,IAAZA,GAA8B,KAAZA,GAAgC,MAAZA,GAAgC,MAAZA,GACx=
HA,GAAY,OAAqB,MAAZA,GAAgC,MAAZA,GAAgC,MAAZA,GAAgC,MAAZA,GAAgC,MAAZA,GAAgC=
,OAAZA,GAAiC,OAAZA,GAYnJ,QAASC,GAAenZ,EAAOoZ,GAM7B,IALA,GAAIjC,GAAQ,GACR7=
Y,EAAS0B,EAAM1B,OACf+a,EAAW,GACX/e,OAEK6c,EAAQ7Y,GACX0B,EAAMmX,KAAWiC,IAC=
nBpZ,EAAMmX,GAASmC,EACfhf,IAAS+e,GAAYlC,EAGzB,OAAO7c,GAYT,QAASif,GAAWvZ,E=
AAOwZ,GAOzB,IANA,GAAIC,GACAtC,EAAQ,GACR7Y,EAAS0B,EAAM1B,OACf+a,EAAW,GACX/=
e,OAEK6c,EAAQ7Y,GAAQ,CACvB,GAAIgG,GAAQtE,EAAMmX,GACduC,EAAWF,EAAWA,EAASlV=
,EAAO6S,EAAOnX,GAASsE,CAErD6S,IAASsC,IAASC,IACrBD,EAAOC,EACPpf,IAAS+e,GAA=
Y/U,GAGzB,MAAOhK,GAWT,QAASqf,GAAiB1a,GAIxB,IAHA,GAAIkY,GAAQ,GACR7Y,EAASW,=
EAAOX,SAEX6Y,EAAQ7Y,GAAU2a,EAAQha,EAAOyG,WAAWyR,MACrD,MAAOA,GAWT,QAASyC,G=
AAkB3a,GAGzB,IAFA,GAAIkY,GAAQlY,EAAOX,OAEZ6Y,KAAW8B,EAAQha,EAAOyG,WAAWyR,=
MAC5C,MAAOA,GAUT,QAAS0C,GAAiBrB,GACxB,MAAOsB,IAActB,GAwCvB,QAASuB,GAAaC,G=
AgMpB,QAASC,GAAO3V,GACd,GAAI0U,EAAa1U,KAAW/E,GAAQ+E,MAAYA,YAAiB4V,IAAc,CA=
C7E,GAAI5V,YAAiB6V,GACnB,MAAO7V,EAET,IAAI8V,GAAezhB,KAAK2L,EAAO,cAAgB8V,G=
AAezhB,KAAK2L,EAAO,eACxE,MAAO+V,IAAa/V,GAGxB,MAAO,IAAI6V,GAAc7V,GAQ3B,QAA=
SgW,MAYT,QAASH,GAAc7V,EAAOiW,EAAUC,GACtCxhB,KAAKyhB,YAAcnW,EACnBtL,KAAK0h=
B,YAAcF,MACnBxhB,KAAK2hB,YAAcJ,EAiFrB,QAASL,GAAY5V,GACnBtL,KAAKyhB,YAAcnW=
,EACnBtL,KAAK0hB,eACL1hB,KAAK4hB,QAAU,EACf5hB,KAAK6hB,cAAe,EACpB7hB,KAAK8=
hB,iBACL9hB,KAAK+hB,cAAgBC,GACrBhiB,KAAKiiB,aAWP,QAASC,KACP,GAAI5gB,GAAS,=
GAAI4f,GAAYlhB,KAAKyhB,YAOlC,OANAngB,GAAOogB,YAAcS,GAAUniB,KAAK0hB,aACpCp=
gB,EAAOsgB,QAAU5hB,KAAK4hB,QACtBtgB,EAAOugB,aAAe7hB,KAAK6hB,aAC3BvgB,EAAO=
wgB,cAAgBK,GAAUniB,KAAK8hB,eACtCxgB,EAAOygB,cAAgB/hB,KAAK+hB,cAC5BzgB,EAA=
O2gB,UAAYE,GAAUniB,KAAKiiB,WAC3B3gB,EAWT,QAAS8gB,KACP,GAAIpiB,KAAK6hB,aAA=
c,CACrB,GAAIvgB,GAAS,GAAI4f,GAAYlhB,KAC7BsB,GAAOsgB,QAAU,GACjBtgB,EAAOugB=
,cAAe,MAEtBvgB,GAAStB,KAAKqiB,QACd/gB,EAAOsgB,SAAW,EAEpB,OAAOtgB,GAWT,QAA=
SghB,MACP,GAAItb,GAAQhH,KAAKyhB,YAAYnW,QACzBiX,EAAMviB,KAAK4hB,QACXY,EAAQ=
jc,GAAQS,GAChByb,EAAgB,EAANF,EACVG,EAAYF,EAAQxb,EAAM1B,OAAS,EACnCqd,EAAOC=
,GAAQ,EAAGF,EAAW1iB,KAAKiiB,WAClC/Z,EAAQya,EAAKza,MACbnG,EAAM4gB,EAAK5gB,=
IACXuD,EAASvD,EAAMmG,EACfiW,EAAQsE,EAAU1gB,EAAOmG,EAAQ,EACjC2a,EAAY7iB,KA=
AK8hB,cACjBgB,EAAaD,EAAUvd,OACvB+a,EAAW,EACX0C,EAAYC,GAAU1d,EAAQtF,KAAK+h=
B,cAEvC,KAAKS,GAAqBS,EAAZP,GAAiCA,GAAapd,GAAUyd,GAAazd,EACjF,MAAO4d,IAAkB=
T,GAAWD,EAASxb,EAAMmc,UAAYnc,EAAOhH,KAAK0hB,YAE7E,IAAIpgB,KAEJ8hB,GACA,KA=
AO9d,KAAuByd,EAAX1C,GAAsB,CACvClC,GAASoE,CAKT,KAHA,GAAIc,GAAY,GACZ/X,EAAQ=
tE,EAAMmX,KAETkF,EAAYP,GAAY,CAC/B,GAAI5b,GAAO2b,EAAUQ,GACjB7C,EAAWtZ,EAAK=
sZ,SAChBrc,EAAO+C,EAAK/C,KACZuc,EAAWF,EAASlV,EAExB,IAAInH,GAAQmf,EACVhY,E=
AAQoV,MACH,KAAKA,EAAU,CACpB,GAAIvc,GAAQof,EACV,QAASH,EAET,MAAMA,IAIZ9hB,E=
AAO+e,KAAc/U,EAEvB,MAAOhK,GAaT,QAASkiB,MACPxjB,KAAKyjB,YAYP,QAASC,IAAUC,G=
ACjB,MAAO3jB,MAAK4jB,IAAID,UAAe3jB,MAAKyjB,SAASE,GAY/C,QAASE,IAAOF,GACd,M=
AAc,aAAPA,EAAqBne,EAAYxF,KAAKyjB,SAASE,GAYxD,QAASG,IAAOH,GACd,MAAc,aAAPA,=
GAAsBvC,GAAezhB,KAAKK,KAAKyjB,SAAUE,GAalE,QAASI,IAAOJ,EAAKrY,GAInB,MAHW,a=
AAPqY,IACF3jB,KAAKyjB,SAASE,GAAOrY,GAEhBtL,KAYT,QAASgkB,IAASC,GAChB,GAAI3=
e,GAAS2e,EAASA,EAAO3e,OAAS,CAGtC,KADAtF,KAAKkH,MAASgd,KAAQC,GAAa,MAAO/V,I=
AAO,GAAIgW,KAC9C9e,KACLtF,KAAK4B,KAAKqiB,EAAO3e,IAarB,QAAS+e,IAAaC,EAAOhZ=
,GAC3B,GAAIpE,GAAOod,EAAMpd,KACb5F,EAA0B,gBAATgK,IAAqBiZ,GAASjZ,GAAUpE,EA=
AKkH,IAAIwV,IAAItY,GAASpE,EAAKgd,KAAK5Y,EAE7F,OAAOhK,GAAS,EAAI,GAWtB,QAAS=
kjB,IAAUlZ,GACjB,GAAIpE,GAAOlH,KAAKkH,IACI,iBAAToE,IAAqBiZ,GAASjZ,GACvCpE=
,EAAKkH,IAAIqW,IAAInZ,GAEbpE,EAAKgd,KAAK5Y,IAAS,EAcvB,QAASoZ,IAAY1d,EAAOy=
W,GAO1B,IANA,GAAIU,GAAQ,GACR7Y,EAAS0B,EAAM1B,OACfqf,EAAW,GACXC,EAAYnH,EAA=
MnY,OAClBhE,EAASoN,GAAMpJ,EAASsf,KAEnBzG,EAAQ7Y,GACfhE,EAAO6c,GAASnX,EAAM=
mX,EAExB,QAASwG,EAAWC,GAClBtjB,EAAO6c,KAAWV,EAAMkH,EAE1B,OAAOrjB,GAWT,QAA=
S6gB,IAAU0C,EAAQ7d,GACzB,GAAImX,GAAQ,GACR7Y,EAASuf,EAAOvf,MAGpB,KADA0B,IA=
AUA,EAAQ0H,GAAMpJ,MACf6Y,EAAQ7Y,GACf0B,EAAMmX,GAAS0G,EAAO1G,EAExB,OAAOnX,=
GAYT,QAAS8d,IAAU9d,EAAOwZ,GAIxB,IAHA,GAAIrC,GAAQ,GACR7Y,EAAS0B,EAAM1B,SAE=
V6Y,EAAQ7Y,GACXkb,EAASxZ,EAAMmX,GAAQA,EAAOnX,MAAW,IAI/C,MAAOA,GAYT,QAAS+d=
,IAAe/d,EAAOwZ,GAG7B,IAFA,GAAIlb,GAAS0B,EAAM1B,OAEZA,KACDkb,EAASxZ,EAAM1B=
,GAASA,EAAQ0B,MAAW,IAIjD,MAAOA,GAaT,QAASge,IAAWhe,EAAOiX,GAIzB,IAHA,GAAIE=
,GAAQ,GACR7Y,EAAS0B,EAAM1B,SAEV6Y,EAAQ7Y,GACf,IAAK2Y,EAAUjX,EAAMmX,GAAQA,=
EAAOnX,GAClC,OAAO,CAGX,QAAO,EAcT,QAASie,IAAcje,EAAOwZ,EAAU0E,EAAYC,GAMlD,=
IALA,GAAIhH,GAAQ,GACR7Y,EAAS0B,EAAM1B,OACfob,EAAWyE,EACX7jB,EAASof,IAEJvC=
,EAAQ7Y,GAAQ,CACvB,GAAIgG,GAAQtE,EAAMmX,GACdiH,GAAW5E,EAASlV,EAEpB4Z,GAAW=
E,EAAS1E,KACtBA,EAAW0E,EACX9jB,EAASgK,GAGb,MAAOhK,GAYT,QAAS+jB,IAAYre,EAA=
OiX,GAM1B,IALA,GAAIE,GAAQ,GACR7Y,EAAS0B,EAAM1B,OACf+a,EAAW,GACX/e,OAEK6c,=
EAAQ7Y,GAAQ,CACvB,GAAIgG,GAAQtE,EAAMmX,EACdF,GAAU3S,EAAO6S,EAAOnX,KAC1B1F=
,IAAS+e,GAAY/U,GAGzB,MAAOhK,GAYT,QAASgkB,IAASte,EAAOwZ,GAKvB,IAJA,GAAIrC,=
GAAQ,GACR7Y,EAAS0B,EAAM1B,OACfhE,EAASoN,GAAMpJ,KAEV6Y,EAAQ7Y,GACfhE,EAAO6=
c,GAASqC,EAASxZ,EAAMmX,GAAQA,EAAOnX,EAEhD,OAAO1F,GAWT,QAASikB,IAAUve,EAAO=
id,GAKxB,IAJA,GAAI9F,GAAQ,GACR7Y,EAAS2e,EAAO3e,OAChBqD,EAAS3B,EAAM1B,SAEV=
6Y,EAAQ7Y,GACf0B,EAAM2B,EAASwV,GAAS8F,EAAO9F,EAEjC,OAAOnX,GAeT,QAASwe,IAA=
Yxe,EAAOwZ,EAAUiF,EAAaC,GACjD,GAAIvH,GAAQ,GACR7Y,EAAS0B,EAAM1B,MAKnB,KAHI=
ogB,GAAiBpgB,IACnBmgB,EAAcze,IAAQmX,MAEfA,EAAQ7Y,GACfmgB,EAAcjF,EAASiF,EA=
Aaze,EAAMmX,GAAQA,EAAOnX,EAE3D,OAAOye,GAeT,QAASE,IAAiB3e,EAAOwZ,EAAUiF,EA=
AaC,GACtD,GAAIpgB,GAAS0B,EAAM1B,MAInB,KAHIogB,GAAiBpgB,IACnBmgB,EAAcze,IA=
AQ1B,IAEjBA,KACLmgB,EAAcjF,EAASiF,EAAaze,EAAM1B,GAASA,EAAQ0B,EAE7D,OAAOye=
,GAaT,QAASG,IAAU5e,EAAOiX,GAIxB,IAHA,GAAIE,GAAQ,GACR7Y,EAAS0B,EAAM1B,SAEV=
6Y,EAAQ7Y,GACf,GAAI2Y,EAAUjX,EAAMmX,GAAQA,EAAOnX,GACjC,OAAO,CAGX,QAAO,EAY=
T,QAAS6e,IAAS7e,EAAOwZ,GAIvB,IAHA,GAAIlb,GAAS0B,EAAM1B,OACfhE,EAAS,EAENgE=
,KACLhE,IAAWkf,EAASxZ,EAAM1B,KAAY,CAExC,OAAOhE,GAWT,QAASwkB,IAAeC,EAAaC,G=
ACnC,MAAOD,KAAgBvgB,EAAYwgB,EAAcD,EAgBnD,QAASE,IAAkBF,EAAaC,EAAarC,EAAKvd=
,GACxD,MAAQ2f,KAAgBvgB,GAAc4b,GAAezhB,KAAKyG,EAAQud,GAE9DoC,EADAC,EAeN,QA=
ASE,IAAW9f,EAAQye,EAAQsB,GAKlC,IAJA,GAAIhI,GAAQ,GACRiI,EAAQC,GAAKxB,GACbv=
f,EAAS8gB,EAAM9gB,SAEV6Y,EAAQ7Y,GAAQ,CACvB,GAAIqe,GAAMyC,EAAMjI,GACZ7S,EA=
AQlF,EAAOud,GACfriB,EAAS6kB,EAAW7a,EAAOuZ,EAAOlB,GAAMA,EAAKvd,EAAQye,IAEp=
DvjB,IAAWA,EAAUA,IAAWgK,EAAUA,IAAUA,KACpDA,IAAU9F,GAAeme,IAAOvd,MACnCA,EA=
AOud,GAAOriB,GAGlB,MAAO8E,GAYT,QAASkgB,IAAWlgB,EAAQye,GAC1B,MAAiB,OAAVA,E=
ACHze,EACAmgB,GAAS1B,EAAQwB,GAAKxB,GAASze,GAYrC,QAASogB,IAAOC,EAAYL,GAQ1B=
,IAPA,GAAIjI,GAAQ,GACRuI,EAAsB,MAAdD,EACRjE,GAASkE,GAASC,GAAYF,GAC9BnhB,E=
AASkd,EAAQiE,EAAWnhB,OAAS,EACrCshB,EAAcR,EAAM9gB,OACpBhE,EAASoN,GAAMkY,KA=
EXzI,EAAQyI,GAAa,CAC3B,GAAIjD,GAAMyC,EAAMjI,EACZqE,GACFlhB,EAAO6c,GAAS0I,=
GAAQlD,EAAKre,GAAUmhB,EAAW9C,GAAOne,EAEzDlE,EAAO6c,GAASuI,EAAQlhB,EAAYihB=
,EAAW9C,GAGnD,MAAOriB,GAYT,QAASilB,IAAS1B,EAAQuB,EAAOhgB,GAC/BA,IAAWA,KAK=
X,KAHA,GAAI+X,GAAQ,GACR7Y,EAAS8gB,EAAM9gB,SAEV6Y,EAAQ7Y,GAAQ,CACvB,GAAIqe=
,GAAMyC,EAAMjI,EAChB/X,GAAOud,GAAOkB,EAAOlB,GAEvB,MAAOvd,GAaT,QAAS0gB,IAA=
aC,EAAMC,EAASC,GACnC,GAAI9iB,SAAc4iB,EAClB,OAAY,YAAR5iB,EACK6iB,IAAYxhB,E=
ACfuhB,EACAG,GAAaH,EAAMC,EAASC,GAEtB,MAARF,EACKI,GAEG,UAARhjB,EACKijB,GAA=
YL,GAEdC,IAAYxhB,EACf6hB,GAASN,GACTO,GAAoBP,EAAMC,GAiBhC,QAASO,IAAUjc,EAA=
Okc,EAAQrB,EAAYxC,EAAKvd,EAAQqhB,EAAQC,GACjE,GAAIpmB,EAIJ,IAHI6kB,IACF7kB=
,EAAS8E,EAAS+f,EAAW7a,EAAOqY,EAAKvd,GAAU+f,EAAW7a,IAE5DhK,IAAWkE,EACb,MAA=
OlE,EAET,KAAKijB,GAASjZ,GACZ,MAAOA,EAET,IAAIkX,GAAQjc,GAAQ+E,EACpB,IAAIkX=
,GAEF,GADAlhB,EAASqmB,GAAerc,IACnBkc,EACH,MAAOrF,IAAU7W,EAAOhK,OAErB,CACL=
,GAAIsmB,GAAMC,GAAYloB,KAAK2L,GACvBwc,EAASF,GAAOG,CAEpB,IAAIH,GAAOI,IAAaJ=
,GAAOK,KAAYH,GAAW1hB,GAMpD,MAAO8hB,IAAcN,GACjBO,GAAe7c,EAAOsc,EAAKJ,GAC1B=
phB,EAASkF,IANd,IADAhK,EAAS8mB,GAAgBN,KAAcxc,IAClCkc,EACH,MAAOlB,IAAWhlB,=
EAAQgK,GAShCmc,IAAWA,MACXC,IAAWA,KAGX,KADA,GAAIpiB,GAASmiB,EAAOniB,OACbA,=
KACL,GAAImiB,EAAOniB,IAAWgG,EACpB,MAAOoc,GAAOpiB,EAWlB,OAPAmiB,GAAO7lB,KA=
AK0J,GACZoc,EAAO9lB,KAAKN,IAGXkhB,EAAQsC,GAAYuD,IAAY/c,EAAO,SAASgd,EAAU3E=
,GACzDriB,EAAOqiB,GAAO4D,GAAUe,EAAUd,EAAQrB,EAAYxC,EAAKrY,EAAOmc,EAAQC,KA=
ErEpmB,EAiCT,QAASinB,IAAUxB,EAAMyB,EAAMC,GAC7B,GAAmB,kBAAR1B,GACT,KAAM,IA=
AItgB,IAAUiiB,EAEtB,OAAOC,IAAW,WAAa5B,EAAKjc,MAAMtF,EAAWijB,IAAUD,GAYjE,Q=
AASI,IAAe5hB,EAAOid,GAC7B,GAAI3e,GAAS0B,EAAQA,EAAM1B,OAAS,EAChChE,IAEJ,KA=
AKgE,EACH,MAAOhE,EAET,IAAI6c,GAAQ,GACRtQ,EAAUgb,KACVC,EAAWjb,GAAWuQ,EACtB=
kG,EAASwE,GAAY7E,EAAO3e,QAAU2d,EAAoB8F,GAAY9E,GAAU,KAChF+E,EAAe/E,EAAO3e,=
MAEtBgf,KACFzW,EAAUwW,GACVyE,GAAW,EACX7E,EAASK,EAEXlB,GACA,OAASjF,EAAQ7Y,=
GAAQ,CACvB,GAAIgG,GAAQtE,EAAMmX,EAElB,IAAI2K,GAAYxd,IAAUA,EAAO,CAE/B,IADA=
,GAAI2d,GAAcD,EACXC,KACL,GAAIhF,EAAOgF,KAAiB3d,EAC1B,QAAS8X,EAGb9hB,GAAOM=
,KAAK0J,OAELuC,GAAQoW,EAAQ3Y,EAAO,GAAK,GACnChK,EAAOM,KAAK0J,GAGhB,MAAOhK,=
GAmCT,QAAS4nB,IAAUzC,EAAYxI,GAC7B,GAAI3c,IAAS,CAKb,OAJA6nB,IAAS1C,EAAY,SA=
ASnb,EAAO6S,EAAOsI,GAE1C,MADAnlB,KAAW2c,EAAU3S,EAAO6S,EAAOsI,KAG9BnlB,EAe=
T,QAAS8nB,IAAa3C,EAAYjG,EAAU0E,EAAYC,GACtD,GAAIzE,GAAWyE,EACX7jB,EAASof,C=
ASb,OAPAyI,IAAS1C,EAAY,SAASnb,EAAO6S,EAAOsI,GAC1C,GAAIrB,IAAW5E,EAASlV,EA=
AO6S,EAAOsI,IAClCvB,EAAWE,EAAS1E,IAAc0E,IAAYD,GAAWC,IAAY9jB,KACvEof,EAAW0=
E,EACX9jB,EAASgK,KAGNhK,EAaT,QAAS+nB,IAASriB,EAAOsE,EAAOpD,EAAOnG,GACrC,G=
AAIuD,GAAS0B,EAAM1B,MAanB,KAXA4C,EAAiB,MAATA,EAAgB,GAAMA,GAAS,EAC3B,EAARA=
,IACFA,GAASA,EAAQ5C,EAAS,EAAKA,EAAS4C,GAE1CnG,EAAOA,IAAQyD,GAAazD,EAAMuD,=
EAAUA,GAAWvD,GAAO,EACpD,EAANA,IACFA,GAAOuD,GAETA,EAAS4C,EAAQnG,EAAM,EAAKA=
,IAAQ,EACpCmG,KAAW,EAEI5C,EAAR4C,GACLlB,EAAMkB,KAAWoD,CAEnB,OAAOtE,GAYT,Q=
AASsiB,IAAW7C,EAAYxI,GAC9B,GAAI3c,KAMJ,OALA6nB,IAAS1C,EAAY,SAASnb,EAAO6S,=
EAAOsI,GACtCxI,EAAU3S,EAAO6S,EAAOsI,IAC1BnlB,EAAOM,KAAK0J,KAGThK,EAgBT,QA=
ASioB,IAAS9C,EAAYxI,EAAWuL,EAAUC,GACjD,GAAInoB,EAOJ,OANAkoB,GAAS/C,EAAY,S=
AASnb,EAAOqY,EAAK8C,GACxC,MAAIxI,GAAU3S,EAAOqY,EAAK8C,IACxBnlB,EAASmoB,EA=
AS9F,EAAMrY,GACjB,GAFT,SAKKhK,EAcT,QAASooB,IAAY1iB,EAAOwgB,EAAQmC,EAAUroB=
,GAC5CA,IAAWA,KAKX,KAHA,GAAI6c,GAAQ,GACR7Y,EAAS0B,EAAM1B,SAEV6Y,EAAQ7Y,GA=
AQ,CACvB,GAAIgG,GAAQtE,EAAMmX,EACd6B,GAAa1U,IAAUqb,GAAYrb,KAClCqe,GAAYpjB=
,GAAQ+E,IAAUse,GAAYte,IACzCkc,EAEFkC,GAAYpe,EAAOkc,EAAQmC,EAAUroB,GAErCik=
B,GAAUjkB,EAAQgK,GAEVqe,IACVroB,EAAOA,EAAOgE,QAAUgG,GAG5B,MAAOhK,GAsCT,QA=
ASuoB,IAAUzjB,EAAQoa,GACzB,MAAOsJ,IAAQ1jB,EAAQoa,EAAUuJ,IAYnC,QAAS1B,IAAW=
jiB,EAAQoa,GAC1B,MAAOsJ,IAAQ1jB,EAAQoa,EAAU6F,IAYnC,QAAS2D,IAAgB5jB,EAAQo=
a,GAC/B,MAAOyJ,IAAa7jB,EAAQoa,EAAU6F,IAYxC,QAAS6D,IAAc9jB,EAAQggB,GAM7B,I=
ALA,GAAIjI,GAAQ,GACR7Y,EAAS8gB,EAAM9gB,OACf+a,EAAW,GACX/e,OAEK6c,EAAQ7Y,G=
AAQ,CACvB,GAAIqe,GAAMyC,EAAMjI,EACZgM,IAAW/jB,EAAOud,MACpBriB,IAAS+e,GAAY=
sD,GAGzB,MAAOriB,GAaT,QAAS8oB,IAAQhkB,EAAQikB,EAAMC,GAC7B,GAAc,MAAVlkB,EA=
AJ,CAGIkkB,IAAY9kB,GAAa8kB,IAAWC,IAASnkB,KAC/CikB,GAAQC,GAKV,KAHA,GAAInM,=
GAAQ,EACR7Y,EAAS+kB,EAAK/kB,OAED,MAAVc,GAA0Bd,EAAR6Y,GACvB/X,EAASA,EAAOik=
B,EAAKlM,KAEvB,OAAQA,IAASA,GAAS7Y,EAAUc,EAASZ,GAgB/C,QAASglB,IAAYlf,EAAOm=
S,EAAO0I,EAAYsE,EAAShD,EAAQC,GAC9D,MAAIpc,KAAUmS,GACL,EAEI,MAATnS,GAA0B,M=
AATmS,IAAmB8G,GAASjZ,KAAW0U,EAAavC,GAChEnS,IAAUA,GAASmS,IAAUA,EAE/BiN,GAA=
gBpf,EAAOmS,EAAO+M,GAAarE,EAAYsE,EAAShD,EAAQC,GAkBjF,QAASgD,IAAgBtkB,EAAQ=
qX,EAAOkN,EAAWxE,EAAYsE,EAAShD,EAAQC,GAC9E,GAAIkD,GAAWrkB,GAAQH,GACnBykB,=
EAAWtkB,GAAQkX,GACnBqN,EAASC,EACTC,EAASD,CAERH,KACHE,EAASjD,GAAYloB,KAAKy=
G,GACtB0kB,GAAU7C,EACZ6C,EAAS9C,GACA8C,GAAU9C,KACnB4C,EAAWK,GAAa7kB,KAGvB=
ykB,IACHG,EAASnD,GAAYloB,KAAK8d,GACtBuN,GAAU/C,EACZ+C,EAAShD,GACAgD,GAAUh=
D,KACnB6C,EAAWI,GAAaxN,IAG5B,IAAIyN,GAAWJ,GAAU9C,GACrBmD,EAAWH,GAAUhD,GAC=
rBoD,EAAYN,GAAUE,CAE1B,IAAII,IAAeR,IAAYM,EAC7B,MAAOG,IAAWjlB,EAAQqX,EAAOq=
N,EAEnC,KAAKL,EAAS,CACZ,GAAIa,GAAeJ,GAAY9J,GAAezhB,KAAKyG,EAAQ,eACvDmlB,E=
AAeJ,GAAY/J,GAAezhB,KAAK8d,EAAO,cAE1D,IAAI6N,GAAgBC,EAClB,MAAOZ,GAAUW,EAA=
ellB,EAAOkF,QAAUlF,EAAQmlB,EAAe9N,EAAMnS,QAAUmS,EAAO0I,EAAYsE,EAAShD,EAAQ=
C,GAGhI,IAAK0D,EACH,OAAO,CAIT3D,KAAWA,MACXC,IAAWA,KAGX,KADA,GAAIpiB,GAASm=
iB,EAAOniB,OACbA,KACL,GAAImiB,EAAOniB,IAAWc,EACpB,MAAOshB,GAAOpiB,IAAWmY,=
CAI7BgK,GAAO7lB,KAAKwE,GACZshB,EAAO9lB,KAAK6b,EAEZ,IAAInc,IAAUspB,EAAWY,G=
AAcC,IAAcrlB,EAAQqX,EAAOkN,EAAWxE,EAAYsE,EAAShD,EAAQC,EAK5G,OAHAD,GAAOiE,=
MACPhE,EAAOgE,MAEApqB,EAaT,QAASqqB,IAAYvlB,EAAQwlB,EAAWzF,GACtC,GAAIhI,GA=
AQyN,EAAUtmB,OAClBA,EAAS6Y,EACT0N,GAAgB1F,CAEpB,IAAc,MAAV/f,EACF,OAAQd,CA=
GV,KADAc,EAASmkB,GAASnkB,GACX+X,KAAS,CACd,GAAIjX,GAAO0kB,EAAUzN,EACrB,IAA=
K0N,GAAgB3kB,EAAK,GAClBA,EAAK,KAAOd,EAAOc,EAAK,MACtBA,EAAK,IAAMd,IAEnB,OA=
AO,EAGX,OAAS+X,EAAQ7Y,GAAQ,CACvB4B,EAAO0kB,EAAUzN,EACjB,IAAIwF,GAAMzc,EAA=
K,GACX4kB,EAAW1lB,EAAOud,GAClBoI,EAAW7kB,EAAK,EAEpB,IAAI2kB,GAAgB3kB,EAAK=
,IACvB,GAAI4kB,IAAatmB,KAAeme,IAAOvd,IACrC,OAAO,MAEJ,CACL,GAAI9E,GAAS6kB,=
EAAaA,EAAW2F,EAAUC,EAAUpI,GAAOne,CAChE,MAAMlE,IAAWkE,EAAYglB,GAAYuB,EAAUD=
,EAAU3F,GAAY,GAAQ7kB,GAC/E,OAAO,GAIb,OAAO,EAYT,QAAS0qB,IAAQvF,EAAYjG,GAC3=
B,GAAIrC,GAAQ,GACR7c,EAASqlB,GAAYF,GAAc/X,GAAM+X,EAAWnhB,UAKxD,OAHA6jB,IA=
AS1C,EAAY,SAASnb,EAAOqY,EAAK8C,GACxCnlB,IAAS6c,GAASqC,EAASlV,EAAOqY,EAAK8=
C,KAElCnlB,EAUT,QAAS8lB,IAAYvC,GACnB,GAAI+G,GAAYK,GAAapH,EAC7B,IAAwB,GAAp=
B+G,EAAUtmB,QAAesmB,EAAU,GAAG,GAAI,CAC5C,GAAIjI,GAAMiI,EAAU,GAAG,GACnBtgB=
,EAAQsgB,EAAU,GAAG,EAEzB,OAAO,UAASxlB,GACd,MAAc,OAAVA,GACK,EAEFA,EAAOud,K=
AASrY,IAAUA,IAAU9F,GAAcme,IAAO4G,IAASnkB,KAG7E,MAAO,UAASA,GACd,MAAOulB,IA=
AYvlB,EAAQwlB,IAY/B,QAAStE,IAAoB+C,EAAM0B,GACjC,GAAIvJ,GAAQjc,GAAQ8jB,GAC=
hBvB,EAAWoD,GAAM7B,IAAS8B,GAAmBJ,GAC7CzB,EAAWD,EAAO,EAGtB,OADAA,GAAO+B,GA=
AO/B,GACP,SAASjkB,GACd,GAAc,MAAVA,EACF,OAAO,CAET,IAAIud,GAAM2G,CAEV,IADAl=
kB,EAASmkB,GAASnkB,IACboc,IAAUsG,MAAenF,IAAOvd,IAAS,CAE5C,GADAA,EAAwB,GAA=
fikB,EAAK/kB,OAAcc,EAASgkB,GAAQhkB,EAAQimB,GAAUhC,EAAM,EAAG,KAC1D,MAAVjkB=
,EACF,OAAO,CAETud,GAAM2I,GAAKjC,GACXjkB,EAASmkB,GAASnkB,GAEpB,MAAOA,GAAOu=
d,KAASoI,EAClBA,IAAavmB,GAAcme,IAAOvd,GACnCokB,GAAYuB,EAAU3lB,EAAOud,GAAM=
ne,GAAW,IAgBtD,QAAS+mB,IAAUnmB,EAAQye,EAAQsB,EAAYsB,EAAQC,GACrD,IAAKnD,GA=
ASne,GACZ,MAAOA,EAET,IAAIomB,GAAW7F,GAAY9B,KAAYte,GAAQse,IAAWoG,GAAapG,IA=
CnEuB,EAAQoG,EAAWhnB,EAAY6gB,GAAKxB,EA0BxC,OAxBAC,IAAUsB,GAASvB,EAAQ,SAAS=
kH,EAAUpI,GAK5C,GAJIyC,IACFzC,EAAMoI,EACNA,EAAWlH,EAAOlB,IAEhB3D,EAAa+L,G=
ACftE,IAAWA,MACXC,IAAWA,MACX+E,GAAcrmB,EAAQye,EAAQlB,EAAK4I,GAAWpG,EAAYsB=
,EAAQC,OAE/D,CACH,GAAIpc,GAAQlF,EAAOud,GACfriB,EAAS6kB,EAAaA,EAAW7a,EAAOy=
gB,EAAUpI,EAAKvd,EAAQye,GAAUrf,EACzEsjB,EAAWxnB,IAAWkE,CAEtBsjB,KACFxnB,E=
AASyqB,GAENzqB,IAAWkE,KAAcgnB,GAAc7I,IAAOvd,MAC9C0iB,IAAaxnB,IAAWA,EAAUA,=
IAAWgK,EAAUA,IAAUA,KACpElF,EAAOud,GAAOriB,MAIb8E,EAkBT,QAASqmB,IAAcrmB,EA=
AQye,EAAQlB,EAAK+I,EAAWvG,EAAYsB,EAAQC,GAIzE,IAHA,GAAIpiB,GAASmiB,EAAOniB=
,OAChBymB,EAAWlH,EAAOlB,GAEfre,KACL,GAAImiB,EAAOniB,IAAWymB,EAEpB,YADA3lB=
,EAAOud,GAAO+D,EAAOpiB,GAIzB,IAAIgG,GAAQlF,EAAOud,GACfriB,EAAS6kB,EAAaA,E=
AAW7a,EAAOygB,EAAUpI,EAAKvd,EAAQye,GAAUrf,EACzEsjB,EAAWxnB,IAAWkE,CAEtBsj=
B,KACFxnB,EAASyqB,EACLpF,GAAYoF,KAAcxlB,GAAQwlB,IAAad,GAAac,IAC9DzqB,EAAS=
iF,GAAQ+E,GACbA,EACCqb,GAAYrb,GAAS6W,GAAU7W,MAE7BqhB,GAAcZ,IAAanC,GAAYmC,=
GAC9CzqB,EAASsoB,GAAYte,GACjBshB,GAActhB,GACbqhB,GAAcrhB,GAASA,KAG5Bwd,GA=
AW,GAKfrB,EAAO7lB,KAAKmqB,GACZrE,EAAO9lB,KAAKN,GAERwnB,EAEF1iB,EAAOud,GAA=
O+I,EAAUprB,EAAQyqB,EAAU5F,EAAYsB,EAAQC,IACrDpmB,IAAWA,EAAUA,IAAWgK,EAAUA=
,IAAUA,KAC7DlF,EAAOud,GAAOriB,GAWlB,QAASurB,IAAalJ,GACpB,MAAO,UAASvd,GACd=
,MAAiB,OAAVA,EAAiBZ,EAAYY,EAAOud,IAW/C,QAASmJ,IAAiBzC,GACxB,GAAIC,GAAWD,E=
AAO,EAEtB,OADAA,GAAO+B,GAAO/B,GACP,SAASjkB,GACd,MAAOgkB,IAAQhkB,EAAQikB,E=
AAMC,IAajC,QAASyC,IAAW/lB,EAAOgmB,GAEzB,IADA,GAAI1nB,GAAS0B,EAAQgmB,EAAQ1=
nB,OAAS,EAC/BA,KAAU,CACf,GAAI6Y,GAAQ6O,EAAQ1nB,EACpB,IAAI6Y,GAAS8O,GAAYpG=
,GAAQ1I,GAAQ,CACvC,GAAI8O,GAAW9O,CACf+O,IAAOvtB,KAAKqH,EAAOmX,EAAO,IAG9B,=
MAAOnX,GAYT,QAASmmB,IAAWnjB,EAAKuB,GACvB,MAAOvB,GAAMojB,GAAYC,MAAkB9hB,EA=
AMvB,EAAM,IAiBzD,QAASsjB,IAAW7G,EAAYjG,EAAUiF,EAAa8H,EAAoB/D,GAMzE,MALAA,=
GAAS/C,EAAY,SAASnb,EAAO6S,EAAOsI,GAC1ChB,EAAc8H,GACTA,GAAqB,EAAOjiB,GAC7B=
kV,EAASiF,EAAana,EAAO6S,EAAOsI,KAEnChB,EAyBT,QAAS4G,IAAUrlB,EAAOkB,EAAOnG=
,GAC/B,GAAIoc,GAAQ,GACR7Y,EAAS0B,EAAM1B,MAEnB4C,GAAiB,MAATA,EAAgB,GAAMA,G=
AAS,EAC3B,EAARA,IACFA,GAASA,EAAQ5C,EAAS,EAAKA,EAAS4C,GAE1CnG,EAAOA,IAAQyD=
,GAAazD,EAAMuD,EAAUA,GAAWvD,GAAO,EACpD,EAANA,IACFA,GAAOuD,GAETA,EAAS4C,EA=
AQnG,EAAM,EAAMA,EAAMmG,IAAW,EAC9CA,KAAW,CAGX,KADA,GAAI5G,GAASoN,GAAMpJ,KA=
CV6Y,EAAQ7Y,GACfhE,EAAO6c,GAASnX,EAAMmX,EAAQjW,EAEhC,OAAO5G,GAaT,QAASksB,=
IAAS/G,EAAYxI,GAC5B,GAAI3c,EAMJ,OAJA6nB,IAAS1C,EAAY,SAASnb,EAAO6S,EAAOsI,=
GAE1C,MADAnlB,GAAS2c,EAAU3S,EAAO6S,EAAOsI,IACzBnlB,MAEDA,EAaX,QAASmsB,IAA=
WzmB,EAAO0mB,GACzB,GAAIpoB,GAAS0B,EAAM1B,MAGnB,KADA0B,EAAM2mB,KAAKD,GACJp=
oB,KACL0B,EAAM1B,GAAU0B,EAAM1B,GAAQgG,KAEhC,OAAOtE,GAYT,QAAS4mB,IAAgBnH,E=
AAY5D,EAAW9D,GAC9C,GAAI7d,GAAW2sB,KACX1P,EAAQ,EAEZ0E,GAAYyC,GAASzC,EAAW,S=
AASrC,GAAY,MAAOtf,GAASsf,IAErE,IAAIlf,GAAS0qB,GAAQvF,EAAY,SAASnb,GACxC,GA=
AIuT,GAAWyG,GAASzC,EAAW,SAASrC,GAAY,MAAOA,GAASlV,IACxE,QAASuT,SAAYA,EAAUV=
,QAAWA,EAAO7S,MAASA,IAG5D,OAAOmiB,IAAWnsB,EAAQ,SAAS8E,EAAQqX,GACzC,MAAOqB=
,GAAgB1Y,EAAQqX,EAAOsB,KAa1C,QAAS+O,IAAQrH,EAAYjG,GAC3B,GAAIlf,GAAS,CAIb,=
OAHA6nB,IAAS1C,EAAY,SAASnb,EAAO6S,EAAOsI,GAC1CnlB,IAAWkf,EAASlV,EAAO6S,EA=
AOsI,IAAe,IAE5CnlB,EAYT,QAASysB,IAAS/mB,EAAOwZ,GACvB,GAAIrC,GAAQ,GACRtQ,E=
AAUgb,KACVvjB,EAAS0B,EAAM1B,OACfwjB,EAAWjb,GAAWuQ,EACtB4P,EAAUlF,GAAYxjB,=
GAAU2d,EAChCxC,EAAOuN,EAAUjF,KAAgB,KACjCznB,IAEAmf,IACF5S,EAAUwW,GACVyE,G=
AAW,IAEXkF,GAAU,EACVvN,EAAOD,KAAgBlf,EAEzB8hB,GACA,OAASjF,EAAQ7Y,GAAQ,CAC=
vB,GAAIgG,GAAQtE,EAAMmX,GACduC,EAAWF,EAAWA,EAASlV,EAAO6S,EAAOnX,GAASsE,CA=
E1D,IAAIwd,GAAYxd,IAAUA,EAAO,CAE/B,IADA,GAAI2iB,GAAYxN,EAAKnb,OACd2oB,KAC=
L,GAAIxN,EAAKwN,KAAevN,EACtB,QAAS0C,EAGT5C,IACFC,EAAK7e,KAAK8e,GAEZpf,EAA=
OM,KAAK0J,OAELuC,GAAQ4S,EAAMC,EAAU,GAAK,KAChCF,GAAYwN,IACdvN,EAAK7e,KAAK8=
e,GAEZpf,EAAOM,KAAK0J,IAGhB,MAAOhK,GAaT,QAAS4sB,IAAW9nB,EAAQggB,GAK1B,IAJ=
A,GAAIjI,GAAQ,GACR7Y,EAAS8gB,EAAM9gB,OACfhE,EAASoN,GAAMpJ,KAEV6Y,EAAQ7Y,G=
ACfhE,EAAO6c,GAAS/X,EAAOggB,EAAMjI,GAE/B,OAAO7c,GAcT,QAAS6sB,IAAUnnB,EAAO=
iX,EAAWmQ,EAAQlQ,GAI3C,IAHA,GAAI5Y,GAAS0B,EAAM1B,OACf6Y,EAAQD,EAAY5Y,EAAS=
,IAEzB4Y,EAAYC,MAAYA,EAAQ7Y,IAAW2Y,EAAUjX,EAAMmX,GAAQA,EAAOnX,KAClF,MAAOo=
nB,GACH/B,GAAUrlB,EAAQkX,EAAY,EAAIC,EAASD,EAAYC,EAAQ,EAAI7Y,GACnE+mB,GAAU=
rlB,EAAQkX,EAAYC,EAAQ,EAAI,EAAKD,EAAY5Y,EAAS6Y,GAa1E,QAAS+E,IAAiB5X,EAAOk=
W,GAC/B,GAAIlgB,GAASgK,CACThK,aAAkB4f,KACpB5f,EAASA,EAAOgK,QAKlB,KAHA,GAA=
I6S,GAAQ,GACR7Y,EAASkc,EAAQlc,SAEZ6Y,EAAQ7Y,GAAQ,CACvB,GAAI+oB,GAAS7M,EAA=
QrD,EACrB7c,GAAS+sB,EAAOtH,KAAKjc,MAAMujB,EAAOrH,QAASzB,IAAWjkB,GAAS+sB,E=
AAO5F,OAExE,MAAOnnB,GAcT,QAASgtB,IAAYtnB,EAAOsE,EAAOijB,GACjC,GAAIC,GAAM,=
EACNC,EAAOznB,EAAQA,EAAM1B,OAASkpB,CAElC,IAAoB,gBAATljB,IAAqBA,IAAUA,GAAi=
BojB,IAARD,EAA+B,CAChF,KAAaA,EAAND,GAAY,CACjB,GAAIG,GAAOH,EAAMC,IAAU,EACv=
B/N,EAAW1Z,EAAM2nB,IAEhBJ,EAA0BjjB,GAAZoV,EAAiCpV,EAAXoV,IAAmC,OAAbA,EAC7=
D8N,EAAMG,EAAM,EAEZF,EAAOE,EAGX,MAAOF,GAET,MAAOG,IAAc5nB,EAAOsE,EAAO6b,GA=
AUoH,GAgB/C,QAASK,IAAc5nB,EAAOsE,EAAOkV,EAAU+N,GAC7CjjB,EAAQkV,EAASlV,EAQ=
jB,KANA,GAAIkjB,GAAM,EACNC,EAAOznB,EAAQA,EAAM1B,OAAS,EAC9BupB,EAAWvjB,IAA=
UA,EACrBoS,EAAsB,OAAVpS,EACZqS,EAAarS,IAAU9F,EAEdipB,EAAND,GAAY,CACjB,GAA=
IG,GAAMvB,IAAaoB,EAAMC,GAAQ,GACjC/N,EAAWF,EAASxZ,EAAM2nB,IAC1BG,EAAQpO,IA=
Aalb,EACrBupB,EAAcrO,IAAaA,CAE/B,IAAImO,EACF,GAAIG,GAASD,GAAeR,MAE5BS,GAD=
StR,EACAqR,GAAeD,IAAUP,GAA0B,MAAZ7N,GACvC/C,EACAoR,IAAgBR,GAAcO,GAClB,MAA=
ZpO,GACA,EAEA6N,EAA0BjjB,GAAZoV,EAAiCpV,EAAXoV,CAE3CsO,GACFR,EAAMG,EAAM,E=
AEZF,EAAOE,EAGX,MAAO3L,IAAUyL,EAAMQ,IAazB,QAAS/H,IAAaH,EAAMC,EAASC,GACnC,=
GAAmB,kBAARF,GACT,MAAOI,GAET,IAAIH,IAAYxhB,EACd,MAAOuhB,EAET,QAAQE,GACN,I=
AAK,GAAG,MAAO,UAAS3b,GACtB,MAAOyb,GAAKpnB,KAAKqnB,EAAS1b,GAE5B,KAAK,GAAG,=
MAAO,UAASA,EAAO6S,EAAOsI,GACpC,MAAOM,GAAKpnB,KAAKqnB,EAAS1b,EAAO6S,EAAOsI=
,GAE1C,KAAK,GAAG,MAAO,UAAShB,EAAana,EAAO6S,EAAOsI,GACjD,MAAOM,GAAKpnB,KAA=
KqnB,EAASvB,EAAana,EAAO6S,EAAOsI,GAEvD,KAAK,GAAG,MAAO,UAASnb,EAAOmS,EAAOk=
G,EAAKvd,EAAQye,GACjD,MAAOkC,GAAKpnB,KAAKqnB,EAAS1b,EAAOmS,EAAOkG,EAAKvd,=
EAAQye,IAGzD,MAAO,YACL,MAAOkC,GAAKjc,MAAMkc,EAASrhB,YAW/B,QAASupB,IAAY3qB=
,GACnB,GAAIjD,GAAS,GAAIoF,IAAYnC,EAAOW,YAChCyd,EAAO,GAAIre,IAAWhD,EAG1B,O=
ADAqhB,GAAKvU,IAAI,GAAI9J,IAAWC,IACjBjD,EAaT,QAAS6tB,IAAY1G,EAAM2G,EAAUC,=
GAQnC,IAPA,GAAIC,GAAgBD,EAAQ/pB,OACxBiqB,EAAY,GACZC,EAAaC,GAAUhH,EAAKnjB,=
OAASgqB,EAAe,GACpDI,EAAY,GACZC,EAAaP,EAAS9pB,OACtBhE,EAASoN,GAAMihB,EAAaH=
,KAEvBE,EAAYC,GACnBruB,EAAOouB,GAAaN,EAASM,EAE/B,QAASH,EAAYD,GACnBhuB,EAA=
O+tB,EAAQE,IAAc9G,EAAK8G,EAEpC,MAAOC,KACLluB,EAAOouB,KAAejH,EAAK8G,IAE7B,=
OAAOjuB,GAaT,QAASsuB,IAAiBnH,EAAM2G,EAAUC,GASxC,IARA,GAAIQ,GAAe,GACfP,EAA=
gBD,EAAQ/pB,OACxBiqB,EAAY,GACZC,EAAaC,GAAUhH,EAAKnjB,OAASgqB,EAAe,GACpDQ,=
EAAa,GACbC,EAAcX,EAAS9pB,OACvBhE,EAASoN,GAAM8gB,EAAaO,KAEvBR,EAAYC,GACnBl=
uB,EAAOiuB,GAAa9G,EAAK8G,EAG3B,KADA,GAAI5mB,GAAS4mB,IACJO,EAAaC,GACpBzuB,=
EAAOqH,EAASmnB,GAAcV,EAASU,EAEzC,QAASD,EAAeP,GACtBhuB,EAAOqH,EAAS0mB,EAAQ=
Q,IAAiBpH,EAAK8G,IAEhD,OAAOjuB,GAWT,QAAS0uB,IAAiBC,EAAQC,GAChC,MAAO,UAASz=
J,EAAYjG,EAAUwG,GACpC,GAAI1lB,GAAS4uB,EAAcA,MAG3B,IAFA1P,EAAWqN,GAAYrN,EA=
AUwG,EAAS,GAEtCzgB,GAAQkgB,GAIV,IAHA,GAAItI,GAAQ,GACR7Y,EAASmhB,EAAWnhB,S=
AEf6Y,EAAQ7Y,GAAQ,CACvB,GAAIgG,GAAQmb,EAAWtI,EACvB8R,GAAO3uB,EAAQgK,EAAOk=
V,EAASlV,EAAO6S,EAAOsI,GAAaA,OAG5D0C,IAAS1C,EAAY,SAASnb,EAAOqY,EAAK8C,GAC=
xCwJ,EAAO3uB,EAAQgK,EAAOkV,EAASlV,EAAOqY,EAAK8C,GAAaA,IAG5D,OAAOnlB,IAWX,=
QAAS6uB,IAAeC,GACtB,MAAOC,IAAU,SAASjqB,EAAQkqB,GAChC,GAAInS,GAAQ,GACR7Y,E=
AAmB,MAAVc,EAAiB,EAAIkqB,EAAQhrB,OACtC6gB,EAAa7gB,EAAS,EAAIgrB,EAAQhrB,EA=
AS,GAAKE,EAChD+qB,EAAQjrB,EAAS,EAAIgrB,EAAQ,GAAK9qB,EAClCwhB,EAAU1hB,EAAS=
,EAAIgrB,EAAQhrB,EAAS,GAAKE,CAajD,KAXyB,kBAAd2gB,IACTA,EAAae,GAAaf,EAAYa,=
EAAS,GAC/C1hB,GAAU,IAEV6gB,EAA+B,kBAAXa,GAAwBA,EAAUxhB,EACtDF,GAAW6gB,EAA=
a,EAAI,GAE1BoK,GAASC,GAAeF,EAAQ,GAAIA,EAAQ,GAAIC,KAClDpK,EAAsB,EAAT7gB,EA=
AaE,EAAY2gB,EACtC7gB,EAAS,KAEF6Y,EAAQ7Y,GAAQ,CACvB,GAAIuf,GAASyL,EAAQnS,E=
ACjB0G,IACFuL,EAAShqB,EAAQye,EAAQsB,GAG7B,MAAO/f,KAYX,QAASqqB,IAAejH,EAAU=
tL,GAChC,MAAO,UAASuI,EAAYjG,GAC1B,GAAIlb,GAASmhB,EAAaiK,GAAUjK,GAAc,CAClD=
,KAAKkK,GAASrrB,GACZ,MAAOkkB,GAAS/C,EAAYjG,EAK9B,KAHA,GAAIrC,GAAQD,EAAY5Y=
,EAAS,GAC7BsrB,EAAWrG,GAAS9D,IAEhBvI,EAAYC,MAAYA,EAAQ7Y,IAClCkb,EAASoQ,EA=
ASzS,GAAQA,EAAOyS,MAAc,IAIrD,MAAOnK,IAWX,QAASoK,IAAc3S,GACrB,MAAO,UAAS9X,=
EAAQoa,EAAUsQ,GAMhC,IALA,GAAIF,GAAWrG,GAASnkB,GACpBggB,EAAQ0K,EAAS1qB,GAC=
jBd,EAAS8gB,EAAM9gB,OACf6Y,EAAQD,EAAY5Y,EAAS,GAEzB4Y,EAAYC,MAAYA,EAAQ7Y,G=
AAS,CAC/C,GAAIqe,GAAMyC,EAAMjI,EAChB,IAAIqC,EAASoQ,EAASjN,GAAMA,EAAKiN,MA=
Ac,EAC7C,MAGJ,MAAOxqB,IAaX,QAAS2qB,IAAkBhK,EAAMC,GAG/B,QAASgK,KACP,GAAIC,=
GAAMjxB,MAAQA,OAASkxB,IAAQlxB,eAAgBgxB,GAAWG,EAAOpK,CACrE,OAAOkK,GAAGnmB,=
MAAMkc,EAASrhB,WAJ3B,GAAIwrB,GAAOC,GAAkBrK,EAM7B,OAAOiK,GAUT,QAASjI,IAAY9=
E,GACnB,MAAQE,KAAgBC,GAAO,GAAIJ,IAASC,GAAU,KAWxD,QAASoN,IAAiBnwB,GACxB,MA=
AO,UAAS+E,GAMd,IALA,GAAIkY,GAAQ,GACRnX,EAAQsqB,GAAMC,GAAOtrB,IACrBX,EAAS0=
B,EAAM1B,OACfhE,EAAS,KAEJ6c,EAAQ7Y,GACfhE,EAASJ,EAASI,EAAQ0F,EAAMmX,GAAQA=
,EAE1C,OAAO7c,IAYX,QAAS8vB,IAAkBD,GACzB,MAAO,YAIL,GAAI1I,GAAO9iB,SACX,QAA=
Q8iB,EAAKnjB,QACX,IAAK,GAAG,MAAO,IAAI6rB,EACnB,KAAK,GAAG,MAAO,IAAIA,GAAK1=
I,EAAK,GAC7B,KAAK,GAAG,MAAO,IAAI0I,GAAK1I,EAAK,GAAIA,EAAK,GACtC,KAAK,GAAG=
,MAAO,IAAI0I,GAAK1I,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAC/C,KAAK,GAAG,MAAO,IAAI0=
I,GAAK1I,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK;AACxD,IAAK,GAAG,MAAO,IAAI0=
I,GAAK1I,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,GACjE,KAAK,GAAG=
,MAAO,IAAI0I,GAAK1I,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAI=
A,EAAK,GAC1E,KAAK,GAAG,MAAO,IAAI0I,GAAK1I,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAI=
A,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,IAErF,GAAI+I,GAAcC,GAAWN,EAAKpwB,=
WAC9BO,EAAS6vB,EAAKrmB,MAAM0mB,EAAa/I,EAIrC,OAAOlE,IAASjjB,GAAUA,EAASkwB,=
GAWvC,QAASE,IAAYC,GACnB,QAASC,GAAU7K,EAAM8K,EAAOtB,GAC1BA,GAASC,GAAezJ,EA=
AM8K,EAAOtB,KACvCsB,EAAQrsB,EAEV,IAAIlE,GAASwwB,GAAc/K,EAAM4K,EAAMnsB,EAA=
WA,EAAWA,EAAWA,EAAWA,EAAWqsB,EAE9F,OADAvwB,GAAO8e,YAAcwR,EAAUxR,YACxB9e,E=
AET,MAAOswB,GAWT,QAASG,IAAe3B,EAAUjK,GAChC,MAAOkK,IAAU,SAAS5H,GACxB,GAAIr=
iB,GAASqiB,EAAK,EAClB,OAAc,OAAVriB,EACKA,GAETqiB,EAAK7mB,KAAKukB,GACHiK,E=
AAStlB,MAAMtF,EAAWijB,MAYrC,QAASuJ,IAAe9M,EAAYC,GAClC,MAAO,UAASsB,EAAYjG,=
EAAUwG,GAKpC,GAJIA,GAAWwJ,GAAe/J,EAAYjG,EAAUwG,KAClDxG,EAAWhb,GAEbgb,EAAW=
qN,GAAYrN,EAAUwG,EAAS,GACnB,GAAnBxG,EAASlb,OAAa,CACxBmhB,EAAalgB,GAAQkgB,=
GAAcA,EAAawL,GAAWxL,EAC3D,IAAInlB,GAAS2jB,GAAcwB,EAAYjG,EAAU0E,EAAYC,EAC7=
D,KAAMsB,EAAWnhB,QAAUhE,IAAW6jB,EACpC,MAAO7jB,GAGX,MAAO8nB,IAAa3C,EAAYjG,=
EAAU0E,EAAYC,IAY1D,QAAS+M,IAAW1I,EAAUtL,GAC5B,MAAO,UAASuI,EAAYxI,EAAW+I,G=
AErC,GADA/I,EAAY4P,GAAY5P,EAAW+I,EAAS,GACxCzgB,GAAQkgB,GAAa,CACvB,GAAItI,=
GAAQH,EAAcyI,EAAYxI,EAAWC,EACjD,OAAOC,GAAQ,GAAKsI,EAAWtI,GAAS3Y,EAE1C,MAA=
O+jB,IAAS9C,EAAYxI,EAAWuL,IAW3C,QAAS2I,IAAgBjU,GACvB,MAAO,UAASlX,EAAOiX,E=
AAW+I,GAChC,MAAMhgB,IAASA,EAAM1B,QAGrB2Y,EAAY4P,GAAY5P,EAAW+I,EAAS,GACrCh=
J,EAAchX,EAAOiX,EAAWC,IAH9B,IAcb,QAASkU,IAAcC,GACrB,MAAO,UAASjsB,EAAQ6X,E=
AAW+I,GAEjC,MADA/I,GAAY4P,GAAY5P,EAAW+I,EAAS,GACrCuC,GAASnjB,EAAQ6X,EAAWo=
U,GAAY,IAWnD,QAASC,IAAWpU,GAClB,MAAO,YAOL,IANA,GAAI8S,GACA1rB,EAASK,UAAUL=
,OACnB6Y,EAAQD,EAAY5Y,EAAS,GAC7BoqB,EAAY,EACZ6C,EAAQ7jB,GAAMpJ,GAEV4Y,EAA=
YC,MAAYA,EAAQ7Y,GAAS,CAC/C,GAAIyhB,GAAOwL,EAAM7C,KAAe/pB,UAAUwY,EAC1C,IAA=
mB,kBAAR4I,GACT,KAAM,IAAItgB,IAAUiiB,IAEjBsI,GAAW7P,EAAcpgB,UAAUyxB,MAA6B=
,WAArBC,GAAY1L,KAC1DiK,EAAU,GAAI7P,OAAkB,IAIpC,IADAhD,EAAQ6S,EAAU,GAAK1rB=
,IACd6Y,EAAQ7Y,GAAQ,CACvByhB,EAAOwL,EAAMpU,EAEb,IAAIuU,GAAWD,GAAY1L,GACvB=
7f,EAAmB,WAAZwrB,EAAwBC,GAAQ5L,GAAQvhB,CAGjDwrB,GADE9pB,GAAQ0rB,GAAW1rB,E=
AAK,KAAOA,EAAK,KAAO2rB,EAAWC,EAAaC,EAAeC,KAAgB9rB,EAAK,GAAG5B,QAAqB,GAAX4=
B,EAAK,GACjH8pB,EAAQyB,GAAYvrB,EAAK,KAAK4D,MAAMkmB,EAAS9pB,EAAK,IAElC,GAA=
f6f,EAAKzhB,QAAestB,GAAW7L,GAASiK,EAAQ0B,KAAc1B,EAAQwB,KAAKzL,GAG1F,MAAO,=
YACL,GAAI0B,GAAO9iB,UACP2F,EAAQmd,EAAK,EAEjB,IAAIuI,GAA0B,GAAfvI,EAAKnjB,=
QAAeiB,GAAQ+E,IAAUA,EAAMhG,QAAU2d,EACnE,MAAO+N,GAAQiC,MAAM3nB,GAAOA,OAK9B=
,KAHA,GAAI6S,GAAQ,EACR7c,EAASgE,EAASitB,EAAMpU,GAAOrT,MAAM9K,KAAMyoB,GAAQ=
nd,IAE9C6S,EAAQ7Y,GACfhE,EAASixB,EAAMpU,GAAOxe,KAAKK,KAAMsB,EAEnC,OAAOA,K=
Aab,QAAS4xB,IAAcC,EAAW3J,GAChC,MAAO,UAAS/C,EAAYjG,EAAUwG,GACpC,MAA2B,kBAA=
ZxG,IAA0BwG,IAAYxhB,GAAae,GAAQkgB,GACtE0M,EAAU1M,EAAYjG,GACtBgJ,EAAS/C,EA=
AYS,GAAa1G,EAAUwG,EAAS,KAW7D,QAASoM,IAAYf,GACnB,MAAO,UAASjsB,EAAQoa,EAAUw=
G,GAIhC,OAHuB,kBAAZxG,IAA0BwG,IAAYxhB,KAC/Cgb,EAAW0G,GAAa1G,EAAUwG,EAAS,I=
AEtCqL,EAAWjsB,EAAQoa,EAAUuJ,KAWxC,QAASsJ,IAAahB,GACpB,MAAO,UAASjsB,EAAQo=
a,EAAUwG,GAIhC,OAHuB,kBAAZxG,IAA0BwG,IAAYxhB,KAC/Cgb,EAAW0G,GAAa1G,EAAUwG=
,EAAS,IAEtCqL,EAAWjsB,EAAQoa,IAW9B,QAAS8S,IAAmBC,GAC1B,MAAO,UAASntB,EAAQo=
a,EAAUwG,GAChC,GAAI1lB,KASJ,OARAkf,GAAWqN,GAAYrN,EAAUwG,EAAS,GAE1CqB,GAAW=
jiB,EAAQ,SAASkF,EAAOqY,EAAKvd,GACtC,GAAIotB,GAAShT,EAASlV,EAAOqY,EAAKvd,E=
AClCud,GAAM4P,EAAYC,EAAS7P,EAC3BrY,EAAQioB,EAAYjoB,EAAQkoB,EAC5BlyB,EAAOq=
iB,GAAOrY,IAEThK,GAWX,QAASmyB,IAAavV,GACpB,MAAO,UAASjY,EAAQX,EAAQoZ,GAE9B=
,MADAzY,GAASuY,EAAavY,IACdiY,EAAYjY,EAAS,IAAMytB,GAAcztB,EAAQX,EAAQoZ,IAA=
UR,EAAY,GAAKjY,IAWhG,QAAS0tB,IAAchC,GACrB,GAAIiC,GAAcvD,GAAU,SAAStJ,EAAMq=
I,GACzC,GAAIC,GAAUlP,EAAeiP,EAAUwE,EAAYxT,YACnD,OAAO0R,IAAc/K,EAAM4K,EAAM=
nsB,EAAW4pB,EAAUC,IAExD,OAAOuE,GAWT,QAASC,IAAaV,EAAW3J,GAC/B,MAAO,UAAS/C,=
EAAYjG,EAAUiF,EAAauB,GACjD,GAAItB,GAAgB/f,UAAUL,OAAS,CACvC,OAA2B,kBAAZkb,=
IAA0BwG,IAAYxhB,GAAae,GAAQkgB,GACtE0M,EAAU1M,EAAYjG,EAAUiF,EAAaC,GAC7C4H,=
GAAW7G,EAAYoH,GAAYrN,EAAUwG,EAAS,GAAIvB,EAAaC,EAAe8D,IAqB9F,QAASsK,IAAoB/=
M,EAAMgN,EAAS/M,EAASoI,EAAUC,EAAS2E,EAAeC,EAAcC,EAAQC,EAAKtC,GAShH,QAASb,=
KAOP,IAJA,GAAI1rB,GAASK,UAAUL,OACnB6Y,EAAQ7Y,EACRmjB,EAAO/Z,GAAMpJ,GAEV6Y=
,KACLsK,EAAKtK,GAASxY,UAAUwY,EAQ1B,IANIiR,IACF3G,EAAO0G,GAAY1G,EAAM2G,EAA=
UC,IAEjC2E,IACFvL,EAAOmH,GAAiBnH,EAAMuL,EAAeC,IAE3CG,GAAWC,EAAc,CAC3B,GAA=
IjU,GAAc4Q,EAAQ5Q,YACtBkU,EAAcnU,EAAesI,EAAMrI,EAGvC,IADA9a,GAAUgvB,EAAYh=
vB,OACTusB,EAATvsB,EAAgB,CAClB,GAAIivB,GAAYL,EAAS/R,GAAU+R,GAAU1uB,EACzCg=
vB,EAAW/E,GAAUoC,EAAQvsB,EAAQ,GACrCmvB,EAAcL,EAAUE,EAAc9uB,EACtCkvB,EAAkB=
N,EAAU5uB,EAAY8uB,EACxCK,EAAcP,EAAU3L,EAAOjjB,EAC/BovB,EAAmBR,EAAU5uB,EAA=
YijB,CAE7CsL,IAAYK,EAAUrB,EAAe8B,EACrCd,KAAaK,EAAUS,EAAqB9B,GAEvC+B,IACHf=
,KAAagB,EAAYC,GAE3B,IAAIC,IAAWlO,EAAMgN,EAAS/M,EAAS2N,EAAaF,EAAaG,EAAkBF,=
EAAiBH,EAAWJ,EAAKK,GAChHlzB,EAASwyB,GAAoBhpB,MAAMtF,EAAWyvB,EAMlD,OAJIrC,=
IAAW7L,IACbmO,GAAQ5zB,EAAQ2zB,GAElB3zB,EAAO8e,YAAcA,EACd9e,GAGX,GAAIkwB,G=
AAc2D,EAASnO,EAAUhnB,KACjCixB,EAAKmE,EAAY5D,EAAYzK,GAAQA,CAWzC,OATImN,KAC=
FzL,EAAO4M,GAAQ5M,EAAMyL,IAEnBoB,GAASnB,EAAM1L,EAAKnjB,SACtBmjB,EAAKnjB,O=
AAS6uB,GAEZn0B,MAAQA,OAASkxB,IAAQlxB,eAAgBgxB,KAC3CC,EAAKE,GAAQC,GAAkBrK,=
IAE1BkK,EAAGnmB,MAAM0mB,EAAa/I,GAjE/B,GAAI6M,GAAQvB,EAAUlB,EAClBsC,EAASpB=
,EAAUgB,EACnBK,EAAYrB,EAAUiB,EACtBZ,EAAUL,EAAUjB,EACpBgC,EAAef,EAAUwB,EAC=
zBlB,EAAeN,EAAUyB,EACzBrE,EAAOiE,EAAY5vB,EAAY4rB,GAAkBrK,EA6DrD,OAAOiK,GA=
aT,QAAS0C,IAAcztB,EAAQX,EAAQoZ,GACrC,GAAI+W,GAAYxvB,EAAOX,MAGvB,IAFAA,GAA=
UA,EAENmwB,GAAanwB,IAAWowB,GAAepwB,GACzC,MAAO,EAET,IAAIqwB,GAAYrwB,EAASmw=
B,CAEzB,OADA/W,GAAiB,MAATA,EAAgB,IAAOA,EAAQ,GAChCkX,GAAOlX,EAAOmX,GAAWF,E=
AAYjX,EAAMpZ,SAASwE,MAAM,EAAG6rB,GAetE,QAASG,IAAqB/O,EAAMgN,EAAS/M,EAASoI=
,GAIpD,QAAS4B,KASP,IANA,GAAIzB,GAAY,GACZC,EAAa7pB,UAAUL,OACvBoqB,EAAY,GAC=
ZC,EAAaP,EAAS9pB,OACtBmjB,EAAO/Z,GAAMihB,EAAaH,KAErBE,EAAYC,GACnBlH,EAAKi=
H,GAAaN,EAASM,EAE7B,MAAOF,KACL/G,EAAKiH,KAAe/pB,YAAY4pB,EAElC,IAAI0B,GAAM=
jxB,MAAQA,OAASkxB,IAAQlxB,eAAgBgxB,GAAWG,EAAOpK,CACrE,OAAOkK,GAAGnmB,MAAM=
qqB,EAASnO,EAAUhnB,KAAMyoB,GAnB3C,GAAI0M,GAASpB,EAAUgB,EACnB5D,EAAOC,GAAk=
BrK,EAoB7B,OAAOiK,GAUT,QAAS+E,IAAYC,GACnB,GAAIjP,GAAOhd,GAAKisB,EAChB,OAA=
O,UAASC,EAAQC,GAEtB,MADAA,GAAYA,IAAc1wB,EAAY,GAAM0wB,GAAa,EACrDA,GACFA,EA=
AY5mB,GAAI,GAAI4mB,GACbnP,EAAKkP,EAASC,GAAaA,GAE7BnP,EAAKkP,IAWhB,QAASE,I=
AAkB5H,GACzB,MAAO,UAASvnB,EAAOsE,EAAOkV,EAAUwG,GACtC,GAAI9lB,GAAW2sB,GAAY=
rN,EAC3B,OAAoB,OAAZA,GAAoBtf,IAAa4lB,GACrCwH,GAAYtnB,EAAOsE,EAAOijB,GAC1B=
K,GAAc5nB,EAAOsE,EAAOpK,EAASsf,EAAUwG,EAAS,GAAIuH,IA6BpE,QAASuD,IAAc/K,EA=
AMgN,EAAS/M,EAASoI,EAAUC,EAAS6E,EAAQC,EAAKtC,GAC7E,GAAIuD,GAAYrB,EAAUiB,C=
AC1B,KAAKI,GAA4B,kBAARrO,GACvB,KAAM,IAAItgB,IAAUiiB,EAEtB,IAAIpjB,GAAS8pB=
,EAAWA,EAAS9pB,OAAS,CAM1C,IALKA,IACHyuB,KAAahB,EAAe8B,GAC5BzF,EAAWC,EAAU7=
pB,GAEvBF,GAAW+pB,EAAUA,EAAQ/pB,OAAS,EAClCyuB,EAAUc,EAAoB,CAChC,GAAIb,GAA=
gB5E,EAChB6E,EAAe5E,CAEnBD,GAAWC,EAAU7pB,EAEvB,GAAI0B,GAAOkuB,EAAY5vB,EAA=
YmtB,GAAQ5L,GACvCkO,GAAWlO,EAAMgN,EAAS/M,EAASoI,EAAUC,EAAS2E,EAAeC,EAAcC,=
EAAQC,EAAKtC,EAWpG,IATI3qB,IACFkvB,GAAUnB,EAAS/tB,GACnB6sB,EAAUkB,EAAQ,GA=
ClBpD,EAAQoD,EAAQ,IAElBA,EAAQ,GAAc,MAATpD,EACRuD,EAAY,EAAIrO,EAAKzhB,OACr=
BmqB,GAAUoC,EAAQvsB,EAAQ,IAAM,EAEjCyuB,GAAWgB,EACb,GAAIzzB,GAASyvB,GAAkBk=
E,EAAQ,GAAIA,EAAQ,QAInD3zB,GAHUyyB,GAAWhB,GAAgBgB,IAAYgB,EAAYhC,IAAmBkC,E=
AAQ,GAAG3vB,OAGlFwuB,GAAoBhpB,MAAMtF,EAAWyvB,GAFrCa,GAAqBhrB,MAAMtF,EAAWy=
vB,EAIjD,IAAIhF,GAAS/oB,EAAOmvB,GAAcnB,EAClC,OAAOjF,GAAO3uB,EAAQ2zB,GAiBx=
B,QAASzJ,IAAYxkB,EAAOyW,EAAOkN,EAAWxE,EAAYsE,EAAShD,EAAQC,GACzE,GAAIvJ,GA=
AQ,GACRuE,EAAY1b,EAAM1B,OAClBsf,EAAYnH,EAAMnY,MAEtB,IAAIod,GAAakC,KAAe6F,=
GAAW7F,EAAYlC,GACrD,OAAO,CAGT,QAASvE,EAAQuE,GAAW,CAC1B,GAAI4T,GAAWtvB,EAA=
MmX,GACjBoY,EAAW9Y,EAAMU,GACjB7c,EAAS6kB,EAAaA,EAAWsE,EAAU8L,EAAWD,EAAU7L=
,EAAU6L,EAAWC,EAAUpY,GAAS3Y,CAE5G,IAAIlE,IAAWkE,EAAW,CACxB,GAAIlE,EACF,QA=
EF,QAAO,EAGT,GAAImpB,GACF,IAAK7E,GAAUnI,EAAO,SAAS8Y,GACzB,MAAOD,KAAaC,GAA=
Y5L,EAAU2L,EAAUC,EAAUpQ,EAAYsE,EAAShD,EAAQC,KAE/F,OAAO,MAEJ,IAAM4O,IAAaC,=
IAAY5L,EAAU2L,EAAUC,EAAUpQ,EAAYsE,EAAShD,EAAQC,GAC/F,OAAO,EAGX,OAAO,EAgBT=
,QAAS2D,IAAWjlB,EAAQqX,EAAOmK,GACjC,OAAQA,GACN,IAAK4O,GACL,IAAKC,GAGH,OAA=
QrwB,IAAWqX,CAErB,KAAKiZ,GACH,MAAOtwB,GAAOhC,MAAQqZ,EAAMrZ,MAAQgC,EAAO/D,=
SAAWob,EAAMpb,OAE9D,KAAKs0B,IAEH,MAAQvwB,KAAWA,EACfqX,IAAUA,EACVrX,IAAWqX=
,CAEjB,KAAKmZ,IACL,IAAKC,IAGH,MAAOzwB,IAAWqX,EAAQ,GAE9B,OAAO,EAiBT,QAASgO=
,IAAarlB,EAAQqX,EAAOkN,EAAWxE,EAAYsE,EAAShD,EAAQC,GAC3E,GAAIoP,GAAWzQ,GAA=
KjgB,GAChB2wB,EAAYD,EAASxxB,OACrB0xB,EAAW3Q,GAAK5I,GAChBmH,EAAYoS,EAAS1xB=
,MAEzB,IAAIyxB,GAAanS,IAAc6F,EAC7B,OAAO,CAGT,KADA,GAAItM,GAAQ4Y,EACL5Y,KA=
AS,CACd,GAAIwF,GAAMmT,EAAS3Y,EACnB,MAAMsM,EAAU9G,IAAOlG,GAAQ2D,GAAezhB,KA=
AK8d,EAAOkG,IACxD,OAAO,EAIX,IADA,GAAIsT,GAAWxM,IACNtM,EAAQ4Y,GAAW,CAC1BpT=
,EAAMmT,EAAS3Y,EACf,IAAI2N,GAAW1lB,EAAOud,GAClB4S,EAAW9Y,EAAMkG,GACjBriB,=
EAAS6kB,EAAaA,EAAWsE,EAAU8L,EAAWzK,EAAUrB,EAASqB,EAAWyK,EAAU5S,GAAOne,CAG=
zG,MAAMlE,IAAWkE,EAAYmlB,EAAUmB,EAAUyK,EAAUpQ,EAAYsE,EAAShD,EAAQC,GAAUpmB=
,GAChG,OAAO,CAET21B,KAAaA,EAAkB,eAAPtT,GAE1B,IAAKsT,EAAU,CACb,GAAIC,GAAU9=
wB,EAAOpB,YACjBmyB,EAAU1Z,EAAMzY,WAGpB,IAAIkyB,GAAWC,GACV,eAAiB/wB,IAAU,e=
AAiBqX,MACzB,kBAAXyZ,IAAyBA,YAAmBA,IACjC,kBAAXC,IAAyBA,YAAmBA,IACvD,OAAO,=
EAGX,OAAO,EAYT,QAAStJ,IAAY9G,EAAMC,EAASC,GAClC,GAAI3lB,GAAS2f,EAAO/f,UAAY=
A,EAEhC,OADAI,GAASA,IAAWJ,GAAW4lB,GAAexlB,EACvC2lB,EAAW3lB,EAAOylB,EAAMC,=
EAASC,GAAY3lB,EAqBtD,QAASmxB,IAAY1L,GAKnB,IAJA,GAAIzlB,GAASylB,EAAK3iB,KA=
Cd4C,EAAQowB,GAAU91B,GAClBgE,EAAS0B,EAAQA,EAAM1B,OAAS,EAE7BA,KAAU,CACf,GA=
AI4B,GAAOF,EAAM1B,GACb+xB,EAAYnwB,EAAK6f,IACrB,IAAiB,MAAbsQ,GAAqBA,GAAatQ=
,EACpC,MAAO7f,GAAK9C,KAGhB,MAAO9C,GAYT,QAASunB,IAAWpC,EAAYnV,EAAQ+M,GACtC=
,GAAI/c,GAAS2f,EAAOpT,SAAWA,EAE/B,OADAvM,GAASA,IAAWuM,GAAUuQ,EAAc9c,EACrC=
mlB,EAAanlB,EAAOmlB,EAAYnV,EAAQ+M,GAAa/c,EAsB9D,QAAS2qB,IAAa7lB,GAIpB,IAH=
A,GAAI9E,GAASg2B,GAAMlxB,GACfd,EAAShE,EAAOgE,OAEbA,KACLhE,EAAOgE,GAAQ,GAA=
K6mB,GAAmB7qB,EAAOgE,GAAQ,GAExD,OAAOhE,GAWT,QAASi2B,IAAUnxB,EAAQud,GACzB,=
GAAIrY,GAAkB,MAAVlF,EAAiBZ,EAAYY,EAAOud,EAChD,OAAO6T,IAASlsB,GAASA,EAAQ9F=
,EAanC,QAASod,IAAQ1a,EAAOnG,EAAK01B,GAI3B,IAHA,GAAItZ,GAAQ,GACR7Y,EAASmyB=
,EAAWnyB,SAEf6Y,EAAQ7Y,GAAQ,CACvB,GAAI4B,GAAOuwB,EAAWtZ,GAClBrI,EAAO5O,EA=
AK4O,IAEhB,QAAQ5O,EAAK/C,MACX,IAAK,OAAa+D,GAAS4N,CAAM,MACjC,KAAK,YAAa/T,G=
AAO+T,CAAM,MAC/B,KAAK,OAAa/T,EAAMihB,GAAUjhB,EAAKmG,EAAQ4N,EAAO,MACtD,KAA=
K,YAAa5N,EAAQunB,GAAUvnB,EAAOnG,EAAM+T,IAGrD,OAAS5N,MAASA,EAAOnG,IAAOA,GA=
UlC,QAAS4lB,IAAe3gB,GACtB,GAAI1B,GAAS0B,EAAM1B,OACfhE,EAAS,GAAI0F,GAAMhC,=
YAAYM,EAOnC,OAJIA,IAA6B,gBAAZ0B,GAAM,IAAkBoa,GAAezhB,KAAKqH,EAAO,WACtE1F,=
EAAO6c,MAAQnX,EAAMmX,MACrB7c,EAAOo2B,MAAQ1wB,EAAM0wB,OAEhBp2B,EAUT,QAAS8m=
B,IAAgBhiB,GACvB,GAAI+qB,GAAO/qB,EAAOpB,WAIlB,OAHqB,kBAARmsB,IAAsBA,YAAgB=
A,KACjDA,EAAO7c,IAEF,GAAI6c,GAeb,QAAShJ,IAAe/hB,EAAQwhB,EAAKJ,GACnC,GAAI2=
J,GAAO/qB,EAAOpB,WAClB,QAAQ4iB,GACN,IAAK+P,IACH,MAAOzI,IAAY9oB,EAErB,KAAK=
owB,GACL,IAAKC,GACH,MAAO,IAAItF,IAAM/qB,EAEnB,KAAKwxB,IAAY,IAAKC,IACtB,IA=
AKC,IAAS,IAAKC,IAAU,IAAKC,IAClC,IAAKC,IAAU,IAAKC,IAAiB,IAAKC,IAAW,IAAKC,I=
ACxD,GAAI7zB,GAAS6B,EAAO7B,MACpB,OAAO,IAAI4sB,GAAK3J,EAAS0H,GAAY3qB,GAAUA=
,EAAQ6B,EAAO2H,WAAY3H,EAAOd,OAEnF,KAAKqxB,IACL,IAAKE,IACH,MAAO,IAAI1F,GAA=
K/qB,EAElB,KAAKwwB,IACH,GAAIt1B,GAAS,GAAI6vB,GAAK/qB,EAAOye,OAAQwT,GAAQC,=
KAAKlyB,GAClD9E,GAAOi3B,UAAYnyB,EAAOmyB,UAE9B,MAAOj3B,GAYT,QAASk3B,IAAWpy=
B,EAAQikB,EAAM5B,GAClB,MAAVriB,GAAmB8lB,GAAM7B,EAAMjkB,KACjCikB,EAAO+B,GA=
AO/B,GACdjkB,EAAwB,GAAfikB,EAAK/kB,OAAcc,EAASgkB,GAAQhkB,EAAQimB,GAAUhC,E=
AAM,EAAG,KACxEA,EAAOiC,GAAKjC,GAEd,IAAItD,GAAiB,MAAV3gB,EAAiBA,EAASA,EAAO=
ikB,EAC5C,OAAe,OAARtD,EAAevhB,EAAYuhB,EAAKjc,MAAM1E,EAAQqiB,GAUvD,QAAS9B,=
IAAYrb,GACnB,MAAgB,OAATA,GAAiBqlB,GAASD,GAAUplB,IAW7C,QAASub,IAAQvb,EAAOh=
G,GAGtB,MAFAgG,GAAyB,gBAATA,IAAqBmtB,GAASC,KAAKptB,IAAWA,EAAQ,GACtEhG,EAA=
mB,MAAVA,EAAiBqzB,GAAmBrzB,EACtCgG,EAAQ,IAAMA,EAAQ,GAAK,GAAahG,EAARgG,EAY=
zC,QAASklB,IAAellB,EAAO6S,EAAO/X,GACpC,IAAKme,GAASne,GACZ,OAAO,CAET,IAAIj=
C,SAAcga,EAClB,IAAY,UAARha,EACGwiB,GAAYvgB,IAAWygB,GAAQ1I,EAAO/X,EAAOd,QA=
CrC,UAARnB,GAAoBga,IAAS/X,GAAS,CAC3C,GAAIqX,GAAQrX,EAAO+X,EACnB,OAAO7S,KA=
AUA,EAASA,IAAUmS,EAAUA,IAAUA,EAE1D,OAAO,EAWT,QAASyO,IAAM5gB,EAAOlF,GACpB,=
GAAIjC,SAAcmH,EAClB,IAAa,UAARnH,GAAoBy0B,GAAcF,KAAKptB,IAAmB,UAARnH,EACrD=
,OAAO,CAET,IAAIoC,GAAQ+E,GACV,OAAO,CAET,IAAIhK,IAAUu3B,GAAaH,KAAKptB,EACh=
C,OAAOhK,IAAqB,MAAV8E,GAAkBkF,IAASif,IAASnkB,GAUxD,QAASwsB,IAAW7L,GAClB,G=
AAI2L,GAAWD,GAAY1L,EAC3B,MAAM2L,IAAYxR,GAAYngB,WAC5B,OAAO,CAET,IAAI0c,GAA=
QwD,EAAOyR,EACnB,IAAI3L,IAAStJ,EACX,OAAO,CAET,IAAIvW,GAAOyrB,GAAQlV,EACnB=
,SAASvW,GAAQ6f,IAAS7f,EAAK,GAYjC,QAASypB,IAASrlB,GAChB,MAAuB,gBAATA,IAAqB=
A,EAAQ,IAAMA,EAAQ,GAAK,GAAcqtB,IAATrtB,EAWrE,QAAS6gB,IAAmB7gB,GAC1B,MAAOA=
,KAAUA,IAAUiZ,GAASjZ,GAkBtC,QAAS8qB,IAAUlvB,EAAM2d,GACvB,GAAIkP,GAAU7sB,E=
AAK,GACf4xB,EAAajU,EAAO,GACpBkU,EAAahF,EAAU+E,EACvBhQ,EAAwB+J,EAAbkG,EAEX=
C,EACDF,GAAcjG,GAAYkB,GAAWjB,GACrCgG,GAAcjG,GAAYkB,GAAWf,GAAc9rB,EAAK,GAA=
G5B,QAAUuf,EAAO,IAC5EiU,IAAejG,EAAWG,IAAee,GAAWjB,CAGvD,KAAMhK,IAAYkQ,EAC=
hB,MAAO9xB,EAGL4xB,GAAa/D,IACf7tB,EAAK,GAAK2d,EAAO,GAEjBkU,GAAehF,EAAUgB,=
EAAa,EAAIQ,EAG5C,IAAIjqB,GAAQuZ,EAAO,EACnB,IAAIvZ,EAAO,CACT,GAAI8jB,GAAWl=
oB,EAAK,EACpBA,GAAK,GAAKkoB,EAAWD,GAAYC,EAAU9jB,EAAOuZ,EAAO,IAAM1C,GAAU7W=
,GACzEpE,EAAK,GAAKkoB,EAAWjP,EAAejZ,EAAK,GAAIoZ,GAAe6B,GAAU0C,EAAO,IA0B/E=
,MAvBAvZ,GAAQuZ,EAAO,GACXvZ,IACF8jB,EAAWloB,EAAK,GAChBA,EAAK,GAAKkoB,EAAW=
Q,GAAiBR,EAAU9jB,EAAOuZ,EAAO,IAAM1C,GAAU7W,GAC9EpE,EAAK,GAAKkoB,EAAWjP,EA=
AejZ,EAAK,GAAIoZ,GAAe6B,GAAU0C,EAAO,KAG/EvZ,EAAQuZ,EAAO,GACXvZ,IACFpE,EAA=
K,GAAKib,GAAU7W,IAGlBwtB,EAAajG,IACf3rB,EAAK,GAAgB,MAAXA,EAAK,GAAa2d,EAAO=
,GAAK7B,GAAU9b,EAAK,GAAI2d,EAAO,KAGrD,MAAX3d,EAAK,KACPA,EAAK,GAAK2d,EAAO,=
IAGnB3d,EAAK,GAAK2d,EAAO,GACjB3d,EAAK,GAAK6xB,EAEH7xB,EAWT,QAAS+xB,IAAclT=
,EAAaC,GAClC,MAAOD,KAAgBvgB,EAAYwgB,EAAckT,GAAMnT,EAAaC,EAAaiT,IAYnF,QAAS=
E,IAAY/yB,EAAQggB,GAC3BhgB,EAASmkB,GAASnkB,EAMlB,KAJA,GAAI+X,GAAQ,GACR7Y,=
EAAS8gB,EAAM9gB,OACfhE,OAEK6c,EAAQ7Y,GAAQ,CACvB,GAAIqe,GAAMyC,EAAMjI,EACZ=
wF,KAAOvd,KACT9E,EAAOqiB,GAAOvd,EAAOud,IAGzB,MAAOriB,GAYT,QAAS83B,IAAehzB=
,EAAQ6X,GAC9B,GAAI3c,KAMJ,OALAuoB,IAAUzjB,EAAQ,SAASkF,EAAOqY,EAAKvd,GACjC=
6X,EAAU3S,EAAOqY,EAAKvd,KACxB9E,EAAOqiB,GAAOrY,KAGXhK,EAaT,QAAS+zB,IAAQru=
B,EAAOgmB,GAKtB,IAJA,GAAItK,GAAY1b,EAAM1B,OAClBA,EAAS0d,GAAUgK,EAAQ1nB,OA=
AQod,GACnC2W,EAAWlX,GAAUnb,GAElB1B,KAAU,CACf,GAAI6Y,GAAQ6O,EAAQ1nB,EACpB0=
B,GAAM1B,GAAUuhB,GAAQ1I,EAAOuE,GAAa2W,EAASlb,GAAS3Y,EAEhE,MAAOwB,GA4CT,QA=
ASsyB,IAASlzB,GAWhB,IAVA,GAAIggB,GAAQ2D,GAAO3jB,GACfwgB,EAAcR,EAAM9gB,OAC=
pBA,EAASshB,GAAexgB,EAAOd,OAE/Bi0B,IAAiBj0B,GAAUqrB,GAASrrB,KACrCiB,GAAQH=
,IAAWwjB,GAAYxjB,IAE9B+X,EAAQ,GACR7c,OAEK6c,EAAQyI,GAAa,CAC5B,GAAIjD,GAAM=
yC,EAAMjI,IACXob,GAAgB1S,GAAQlD,EAAKre,IAAY8b,GAAezhB,KAAKyG,EAAQud,KACxE=
riB,EAAOM,KAAK+hB,GAGhB,MAAOriB,GAUT,QAAS2wB,IAAW3mB,GAClB,MAAa,OAATA,KAG=
Cqb,GAAYrb,GAGViZ,GAASjZ,GAASA,EAAQgJ,GAAOhJ,GAF/B2Y,GAAO3Y,GAYlB,QAASif,=
IAASjf,GAChB,MAAOiZ,IAASjZ,GAASA,EAAQgJ,GAAOhJ,GAU1C,QAAS8gB,IAAO9gB,GACd=
,GAAI/E,GAAQ+E,GACV,MAAOA,EAET,IAAIhK,KAIJ,OAHAkd,GAAalT,GAAOc,QAAQotB,GA=
AY,SAAS7rB,EAAOsoB,EAAQwD,EAAOxzB,GACrE3E,EAAOM,KAAK63B,EAAQxzB,EAAOmG,QA=
AQstB,GAAc,MAASzD,GAAUtoB,KAE/DrM,EAUT,QAAS+f,IAAa2P,GACpB,MAAOA,aAAmB9P,=
GACtB8P,EAAQ3O,QACR,GAAIlB,GAAc6P,EAAQvP,YAAauP,EAAQrP,UAAWQ,GAAU6O,EAAQt=
P,cAyBlF,QAAS/f,IAAMqF,EAAO8O,EAAMya,GAExBza,GADEya,EAAQC,GAAexpB,EAAO8O,=
EAAMya,GAAiB,MAARza,GACxC,EAEA2Z,GAAUrC,GAAYtX,IAAS,EAAG,EAO3C,KALA,GAAIq=
I,GAAQ,EACR7Y,EAAS0B,EAAQA,EAAM1B,OAAS,EAChC+a,EAAW,GACX/e,EAASoN,GAAMmnB=
,GAAWvwB,EAASwQ,IAExBxQ,EAAR6Y,GACL7c,IAAS+e,GAAYgM,GAAUrlB,EAAOmX,EAAQA,=
GAASrI,EAEzD,OAAOxU,GAiBT,QAASq4B,IAAQ3yB,GAMf,IALA,GAAImX,GAAQ,GACR7Y,EA=
AS0B,EAAQA,EAAM1B,OAAS,EAChC+a,EAAW,GACX/e,OAEK6c,EAAQ7Y,GAAQ,CACvB,GAAIg=
G,GAAQtE,EAAMmX,EACd7S,KACFhK,IAAS+e,GAAY/U,GAGzB,MAAOhK,GAiDT,QAASs4B,IA=
AK5yB,EAAOuF,EAAGgkB,GACtB,GAAIjrB,GAAS0B,EAAQA,EAAM1B,OAAS,CACpC,OAAKA,K=
AGDirB,EAAQC,GAAexpB,EAAOuF,EAAGgkB,GAAc,MAALhkB,KAC5CA,EAAI,GAEC8f,GAAUr=
lB,EAAW,EAAJuF,EAAQ,EAAIA,OA2BtC,QAASstB,IAAU7yB,EAAOuF,EAAGgkB,GAC3B,GAA=
IjrB,GAAS0B,EAAQA,EAAM1B,OAAS,CACpC,OAAKA,KAGDirB,EAAQC,GAAexpB,EAAOuF,EA=
AGgkB,GAAc,MAALhkB,KAC5CA,EAAI,GAENA,EAAIjH,IAAWiH,GAAK,GACb8f,GAAUrlB,EA=
AO,EAAO,EAAJuF,EAAQ,EAAIA,OAoDzC,QAASutB,IAAe9yB,EAAOiX,EAAW+I,GACxC,MAAQ=
hgB,IAASA,EAAM1B,OACnB6oB,GAAUnnB,EAAO6mB,GAAY5P,EAAW+I,EAAS,IAAI,GAAM,MA=
qDjE,QAAS+S,IAAU/yB,EAAOiX,EAAW+I,GACnC,MAAQhgB,IAASA,EAAM1B,OACnB6oB,GAA=
UnnB,EAAO6mB,GAAY5P,EAAW+I,EAAS,IAAI,MAgC3D,QAASvV,IAAKzK,EAAOsE,EAAOpD,E=
AAOnG,GACjC,GAAIuD,GAAS0B,EAAQA,EAAM1B,OAAS,CACpC,OAAKA,IAGD4C,GAAyB,gBAA=
TA,IAAqBsoB,GAAexpB,EAAOsE,EAAOpD,KACpEA,EAAQ,EACRnG,EAAMuD,GAED+jB,GAASr=
iB,EAAOsE,EAAOpD,EAAOnG,OAwHvC,QAASi4B,IAAMhzB,GACb,MAAOA,GAAQA,EAAM,GAAK=
xB,EAuB5B,QAASy0B,IAAQjzB,EAAOwgB,EAAQ+I,GAC9B,GAAIjrB,GAAS0B,EAAQA,EAAM1=
B,OAAS,CAIpC,OAHIirB,IAASC,GAAexpB,EAAOwgB,EAAQ+I,KACzC/I,GAAS,GAEJliB,EA=
ASokB,GAAY1iB,EAAOwgB,MAgBrC,QAAS0S,IAAYlzB,GACnB,GAAI1B,GAAS0B,EAAQA,EAA=
M1B,OAAS,CACpC,OAAOA,GAASokB,GAAY1iB,GAAO,MA+BrC,QAAS6G,IAAQ7G,EAAOsE,EAA=
O+S,GAC7B,GAAI/Y,GAAS0B,EAAQA,EAAM1B,OAAS,CACpC,KAAKA,EACH,MAAO,EAET,IAAw=
B,gBAAb+Y,GACTA,EAAwB,EAAZA,EAAgBoR,GAAUnqB,EAAS+Y,EAAW,GAAKA,MAC1D,IAAIA=
,EAAW,CACpB,GAAIF,GAAQmQ,GAAYtnB,EAAOsE,EAC/B,OAAYhG,GAAR6Y,IACC7S,IAAUA,=
EAASA,IAAUtE,EAAMmX,GAAWnX,EAAMmX,KAAWnX,EAAMmX,IACjEA,EAEF,GAET,MAAOC,GA=
AYpX,EAAOsE,EAAO+S,GAAa,GAgBhD,QAAS8b,IAAQnzB,GACf,MAAO6yB,IAAU7yB,EAAO,G=
AmE1B,QAASslB,IAAKtlB,GACZ,GAAI1B,GAAS0B,EAAQA,EAAM1B,OAAS,CACpC,OAAOA,GA=
AS0B,EAAM1B,EAAS,GAAKE,EA4BtC,QAAS40B,IAAYpzB,EAAOsE,EAAO+S,GACjC,GAAI/Y,=
GAAS0B,EAAQA,EAAM1B,OAAS,CACpC,KAAKA,EACH,MAAO,EAET,IAAI6Y,GAAQ7Y,CACZ,IA=
AwB,gBAAb+Y,GACTF,GAAqB,EAAZE,EAAgBoR,GAAUnqB,EAAS+Y,EAAW,GAAK2E,GAAU3E,G=
AAa,EAAG/Y,EAAS,IAAM,MAChG,IAAI+Y,EAAW,CACpBF,EAAQmQ,GAAYtnB,EAAOsE,GAAO,=
GAAQ,CAC1C,IAAImS,GAAQzW,EAAMmX,EAClB,QAAI7S,IAAUA,EAASA,IAAUmS,EAAUA,IAA=
UA,GAC5CU,EAEF,GAET,GAAI7S,IAAUA,EACZ,MAAOgT,GAAWtX,EAAOmX,GAAO,EAElC,MAA=
OA,KACL,GAAInX,EAAMmX,KAAW7S,EACnB,MAAO6S,EAGX,OAAO,GAwBT,QAASkc,MACP,GAA=
I5R,GAAO9iB,UACPqB,EAAQyhB,EAAK,EAEjB,KAAMzhB,IAASA,EAAM1B,OACnB,MAAO0B,E=
AMT,KAJA,GAAImX,GAAQ,EACRtQ,EAAUgb,KACVvjB,EAASmjB,EAAKnjB,SAET6Y,EAAQ7Y,=
GAIf,IAHA,GAAI+Y,GAAY,EACZ/S,EAAQmd,EAAKtK,IAETE,EAAYxQ,EAAQ7G,EAAOsE,EAA=
O+S,IAAc,IACtD6O,GAAOvtB,KAAKqH,EAAOqX,EAAW,EAGlC,OAAOrX,GA2ET,QAASszB,IA=
AOtzB,EAAOiX,EAAW+I,GAChC,GAAI1lB,KACJ,KAAM0F,IAASA,EAAM1B,OACnB,MAAOhE,E=
AET,IAAI6c,GAAQ,GACR6O,KACA1nB,EAAS0B,EAAM1B,MAGnB,KADA2Y,EAAY4P,GAAY5P,E=
AAW+I,EAAS,KACnC7I,EAAQ7Y,GAAQ,CACvB,GAAIgG,GAAQtE,EAAMmX,EACdF,GAAU3S,EA=
AO6S,EAAOnX,KAC1B1F,EAAOM,KAAK0J,GACZ0hB,EAAQprB,KAAKuc,IAIjB,MADA4O,IAAW=
/lB,EAAOgmB,GACX1rB,EAiBT,QAASi5B,IAAKvzB,GACZ,MAAO4yB,IAAK5yB,EAAO,GAiBr=
B,QAAS8C,IAAM9C,EAAOkB,EAAOnG,GAC3B,GAAIuD,GAAS0B,EAAQA,EAAM1B,OAAS,CACpC=
,OAAKA,IAGDvD,GAAqB,gBAAPA,IAAmByuB,GAAexpB,EAAOkB,EAAOnG,KAChEmG,EAAQ,EA=
CRnG,EAAMuD,GAED+mB,GAAUrlB,EAAOkB,EAAOnG,OAmGjC,QAASy4B,IAAKxzB,EAAOuF,E=
AAGgkB,GACtB,GAAIjrB,GAAS0B,EAAQA,EAAM1B,OAAS,CACpC,OAAKA,KAGDirB,EAAQC,G=
AAexpB,EAAOuF,EAAGgkB,GAAc,MAALhkB,KAC5CA,EAAI,GAEC8f,GAAUrlB,EAAO,EAAO,E=
AAJuF,EAAQ,EAAIA,OA2BzC,QAASkuB,IAAUzzB,EAAOuF,EAAGgkB,GAC3B,GAAIjrB,GAAS=
0B,EAAQA,EAAM1B,OAAS,CACpC,OAAKA,KAGDirB,EAAQC,GAAexpB,EAAOuF,EAAGgkB,GAA=
c,MAALhkB,KAC5CA,EAAI,GAENA,EAAIjH,IAAWiH,GAAK,GACb8f,GAAUrlB,EAAW,EAAJuF=
,EAAQ,EAAIA,OAoDtC,QAASmuB,IAAe1zB,EAAOiX,EAAW+I,GACxC,MAAQhgB,IAASA,EAAM=
1B,OACnB6oB,GAAUnnB,EAAO6mB,GAAY5P,EAAW+I,EAAS,IAAI,GAAO,MAqDlE,QAAS2T,IA=
AU3zB,EAAOiX,EAAW+I,GACnC,MAAQhgB,IAASA,EAAM1B,OACnB6oB,GAAUnnB,EAAO6mB,G=
AAY5P,EAAW+I,EAAS,OAwEvD,QAAS4T,IAAK5zB,EAAO6zB,EAAUra,EAAUwG,GACvC,GAAI1=
hB,GAAS0B,EAAQA,EAAM1B,OAAS,CACpC,KAAKA,EACH,QAEc,OAAZu1B,GAAuC,iBAAZA,KA=
C7B7T,EAAUxG,EACVA,EAAWgQ,GAAexpB,EAAO6zB,EAAU7T,GAAWxhB,EAAYq1B,EAClEA,G=
AAW,EAEb,IAAI35B,GAAW2sB,IAIf,QAHkB,MAAZrN,GAAoBtf,IAAa4lB,MACrCtG,EAAWtf=
,EAASsf,EAAUwG,EAAS,IAEjC6T,GAAYhS,MAAgBzK,EAChCmC,EAAWvZ,EAAOwZ,GAClBuN,=
GAAS/mB,EAAOwZ,GAqBtB,QAASsa,IAAM9zB,GACb,IAAMA,IAASA,EAAM1B,OACnB,QAEF,I=
AAI6Y,GAAQ,GACR7Y,EAAS,CAEb0B,GAAQqe,GAAYre,EAAO,SAAS+zB,GAClC,MAAIpU,IAA=
YoU,IACdz1B,EAASmqB,GAAUsL,EAAMz1B,OAAQA,IAC1B,GAFT,QAMF,KADA,GAAIhE,GAAS=
oN,GAAMpJ,KACV6Y,EAAQ7Y,GACfhE,EAAO6c,GAASmH,GAASte,EAAO6lB,GAAa1O,GAE/C,=
OAAO7c,GAuBT,QAAS05B,IAAUh0B,EAAOwZ,EAAUwG,GAClC,GAAI1hB,GAAS0B,EAAQA,EAA=
M1B,OAAS,CACpC,KAAKA,EACH,QAEF,IAAIhE,GAASw5B,GAAM9zB,EACnB,OAAgB,OAAZwZ,=
EACKlf,GAETkf,EAAW0G,GAAa1G,EAAUwG,EAAS,GACpC1B,GAAShkB,EAAQ,SAASy5B,GAC/=
B,MAAOvV,IAAYuV,EAAOva,EAAUhb,GAAW,MAwCnD,QAASy1B,MAIP,IAHA,GAAI9c,GAAQ,G=
ACR7Y,EAASK,UAAUL,SAEd6Y,EAAQ7Y,GAAQ,CACvB,GAAI0B,GAAQrB,UAAUwY,EACtB,IAA=
IwI,GAAY3f,GACd,GAAI1F,GAASA,EACTikB,GAAUqD,GAAetnB,EAAQ0F,GAAQ4hB,GAAe5h=
B,EAAO1F,IAC/D0F,EAGR,MAAO1F,GAASysB,GAASzsB,MAyC3B,QAAS45B,IAAU9U,EAAOnC=
,GACxB,GAAI9F,GAAQ,GACR7Y,EAAS8gB,EAAQA,EAAM9gB,OAAS,EAChChE,IAKJ,MAHIgE,=
GAAW2e,GAAW1d,GAAQ6f,EAAM,MACtCnC,QAEO9F,EAAQ7Y,GAAQ,CACvB,GAAIqe,GAAMyC,=
EAAMjI,EACZ8F,GACF3iB,EAAOqiB,GAAOM,EAAO9F,GACZwF,IACTriB,EAAOqiB,EAAI,IA=
AMA,EAAI,IAGzB,MAAOriB,GA+DT,QAAS65B,IAAM7vB,GACb,GAAIhK,GAAS2f,EAAO3V,EA=
EpB,OADAhK,GAAOqgB,WAAY,EACZrgB,EA0BT,QAAS85B,IAAI9vB,EAAO+vB,EAAarU,GAE/=
B,MADAqU,GAAY17B,KAAKqnB,EAAS1b,GACnBA,EAwBT,QAASknB,IAAKlnB,EAAO+vB,EAAa=
rU,GAChC,MAAOqU,GAAY17B,KAAKqnB,EAAS1b,GA4BnC,QAASgwB,MACP,MAAOH,IAAMn7B,=
MA4Bf,QAASu7B,MACP,MAAO,IAAIpa,GAAcnhB,KAAKsL,QAAStL,KAAK2hB,WAqD9C,QAAS6=
Z,IAAalwB,GAIpB,IAHA,GAAIhK,GACAiE,EAASvF,KAENuF,YAAkB+b,IAAY,CACnC,GAAIe=
,GAAQhB,GAAa9b,EACrBjE,GACF2rB,EAASxL,YAAcY,EAEvB/gB,EAAS+gB,CAEX,IAAI4K,=
GAAW5K,CACf9c,GAASA,EAAOkc,YAGlB,MADAwL,GAASxL,YAAcnW,EAChBhK,EAuBT,QAASm=
6B,MACP,GAAInwB,GAAQtL,KAAKyhB,YAEb4Z,EAAc,SAAS/vB,GACzB,MAAQowB,IAAWA,EA=
AQ9Z,QAAU,EAAKtW,EAAQA,EAAM6X,UAE1D,IAAI7X,YAAiB4V,GAAa,CAChC,GAAIwa,GAAU=
pwB,CAMd,OALItL,MAAK0hB,YAAYpc,SACnBo2B,EAAU,GAAIxa,GAAYlhB,OAE5B07B,EAAU=
A,EAAQvY,UAClBuY,EAAQha,YAAY9f,MAAOmlB,KAAQyL,GAAM/J,MAAS4S,GAAcrU,QAAWxh=
B,IACpE,GAAI2b,GAAcua,EAAS17B,KAAK2hB,WAEzC,MAAO3hB,MAAKwyB,KAAK6I,GAenB,=
QAASM,MACP,MAAQ37B,MAAKsL,QAAU,GAgBzB,QAASswB,MACP,MAAO1Y,IAAiBljB,KAAKyh=
B,YAAazhB,KAAK0hB,aA0HjD,QAASma,IAAMpV,EAAYxI,EAAW+I,GACpC,GAAID,GAAOxgB,=
GAAQkgB,GAAczB,GAAakE,EAO9C,OANIlC,IAAWwJ,GAAe/J,EAAYxI,EAAW+I,KACnD/I,EA=
AYzY,IAEU,kBAAbyY,IAA2B+I,IAAYxhB,KAChDyY,EAAY4P,GAAY5P,EAAW+I,EAAS,IAEvC=
D,EAAKN,EAAYxI,GAoD1B,QAAS6d,IAAOrV,EAAYxI,EAAW+I,GACrC,GAAID,GAAOxgB,GAA=
QkgB,GAAcpB,GAAciE,EAE/C,OADArL,GAAY4P,GAAY5P,EAAW+I,EAAS,GACrCD,EAAKN,EA=
AYxI,GAyG1B,QAAS8d,IAAUtV,EAAY5B,GAC7B,MAAOmX,IAAKvV,EAAYW,GAAYvC,IAuItC,=
QAASoX,IAASxV,EAAYnV,EAAQ+M,EAAWkS,GAC/C,GAAIjrB,GAASmhB,EAAaiK,GAAUjK,GA=
Ac,CAUlD,OATKkK,IAASrrB,KACZmhB,EAAaxC,GAAOwC,GACpBnhB,EAASmhB,EAAWnhB,QA=
GpB+Y,EADsB,gBAAbA,IAA0BkS,GAASC,GAAelf,EAAQ+M,EAAWkS,GAClE,EAEY,EAAZlS,E=
AAgBoR,GAAUnqB,EAAS+Y,EAAW,GAAMA,GAAa,EAElD,gBAAdoI,KAA2BlgB,GAAQkgB,IAAe=
yV,GAASzV,GACxDnhB,GAAb+Y,GAAuBoI,EAAW5Y,QAAQyD,EAAQ+M,GAAa,KAC7D/Y,GAAUu=
jB,GAAWpC,EAAYnV,EAAQ+M,GAAa,GAgJ/D,QAAS8d,IAAI1V,EAAYjG,EAAUwG,GACjC,GAA=
ID,GAAOxgB,GAAQkgB,GAAcnB,GAAW0G,EAE5C,OADAxL,GAAWqN,GAAYrN,EAAUwG,EAAS,G=
ACnCD,EAAKN,EAAYjG,GAyF1B,QAAS4b,IAAM3V,EAAY4D,GACzB,MAAO8R,IAAI1V,EAAYY,=
GAASgD,IAsGlC,QAASgS,IAAO5V,EAAYxI,EAAW+I,GACrC,GAAID,GAAOxgB,GAAQkgB,GAA=
cpB,GAAciE,EAE/C,OADArL,GAAY4P,GAAY5P,EAAW+I,EAAS,GACrCD,EAAKN,EAAY,SAASn=
b,EAAO6S,EAAOsI,GAC7C,OAAQxI,EAAU3S,EAAO6S,EAAOsI,KAsBpC,QAAS6V,IAAO7V,EA=
AYla,EAAGgkB,GAC7B,GAAIA,EAAQC,GAAe/J,EAAYla,EAAGgkB,GAAc,MAALhkB,EAAW,CA=
C5Dka,EAAawL,GAAWxL,EACxB,IAAInhB,GAASmhB,EAAWnhB,MACxB,OAAOA,GAAS,EAAImh=
B,EAAW0G,GAAW,EAAG7nB,EAAS,IAAME,EAE9D,GAAI2Y,GAAQ,GACR7c,EAASi7B,GAAQ9V,=
GACjBnhB,EAAShE,EAAOgE,OAChBizB,EAAYjzB,EAAS,CAGzB,KADAiH,EAAIyW,GAAc,EAA=
JzW,EAAQ,GAAMA,GAAK,EAAIjH,KAC5B6Y,EAAQ5R,GAAG,CAClB,GAAIiwB,GAAOrP,GAAWh=
P,EAAOoa,GACzBjtB,EAAQhK,EAAOk7B,EAEnBl7B,GAAOk7B,GAAQl7B,EAAO6c,GACtB7c,=
EAAO6c,GAAS7S,EAGlB,MADAhK,GAAOgE,OAASiH,EACTjL,EAiBT,QAASm7B,IAAQhW,GACf=
,MAAO6V,IAAO7V,EAAYzE,IAuB5B,QAASlM,IAAK2Q,GACZ,GAAInhB,GAASmhB,EAAaiK,GA=
AUjK,GAAc,CAClD,OAAOkK,IAASrrB,GAAUA,EAAS+gB,GAAKI,GAAYnhB,OAoDtD,QAASo3B=
,IAAKjW,EAAYxI,EAAW+I,GACnC,GAAID,GAAOxgB,GAAQkgB,GAAcb,GAAY4H,EAO7C,OANI=
xG,IAAWwJ,GAAe/J,EAAYxI,EAAW+I,KACnD/I,EAAYzY,IAEU,kBAAbyY,IAA2B+I,IAAYxh=
B,KAChDyY,EAAY4P,GAAY5P,EAAW+I,EAAS,IAEvCD,EAAKN,EAAYxI,GAmD1B,QAAS0e,IAA=
OlW,EAAYjG,EAAUwG,GACpC,GAAkB,MAAdP,EACF,QAEEO,IAAWwJ,GAAe/J,EAAYjG,EAAUw=
G,KAClDxG,EAAWhb,EAEb,IAAI2Y,GAAQ,EACZqC,GAAWqN,GAAYrN,EAAUwG,EAAS,EAE1C,=
IAAI1lB,GAAS0qB,GAAQvF,EAAY,SAASnb,EAAOqY,EAAK8C,GACpD,OAAS5H,SAAY2B,EAAS=
lV,EAAOqY,EAAK8C,GAAatI,QAAWA,EAAO7S,MAASA,IAEpF,OAAOmiB,IAAWnsB,EAAQsd,G=
AmF5B,QAASge,IAAYnW,EAAY5D,EAAW9D,EAAQwR,GAClD,MAAkB,OAAd9J,MAGA8J,GAASC,=
GAAe3N,EAAW9D,EAAQwR,KAC7CxR,EAASvZ,GAENe,GAAQsc,KACXA,EAAyB,MAAbA,MAA0BA=
,IAEnCtc,GAAQwY,KACXA,EAAmB,MAAVA,MAAuBA,IAE3B6O,GAAgBnH,EAAY5D,EAAW9D,IA=
gChD,QAAS8d,IAAMpW,EAAY5B,GACzB,MAAOiX,IAAOrV,EAAYW,GAAYvC,IAgDxC,QAASiY,=
IAAMvwB,EAAGwa,GAChB,GAAmB,kBAARA,GAAoB,CAC7B,GAAgB,kBAALxa,GAKT,KAAM,IAA=
I9F,IAAUiiB,EAJpB,IAAIrV,GAAO9G,CACXA,GAAIwa,EACJA,EAAO1T,EAMX,MADA9G,GAA=
ImpB,GAAenpB,GAAKA,GAAKA,EAAI,EAC1B,WACL,QAAMA,EAAI,EACDwa,EAAKjc,MAAM9K,=
KAAM2F,WAD1B,QAsBJ,QAASwuB,IAAIpN,EAAMxa,EAAGgkB,GAKpB,MAJIA,IAASC,GAAezJ=
,EAAMxa,EAAGgkB,KACnChkB,EAAI/G,GAEN+G,EAAKwa,GAAa,MAALxa,EAAawa,EAAKzhB,=
OAASmqB,IAAWljB,GAAK,EAAG,GACpDulB,GAAc/K,EAAM8L,EAAUrtB,EAAWA,EAAWA,EAAW=
A,EAAW+G,GAmBnF,QAASwwB,IAAOxwB,EAAGwa,GACjB,GAAIzlB,EACJ,IAAmB,kBAARylB,=
GAAoB,CAC7B,GAAgB,kBAALxa,GAKT,KAAM,IAAI9F,IAAUiiB,EAJpB,IAAIrV,GAAO9G,CA=
CXA,GAAIwa,EACJA,EAAO1T,EAKX,MAAO,YAOL,QANM9G,EAAI,IACRjL,EAASylB,EAAKjc,=
MAAM9K,KAAM2F,YAEnB,GAAL4G,IACFwa,EAAOvhB,GAEFlE,GA8RX,QAAS07B,IAASjW,EAA=
MyB,EAAMvnB,GAyB5B,QAASg8B,KACHC,GACFC,GAAaD,GAEXE,GACFD,GAAaC,GAEfC,EAAa=
,EACbD,EAAeF,EAAYI,EAAe93B,EAG5C,QAAS+3B,GAASC,EAAU/9B,GACtBA,GACF09B,GAA=
a19B,GAEf29B,EAAeF,EAAYI,EAAe93B,EACtCg4B,IACFH,EAAaI,KACbn8B,EAASylB,EAA=
Kjc,MAAMkc,EAASyB,GACxByU,GAAcE,IACjB3U,EAAOzB,EAAUxhB,IAKvB,QAASk4B,KACP=
,GAAI70B,GAAY2f,GAAQiV,KAAQE,EACf,IAAb90B,GAAkBA,EAAY2f,EAChC+U,EAASD,EAA=
cF,GAEvBF,EAAYvU,GAAW+U,EAAS70B,GAIpC,QAAS+0B,KACPL,EAASM,EAAUX,GAGrB,QAA=
SY,KAMP,GALArV,EAAO9iB,UACPg4B,EAAQF,KACRzW,EAAUhnB,KACVs9B,EAAeO,IAAaX,I=
AAca,GAEtCC,KAAY,EACd,GAAIC,GAAcF,IAAYb,MACzB,CACAE,GAAiBW,IACpBV,EAAaM,E=
AEf,IAAI90B,GAAYm1B,GAAWL,EAAQN,GAC/BG,EAAwB,GAAb30B,GAAkBA,EAAYm1B,CAEzC=
R,IACEJ,IACFA,EAAeD,GAAaC,IAE9BC,EAAaM,EACbr8B,EAASylB,EAAKjc,MAAMkc,EAAS=
yB,IAErB2U,IACRA,EAAezU,GAAWiV,EAAY/0B,IAgB1C,MAbI20B,IAAYN,EACdA,EAAYC,G=
AAaD,GAEjBA,GAAa1U,IAASwV,IAC9Bd,EAAYvU,GAAW+U,EAASlV,IAE9ByV,IACFT,GAAW,=
EACXl8B,EAASylB,EAAKjc,MAAMkc,EAASyB,KAE3B+U,GAAaN,GAAcE,IAC7B3U,EAAOzB,E=
AAUxhB,GAEZlE,EArGT,GAAImnB,GACA2U,EACA97B,EACAq8B,EACA3W,EACAkW,EACAI,EA=
CAD,EAAa,EACbW,GAAU,EACVH,GAAW,CAEf,IAAmB,kBAAR9W,GACT,KAAM,IAAItgB,IAAUi=
iB,EAGtB,IADAF,EAAc,EAAPA,EAAW,GAAMA,GAAQ,EAC5BvnB,KAAY,EAAM,CACpB,GAAI88=
B,IAAU,CACdF,IAAW,MACFtZ,IAAStjB,KAClB88B,IAAY98B,EAAQ88B,QACpBC,EAAU,WAA=
a/8B,IAAWwuB,IAAWxuB,EAAQ+8B,SAAW,EAAGxV,GACnEqV,EAAW,YAAc58B,KAAYA,EAAQ4=
8B,SAAWA,EAmF1D,OADAC,GAAUb,OAASA,EACZa,EA6IT,QAASI,IAAQnX,EAAMoX,GACrB,G=
AAmB,kBAARpX,IAAuBoX,GAA+B,kBAAZA,GACnD,KAAM,IAAI13B,IAAUiiB,EAEtB,IAAI0V=
,GAAW,WACb,GAAI3V,GAAO9iB,UACPge,EAAMwa,EAAWA,EAASrzB,MAAM9K,KAAMyoB,GAAQ=
A,EAAK,GACnDnE,EAAQ8Z,EAAS9Z,KAErB,IAAIA,EAAMV,IAAID,GACZ,MAAOW,GAAMpW,IA=
AIyV,EAEnB,IAAIriB,GAASylB,EAAKjc,MAAM9K,KAAMyoB,EAE9B,OADA2V,GAAS9Z,MAAQ=
A,EAAMlW,IAAIuV,EAAKriB,GACzBA,EAGT,OADA88B,GAAS9Z,MAAQ,GAAI4Z,IAAQG,MACt=
BD,EAoET,QAASE,IAAOrgB,GACd,GAAwB,kBAAbA,GACT,KAAM,IAAIxX,IAAUiiB,EAEtB,O=
AAO,YACL,OAAQzK,EAAUnT,MAAM9K,KAAM2F,YAqBlC,QAAS44B,IAAKxX,GACZ,MAAOgW,IA=
AO,EAAGhW,GA4HnB,QAASsJ,IAAUtJ,EAAM7e,GACvB,GAAmB,kBAAR6e,GACT,KAAM,IAAIt=
gB,IAAUiiB,EAGtB,OADAxgB,GAAQunB,GAAUvnB,IAAU1C,EAAauhB,EAAKzhB,OAAS,GAAO=
4C,GAAS,EAAI,GACpE,WAML,IALA,GAAIugB,GAAO9iB,UACPwY,EAAQ,GACR7Y,EAASmqB,G=
AAUhH,EAAKnjB,OAAS4C,EAAO,GACxCqyB,EAAO7rB,GAAMpJ,KAER6Y,EAAQ7Y,GACfi1B,E=
AAKpc,GAASsK,EAAKvgB,EAAQiW,EAE7B,QAAQjW,GACN,IAAK,GAAG,MAAO6e,GAAKpnB,KA=
AKK,KAAMu6B,EAC/B,KAAK,GAAG,MAAOxT,GAAKpnB,KAAKK,KAAMyoB,EAAK,GAAI8R,EACx=
C,KAAK,GAAG,MAAOxT,GAAKpnB,KAAKK,KAAMyoB,EAAK,GAAIA,EAAK,GAAI8R,GAEnD,GAA=
IiE,GAAY9vB,GAAMxG,EAAQ,EAE9B,KADAiW,EAAQ,KACCA,EAAQjW,GACfs2B,EAAUrgB,GA=
ASsK,EAAKtK,EAG1B,OADAqgB,GAAUt2B,GAASqyB,EACZxT,EAAKjc,MAAM9K,KAAMw+B,IA=
mC5B,QAASC,IAAO1X,GACd,GAAmB,kBAARA,GACT,KAAM,IAAItgB,IAAUiiB,EAEtB,OAAO,=
UAAS1hB,GACd,MAAO+f,GAAKjc,MAAM9K,KAAMgH,IA2C5B,QAAS03B,IAAS3X,EAAMyB,EAA=
MvnB,GAC5B,GAAI88B,IAAU,EACVF,GAAW,CAEf,IAAmB,kBAAR9W,GACT,KAAM,IAAItgB,I=
AAUiiB,EAQtB,OANIznB,MAAY,EACd88B,GAAU,EACDxZ,GAAStjB,KAClB88B,EAAU,WAAa9=
8B,KAAYA,EAAQ88B,QAAUA,EACrDF,EAAW,YAAc58B,KAAYA,EAAQ48B,SAAWA,GAEnDb,GAA=
SjW,EAAMyB,GAAQuV,QAAWA,EAASC,SAAYxV,EAAMqV,SAAYA,IAwBlF,QAASc,IAAKrzB,EA=
AO0lB,GAEnB,MADAA,GAAqB,MAAXA,EAAkB7J,GAAW6J,EAChCc,GAAcd,EAAS+B,EAAcvtB,=
GAAY8F,OAwD1D,QAAS+W,IAAM/W,EAAOkc,EAAQrB,EAAYa,GASxC,MARIQ,IAA2B,iBAAVA,=
IAAuBgJ,GAAellB,EAAOkc,EAAQrB,GACxEqB,GAAS,EAEe,kBAAVA,KACdR,EAAUb,EACVA,=
EAAaqB,EACbA,GAAS,GAEiB,kBAAdrB,GACVoB,GAAUjc,EAAOkc,EAAQN,GAAaf,EAAYa,EA=
AS,IAC3DO,GAAUjc,EAAOkc,GAgDvB,QAASoX,IAAUtzB,EAAO6a,EAAYa,GACpC,MAA4B,kB=
AAdb,GACVoB,GAAUjc,GAAO,EAAM4b,GAAaf,EAAYa,EAAS,IACzDO,GAAUjc,GAAO,GAuBvB=
,QAASuzB,IAAGvzB,EAAOmS,GACjB,MAAOnS,GAAQmS,EAuBjB,QAASqhB,IAAIxzB,EAAOmS=
,GAClB,MAAOnS,IAASmS,EAmBlB,QAASmM,IAAYte,GACnB,MAAO0U,GAAa1U,IAAUqb,GAAY=
rb,IACxC8V,GAAezhB,KAAK2L,EAAO,YAAcyzB,GAAqBp/B,KAAK2L,EAAO,UAuC9E,QAAS0z=
B,IAAU1zB,GACjB,MAAOA,MAAU,GAAQA,KAAU,GAAU0U,EAAa1U,IAAUuc,GAAYloB,KAAK2L=
,IAAUkrB,EAmBjG,QAASyI,IAAO3zB,GACd,MAAO0U,GAAa1U,IAAUuc,GAAYloB,KAAK2L,I=
AAUmrB,EAmB3D,QAASyI,IAAU5zB,GACjB,QAASA,GAA4B,IAAnBA,EAAM6zB,UAAkBnf,EAA=
a1U,KAAWqhB,GAAcrhB,GA8BlF,QAAS8zB,IAAQ9zB,GACf,MAAa,OAATA,GACK,EAELqb,GA=
AYrb,KAAW/E,GAAQ+E,IAAU4wB,GAAS5wB,IAAUse,GAAYte,IACvE0U,EAAa1U,IAAU6e,GA=
AW7e,EAAM4hB,UACnC5hB,EAAMhG,QAER+gB,GAAK/a,GAAOhG,OA+CtB,QAAS+5B,IAAQ/zB=
,EAAOmS,EAAO0I,EAAYa,GACzCb,EAAkC,kBAAdA,GAA2Be,GAAaf,EAAYa,EAAS,GAAKxhB,=
CACtF,IAAIlE,GAAS6kB,EAAaA,EAAW7a,EAAOmS,GAASjY,CACrD,OAAQlE,KAAWkE,EAAYg=
lB,GAAYlf,EAAOmS,EAAO0I,KAAgB7kB,EAoB3E,QAASg+B,IAAQh0B,GACf,MAAO0U,GAAa1=
U,IAAkC,gBAAjBA,GAAMjJ,SAAuBwlB,GAAYloB,KAAK2L,IAAUorB,EA8B/F,QAASnoB,IAA=
SjD,GAChB,MAAuB,gBAATA,IAAqBoqB,GAAepqB,GAmBpD,QAAS6e,IAAW7e,GAIlB,MAAOiZ=
,IAASjZ,IAAUuc,GAAYloB,KAAK2L,IAAUyc,EAuBvD,QAASxD,IAASjZ,GAGhB,GAAInH,SA=
AcmH,EAClB,SAASA,IAAkB,UAARnH,GAA4B,YAARA,GA0CzC,QAASo7B,IAAQn5B,EAAQye,E=
AAQsB,EAAYa,GAE3C,MADAb,GAAkC,kBAAdA,GAA2Be,GAAaf,EAAYa,EAAS,GAAKxhB,EAC/=
EmmB,GAAYvlB,EAAQ6lB,GAAapH,GAASsB,GA4BnD,QAAShd,IAAMmC,GAGb,MAAOk0B,IAAS=
l0B,IAAUA,IAAUA,EAmBtC,QAASksB,IAASlsB,GAChB,MAAa,OAATA,GACK,EAEL6e,GAAW7=
e,GACNm0B,GAAW/G,KAAKgH,GAAW//B,KAAK2L,IAElC0U,EAAa1U,IAAUq0B,GAAajH,KAAK=
ptB,GAmBlD,QAASs0B,IAAOt0B,GACd,MAAiB,QAAVA,EAyBT,QAASk0B,IAASl0B,GAChB,M=
AAuB,gBAATA,IAAsB0U,EAAa1U,IAAUuc,GAAYloB,KAAK2L,IAAUqrB,GAiCxF,QAAShK,IA=
AcrhB,GACrB,GAAI6lB,EAGJ,KAAMnR,EAAa1U,IAAUuc,GAAYloB,KAAK2L,IAAU0c,IAAc4=
B,GAAYte,KAC5E8V,GAAezhB,KAAK2L,EAAO,iBAAmB6lB,EAAO7lB,EAAMtG,YAA4B,kBAAR=
msB,MAAwBA,YAAgBA,KAC3H,OAAO,CAKT,IAAI7vB,EAOJ,OAHAuoB,IAAUve,EAAO,SAASgd=
,EAAU3E,GAClCriB,EAASqiB,IAEJriB,IAAWkE,GAAa4b,GAAezhB,KAAK2L,EAAOhK,GAmB=
5D,QAASu+B,IAASv0B,GAChB,MAAOiZ,IAASjZ,IAAUuc,GAAYloB,KAAK2L,IAAUsrB,GAmB=
vD,QAASsF,IAAS5wB,GAChB,MAAuB,gBAATA,IAAsB0U,EAAa1U,IAAUuc,GAAYloB,KAAK2L=
,IAAUurB,GAmBxF,QAAS5L,IAAa3f,GACpB,MAAO0U,GAAa1U,IAAUqlB,GAASrlB,EAAMhG,=
WAAaw6B,GAAejY,GAAYloB,KAAK2L,IAmB5F,QAASy0B,IAAYz0B,GACnB,MAAOA,KAAU9F,E=
AuBnB,QAASw6B,IAAG10B,EAAOmS,GACjB,MAAeA,GAARnS,EAuBT,QAAS20B,IAAI30B,EAA=
OmS,GAClB,MAAgBA,IAATnS,EAkBT,QAASixB,IAAQjxB,GACf,GAAIhG,GAASgG,EAAQolB,=
GAAUplB,GAAS,CACxC,OAAKqlB,IAASrrB,GAGTA,EAGE6c,GAAU7W,MALR2Y,GAAO3Y,GA+B=
lB,QAASshB,IAActhB,GACrB,MAAOib,IAASjb,EAAOye,GAAOze,IA+HhC,QAAS40B,IAAOn=
/B,EAAWo/B,EAAY5P,GACrC,GAAIjvB,GAASmwB,GAAW1wB,EAIxB,OAHIwvB,IAASC,GAAez=
vB,EAAWo/B,EAAY5P,KACjD4P,EAAa36B,GAER26B,EAAa7Z,GAAWhlB,EAAQ6+B,GAAc7+B,=
EA8QvD,QAAS8+B,IAAUh6B,GACjB,MAAO8jB,IAAc9jB,EAAQ2jB,GAAO3jB,IA2BtC,QAAS8=
H,IAAI9H,EAAQikB,EAAMgW,GACzB,GAAI/+B,GAAmB,MAAV8E,EAAiBZ,EAAY4kB,GAAQhkB=
,EAAQgmB,GAAO/B,GAAOA,EAAO,GAC/E,OAAO/oB,KAAWkE,EAAY66B,EAAe/+B,EAyB/C,QA=
ASsiB,IAAIxd,EAAQikB,GACnB,GAAc,MAAVjkB,EACF,OAAO,CAET,IAAI9E,GAAS8f,GAAe=
zhB,KAAKyG,EAAQikB,EACzC,KAAK/oB,IAAW4qB,GAAM7B,GAAO,CAG3B,GAFAA,EAAO+B,G=
AAO/B,GACdjkB,EAAwB,GAAfikB,EAAK/kB,OAAcc,EAASgkB,GAAQhkB,EAAQimB,GAAUhC,=
EAAM,EAAG,KAC1D,MAAVjkB,EACF,OAAO,CAETikB,GAAOiC,GAAKjC,GACZ/oB,EAAS8f,GA=
AezhB,KAAKyG,EAAQikB,GAEvC,MAAO/oB,IAAWqvB,GAASvqB,EAAOd,SAAWuhB,GAAQwD,E=
AAMjkB,EAAOd,UAC/DiB,GAAQH,IAAWwjB,GAAYxjB,IA0BpC,QAASk6B,IAAOl6B,EAAQm6B=
,EAAYhQ,GAC9BA,GAASC,GAAepqB,EAAQm6B,EAAYhQ,KAC9CgQ,EAAa/6B,EAOf,KALA,GAA=
I2Y,GAAQ,GACRiI,EAAQC,GAAKjgB,GACbd,EAAS8gB,EAAM9gB,OACfhE,OAEK6c,EAAQ7Y,=
GAAQ,CACvB,GAAIqe,GAAMyC,EAAMjI,GACZ7S,EAAQlF,EAAOud,EAEf4c,GACEnf,GAAezh=
B,KAAK2B,EAAQgK,GAC9BhK,EAAOgK,GAAO1J,KAAK+hB,GAEnBriB,EAAOgK,IAAUqY,GAIn=
BriB,EAAOgK,GAASqY,EAGpB,MAAOriB,GA6DT,QAASyoB,IAAO3jB,GACd,GAAc,MAAVA,EA=
CF,QAEGme,IAASne,KACZA,EAASkO,GAAOlO,GAElB,IAAId,GAASc,EAAOd,MACpBA,GAAUA=
,GAAUqrB,GAASrrB,KAC1BiB,GAAQH,IAAWwjB,GAAYxjB,KAAYd,GAAW,CAQzD,KANA,GAAI=
6rB,GAAO/qB,EAAOpB,YACdmZ,EAAQ,GACRqiB,EAAyB,kBAARrP,IAAsBA,EAAKpwB,YAAcq=
F,EAC1D9E,EAASoN,GAAMpJ,GACfm7B,EAAcn7B,EAAS,IAElB6Y,EAAQ7Y,GACfhE,EAAO6c=
,GAAUA,EAAQ,EAE3B,KAAK,GAAIwF,KAAOvd,GACRq6B,GAAe5Z,GAAQlD,EAAKre,IACrB,e=
AAPqe,IAAyB6c,IAAYpf,GAAezhB,KAAKyG,EAAQud,KACrEriB,EAAOM,KAAK+hB,EAGhB,O=
AAOriB,GAuHT,QAASg2B,IAAMlxB,GACbA,EAASmkB,GAASnkB,EAOlB,KALA,GAAI+X,GAAQ=
,GACRiI,EAAQC,GAAKjgB,GACbd,EAAS8gB,EAAM9gB,OACfhE,EAASoN,GAAMpJ,KAEV6Y,E=
AAQ7Y,GAAQ,CACvB,GAAIqe,GAAMyC,EAAMjI,EAChB7c,GAAO6c,IAAUwF,EAAKvd,EAAOud=
,IAE/B,MAAOriB,GAkET,QAASA,IAAO8E,EAAQikB,EAAMgW,GAC5B,GAAI/+B,GAAmB,MAAV=
8E,EAAiBZ,EAAYY,EAAOikB,EASjD,OARI/oB,KAAWkE,IACC,MAAVY,GAAmB8lB,GAAM7B,E=
AAMjkB,KACjCikB,EAAO+B,GAAO/B,GACdjkB,EAAwB,GAAfikB,EAAK/kB,OAAcc,EAASgkB=
,GAAQhkB,EAAQimB,GAAUhC,EAAM,EAAG,KACxE/oB,EAAmB,MAAV8E,EAAiBZ,EAAYY,EAAO=
kmB,GAAKjC,KAEpD/oB,EAASA,IAAWkE,EAAY66B,EAAe/+B,GAE1C6oB,GAAW7oB,GAAUA,E=
AAO3B,KAAKyG,GAAU9E,EA0BpD,QAAS8M,IAAIhI,EAAQikB,EAAM/e,GACzB,GAAc,MAAVlF=
,EACF,MAAOA,EAET,IAAIkkB,GAAWD,EAAO,EACtBA,GAA2B,MAAnBjkB,EAAOkkB,IAAoB4B=
,GAAM7B,EAAMjkB,IAAYkkB,GAAW8B,GAAO/B,EAO7E,KALA,GAAIlM,GAAQ,GACR7Y,EAAS+=
kB,EAAK/kB,OACdizB,EAAYjzB,EAAS,EACrBo7B,EAASt6B,EAEI,MAAVs6B,KAAoBviB,EA=
AQ7Y,GAAQ,CACzC,GAAIqe,GAAM0G,EAAKlM,EACXoG,IAASmc,KACPviB,GAASoa,EACXmI,=
EAAO/c,GAAOrY,EACU,MAAfo1B,EAAO/c,KAChB+c,EAAO/c,GAAOkD,GAAQwD,EAAKlM,EAA=
Q,YAGvCuiB,EAASA,EAAO/c,GAElB,MAAOvd,GAgCT,QAAS4R,IAAU5R,EAAQoa,EAAUiF,EA=
AauB,GAChD,GAAIxE,GAAQjc,GAAQH,IAAW6kB,GAAa7kB,EAG5C,IAFAoa,EAAWqN,GAAYrN=
,EAAUwG,EAAS,GAEvB,MAAfvB,EACF,GAAIjD,GAAS+B,GAASne,GAAS,CAC7B,GAAI+qB,GA=
AO/qB,EAAOpB,WAEhBygB,GADEjD,EACYjc,GAAQH,GAAU,GAAI+qB,MAEtBM,GAAWtH,GAAW=
gH,GAAQA,EAAKpwB,UAAYyE,OAG/DigB,KAMJ,QAHCjD,EAAQsC,GAAYuD,IAAYjiB,EAAQ,S=
AASkF,EAAO6S,EAAO/X,GAC9D,MAAOoa,GAASiF,EAAana,EAAO6S,EAAO/X,KAEtCqf,EA4B=
T,QAASxB,IAAO7d,GACd,MAAO8nB,IAAW9nB,EAAQigB,GAAKjgB,IA0BjC,QAASu6B,IAASv=
6B,GAChB,MAAO8nB,IAAW9nB,EAAQ2jB,GAAO3jB,IAoCnC,QAASw6B,IAAQt1B,EAAOpD,EA=
AOnG,GAQ7B,MAPAmG,IAASA,GAAS,EACdnG,IAAQyD,GACVzD,EAAMmG,EACNA,EAAQ,GAERn=
G,GAAOA,GAAO,EAETuJ,GAAS0X,GAAU9a,EAAOnG,IAAQuJ,EAAQmkB,GAAUvnB,EAAOnG,GA=
8BpE,QAAS8+B,IAAO72B,EAAKuB,EAAKu1B,GACpBA,GAAYtQ,GAAexmB,EAAKuB,EAAKu1B,=
KACvCv1B,EAAMu1B,EAAWt7B,EAEnB,IAAIu7B,GAAe,MAAP/2B,EACRg3B,EAAe,MAAPz1B,=
CAuBZ,IArBgB,MAAZu1B,IACEE,GAAuB,iBAAPh3B,IAClB82B,EAAW92B,EACXA,EAAM,GAE=
e,iBAAPuB,KACdu1B,EAAWv1B,EACXy1B,GAAQ,IAGRD,GAASC,IACXz1B,EAAM,EACNy1B,G=
AAQ,GAEVh3B,GAAOA,GAAO,EACVg3B,GACFz1B,EAAMvB,EACNA,EAAM,GAENuB,GAAOA,GAA=
O,EAEZu1B,GAAY92B,EAAM,GAAKuB,EAAM,EAAG,CAClC,GAAIixB,GAAOnP,IACX,OAAOrK,=
IAAUhZ,EAAOwyB,GAAQjxB,EAAMvB,EAAMi3B,GAAW,QAAUzE,EAAO,IAAIl3B,OAAS,KAAOi=
G,GAE9F,MAAO4hB,IAAWnjB,EAAKuB,GA0CzB,QAAS21B,IAAWj7B,GAElB,MADAA,GAASuY,=
EAAavY,GACfA,GAAWA,EAAO6M,OAAO,GAAGkD,cAAgB/P,EAAO6D,MAAM,GAiBlE,QAASynB,=
IAAOtrB,GAEd,MADAA,GAASuY,EAAavY,GACfA,GAAUA,EAAOmG,QAAQ+0B,GAAU/hB,GAAch=
T,QAAQg1B,GAAa,IAwB/E,QAASC,IAASp7B,EAAQqL,EAAQnO,GAChC8C,EAASuY,EAAavY,G=
ACtBqL,GAAmB,EAEnB,IAAIhM,GAASW,EAAOX,MAMpB,OALAnC,GAAWA,IAAaqC,EACpBF,EA=
CA0d,GAAqB,EAAX7f,EAAe,GAAMA,GAAY,EAAImC,GAEnDnC,GAAYmO,EAAOhM,OACZnC,GAA=
Y,GAAK8C,EAAO4H,QAAQyD,EAAQnO,IAAaA,EAmC9D,QAASm+B,IAAOr7B,GAGd,MADAA,GAA=
SuY,EAAavY,GACdA,GAAUs7B,GAAmB7I,KAAKzyB,GACtCA,EAAOmG,QAAQo1B,GAAiBjiB,G=
AChCtZ,EAiBN,QAASw7B,IAAax7B,GAEpB,MADAA,GAASuY,EAAavY,GACdA,GAAUy7B,GAAi=
BhJ,KAAKzyB,GACpCA,EAAOmG,QAAQu1B,GAAejiB,GAC7BzZ,GAAU,OAgDjB,QAAS27B,IAA=
I37B,EAAQX,EAAQoZ,GAC3BzY,EAASuY,EAAavY,GACtBX,GAAUA,CAEV,IAAImwB,GAAYxvB=
,EAAOX,MACvB,IAAImwB,GAAanwB,IAAWowB,GAAepwB,GACzC,MAAOW,EAET,IAAI0oB,IAA=
OrpB,EAASmwB,GAAa,EAC7B9F,EAAavC,GAAYuB,GACzBoB,EAAc8F,GAAWlH,EAG7B,OADAj=
Q,GAAQgV,GAAc,GAAI3D,EAAarR,GAChCA,EAAM5U,MAAM,EAAG6lB,GAAc1pB,EAASyY,EA0=
E/C,QAASzV,IAAShD,EAAQ47B,EAAOtR,GAU/B,OANIA,EAAQC,GAAevqB,EAAQ47B,EAAOtR=
,GAAkB,MAATsR,GACjDA,EAAQ,EACCA,IACTA,GAASA,GAEX57B,EAASqG,GAAKrG,GACP67B=
,GAAe77B,EAAQ47B,IAAUE,GAAerJ,KAAKzyB,GAAU,GAAK,KAuB7E,QAAS2vB,IAAO3vB,EA=
AQsG,GACtB,GAAIjL,GAAS,EAGb,IAFA2E,EAASuY,EAAavY,GACtBsG,GAAKA,EACG,EAAJA=
,IAAUtG,IAAWyvB,GAAenpB,GACtC,MAAOjL,EAIT,GACMiL,GAAI,IACNjL,GAAU2E,GAEZs=
G,EAAI6gB,GAAY7gB,EAAI,GACpBtG,GAAUA,QACHsG,EAET,OAAOjL,GAsET,QAAS0gC,IAA=
W/7B,EAAQqL,EAAQnO,GAMlC,MALA8C,GAASuY,EAAavY,GACtB9C,EAAuB,MAAZA,EACP,EA=
CA6f,GAAqB,EAAX7f,EAAe,GAAMA,GAAY,EAAI8C,EAAOX,QAEnDW,EAAOm0B,YAAY9oB,EAA=
QnO,IAAaA,EAmGjD,QAAS8+B,IAASh8B,EAAQhF,EAASihC,GAGjC,GAAIC,GAAWlhB,EAAOm=
hB,gBAElBF,IAAgB1R,GAAevqB,EAAQhF,EAASihC,KAClDjhC,EAAUihC,EAAe18B,GAE3BS=
,EAASuY,EAAavY,GACtBhF,EAAUilB,GAAWI,MAAe4b,GAAgBjhC,GAAUkhC,EAAUlc,GAExE=
,IAIIoc,GACAC,EALAC,EAAUrc,GAAWI,MAAerlB,EAAQshC,SAAUJ,EAASI,QAAStc,IACxE=
uc,EAAcnc,GAAKkc,GACnBE,EAAgBvU,GAAWqU,EAASC,GAIpCrkB,EAAQ,EACRukB,EAAczh=
C,EAAQyhC,aAAeC,GACrC9d,EAAS,WAGT+d,EAAeC,IAChB5hC,EAAQqgC,QAAUqB,IAAW9d,=
OAAS,IACvC6d,EAAY7d,OAAS,KACpB6d,IAAgBI,GAAgBC,GAAeJ,IAAW9d,OAAS,KACnE5jB=
,EAAQ+hC,UAAYL,IAAW9d,OAAS,KACzC,KAGEoe,EAAY,kBACb,aAAehiC,GACZA,EAAQgiC,=
UACP,6BAA+BC,GAAmB,KACnD,IAENj9B,GAAOmG,QAAQw2B,EAAc,SAASj1B,EAAOw1B,EAAa=
C,EAAkBC,EAAiBC,EAAe36B,GAsB1G,MArBAy6B,KAAqBA,EAAmBC,GAGxCxe,GAAU5e,EAAO=
6D,MAAMqU,EAAOxV,GAAQyD,QAAQm3B,GAAmBxjB,GAG7DojB,IACFd,GAAa,EACbxd,GAAU,=
YAAcse,EAAc,UAEpCG,IACFhB,GAAe,EACfzd,GAAU,OAASye,EAAgB,eAEjCF,IACFve,GAA=
U,iBAAmBue,EAAmB,+BAElDjlB,EAAQxV,EAASgF,EAAMrI,OAIhBqI,IAGTkX,GAAU,MAIV,=
IAAI2e,GAAWviC,EAAQuiC,QAClBA,KACH3e,EAAS,iBAAmBA,EAAS,SAGvCA,GAAUyd,EAAe=
zd,EAAOzY,QAAQq3B,GAAsB,IAAM5e,GACjEzY,QAAQs3B,GAAqB,MAC7Bt3B,QAAQu3B,GAA=
uB,OAGlC9e,EAAS,aAAe2e,GAAY,OAAS,SAC1CA,EACG,GACA,wBAEJ,qBACCnB,EACI,mBAC=
A,KAEJC,EACG,uFAEA,OAEJzd,EACA,eAEF,IAAIvjB,GAASsiC,GAAQ,WACnB,MAAOC,IAAS=
rB,EAAaS,EAAY,UAAYpe,GAAQ/Z,MAAMtF,EAAWi9B,IAMhF,IADAnhC,EAAOujB,OAASA,EA=
CZya,GAAQh+B,GACV,KAAMA,EAER,OAAOA,GAwBT,QAASgL,IAAKrG,EAAQyY,EAAO6R,GAC3=
B,GAAIjlB,GAAQrF,CAEZ,QADAA,EAASuY,EAAavY,KAIlBsqB,EAAQC,GAAellB,EAAOoT,E=
AAO6R,GAAkB,MAAT7R,GACzCzY,EAAO6D,MAAM6W,EAAiB1a,GAAS2a,EAAkB3a,GAAU,IAE5=
EyY,GAAiB,GACVzY,EAAO6D,MAAM2U,EAAexY,EAAQyY,GAAQC,EAAgB1Y,EAAQyY,GAAS,IA=
N3EzY,EA2BX,QAAS69B,IAAS79B,EAAQyY,EAAO6R,GAC/B,GAAIjlB,GAAQrF,CAEZ,OADAA=
,GAASuY,EAAavY,GACjBA,GAGDsqB,EAAQC,GAAellB,EAAOoT,EAAO6R,GAAkB,MAAT7R,GA=
CzCzY,EAAO6D,MAAM6W,EAAiB1a,IAEhCA,EAAO6D,MAAM2U,EAAexY,EAASyY,EAAQ,KAL3C=
zY,EA0BX,QAAS89B,IAAU99B,EAAQyY,EAAO6R,GAChC,GAAIjlB,GAAQrF,CAEZ,OADAA,GA=
ASuY,EAAavY,GACjBA,GAGDsqB,EAAQC,GAAellB,EAAOoT,EAAO6R,GAAkB,MAAT7R,GACzC=
zY,EAAO6D,MAAM,EAAG8W,EAAkB3a,GAAU,GAE9CA,EAAO6D,MAAM,EAAG6U,EAAgB1Y,EAAS=
yY,EAAQ,IAAO,GALtDzY,EAgDX,QAAS+9B,IAAM/9B,EAAQhF,EAASsvB,GAC1BA,GAASC,GA=
AevqB,EAAQhF,EAASsvB,KAC3CtvB,EAAUuE,EAEZ,IAAIF,GAAS2+B,EACTC,EAAWC,CAEf,=
IAAe,MAAXljC,EACF,GAAIsjB,GAAStjB,GAAU,CACrB,GAAImjC,GAAY,aAAenjC,GAAUA,E=
AAQmjC,UAAYA,CAC7D9+B,GAAS,UAAYrE,IAAYA,EAAQqE,QAAU,EAAKA,EACxD4+B,EAAW,Y=
AAcjjC,GAAUud,EAAavd,EAAQijC,UAAYA,MAEpE5+B,IAAUrE,GAAW,CAIzB,IADAgF,EAAS=
uY,EAAavY,GAClBX,GAAUW,EAAOX,OACnB,MAAOW,EAET,IAAIlE,GAAMuD,EAAS4+B,EAAS5=
+B,MAC5B,IAAU,EAANvD,EACF,MAAOmiC,EAET,IAAI5iC,GAAS2E,EAAO6D,MAAM,EAAG/H,=
EAC7B,IAAiB,MAAbqiC,EACF,MAAO9iC,GAAS4iC,CAElB,IAAIrE,GAASuE,IACX,GAAIn+B=
,EAAO6D,MAAM/H,GAAKsiC,OAAOD,GAAY,CACvC,GAAIz2B,GACA22B,EACAC,EAAYt+B,EAA=
O6D,MAAM,EAAG/H,EAMhC,KAJKqiC,EAAUrkC,SACbqkC,EAAYvB,GAAOuB,EAAUvf,QAASwT=
,GAAQC,KAAK8L,IAAc,IAAM,MAEzEA,EAAU7L,UAAY,EACd5qB,EAAQy2B,EAAU9L,KAAKiM,=
IAC7BD,EAAS32B,EAAMwQ,KAEjB7c,GAASA,EAAOwI,MAAM,EAAa,MAAVw6B,EAAiBviC,EAA=
MuiC,QAE7C,IAAIr+B,EAAO4H,QAAQu2B,EAAWriC,IAAQA,EAAK,CAChD,GAAIoc,GAAQ7c,=
EAAO84B,YAAYgK,EAC3BjmB,GAAQ,KACV7c,EAASA,EAAOwI,MAAM,EAAGqU,IAG7B,MAAO7c=
,GAAS4iC,EAqBlB,QAASM,IAASv+B,GAEhB,MADAA,GAASuY,EAAavY,GACdA,GAAUw+B,GAA=
iB/L,KAAKzyB,GACpCA,EAAOmG,QAAQs4B,GAAe7jB,GAC9B5a,EAqBN,QAASqrB,IAAMrrB,=
EAAQ0+B,EAASpU,GAK9B,MAJIA,IAASC,GAAevqB,EAAQ0+B,EAASpU,KAC3CoU,EAAUn/B,G=
AEZS,EAASuY,EAAavY,GACfA,EAAO0H,MAAMg3B,GAAWC,QAuEjC,QAAS1jC,IAAS6lB,EAAM=
C,EAASuJ,GAI/B,MAHIA,IAASC,GAAezJ,EAAMC,EAASuJ,KACzCvJ,EAAUxhB,GAELwa,EAA=
a+G,GAChB8d,GAAQ9d,GACRD,GAAaC,EAAMC,GAmBzB,QAAS8d,IAASx5B,GAChB,MAAO,YAC=
L,MAAOA,IAmBX,QAAS6b,IAAS7b,GAChB,MAAOA,GA4BT,QAASu5B,IAAQhgB,GACf,MAAOuC=
,IAAYG,GAAU1C,GAAQ,IA2BvC,QAASkgB,IAAgB1a,EAAM0B,GAC7B,MAAOzE,IAAoB+C,EAA=
M9C,GAAUwE,GAAU,IAgGvD,QAASiZ,IAAM5+B,EAAQye,EAAQ5jB,GAC7B,GAAe,MAAXA,EAA=
iB,CACnB,GAAIgkC,GAAQ1gB,GAASM,GACjBuB,EAAQ6e,EAAQ5e,GAAKxB,GAAUrf,EAC/B0=
/B,EAAe9e,GAASA,EAAM9gB,OAAU4kB,GAAcrF,EAAQuB,GAAS5gB,GAErE0/B,EAAcA,EAAY=
5/B,OAAS2/B,KACvCC,GAAc,EACdjkC,EAAU4jB,EACVA,EAASze,EACTA,EAASpG,MAGRklC=
,IACHA,EAAchb,GAAcrF,EAAQwB,GAAKxB,IAE3C,IAAIsW,IAAQ,EACRhd,EAAQ,GACR2J,E=
AASqC,GAAW/jB,GACpBd,EAAS4/B,EAAY5/B,MAErBrE,MAAY,EACdk6B,GAAQ,EACC5W,GAA=
StjB,IAAY,SAAWA,KACzCk6B,EAAQl6B,EAAQk6B,MAElB,QAAShd,EAAQ7Y,GAAQ,CACvB,G=
AAI0wB,GAAakP,EAAY/mB,GACzB4I,EAAOlC,EAAOmR,EAElB5vB,GAAO4vB,GAAcjP,EACjB=
e,IACF1hB,EAAOrF,UAAUi1B,GAAe,SAASjP,GACvC,MAAO,YACL,GAAIxF,GAAWvhB,KAAK2=
hB,SACpB,IAAIwZ,GAAS5Z,EAAU,CACrB,GAAIjgB,GAAS8E,EAAOpG,KAAKyhB,aACrBD,EA=
AUlgB,EAAOogB,YAAcS,GAAUniB,KAAK0hB,YAIlD,OAFAF,GAAQ5f,MAAOmlB,KAAQA,EAAM=
0B,KAAQ9iB,UAAWqhB,QAAW5gB,IAC3D9E,EAAOqgB,UAAYJ,EACZjgB,EAET,MAAOylB,GAA=
Kjc,MAAM1E,EAAQmf,IAAWvlB,KAAKsL,SAAU3F,cAEtDohB,IAGN,MAAO3gB,GAeT,QAASmV=
,MAEP,MADA2V,IAAKhW,EAAIiqB,GACFnlC,KAiBT,QAASolC,OA0BT,QAAS/d,IAASgD,GAC=
hB,MAAO6B,IAAM7B,GAAQwC,GAAaxC,GAAQyC,GAAiBzC,GAuB7D,QAASgb,IAAWj/B,GAClB=
,MAAO,UAASikB,GACd,MAAOD,IAAQhkB,EAAQgmB,GAAO/B,GAAOA,EAAO,KAqChD,QAASib,=
IAAMp9B,EAAOnG,EAAKwjC,GACrBA,GAAQ/U,GAAetoB,EAAOnG,EAAKwjC,KACrCxjC,EAAM=
wjC,EAAO//B,GAEf0C,GAASA,GAAS,EAClBq9B,EAAe,MAARA,EAAe,GAAMA,GAAQ,EAEzB,M=
AAPxjC,GACFA,EAAMmG,EACNA,EAAQ,GAERnG,GAAOA,GAAO,CAQhB,KAJA,GAAIoc,GAAQ,G=
ACR7Y,EAASmqB,GAAUoG,IAAY9zB,EAAMmG,IAAUq9B,GAAQ,IAAK,GAC5DjkC,EAASoN,GAA=
MpJ,KAEV6Y,EAAQ7Y,GACfhE,EAAO6c,GAASjW,EAChBA,GAASq9B,CAEX,OAAOjkC,GA8BT,=
QAASkkC,IAAMj5B,EAAGiU,EAAUwG,GAK1B,GAJAza,EAAI6gB,GAAY7gB,GAIR,EAAJA,IAA=
UmpB,GAAenpB,GAC3B,QAEF,IAAI4R,GAAQ,GACR7c,EAASoN,GAAMsU,GAAUzW,EAAGk5B,I=
AGhC,KADAjlB,EAAW0G,GAAa1G,EAAUwG,EAAS,KAClC7I,EAAQ5R,GACHk5B,GAARtnB,EAC=
F7c,EAAO6c,GAASqC,EAASrC,GAEzBqC,EAASrC,EAGb,OAAO7c,GAmBT,QAASokC,IAASC,G=
AChB,GAAIlmC,KAAOmmC,EACX,OAAOpnB,GAAamnB,GAAUlmC,EAmBhC,QAASglB,IAAIohB,=
EAAQC,GACnB,QAASD,GAAU,KAAOC,GAAU,GAuMtC,QAASC,IAAItf,EAAYjG,EAAUwG,GAKjC=
,MAJIA,IAAWwJ,GAAe/J,EAAYjG,EAAUwG,KAClDxG,EAAWhb,GAEbgb,EAAWqN,GAAYrN,EA=
AUwG,EAAS,GAChB,GAAnBxG,EAASlb,OACZugB,GAAStf,GAAQkgB,GAAcA,EAAawL,GAAWxL=
,GAAajG,GACpEsN,GAAQrH,EAAYjG,GAz2V1BQ,EAAUA,EAAU9F,GAAE8qB,SAAS9U,GAAK5c=
,SAAU0M,EAAS9F,GAAE+qB,KAAK/U,GAAMgV,KAAiBhV,EAGrF,IAAIxiB,IAAQsS,EAAQtS,=
MAChBy3B,GAAOnlB,EAAQmlB,KACfp9B,GAAQiY,EAAQjY,MAChB86B,GAAW7iB,EAAQ6iB,S=
ACnB95B,GAAOiX,EAAQjX,KACfnB,GAASoY,EAAQpY,OACjB0L,GAAS0M,EAAQ1M,OACjBuuB=
,GAAS7hB,EAAQ6hB,OACjBj4B,GAASoW,EAAQpW,OACjBnE,GAAYua,EAAQva,UAGpB2/B,GA=
Aa13B,GAAM3N,UACnBslC,GAAc/xB,GAAOvT,UACrBulC,GAAc17B,GAAO7J,UAGrB2+B,GAA=
amE,GAAS9iC,UAAU0D,SAGhC2c,GAAiBilB,GAAYjlB,eAG7BwkB,GAAY,EAMZ/d,GAAcwe,G=
AAY5hC,SAG1B0gC,GAAUjU,GAAKhW,EAGfukB,GAAaoD,GAAO,IACtBnD,GAAW//B,KAAKyhB=
,IAAgBhV,QAAQ,sBAAuB,QAC9DA,QAAQ,yDAA0D,SAAW,KAI5E1F,GAAcsa,EAAQta,YACtBy=
2B,GAAenc,EAAQmc,aACvB8D,GAAajgB,EAAQigB,WACrB3xB,GAAMvF,GAAKuF,IACXyvB,G=
AAuBsH,GAAYtH,qBACnC3a,GAAMmT,GAAUvW,EAAS,OACzB2H,GAAa3H,EAAQ2H,WACrBuE,G=
AASkZ,GAAWlZ,OACpB5oB,GAAa0c,EAAQ1c,WACrBiiC,GAAUhP,GAAUvW,EAAS,WAG7B6U,G=
AAa9rB,GAAKy8B,KAClBriB,GAAeoT,GAAUjjB,GAAQ,UACjC8Y,GAAcrjB,GAAKqG,MACnBq=
2B,GAAgBlP,GAAU7oB,GAAO,WACjCgnB,GAAiB1U,EAAQzS,SACzBm4B,GAAanP,GAAUjjB,G=
AAQ,QAC/Bmb,GAAY1lB,GAAKwB,IACjByX,GAAYjZ,GAAKC,IACjB28B,GAAYpP,GAAU4O,GA=
AM,OAC5BrE,GAAiB9gB,EAAQ/X,SACzBokB,GAAetjB,GAAK82B,OAGpB+F,GAAoBh+B,GAAO=
g+B,kBAC3B5kB,GAAoBpZ,GAAOoZ,kBAG3ByjB,GAAmB,WACnBxW,GAAkBwW,GAAmB,EACrC/=
W,GAAwB+W,KAAqB,EAM7C9M,GAAmB,iBAGnBkO,GAAUN,IAAW,GAAIA,IAGzBnP,KA8IUnW,G=
AAO6lB,UAWrB7lB,GAAOmhB,kBAQLd,OAAUyF,GAQV/D,SAAYgE,GAQZtE,YAAeI,GAQfU,SA=
AY,GAQZjB,SAQErnB,EAAK+F,GAovBT,IAAIwQ,IAAc,WAChB,QAASrrB,MACT,MAAO,UAASr=
F,GACd,GAAIwjB,GAASxjB,GAAY,CACvBqF,EAAOrF,UAAYA,CACnB,IAAIO,GAAS,GAAI8E,=
EACjBA,GAAOrF,UAAYyE,EAErB,MAAOlE,WA6EP6nB,GAAWsH,GAAepI,IAW1B4e,GAAgBxW,=
GAAezG,IAAiB,GAsKhDF,GAAU+G,KAYV5G,GAAe4G,IAAc,GAmgB7BwF,GAAewQ,GAAqB,SAA=
S9f,EAAM7f,GAErD,MADA2/B,IAAQz4B,IAAI2Y,EAAM7f,GACX6f,GAFoBI,GAgzCzBwL,GA=
AWkU,GAAiB,SAAS9f,GACvC,MAAO8f,IAAQ34B,IAAI6Y,IADIqe,GAmDrB1U,GAAY7D,GAAa=
,UA0azBqI,GAAW,WACb,GAAIgS,GAAQ,EACR7J,EAAa,CAEjB,OAAO,UAAS1Z,EAAKrY,GACn=
B,GAAIqyB,GAAQF,KACR50B,EAAYs+B,GAAYxJ,EAAQN,EAGpC,IADAA,EAAaM,EACT90B,EA=
AY,GACd,KAAMq+B,GAASE,EACb,MAAOzjB,OAGTujB,GAAQ,CAEV,OAAO7Q,IAAY1S,EAAKrY=
,OA+KxB+7B,GAAahX,GAAU,SAASrpB,EAAOid,GACzC,MAAQjE,GAAahZ,IAAU2f,GAAY3f,G=
ACvC4hB,GAAe5hB,EAAO0iB,GAAYzF,GAAQ,GAAO,SAiRnDqjB,GAAYnV,KAkDZoV,GAAgBpV=
,IAAgB,GAkJhCqV,GAAenX,GAAU,SAASoX,GAQpC,IAPA,GAAI7iB,GAAY6iB,EAAOniC,OAC=
nBqf,EAAWC,EACX8iB,EAASh5B,GAAMpJ,GACfuI,EAAUgb,KACVC,EAAWjb,GAAWuQ,EACtB=
9c,KAEGqjB,KAAY,CACjB,GAAIrZ,GAAQm8B,EAAO9iB,GAAYgC,GAAYrb,EAAQm8B,EAAO9i=
B,IAAarZ,IACvEo8B,GAAO/iB,GAAamE,GAAYxd,EAAMhG,QAAU,IAAOyjB,GAAYpE,GAAYrZ=
,GAAS,KAE1F,GAAItE,GAAQygC,EAAO,GACftpB,EAAQ,GACR7Y,EAAS0B,EAAQA,EAAM1B,O=
AAS,EAChCmb,EAAOinB,EAAO,EAElBtkB,GACA,OAASjF,EAAQ7Y,GAEf,GADAgG,EAAQtE,E=
AAMmX,IACTsC,EAAO4D,GAAa5D,EAAMnV,GAASuC,EAAQvM,EAAQgK,EAAO,IAAM,EAAG,CAE=
tE,IADA,GAAIqZ,GAAWC,IACND,GAAU,CACjB,GAAIL,GAAQojB,EAAO/iB,EACnB,KAAKL,E=
AAQD,GAAaC,EAAOhZ,GAASuC,EAAQ45B,EAAO9iB,GAAWrZ,EAAO,IAAM,EAC/E,QAAS8X,GA=
GT3C,GACFA,EAAK7e,KAAK0J,GAEZhK,EAAOM,KAAK0J,GAGhB,MAAOhK,KA6ILqmC,GAAStX=
,GAAU,SAASrpB,EAAOgmB,GACrCA,EAAUtD,GAAYsD,EAEtB,IAAI1rB,GAASklB,GAAOxf,E=
AAOgmB,EAE3B,OADAD,IAAW/lB,EAAOgmB,EAAQW,KAAKnQ,IACxBlc,IA2JLsmC,GAAczR,K=
AsBd0R,GAAkB1R,IAAkB,GAsMpC2R,GAAQzX,GAAU,SAASoX,GAC7B,MAAO1Z,IAASrE,GAAY=
+d,GAAQ,GAAO,MAgKzCM,GAAU1X,GAAU,SAASrpB,EAAOid,GACtC,MAAO0C,IAAY3f,GACf4=
hB,GAAe5hB,EAAOid,QAgDxB+jB,GAAM3X,GAAUyK,IA2DhBmN,GAAU5X,GAAU,SAASoX,GAC=
/B,GAAIniC,GAASmiC,EAAOniC,OAChBkb,EAAWlb,EAAS,EAAImiC,EAAOniC,EAAS,GAAKE=
,EAC7CwhB,EAAU1hB,EAAS,EAAImiC,EAAOniC,EAAS,GAAKE,CAShD,OAPIF,GAAS,GAAwB,=
kBAAZkb,GACvBlb,GAAU,GAEVkb,EAAYlb,EAAS,GAAuB,kBAAX0hB,MAA4B1hB,EAAQ0hB,G=
AAWxhB,EAChFwhB,EAAUxhB,GAEZiiC,EAAOniC,OAASA,EACT01B,GAAUyM,EAAQjnB,EAAU=
wG,KAwKjCkhB,GAAgB7X,GAAU,SAASpM,GAErC,MADAA,GAASyF,GAAYzF,GACdjkB,KAAKwy=
B,KAAK,SAASxrB,GACxB,MAAO0d,IAAYne,GAAQS,GAASA,GAASujB,GAASvjB,IAASid,OA0=
I/DkkB,GAAK9X,GAAU,SAAS5J,EAAYL,GACtC,MAAOI,IAAOC,EAAYiD,GAAYtD,MA4CpCgiB=
,GAAUpY,GAAiB,SAAS1uB,EAAQgK,EAAOqY,GACrDvC,GAAezhB,KAAK2B,EAAQqiB,KAASri=
B,EAAOqiB,GAAQriB,EAAOqiB,GAAO,IAuKhEqY,GAAO9J,GAAW/I,IAqBlBkf,GAAWnW,GAA=
W+U,IAAe,GAiErCqB,GAAUpV,GAAcpO,GAAWqE,IAqBnCof,GAAerV,GAAcnO,GAAgBkiB,IA=
4C7CuB,GAAUxY,GAAiB,SAAS1uB,EAAQgK,EAAOqY,GACjDvC,GAAezhB,KAAK2B,EAAQqiB,=
GAC9BriB,EAAOqiB,GAAK/hB,KAAK0J,GAEjBhK,EAAOqiB,IAAQrY,KA+Ffm9B,GAAUzY,GA=
AiB,SAAS1uB,EAAQgK,EAAOqY,GACrDriB,EAAOqiB,GAAOrY,IAyBZo9B,GAASrY,GAAU,SA=
AS5J,EAAY4D,EAAM5B,GAChD,GAAItK,GAAQ,GACR2J,EAAwB,kBAARuC,GAChBse,EAASzc,=
GAAM7B,GACf/oB,EAASqlB,GAAYF,GAAc/X,GAAM+X,EAAWnhB,UAMxD,OAJA6jB,IAAS1C,E=
AAY,SAASnb,GAC5B,GAAIyb,GAAOe,EAASuC,EAASse,GAAmB,MAATr9B,EAAiBA,EAAM+e,G=
AAQ7kB,CACtElE,KAAS6c,GAAS4I,EAAOA,EAAKjc,MAAMQ,EAAOmd,GAAQ+P,GAAWltB,EAA=
O+e,EAAM5B,KAEtEnnB,IA4HLsnC,GAAY5Y,GAAiB,SAAS1uB,EAAQgK,EAAOqY,GACvDriB,=
EAAOqiB,EAAM,EAAI,GAAG/hB,KAAK0J,IACxB,WAAa,gBAkEZu9B,GAAShV,GAAarO,GAAa2=
D,IAwBnC2f,GAAcjV,GAAalO,GAAkBshB,IAiS7C8B,GAAY1Y,GAAU,SAAS5J,EAAY5D,GAC7=
C,GAAkB,MAAd4D,EACF,QAEF,IAAI8J,GAAQ1N,EAAU,EAItB,OAHI0N,IAASC,GAAe3N,EAA=
U,GAAIA,EAAU,GAAI0N,KACtD1N,EAAUvd,OAAS,GAEdsoB,GAAgBnH,EAAYiD,GAAY7G,SAs=
G7C4a,GAAMkJ,IAAa,WACrB,OAAO,GAAIR,KAAO6C,WA+IhBC,GAAO5Y,GAAU,SAAStJ,EAAM=
C,EAASoI,GAC3C,GAAI2E,GAAUgB,CACd,IAAI3F,EAAS9pB,OAAQ,CACnB,GAAI+pB,GAAUl=
P,EAAeiP,EAAU6Z,GAAK7oB,YAC5C2T,IAAWhB,EAEb,MAAOjB,IAAc/K,EAAMgN,EAAS/M,E=
AASoI,EAAUC,KA+BrD6Z,GAAU7Y,GAAU,SAASjqB,EAAQ8+B,GACvCA,EAAcA,EAAY5/B,OAA=
SokB,GAAYwb,GAAe9E,GAAUh6B,EAKxE,KAHA,GAAI+X,GAAQ,GACR7Y,EAAS4/B,EAAY5/B,=
SAEhB6Y,EAAQ7Y,GAAQ,CACvB,GAAIqe,GAAMuhB,EAAY/mB,EACtB/X,GAAOud,GAAOmO,GA=
Ac1rB,EAAOud,GAAMoR,EAAW3uB,GAEtD,MAAOA,KA+CL+iC,GAAU9Y,GAAU,SAASjqB,EAAQ=
ud,EAAKyL,GAC5C,GAAI2E,GAAUgB,EAAYC,CAC1B,IAAI5F,EAAS9pB,OAAQ,CACnB,GAAI+=
pB,GAAUlP,EAAeiP,EAAU+Z,GAAQ/oB,YAC/C2T,IAAWhB,EAEb,MAAOjB,IAAcnO,EAAKoQ,=
EAAS3tB,EAAQgpB,EAAUC,KA2CnD+Z,GAAQ1X,GAAYoB,GAuCpBuW,GAAa3X,GAAY8D,GA8Lz=
B8T,GAAQjZ,GAAU,SAAStJ,EAAM0B,GACnC,MAAOF,IAAUxB,EAAM,EAAG0B,KAqBxB8gB,GA=
AQlZ,GAAU,SAAStJ,EAAMyB,EAAMC,GACzC,MAAOF,IAAUxB,EAAMyB,EAAMC,KAuB3B+gB,G=
AAOlX,KAsBPmX,GAAYnX,IAAW,GAwGvBoX,GAAUrZ,GAAU,SAAStJ,EAAM0Q,GAErC,GADAA,=
EAAa/N,GAAY+N,GACN,kBAAR1Q,KAAuB/B,GAAWyS,EAAYlZ,GACvD,KAAM,IAAI9X,IAAUii=
B,EAEtB,IAAIpjB,GAASmyB,EAAWnyB,MACxB,OAAO+qB,IAAU,SAAS5H,GAExB,IADA,GAAI=
tK,GAAQ6E,GAAUyF,EAAKnjB,OAAQA,GAC5B6Y,KACLsK,EAAKtK,GAASsZ,EAAWtZ,GAAOsK=
,EAAKtK,GAEvC,OAAO4I,GAAKjc,MAAM9K,KAAMyoB,OAqFxBkhB,GAAUhW,GAAcZ,GAiCxB6=
W,GAAejW,GAAckB,GA8B7BgV,GAAQxZ,GAAU,SAAStJ,EAAMiG,GACnC,MAAO8E,IAAc/K,EA=
AMiM,EAAYxtB,EAAWA,EAAWA,EAAWkkB,GAAYsD,MA0XlFzmB,GAAUkgC,IAAiB,SAASn7B,G=
ACtC,MAAO0U,GAAa1U,IAAUqlB,GAASrlB,EAAMhG,SAAWuiB,GAAYloB,KAAK2L,IAAUyf,G=
A0qBjFmO,GAAQ/I,GAAe5D,IAkCvBud,GAAS3Z,GAAe,SAAS/pB,EAAQye,EAAQsB,GACnD,M=
AAOA,GACHD,GAAW9f,EAAQye,EAAQsB,GAC3BG,GAAWlgB,EAAQye,KA+DrBmhB,GAAWjU,GA=
Ae+X,GAAQhkB,IAoBlCikB,GAAehY,GAAemH,GAAOD,IAkDrC+Q,GAAU5X,GAAc/J,IAkDxB4=
hB,GAAc7X,GAAcpI,IA6B5BkgB,GAAQ9W,GAAYtJ,IA2BpBqgB,GAAa/W,GAAYnJ,IA6BzBmg=
B,GAAS/W,GAAahL,IA2BtBgiB,GAAchX,GAAarJ,IAuK3B3D,GAAQqgB,GAAwB,SAAStgC,GA=
C3C,GAAI+qB,GAAiB,MAAV/qB,EAAiBZ,EAAYY,EAAOpB,WAC/C,OAAoB,kBAARmsB,IAAsBA=
,EAAKpwB,YAAcqF,GAC/B,kBAAVA,IAAwBugB,GAAYvgB,GACvCkzB,GAASlzB,GAEXme,GAA=
Sne,GAAUsgC,GAAWtgC,OANdkzB,GAgFrBgR,GAAUhX,IAAmB,GA2C7BiX,GAAYjX,KAyBZkX=
,GAAOna,GAAU,SAASjqB,EAAQggB,GACpC,GAAc,MAAVhgB,EACF,QAEF,IAAuB,kBAAZggB,=
GAAM,GAAkB,CACjC,GAAIA,GAAQd,GAASoE,GAAYtD,GAAQxb,GACzC,OAAOuuB,IAAY/yB,E=
AAQwiB,GAAemB,GAAO3jB,GAASggB,IAE5D,GAAInI,GAAYiJ,GAAad,EAAM,GAAIA,EAAM,G=
AAI,EACjD,OAAOgT,IAAehzB,EAAQ,SAASkF,EAAOqY,EAAKvd,GACjD,OAAQ6X,EAAU3S,EA=
AOqY,EAAKvd,OA2D9B6/B,GAAO5V,GAAU,SAASjqB,EAAQggB,GACpC,MAAc,OAAVhgB,KAGs=
B,kBAAZggB,GAAM,GAChBgT,GAAehzB,EAAQ8gB,GAAad,EAAM,GAAIA,EAAM,GAAI,IACxD+=
S,GAAY/yB,EAAQsjB,GAAYtD,MAuUlCqkB,GAAYpZ,GAAiB,SAAS/vB,EAAQopC,EAAMvsB,G=
AEtD,MADAusB,GAAOA,EAAK1iC,cACL1G,GAAU6c,EAASusB,EAAK53B,OAAO,GAAGkD,cAAg=
B00B,EAAK5gC,MAAM,GAAM4gC,KA0JxEC,GAAYtZ,GAAiB,SAAS/vB,EAAQopC,EAAMvsB,GA=
CtD,MAAO7c,IAAU6c,EAAQ,IAAM,IAAMusB,EAAK1iC,gBA+DxC4iC,GAAUnX,KAwBVoX,GAA=
WpX,IAAa,GAiGxBqX,GAAYzZ,GAAiB,SAAS/vB,EAAQopC,EAAMvsB,GACtD,MAAO7c,IAAU6=
c,EAAQ,IAAM,IAAMusB,EAAK1iC,gBAsBxC+iC,GAAY1Z,GAAiB,SAAS/vB,EAAQopC,EAAMv=
sB,GACtD,MAAO7c,IAAU6c,EAAQ,IAAM,KAAOusB,EAAK53B,OAAO,GAAGkD,cAAgB00B,EAA=
K5gC,MAAM,MA8e9E85B,GAAUvT,GAAU,SAAStJ,EAAM0B,GACrC,IACE,MAAO1B,GAAKjc,MA=
AMtF,EAAWijB,GAC7B,MAAM9lB,GACN,MAAO28B,IAAQ38B,GAAKA,EAAI,GAAIoG,IAAMpG,=
MA4KlCqoC,GAAS3a,GAAU,SAAShG,EAAM5B,GACpC,MAAO,UAASriB,GACd,MAAOoyB,IAAWp=
yB,EAAQikB,EAAM5B,MA0BhCwiB,GAAW5a,GAAU,SAASjqB,EAAQqiB,GACxC,MAAO,UAAS4B=
,GACd,MAAOmO,IAAWpyB,EAAQikB,EAAM5B,MA2VhC+d,GAAOzQ,GAAY,QAsBnB3lB,GAAQ2l=
B,GAAY,SAiDpBxqB,GAAMymB,GAAe6M,GAAI+H,IAiDzB58B,GAAMgoB,GAAegO,GAAIhe,IA=
sBzBkpB,GAAQnV,GAAY,QA2hBxB,OA5eA9U,GAAOlgB,UAAYugB,EAAWvgB,UAE9BogB,EAAc=
pgB,UAAY0wB,GAAWnQ,EAAWvgB,WAChDogB,EAAcpgB,UAAUiE,YAAcmc,EAEtCD,EAAYngB,=
UAAY0wB,GAAWnQ,EAAWvgB,WAC9CmgB,EAAYngB,UAAUiE,YAAckc,EAGpCsC,GAASziB,UAA=
U,UAAY2iB,GAC/BF,GAASziB,UAAUmN,IAAM2V,GACzBL,GAASziB,UAAU6iB,IAAME,GACzB=
N,GAASziB,UAAUqN,IAAM2V,GAGzBC,GAASjjB,UAAUa,KAAO4iB,GAG1B0Z,GAAQG,MAAQ7a=
,GAGhBvC,EAAO6b,MAAQA,GACf7b,EAAOkT,IAAMA,GACblT,EAAO6oB,OAASA,GAChB7oB,E=
AAOknB,GAAKA,GACZlnB,EAAO8b,OAASA,GAChB9b,EAAOgoB,KAAOA,GACdhoB,EAAOioB,Q=
AAUA,GACjBjoB,EAAOkoB,QAAUA,GACjBloB,EAAO/f,SAAWA,GAClB+f,EAAOka,MAAQA,GA=
Cfla,EAAOtf,MAAQA,GACfsf,EAAO0Y,QAAUA,GACjB1Y,EAAO6jB,SAAWA,GAClB7jB,EAAO=
mnB,QAAUA,GACjBnnB,EAAOif,OAASA,GAChBjf,EAAOmoB,MAAQA,GACfnoB,EAAOooB,WAA=
aA,GACpBpoB,EAAO+b,SAAWA,GAClB/b,EAAO+kB,SAAWA,GAClB/kB,EAAO8oB,aAAeA,GAC=
tB9oB,EAAOqoB,MAAQA,GACfroB,EAAOsoB,MAAQA,GACftoB,EAAOomB,WAAaA,GACpBpmB,=
EAAO2Y,KAAOA,GACd3Y,EAAO4Y,UAAYA,GACnB5Y,EAAO6Y,eAAiBA,GACxB7Y,EAAO8Y,UAA=
YA,GACnB9Y,EAAOxP,KAAOA,GACdwP,EAAO6a,OAASA,GAChB7a,EAAOgZ,QAAUA,GACjBhZ,=
EAAOiZ,YAAcA,GACrBjZ,EAAOuoB,KAAOA,GACdvoB,EAAOwoB,UAAYA,GACnBxoB,EAAOqnB=
,QAAUA,GACjBrnB,EAAOsnB,aAAeA,GACtBtnB,EAAOipB,MAAQA,GACfjpB,EAAOkpB,WAAa=
A,GACpBlpB,EAAOmpB,OAASA,GAChBnpB,EAAOopB,YAAcA,GACrBppB,EAAOmf,UAAYA,GAC=
nBnf,EAAOunB,QAAUA,GACjBvnB,EAAOwnB,QAAUA,GACjBxnB,EAAOkZ,QAAUA,GACjBlZ,E=
AAOumB,aAAeA,GACtBvmB,EAAOqf,OAASA,GAChBrf,EAAOynB,OAASA,GAChBznB,EAAOoF,=
KAAOA,GACdpF,EAAO8I,OAASA,GAChB9I,EAAOkb,IAAMA,GACblb,EAAOqpB,QAAUA,GACjB=
rpB,EAAOspB,UAAYA,GACnBtpB,EAAO4jB,QAAUA,GACjB5jB,EAAO8jB,gBAAkBA,GACzB9j=
B,EAAOid,QAAUA,GACjBjd,EAAOiY,MAAQA,GACfjY,EAAO+pB,OAASA,GAChB/pB,EAAOgqB=
,SAAWA,GAClBhqB,EAAO+jB,MAAQA,GACf/jB,EAAOyoB,QAAUA,GACjBzoB,EAAOqd,OAASA=
,GAChBrd,EAAOupB,KAAOA,GACdvpB,EAAOsd,KAAOA,GACdtd,EAAOqW,MAAQA,GACfrW,EA=
AO0oB,QAAUA,GACjB1oB,EAAO2oB,aAAeA,GACtB3oB,EAAO2nB,UAAYA,GACnB3nB,EAAOgl=
B,KAAOA,GACdhlB,EAAOmb,MAAQA,GACfnb,EAAOoG,SAAWA,GAClBpG,EAAOokB,WAAaA,GA=
CpBpkB,EAAOoZ,KAAOA,GACdpZ,EAAO0mB,OAASA,GAChB1mB,EAAOqkB,MAAQA,GACfrkB,E=
AAO4oB,MAAQA,GACf5oB,EAAOob,OAASA,GAChBpb,EAAOqZ,OAASA,GAChBrZ,EAAOsZ,KAA=
OA,GACdtZ,EAAOoP,UAAYA,GACnBpP,EAAO7S,IAAMA,GACb6S,EAAOwb,QAAUA,GACjBxb,E=
AAOnX,MAAQA,GACfmX,EAAO0b,OAASA,GAChB1b,EAAO8nB,UAAYA,GACnB9nB,EAAO2b,YAA=
cA,GACrB3b,EAAOwd,OAASA,GAChBxd,EAAOuZ,KAAOA,GACdvZ,EAAOwZ,UAAYA,GACnBxZ,=
EAAOyZ,eAAiBA,GACxBzZ,EAAO0Z,UAAYA,GACnB1Z,EAAOma,IAAMA,GACbna,EAAOyd,SAA=
WA,GAClBzd,EAAOuR,KAAOA,GACdvR,EAAOukB,MAAQA,GACfvkB,EAAOsb,QAAUA,GACjBtb=
,EAAO2L,cAAgBA,GACvB3L,EAAOjJ,UAAYA,GACnBiJ,EAAO6mB,MAAQA,GACf7mB,EAAO2Z,=
KAAOA,GACd3Z,EAAO6Z,MAAQA,GACf7Z,EAAO+Z,UAAYA,GACnB/Z,EAAOgD,OAASA,GAChBh=
D,EAAO0f,SAAWA,GAClB1f,EAAO4b,MAAQA,GACf5b,EAAO8mB,QAAUA,GACjB9mB,EAAO0d,=
KAAOA,GACd1d,EAAOga,IAAMA,GACbha,EAAO+mB,IAAMA,GACb/mB,EAAOia,UAAYA,GACnB=
ja,EAAOgnB,QAAUA,GAGjBhnB,EAAOkqB,SAAW1B,GAClBxoB,EAAOmqB,QAAUjP,GACjBlb,=
EAAOoqB,QAAU5B,GACjBxoB,EAAOqqB,KAAOhD,GACdrnB,EAAOsqB,UAAYhD,GACnBtnB,EA=
AOuqB,OAAS1B,GAChB7oB,EAAOT,SAAWtf,GAClB+f,EAAOwqB,QAAUrL,GACjBnf,EAAO7a,=
OAAS80B,GAChBja,EAAOyqB,OAAS5P,GAChB7a,EAAO0qB,KAAOpR,GACdtZ,EAAO2qB,OAAS=
hR,GAGhBoK,GAAM/jB,EAAQA,GAKdA,EAAOwD,IAAMA,GACbxD,EAAO2iB,QAAUA,GACjB3iB=
,EAAOwpB,UAAYA,GACnBxpB,EAAOigB,WAAaA,GACpBjgB,EAAOulB,KAAOA,GACdvlB,EAAO=
oB,MAAQA,GACfpB,EAAO2d,UAAYA,GACnB3d,EAAOsQ,OAASA,GAChBtQ,EAAOogB,SAAWA,G=
AClBpgB,EAAOqgB,OAASA,GAChBrgB,EAAOwgB,aAAeA,GACtBxgB,EAAO4a,MAAQA,GACf5a=
,EAAO+a,KAAOA,GACd/a,EAAOqmB,UAAYA,GACnBrmB,EAAO+oB,QAAUA,GACjB/oB,EAAOon=
B,SAAWA,GAClBpnB,EAAOsmB,cAAgBA,GACvBtmB,EAAOgpB,YAAcA,GACrBhpB,EAAO8a,UA=
AYA,GACnB9a,EAAO+Y,MAAQA,GACf/Y,EAAO7Q,MAAQA,GACf6Q,EAAO/S,IAAMA,GACb+S,E=
AAO4d,GAAKA,GACZ5d,EAAO6d,IAAMA,GACb7d,EAAO2C,IAAMA,GACb3C,EAAOkG,SAAWA,G=
AClBlG,EAAOgb,SAAWA,GAClBhb,EAAOpT,QAAUA,GACjBoT,EAAO2f,QAAUA,GACjB3f,EAA=
O2I,YAAcA,GACrB3I,EAAO1a,QAAUA,GACjB0a,EAAO+d,UAAYA,GACnB/d,EAAOge,OAASA,=
GAChBhe,EAAOie,UAAYA,GACnBje,EAAOme,QAAUA,GACjBne,EAAOoe,QAAUA,GACjBpe,EA=
AOqe,QAAUA,GACjBre,EAAO1S,SAAWA,GAClB0S,EAAOkJ,WAAaA,GACpBlJ,EAAOse,QAAUA=
,GACjBte,EAAO9X,MAAQA,GACf8X,EAAOuW,SAAWA,GAClBvW,EAAO2e,OAASA,GAChB3e,EA=
AOue,SAAWA,GAClBve,EAAOsD,SAAWA,GAClBtD,EAAO0L,cAAgBA,GACvB1L,EAAO4e,SAAW=
A,GAClB5e,EAAOib,SAAWA,GAClBjb,EAAOgK,aAAeA,GACtBhK,EAAO8e,YAAcA,GACrB9e,=
EAAO0pB,UAAYA,GACnB1pB,EAAOqL,KAAOA,GACdrL,EAAOmZ,YAAcA,GACrBnZ,EAAO+e,GA=
AKA,GACZ/e,EAAOgf,IAAMA,GACbhf,EAAO1V,IAAMA,GACb0V,EAAOjX,IAAMA,GACbiX,EA=
AO1F,WAAaA,GACpB0F,EAAOmkB,KAAOA,GACdnkB,EAAOwc,IAAMA,GACbxc,EAAO2gB,IAAM=
A,GACb3gB,EAAO2pB,QAAUA,GACjB3pB,EAAO4pB,SAAWA,GAClB5pB,EAAOhY,SAAWA,GACl=
BgY,EAAO4f,OAASA,GAChB5f,EAAO4nB,OAASA,GAChB5nB,EAAO6nB,YAAcA,GACrB7nB,EA=
AO2U,OAASA,GAChB3U,EAAO3f,OAASA,GAChB2f,EAAOiqB,MAAQA,GACfjqB,EAAOF,aAAeA=
,EACtBE,EAAOnL,KAAOA,GACdmL,EAAO6pB,UAAYA,GACnB7pB,EAAOyb,KAAOA,GACdzb,EA=
AO2mB,YAAcA,GACrB3mB,EAAO4mB,gBAAkBA,GACzB5mB,EAAO8pB,UAAYA,GACnB9pB,EAAO=
+gB,WAAaA,GACpB/gB,EAAO8kB,IAAMA,GACb9kB,EAAOghB,SAAWA,GAClBhhB,EAAO3U,KA=
AOA,GACd2U,EAAO6iB,SAAWA,GAClB7iB,EAAO8iB,UAAYA,GACnB9iB,EAAO+iB,MAAQA,GA=
Cf/iB,EAAOujB,SAAWA,GAClBvjB,EAAOykB,SAAWA,GAClBzkB,EAAOqQ,MAAQA,GAGfrQ,E=
AAO4qB,IAAMhQ,GACb5a,EAAO6qB,IAAMpP,GACbzb,EAAO8qB,SAAW9P,GAClBhb,EAAO+qB=
,GAAK3M,GACZpe,EAAOgrB,OAASjQ,GAChB/a,EAAOirB,MAAQrD,GACf5nB,EAAOkrB,MAAQ=
rD,GACf7nB,EAAOmrB,KAAOpS,GACd/Y,EAAOorB,QAAUpQ,GACjBhb,EAAOqrB,OAASzD,GA=
EhB7D,GAAM/jB,EAAS,WACb,GAAI4D,KAMJ,OALAwD,IAAWpH,EAAQ,SAAS8F,EAAMiP,GAC3=
B/U,EAAOlgB,UAAUi1B,KACpBnR,EAAOmR,GAAcjP,KAGlBlC,MACH,GAKN5D,EAAOqb,OAAS=
A,GAEhBrb,EAAOlgB,UAAUu7B,OAAS,SAAS/vB,GACjC,MAAKvM,MAAK2hB,WAAkB,MAALpV,=
EAGhBvM,KAAKwyB,KAAK,SAASlnB,GACxB,MAAOgxB,IAAOhxB,EAAOiB,KAHd+vB,GAAOt8B=
,KAAKsL,UAgBvB2V,EAAOsrB,QAAUA,EAGjBznB,IAAW,OAAQ,UAAW,QAAS,aAAc,UAAW,gBA=
AiB,SAASkR,GACxF/U,EAAO+U,GAAY5V,YAAca,IAInC6D,IAAW,OAAQ,QAAS,SAASkR,EAAY=
7X,GAC/C+C,EAAYngB,UAAUi1B,GAAc,SAASzpB,GAC3C,GAAIigC,GAAWxsC,KAAK6hB,YAC=
pB,IAAI2qB,IAAaruB,EACf,MAAO,IAAI+C,GAAYlhB,KAEzBuM,GAAS,MAALA,EAAY,EAAIk=
jB,GAAUrC,GAAY7gB,IAAM,EAAG,EAEnD,IAAIjL,GAAStB,KAAKqiB,OAMlB,OALImqB,GAC=
FlrC,EAAOygB,cAAgBiB,GAAU1hB,EAAOygB,cAAexV,GAEvDjL,EAAO2gB,UAAUrgB,MAAOk=
U,KAAQvJ,EAAGpI,KAAQ6xB,GAAc10B,EAAOsgB,QAAU,EAAI,QAAU,MAEnFtgB,GAGT4f,EA=
AYngB,UAAUi1B,EAAa,SAAW,SAASzpB,GACrD,MAAOvM,MAAKmjB,UAAU6S,GAAYzpB,GAAG4=
W,aAKzC2B,IAAW,SAAU,MAAO,aAAc,SAASkR,EAAY7X,GAC7D,GAAIha,GAAOga,EAAQ,EACf=
suB,EAAWtoC,GAAQmf,CAEvBpC,GAAYngB,UAAUi1B,GAAc,SAASxV,EAAUwG,GACrD,GAAI1=
lB,GAAStB,KAAKqiB,OAGlB,OAFA/gB,GAAOwgB,cAAclgB,MAAO4e,SAAYqN,GAAYrN,EAAU=
wG,EAAS,GAAI7iB,KAAQA,IACnF7C,EAAOugB,aAAevgB,EAAOugB,cAAgB4qB,EACtCnrC,K=
AKXwjB,IAAW,QAAS,QAAS,SAASkR,EAAY7X,GAChD,GAAIuuB,GAAW,QAAUvuB,EAAQ,QAAU,=
GAE3C+C,GAAYngB,UAAUi1B,GAAc,WAClC,MAAOh2B,MAAK0sC,GAAU,GAAGphC,QAAQ,MAKr=
CwZ,IAAW,UAAW,QAAS,SAASkR,EAAY7X,GAClD,GAAIwuB,GAAW,QAAUxuB,EAAQ,GAAK,QAE=
tC+C,GAAYngB,UAAUi1B,GAAc,WAClC,MAAOh2B,MAAK6hB,aAAe,GAAIX,GAAYlhB,MAAQA,=
KAAK2sC,GAAU;IAKtE7nB,IAAW,QAAS,SAAU,SAASkR,EAAY7X,GACjD,GAAIyuB,GAAgBzuB=
,EAAQ,SAAW,MACnC0uB,EAAiB1uB,EAAQiJ,GAAcC,EAE3CnG,GAAYngB,UAAUi1B,GAAc,SA=
AS1qB,GAC3C,MAAOtL,MAAK4sC,GAAeC,EAAevhC,OAI9C4V,EAAYngB,UAAU44B,QAAU,WAC=
9B,MAAO35B,MAAK87B,OAAO3U,KAGrBjG,EAAYngB,UAAUs7B,OAAS,SAASpe,EAAW+I,GAEj=
D,MADA/I,GAAY4P,GAAY5P,EAAW+I,EAAS,GACrChnB,KAAK87B,OAAO,SAASxwB,GAC1B,OA=
AQ2S,EAAU3S,MAItB4V,EAAYngB,UAAU+I,MAAQ,SAAS5B,EAAOnG,GAC5CmG,EAAiB,MAATA=
,EAAgB,GAAMA,GAAS,CAEvC,IAAI5G,GAAStB,IACb,OAAIsB,GAAOugB,eAAiB3Z,EAAQ,GA=
AW,EAANnG,GAChC,GAAImf,GAAY5f,IAEb,EAAR4G,EACF5G,EAASA,EAAOm5B,WAAWvyB,GA=
ClBA,IACT5G,EAASA,EAAOs4B,KAAK1xB,IAEnBnG,IAAQyD,IACVzD,GAAQA,GAAO,EACfT,=
EAAe,EAANS,EAAUT,EAAOu4B,WAAW93B,GAAOT,EAAOk5B,KAAKz4B,EAAMmG,IAEzD5G,IAG=
T4f,EAAYngB,UAAU25B,eAAiB,SAASzc,EAAW+I,GACzD,MAAOhnB,MAAKmjB,UAAUwX,UAAU=
1c,EAAW+I,GAAS7D,WAGtDjC,EAAYngB,UAAUw7B,QAAU,WAC9B,MAAOv8B,MAAKw6B,KAAKx=
Y,KAInBqG,GAAWnH,EAAYngB,UAAW,SAASgmB,EAAMiP,GAC/C,GAAI8W,GAAgB,gCAAgCpU,=
KAAK1C,GACrD+W,EAAe,mBAAmBrU,KAAK1C,GACvCgX,EAAa/rB,EAAO8rB,EAAgB,QAAwB,Q=
AAd/W,EAAuB,QAAU,IAAOA,EAErFgX,KAGL/rB,EAAOlgB,UAAUi1B,GAAc,WAC7B,GAAIvN,=
GAAOskB,GAAgB,GAAKpnC,UAC5B4b,EAAWvhB,KAAK2hB,UAChBrW,EAAQtL,KAAKyhB,YACb=
wrB,IAAajtC,KAAK0hB,YAAYpc,OAC9B4nC,EAAS5hC,YAAiB4V,GAC1BV,EAAWiI,EAAK,GA=
ChB0kB,EAAUD,GAAU3mC,GAAQ+E,EAE5B6hC,IAAWL,GAAoC,kBAAZtsB,IAA6C,GAAnBA,EA=
ASlb,SAExE4nC,EAASC,GAAU,EAErB,IAAI9R,GAAc,SAAS/vB,GACzB,MAAQyhC,IAAgBxrB=
,EACpByrB,EAAW1hC,EAAO,GAAG,GACrB0hC,EAAWliC,MAAMtF,EAAW+f,IAAWja,GAAQmd,=
KAGjD4F,GAAWtH,KAAQyL,GAAM/J,MAAS4S,GAAcrU,QAAWxhB,GAC3D4nC,EAAWF,IAAWD,C=
AE1B,IAAIF,IAAiBxrB,EACnB,MAAI6rB,IACF9hC,EAAQA,EAAM+W,QACd/W,EAAMoW,YAAY=
9f,KAAKysB,GAChBtH,EAAKpnB,KAAK2L,IAEZ0hC,EAAWrtC,KAAK6F,EAAWxF,KAAKsL,SA=
AS,EAElD,KAAKyhC,GAAgBI,EAAS,CAC5B7hC,EAAQ8hC,EAAW9hC,EAAQ,GAAI4V,GAAYlhB=
,KAC3C,IAAIsB,GAASylB,EAAKjc,MAAMQ,EAAOmd,EAE/B,OADAnnB,GAAOogB,YAAY9f,KA=
AKysB,GACjB,GAAIlN,GAAc7f,EAAQigB,GAEnC,MAAOvhB,MAAKwyB,KAAK6I,OAKrBvW,IA=
AW,OAAQ,MAAO,OAAQ,UAAW,QAAS,OAAQ,SAAU,QAAS,WAAY,SAASkR,GACpG,GAAIjP,IAAQ,=
sBAAsB2R,KAAK1C,GAAcsQ,GAAcF,IAAYpQ,GAC3EqX,EAAY,0BAA0B3U,KAAK1C,GAAc,MAA=
Q,OACjE+W,EAAe,+BAA+BrU,KAAK1C,EAEvD/U,GAAOlgB,UAAUi1B,GAAc,WAC7B,GAAIvN,=
GAAO9iB,SACX,OAAIonC,KAAiB/sC,KAAK2hB,UACjBoF,EAAKjc,MAAM9K,KAAKsL,QAASmd=
,GAE3BzoB,KAAKqtC,GAAW,SAAS/hC,GAC9B,MAAOyb,GAAKjc,MAAMQ,EAAOmd,QAM/BJ,GA=
AWnH,EAAYngB,UAAW,SAASgmB,EAAMiP,GAC/C,GAAIgX,GAAa/rB,EAAO+U,EACxB,IAAIgX=
,EAAY,CACd,GAAIrpB,GAAMqpB,EAAW5oC,KACjBkpC,EAAQlW,GAAUzT,KAASyT,GAAUzT,M=
AEzC2pB,GAAM1rC,MAAOwC,KAAQ4xB,EAAYjP,KAAQimB,OAI7C5V,GAAUtD,GAAoBtuB,EAA=
WwvB,GAAe5wB,QAAWA,KAAQ,UAAW2iB,KAAQvhB,IAG9F0b,EAAYngB,UAAUshB,MAAQH,EAC=
9BhB,EAAYngB,UAAUoiB,QAAUf,EAChClB,EAAYngB,UAAUuK,MAAQgX,GAG9BrB,EAAOlgB,=
UAAUo6B,MAAQG,GACzBra,EAAOlgB,UAAUwsC,OAAShS,GAC1Bta,EAAOlgB,UAAUc,OAASqm=
C,GAC1BjnB,EAAOlgB,UAAUkyB,MAAQuI,GACzBva,EAAOlgB,UAAUoiB,QAAUsY,GAC3Bxa,=
EAAOlgB,UAAU0D,SAAWk3B,GAC5B1a,EAAOlgB,UAAUysC,IAAMvsB,EAAOlgB,UAAU0N,OAA=
SwS,EAAOlgB,UAAU0sC,QAAUxsB,EAAOlgB,UAAUuK,MAAQswB,GAGrG3a,EAAOlgB,UAAUqq=
C,QAAUnqB,EAAOlgB,UAAUo7B,IAC5Clb,EAAOlgB,UAAUqrC,KAAOnrB,EAAOlgB,UAAUi5B=
,MACzC/Y,EAAOlgB,UAAU2qC,OAASzqB,EAAOlgB,UAAU+6B,OAC3C7a,EAAOlgB,UAAU4qC,=
KAAO1qB,EAAOlgB,UAAUw5B,KAElCtZ,EA7gYT,GAAIzb,GAGA+mC,EAAU,SAGVxX,EAAY,EA=
CZC,EAAgB,EAChBO,EAAmB,EACnBzC,EAAa,EACb0C,EAAmB,GACnBzC,EAAe,GACf8B,EAAq=
B,GACrBhC,EAAW,IACXG,EAAa,IAGbiR,EAAuB,GACvBE,EAAyB,MAGzBiD,EAAY,IACZD,EA=
AW,GAGXlkB,EAAmB,IAGnBM,EAAmB,EACnBD,EAAgB,EAGhBoF,EAAkB,sBAGlBpI,EAAc,yB=
AGd2H,EAAU,qBACV8C,EAAW,iBACXyL,EAAU,mBACVC,EAAU,gBACVC,EAAW,iBACX3O,EAAU=
,oBACV2lB,EAAS,eACT/W,GAAY,kBACZ3O,GAAY,kBACZ4O,GAAY,kBACZ+W,GAAS,eACT9W,=
GAAY,kBACZ+W,GAAa,mBAEbjW,GAAiB,uBACjBC,GAAa,wBACbC,GAAa,wBACbC,GAAU,qBAC=
VC,GAAW,sBACXC,GAAW,sBACXC,GAAW,sBACXC,GAAkB,6BAClBC,GAAY,uBACZC,GAAY,uBA=
GZqL,GAAuB,iBACvBC,GAAsB,qBACtBC,GAAwB,gCAGxBe,GAAgB,gCAChBlD,GAAkB,YAClB=
iD,GAAmB5B,OAAO6B,GAAc7f,QACxC0c,GAAqBsB,OAAOrB,GAAgB3c,QAG5CkiB,GAAW,mBA=
CXC,GAAa,kBACblE,GAAgB,mBAGhBjK,GAAe,qDACfD,GAAgB,QAChBY,GAAa,wEAMbmI,GAA=
gB,yEAChBD,GAAmBmB,OAAOlB,GAAc9c,QAGxCuc,GAAc,gCAGd1H,GAAe,WAGfqJ,GAAe,kC=
AGf1K,GAAU,OAGV0J,GAAiB,SAGjBpC,GAAe,8BAGflH,GAAW,QAGX0I,GAAW,0CAGXwB,GAA=
Y,OAGZY,GAAoB,yBAGpBqB,GAAW,WACb,GAAIiJ,GAAQ,8BACRC,EAAQ,8BAEZ,OAAOjL,QAA=
OgL,EAAQ,OAASA,EAAQC,EAAQ,KAAOD,EAAQ,IAAMC,EAAQ,IAAMD,EAAQ,WAAY,QAIpG3H,I=
ACF,QAAS,cAAe,OAAQ,QAAS,eAAgB,eACzD,WAAY,YAAa,aAAc,aAAc,OAAQ,SAC7D,SAAU,S=
AAU,MAAO,SAAU,IAAK,eAAgB,WAC1D,aAAc,WAAY,aAAc,YAAa,aACrD,oBAAqB,cAAe,cAAe=
,WAIjDhD,GAAkB,GAGlBpD,KACJA,IAAelI,IAAckI,GAAejI,IAC5CiI,GAAehI,IAAWgI,G=
AAe/H,IACzC+H,GAAe9H,IAAY8H,GAAe7H,IAC1C6H,GAAe5H,IAAmB4H,GAAe3H,IACjD2H,=
GAAe1H,KAAa,EAC5B0H,GAAe7X,GAAW6X,GAAe/U,GACzC+U,GAAenI,IAAkBmI,GAAetJ,GA=
ChDsJ,GAAerJ,GAAWqJ,GAAepJ,GACzCoJ,GAAe/X,GAAW+X,GAAe4N,GACzC5N,GAAenJ,IA=
AamJ,GAAe9X,IAC3C8X,GAAelJ,IAAakJ,GAAe6N,IAC3C7N,GAAejJ,IAAaiJ,GAAe8N,KAA=
c,CAGzD,IAAI1lB,MACJA,IAAcD,GAAWC,GAAc6C,GACvC7C,GAAcyP,IAAkBzP,GAAcsO,GA=
C9CtO,GAAcuO,GAAWvO,GAAc0P,IACvC1P,GAAc2P,IAAc3P,GAAc4P,IAC1C5P,GAAc6P,IA=
AY7P,GAAc8P,IACxC9P,GAAcyO,IAAazO,GAAcF,IACzCE,GAAc0O,IAAa1O,GAAc2O,IACzC=
3O,GAAc+P,IAAY/P,GAAcgQ,IACxChQ,GAAciQ,IAAajQ,GAAckQ,KAAa,EACtDlQ,GAAcwO,=
GAAYxO,GAAcH,GACxCG,GAAcwlB,GAAUxlB,GAAcylB,IACtCzlB,GAAc0lB,KAAc,CAG5B,I=
AAItuB,KACFyuB,IAAQ,IAAMC,IAAQ,IAAKC,IAAQ,IAAKC,IAAQ,IAAKC,IAAQ,IAAKC,IAA=
Q,IAC1EC,IAAQ,IAAMC,IAAQ,IAAKC,IAAQ,IAAKC,IAAQ,IAAKC,IAAQ,IAAKC,IAAQ,IAC1=
EC,IAAQ,IAAMC,IAAQ,IACtBC,IAAQ,IAAMC,IAAQ,IACtBC,IAAQ,IAAMC,IAAQ,IAAKC,IA=
AQ,IAAKC,IAAQ,IAChDC,IAAQ,IAAMC,IAAQ,IAAKC,IAAQ,IAAKC,IAAQ,IAChDC,IAAQ,IA=
AMC,IAAQ,IAAKC,IAAQ,IAAKC,IAAQ,IAChDC,IAAQ,IAAMC,IAAQ,IAAKC,IAAQ,IAAKC,IA=
AQ,IAChDC,IAAQ,IAAMC,IAAQ,IACtBC,IAAQ,IAAMC,IAAQ,IAAKC,IAAQ,IAAKC,IAAQ,IA=
AKC,IAAQ,IAAKC,IAAQ,IAC1EC,IAAQ,IAAMC,IAAQ,IAAKC,IAAQ,IAAKC,IAAQ,IAAKC,IA=
AQ,IAAKC,IAAQ,IAC1EC,IAAQ,IAAMC,IAAQ,IAAKC,IAAQ,IAAKC,IAAQ,IAChDC,IAAQ,IA=
AMC,IAAQ,IAAKC,IAAQ,IAAKC,IAAQ,IAChDC,IAAQ,IAAMC,IAAQ,IAAKC,IAAQ,IACnCC,I=
AAQ,KAAMC,IAAQ,KACtBC,IAAQ,KAAMC,IAAQ,KACtBC,IAAQ,MAINnyB,IACFoyB,IAAK,QA=
CLC,IAAK,OACLC,IAAK,OACLC,IAAK,SACLC,IAAK,QACLC,IAAK,SAIHpxB,IACFqxB,QAAS=
,IACTC,OAAQ,IACRC,OAAQ,IACRC,SAAU,IACVC,QAAS,IACTC,QAAS,KAIPC,IACFC,YAAY,=
EACZtsC,QAAU,GAIRyZ,IACF8yB,EAAK,MAAOC,EAAK,MAAOC,EAAK,MAAOC,EAAK,MAAOC,E=
AAK,MACrDC,EAAK,MAAOC,EAAK,MAAOC,EAAK,MAAOC,EAAK,MAAOC,EAAK,MACrDC,EAAK,M=
AAOC,EAAK,MAAOC,EAAK,MAAOC,EAAK,MAAOC,EAAK,MAAOC,EAAK,MACjExmC,EAAK,MAAOF=
,EAAK,MAAOnN,EAAK,MAAOkU,EAAK,MAAOpR,EAAK,MAAOgxC,EAAK,MACjEpnC,EAAK,MAAO=
sN,EAAK,MAAO+5B,EAAK,MAAOC,EAAK,MAAOxlC,EAAK,MAAOlB,EAAK,OAI/D2S,IACFg0B,=
KAAM,KACN7B,IAAK,IACL8B,KAAM,IACNC,KAAM,IACNC,SAAU,QACVC,SAAU,SAIRC,GAAc1=
B,SAAmBlzC,KAAYA,IAAYA,EAAQ4/B,UAAY5/B,EAG7E60C,GAAa3B,SAAmBjzC,KAAWA,IAA=
WA,EAAO2/B,UAAY3/B,EAGzE60C,GAAaF,IAAeC,IAA+B,gBAAVr0C,IAAsBA,GAAUA,EAAOu=
U,QAAUvU,EAGlGu0C,GAAW7B,SAAmB8B,QAASA,MAAQA,KAAKjgC,QAAUigC,KAG9DC,GAAa/=
B,SAAmBlwC,UAAWA,QAAUA,OAAO+R,QAAU/R,OAWtE2uB,IARgBkjB,IAAcA,GAAW70C,UAAY=
40C,IAAeA,GAQ7DE,IAAgBG,MAAgBx0C,MAAQA,KAAKuC,SAAYiyC,IAAeF,IAAYt0C,MA8wX=
3Fkb,GAAI6F,GAQNmQ,IAAKhW,EAAIA,GAIPqC,EAAgC,WAChC,MAAOrC,KACPvb,KAAKJ,EA=
ASH,EAAqBG,EAASC,KAAS+d,IAAkC/X,IAAchG,EAAOD,QAAUge,MAiB1H5d,KAAKK,QAEsBL=
,KAAKJ,EAASH,EAAoB,GAAGI,GAAU,WAAa,MAAOQ,WAI3F,SAASR,EAAQD,GAEtBC,EAAOD,Q=
AAU,SAASC,GAQzB,MAPIA,GAAOi1C,kBACVj1C,EAAOk1C,UAAY,aACnBl1C,EAAOm1C,SAEP=
n1C,EAAOo1C,YACPp1C,EAAOi1C,gBAAkB,GAEnBj1C,IAMH,SAASA,EAAQD,EAASH,GAG/B,=
YAOA,SAASy1C,GAASj0C,EAAMC,GACvB,GAAIsD,GAAO,QAIX,OAHIvD,IAAQC,EAASsD,EAA=
O,cACnBvD,EAAMuD,EAAO,OACbtD,IAASsD,EAAO,WAClBA,EAGR,QAASgX,GAAa5G,EAAiB2=
E,GACtClZ,KAAKI,SACLJ,KAAKkZ,OAASA,EACdlZ,KAAK80C,eAEL,KAAI,GAAI58B,KAAQ3=
D,GACf,GAAIA,EAAgB6M,eAAelJ,GAAO,CACzC,GAAI68B,GAAUxgC,EAAgB2D,EAE9BlY,MA=
AKI,MAAM8X,IACVvX,OAAQo0C,EAAQp0C,OAChBC,KAAMm0C,EAAQn0C,KACdC,QAASk0C,EA=
AQl0C,QACjBC,YAAai0C,EAAQj0C,cA1BzB,GAAIoa,GAAI9b,EAAoB,GACxB41C,EAAc51C,=
EAAoB,GAEtC8b,GAAEK,aA6BFJ,EAAapa,UAAUk0C,YAAc,SAASC,EAAYt0C,EAAMC,GAC/D,=
GAAIsD,GAAO0wC,EAASj0C,EAAMC,EACzB,KAAKb,KAAKI,MAAM80C,KAAgBl1C,KAAKI,MAA=
M80C,GAAY/wC,GACvD,KAAM,IAAI4E,OAAM,SAAWmsC,EAAa,eAAiB/wC,EAAM,mEAS/D,OAN=
AnE,MAAK80C,aAAaI,GAAcl1C,KAAK80C,aAAaI,OAE7Cl1C,KAAK80C,aAAaI,GAAY/wC,KA=
CnCnE,KAAK80C,aAAaI,GAAY/wC,GAAQ,GAAI6wC,GAAYh1C,KAAKkZ,OAAQlZ,KAAKI,MAAM=
80C,GAAY/wC,GAAO+wC,EAAa,IAAM/wC,EAAO,MAGpHnE,KAAK80C,aAAaI,GAAY/wC,IAGvC=
gX,EAAapa,UAAUqW,oBAAsB,WAC3C,GAAIm9B,GAAOv0C,IAEXkb,GAAEowB,KAAKiJ,EAAKO=
,aAAc,SAASK,GACjCj6B,EAAEowB,KAAK6J,EAAY,SAASC,GAC1Bl6B,EAAEowB,KAAK8J,EA=
AYC,SAAU,SAASn9B,GAC/Bq8B,EAAKr7B,OAAOvC,KAAKvW,MAAM8X,EAAKzY,MAC/B80C,EA=
AKr7B,OAAOvC,KAAKvW,MAAM8X,EAAKzY,IAAMyY,EAAK+E,cAOjDzd,EAAOD,QAAU4b,GAKZ=
,SAAS3b,EAAQD,EAASH,GAG/B,YAMA,SAAS41C,GAAYM,EAAWjrB,EAAMkrB,GACrCv1C,KAA=
Kw1C,eAAiB,GAEtBx1C,KAAKs1C,UAAYA,EACjBt1C,KAAKqqB,KAAOA,EACZrqB,KAAKq1C,=
YACLr1C,KAAKy1C,iBACLz1C,KAAKoE,KAAOmxC,EAEXjhC,OAAOohC,eAAe11C,KAAM,YAC1=
BkO,IAAK,WACH,GAAIgK,GAAOlY,KAAK21C,QAAQ,EACxB,OAAOz9B,GAAK09B,YAGhBthC,O=
AAOohC,eAAe11C,KAAM,YAC1BkO,IAAK,WACH,GAAIgK,GAAOlY,KAAK21C,QAAQ,EACxB,OA=
AOz9B,GAAK29B,YAtBlB,GAAI36B,GAAI9b,EAAoB,EAE5B8b,GAAEK,aA2BFy5B,EAAYj0C,=
UAAU40C,QAAU,SAASx3B,GACxC,IAAIne,KAAKq1C,SAASl3B,GAAO,CAExB,GAAI23B,GAAa=
91C,KAAKoE,KAAO+Z,CAE1Bne,MAAK+1C,sBACA/1C,MAAKs1C,UAAUU,cAAch2C,KAAK+1C,=
gBAG1C/1C,KAAKq1C,SAASl3B,GAASne,KAAKs1C,UAAUp9B,KAAKlY,KAAKqqB,KAAMyrB,G=
AAYG,MAC9Dj2C,KAAK+1C,iBACR/1C,KAAK+1C,eAAiB/1C,KAAKq1C,SAASl3B,GAAO/Z,MA=
I7C,MAAOpE,MAAKq1C,SAASl3B,IAItB62B,EAAYj0C,UAAUm1C,cAAgB,WACrC,GAAIh+B,G=
AAOlY,KAAK21C,QAAQ,EACxB,OAAOz9B,GAAKg+B,cAAcprC,MAAMoN,EAAMvS,YAGvCqvC,E=
AAYj0C,UAAUuW,WAAa,WAClC,GAAIY,GAAOlY,KAAK21C,QAAQ,EACxB,OAAOz9B,GAAKZ,WA=
AWxM,MAAMoN,EAAMvS,YAGpCqvC,EAAYj0C,UAAUkc,IAAM,WAC3B,GAAI/E,GAAOlY,KAAK2=
1C,QAAQ,EACxB,OAAOz9B,GAAK+E,IAAInS,MAAMoN,EAAMvS,WAG7B,IAAIwwC,GAAa,SAAS=
C,GACxB,MAAOA,GAAK1pC,WAAW,GAGzBsoC,GAAYj0C,UAAUmS,OAAS,SAASiF,GACtC,GAAI=
o8B,GAAOv0C,KAEPq2C,EAAoBn7B,EAAEigB,MAAMhjB,EAAKm+B,MAAM,KAAKna,IAAIga,G=
AAYvb,OAAOtvB,OACxE,IAAI+qC,EAAkB/wC,OAASivC,EAAKiB,eACnC,KAAM,IAAIzsC,OA=
AM,wBAAyBwrC,EAAKiB,eAAiB,KAAOr9B,EAAO,iFAI7E,IAAIo+B,GAA8B,SAAUd,GAC1C,M=
AAOv6B,GAAE0f,KAAK6a,EAAc5zC,OAAOw0C,IAAoB/wC,QAAUivC,EAAKiB,gBAGpEr3B,EA=
AQjD,EAAEosB,UAAUiN,EAAKkB,cAAec,EAEjC,GAARp4B,IACDA,EAAQo2B,EAAKkB,cAAcn=
wC,OAC3BivC,EAAKkB,cAAct3B,MAGtB,IAAIjG,GAAOq8B,EAAKoB,QAAQx3B,EACxBjG,GA=
AKs+B,IAAIr+B,GAER+C,EAAEowB,KAAK+K,EAAmB,SAASn2B,GAC7BhF,EAAE+gB,SAASsY,=
EAAKkB,cAAct3B,GAAQ+B,IACxCq0B,EAAKkB,cAAct3B,GAAOvc,KAAKse,IAInC,IAAI3H,=
GAAc2C,EAAEihB,IAAIjkB,EAAKhF,OAAOiF,GAAO,SAAUi+B,GACnD,MAAOA,GAAK1pC,WAA=
W,GAAGjI,SAAS,MAClCmJ,KAAK,GAER,QACE2K,YAAaA,EACbF,OAAQH,EAAKzY,KAKjBD,EA=
AOD,QAAUy1C,GAKZ,SAASx1C,EAAQD,EAASH,GAG/B,YAiBA,SAASq3C,GAAOnlC,EAAQolC,=
GACtBx7B,EAAEowB,KAAKoL,EAAY,SAASlpC,GAC1B8D,EAAO1P,KAAK4L,KAWhB,QAAS4N,G=
AAcvF,EAAUyG,EAAaq6B,GAC7C32C,KAAK6V,SAAWA,EAChB7V,KAAKsc,YAAcA,EACnBtc,K=
AAK42C,QAAU,GAAIC,GAChB72C,KAAK22C,aAAeA,EACpB32C,KAAKuc,gBAsOT,QAASu6B,G=
AAazhC,GACpB,GAAIlI,GAAIkI,EAAKlI,EAAGC,EAAIiI,EAAKjI,CACzBiI,GAAK0hC,aAE=
L77B,EAAEowB,KAAKj2B,EAAK2hC,OAAQ,SAAS/9B,GAC3B,GAAI9L,GAAI8L,EAAO9L,EAAG=
C,EAAI6L,EAAO7L,EAAG+M,EAAKlB,EAAOkB,GAAIC,EAAKnB,EAAOmB,GAAIE,EAAKrB,EAA=
OqB,GAAIC,EAAKtB,EAAOsB,EAC5FtB,GAAOg+B,QAAU,WACfh+B,EAAO9L,EAAIA,EACX8L,=
EAAO7L,EAAIA,EACd6L,EAAOkB,GAAKA,EACZlB,EAAOmB,GAAKA,EACZnB,EAAOqB,GAAKA,=
EACZrB,EAAOsB,GAAKA,KAIblF,EAAK4hC,QAAU,WACb5hC,EAAKlI,EAAIA,EACTkI,EAAKj=
I,EAAIA,EACT8N,EAAEowB,KAAKj2B,EAAK2hC,OAAQ,SAAS/9B,GAC3BA,EAAOg+B,aA3Rb,=
GAAI/7B,GAAI9b,EAAoB,GACxBy3C,EAAmBz3C,EAAoB,IACvC83C,EAAa93C,EAAoB,IACjC=
+3C,EAAkB/3C,EAAoB,IACtCg4C,EAAoBh4C,EAAoB,IACxCi4C,EAAmBj4C,EAAoB,IACvCk=
4C,EAAiBl4C,EAAoB,IACrCm4C,EAAOn4C,EAAoB,IAC3Bo4C,EAAOp4C,EAAoB,IAAIo4C,K=
AC/BC,EAAer4C,EAAoB,IAAIq4C,aACvCC,EAAgBt4C,EAAoB,IAAIs4C,cACxCvtB,EAAa/q=
B,EAAoB,IAAI+qB,WACrCwtB,EAAYv4C,EAAoB,IAChCw4C,EAAoBx4C,EAAoB,GAuB5Cgc,G=
AAcra,UAAUgU,qBAAuB,SAAUwH,GACvDvc,KAAKuc,aAAei7B,EAAKx3C,KAAKuc,aAAcA,IA=
a9CnB,EAAcra,UAAUyb,eAAiB,SAAUq7B,EAAcphC,EAAcqhC,EAAiBn7B,EAAcC,EAAYC,EA=
AQC,EAAQV,EAAQlF,EAAW6gC,GAE3J,QAASC,GAAyBC,EAAgB91C,GAElD,MAAIgoB,GAAW4t=
B,IAIbE,EAAiB/8B,EAAEmhB,OAAO4b,EAAgB,SAAS5iC,GACjD,MAAO6F,GAAEkkB,QAAQ/p=
B,EAAK0hC,aAGxB77B,EAAEowB,KAAK2M,EAAgB,SAAS5iC,GAC9B,GAAI6iC,GAAWh9B,EAA=
E+qB,KAAK5wB,GACpB,KAAM,OAAQ,KAAM,KAAM,QAAS,QAAS,KAAM,SAAU,UAC5D,gBAAiB,Q=
AAS,YAAa,kBACvC,QAAS,UAEX6iC,GAASC,cAAgBj9B,EAAE8e,MAAM3kB,EAAK0hC,WACtCm=
B,EAASE,YAAcl9B,EAAEigB,MAAM9lB,EAAK0hC,WAAW5a,IAAI,cAAcvB,OAAOtvB,QACxE4=
sC,EAAS/1C,MAAQA,EAAMmD,OACvB4yC,EAASG,MAAQn9B,EAAE3U,QAAQ8O,EAAKgjC,OAEh=
ChjC,EAAK6iC,SAAWA,IAGXh9B,EAAE4wB,IAAImM,EAAgB,SAAU5iC,EAAM8I,EAAOm6B,GA=
ClD,GAAuB,WAAnBjjC,EAAKkjC,YAA2BljC,EAAKmjC,oBAAqB,CAC5DnjC,EAAKmjC,qBAAs=
B,CAC3B,IAAIC,GAAav9B,EAAE8e,MAAM3kB,EAAK6iC,SAASE,aAEvCM,EAAuBx9B,EAAEig=
B,MAAMmd,GAAmB1e,KAAKzb,EAAQ,GAAG2d,OAAO,SAAU6c,GACjF,MAAOz9B,GAAE6wB,SAA=
S4M,EAAMT,SAASE,YAAaK,KAC7CntC,QAECstC,EAAkB19B,EAAEigB,MAAMmd,GAAmB1e,KA=
AKzb,EAAQ,GAAG2d,OAAO,SAAU6c,GAChF,MAAOz9B,GAAE6wB,SAAS4M,EAAMT,SAASE,YAA=
aK,EAAa,KAC1DntC,QAECutC,EAAsB39B,EAAEigB,MAAMmd,GAAmB9d,KAAKrc,GAAO2d,OA=
AO,SAAU6c,GAChF,MAAOz9B,GAAE6wB,SAAS4M,EAAMT,SAASE,YAAaK,KAC7CntC,OAEH,IA=
AIysC,EAAmB1iC,EAAK6iC,SAC1Bh9B,EAAEihB,IAAIuc,EAAsB,YAC5Bx9B,EAAEihB,IAA=
Iyc,EAAiB,YACvB19B,EAAEihB,IAAI0c,EAAqB,aAE3B,MADAxjC,GAAKkjC,UAAY,UACV,O=
A3CP,EAoDR,QAASO,GAASx3C,GAChB4Z,EAAEowB,KAAKhqC,EAAO22C,eAAgB,SAAU5iC,GA=
CtCA,EAAK4hC,YALTj3C,KAAK+4C,WAAa,GAAI7B,GAAWzgC,EAAcqhC,EAAiBn7B,EAAc3c,=
KAAK22C,aAAc32C,KAAKuc,aAAcH,EAUpH,KADA,GAAI9a,GAAStB,KAAKg5C,kBAAkBnB,EA=
AcphC,EAAcqhC,EAAiBn7B,EAAcC,EAAYC,EAAQC,EAAQV,EAAQlF,GAC7H8gC,EAAyB12C,E=
AAO22C,eAAgB32C,EAAOa,QAC3D22C,EAASx3C,GACTA,EAAStB,KAAKg5C,kBAAkBnB,EAAc=
phC,EAAcqhC,EAAiBn7B,EAAcC,EAAYC,EAAQC,EAAQV,EAAQlF,EAGlI,OAAO5V,GAAOa,OA=
GfiZ,EAAcra,UAAUi4C,kBAAoB,SAAUnB,EAAcphC,EAAcqhC,EAAiBn7B,EAAcC,EAAYC,EA=
AQC,EAAQV,EAAQlF,EAAW6gC,GAE9J/3C,KAAKi4C,kBACLJ,EAAe73C,KAAK+4C,WAAWE,gB=
AAgBpB,GAE/C73C,KAAKk5C,OAAS,GAAI9B,GAChB,GAAID,GAAgBn3C,KAAK6V,SAAU7V,KA=
AKsc,aAActc,KAAK42C,QAE7D,IAAIuC,GAAQn5C,IAYZ,OAXAA,MAAKk5C,OAAOl4B,UAAU4=
1B,QAAQwC,cAAc,YAAa,WACvDD,EAAME,cAAcz8B,KAGtB5c,KAAKq5C,cAAcz8B,GACnB5c,=
KAAKs5C,YAAYzB,GACjB73C,KAAKu5C,qBAAqB18B,EAAQC,GAElB,MAAb5F,GACDlX,KAAKw=
5C,aAAatiC,EAAWT,IAEvBtU,MAAOnC,KAAKk5C,OAAOl4B,UAAU7e,MAAO81C,eAAgBj4C,K=
AAKi4C,iBAInE78B,EAAcra,UAAUs4C,cAAgB,SAASz8B,GAC7C,GAAI68B,GAAmBtvB,EAAW=
vN,GAAcA,EAAa,WAAa,MAAOA,IAE7E88B,EAAiBD,EAAiBz5C,KAAKk5C,OAAOl4B,UAAUrK,=
KAAO,EAEnE,IAAI+iC,EAAgB,CAClB,GAAI7jC,GAAW7V,KAAKk5C,OAAOl4B,UAAU24B,iBA=
AiB9jC,QACtD7V,MAAKk5C,OAAOU,sBAAsB/jC,EAASI,MAAOJ,EAASK,QAC3DlW,KAAKs5C,=
YAAYt5C,KAAK+4C,WAAWE,gBAAgBS,IACjD15C,KAAKk5C,OAAOW,uBAAuB,EAAG,KAI5Cz+B=
,EAAcra,UAAU+4C,oBAAsB,SAASC,EAAgBC,GACrEh6C,KAAKi6C,qBAAqB,WAAa,MAAOF,IA=
AmBC,IAGnE5+B,EAAcra,UAAUk5C,qBAAuB,SAASC,EAAYF,GAGlE,IAAI,GAFA73C,GAAQnC=
,KAAKk5C,OAAOl4B,UAAU7e,MAE1Bg4C,EAAY,EAAGxnC,EAAIxQ,EAAMmD,OAAoBqN,EAAZw=
nC,EAAeA,IAAa,CACnEn6C,KAAKk5C,OAAOl4B,UAAUrK,KAAOwjC,CAE7B,IAAI9kC,GAAO6=
kC,EAAWC,EAAY,EAAGxnC,EAErC,IAAI0C,EAAM,CACR,GAAIU,GAAQikC,EAAah6C,KAAKk5=
C,OAAOl4B,UAAU24B,iBAAiB9jC,SAAU7V,KAAKsc,YAC/Etc,MAAKk5C,OAAOU,sBAAsB7jC=
,EAAME,MAAOF,EAAMG,QACrDlW,KAAKs5C,YAAYt5C,KAAK+4C,WAAWE,gBAAgB5jC,IACjDr=
V,KAAKk5C,OAAOW,uBAAuB9jC,EAAM5I,EAAG4I,EAAM3I,MAKxDgO,EAAcra,UAAUw4C,qBA=
AuB,SAAS18B,EAAQC,GAC9D,GAAIs9B,GAAgB,SAASvkC,EAAUyG,GACrC,OACEnP,EAAG,EA=
CHC,EAAG,EACH6I,MAAOJ,EAASI,MAChBC,OAAQoG,EAAY3H,MAIpB0lC,EAAgB,SAAUxkC,E=
AAUyG,GACtC,OACEnP,EAAG,EACHC,EAAGyI,EAASK,OAASoG,EAAY1H,OACjCqB,MAAOJ,EA=
ASI,MAChBC,OAAQoG,EAAY1H,QAIrBuV,GAAWtN,GACZ7c,KAAKi6C,qBAAqBp9B,EAAQu9B,=
GAC1Bv9B,GACR7c,KAAK85C,oBAAoBj9B,EAAQu9B,GAGhCjwB,EAAWrN,GACZ9c,KAAKi6C,=
qBAAqBn9B,EAAQu9B,GAC1Bv9B,GACR9c,KAAK85C,oBAAoBh9B,EAAQu9B,IAIrCj/B,EAAc=
ra,UAAUy4C,aAAe,SAAStiC,EAAWT,GAazD,QAAS6jC,GAAQzkC,EAAUqB,EAAWT,GAgBpC,I=
AfA,GAKIX,GALAG,EAAQJ,EAASI,MACjBC,EAASL,EAASK,OAClBqkC,EAAqD,GAAvCxwC,KA=
AKywC,KAAKvkC,EAAMA,EAAQC,EAAOA,GAC7CukC,EAAY,GAAI9C,GAAUlhC,GAC1BikC,EAA=
oB,GAAI9C,GAQxB1qC,EAAI,EACJF,EAAI,IACJnN,GAAKqN,EAAEF,GAAG,EACRjD,KAAKoK=
,IAAIjH,EAAIF,GAAK,GACtB0tC,EAAkB94C,MAChB0W,SAAUzY,IAEZiW,EAAO2kC,EAAUE,=
aAAazjC,EAAWwjC,GACtC5kC,EAAKG,MAAQskC,GACdvtC,EAAInN,EACJA,GAAKqN,EAAEF,=
GAAG,GAEJ8I,EAAKG,MAAQskC,IACnBrtC,EAAIrN,EACJA,GAAKqN,EAAEF,GAAG,GAEZ0tC=
,EAAkBhvB,KAKpB,QAAQ5V,KAAMA,EAAMwC,SAAUzY,GAtChC,IAAI,GARA+6C,GAActmC,OA=
AOumC,oBAAoBpkC,EAAarW,OAAO,GAC7D06C,GACF3iC,KAAMjB,EACNgB,KAAMzB,EAAaw+B=
,YAAYx+B,EAAamkC,IAAc,GAAO,GACjE9kC,KAAMwkC,EAAQt6C,KAAK6V,SAAUqB,EAAWT,I=
AGtCtU,EAAQnC,KAAKk5C,OAAOl4B,UAAU7e,MAC1B6D,EAAI,EAAG2M,EAAIxQ,EAAMmD,OA=
AYqN,EAAJ3M,EAAOA,IACtC7D,EAAM6D,GAAGkR,UAAY4jC,GAkEzB1/B,EAAcra,UAAUu4C,=
YAAc,SAASjkC,GAwC9C,QAAS0lC,GAAa75C,GACrB,GAAIuT,GAASY,EAAK2lC,OAEO,YAAnB=
3lC,EAAKkjC,WACLhE,EAAK2E,OAAO+B,eAAe5lC,EAAKmG,iBAGlC/G,IACH8/B,EAAK2E,O=
AAOl4B,UAAUk6B,SAASzmC,EAAO,IACtC8/B,EAAK2E,OAAOl4B,UAAUm6B,UAAU1mC,EAAO,=
GAAIA,EAAO,KAGnDvT,IAEGuT,IACF8/B,EAAK2E,OAAOl4B,UAAUm6B,WAAW1mC,EAAO,IAA=
KA,EAAO,IACpD8/B,EAAK2E,OAAOl4B,UAAUk6B,SAASzmC,EAAO,KAGd,UAAnBY,EAAKkjC,=
WACLhE,EAAK2E,OAAO+B,eAAe5lC,EAAKmG,iBA3DtC,GAAI+4B,GAAOv0C,IAEXA,MAAKi4C=
,eAAer2C,KAAKyT,GACzByhC,EAAazhC,GAEb0lC,EAAa,WACX,GAAIK,GAAc/lC,EAAKgmC,=
gBAMvB,IALGD,IACD7G,EAAK2E,OAAOl4B,UAAUs6B,qBACtB/G,EAAK2E,OAAOl4B,UAAU9G=
,OAAOkhC,EAAYjuC,GAAK,EAAGiuC,EAAYhuC,GAAK,IAGhEiI,EAAKgjC,MACP9D,EAAKgH,=
yBAAyBlmC,OACzB,IAAIA,EAAKmmC,QACdjH,EAAKkH,eAAepmC,OACf,IAAIA,EAAKqmC,GA=
CdnH,EAAKoH,aAAY,EAAOtmC,OACnB,IAAIA,EAAKumC,GACdrH,EAAKoH,aAAY,EAAMtmC,O=
AClB,IAAIA,EAAKC,MACdi/B,EAAKsH,aAAaxmC,OACb,IAAkB7P,SAAd6P,EAAK8C,KACdo8=
B,EAAKuH,YAAYzmC,OACZ,IAAIA,EAAK0F,MACdw5B,EAAKwH,aAAa1mC,OACb,IAAIA,EAAK=
2hC,OACdzC,EAAKyH,cAAc3mC,OACd,IAAIA,EAAK4mC,GACd1H,EAAK2H,UAAU7mC,OACX,K=
AAKA,EAAK8mC,MAClB,KAAM,oCAAsCC,KAAKC,UAAUhnC,EAAMqiC,EAG5D0D,IACD7G,EAAK=
2E,OAAOl4B,UAAUs7B,sBA8B5BlhC,EAAcra,UAAUw6C,yBAA2B,SAASlmC,GAC3D,GAAIk/B=
,GAAOv0C,IACXqV,GAAKgjC,MAAM/P,QAAQ,SAAS96B,GAC3B+mC,EAAK+E,YAAY9rC,GACjB=
ipC,EAAOphC,EAAK0hC,UAAWvpC,EAAKupC,cAO9B37B,EAAcra,UAAU06C,eAAiB,SAASc,G=
AYjD,QAASC,GAASC,GACjB,IAAKA,EAAK,MAAO,KAEjB,IAAIC,KACJA,GAAK96C,KAAK,EAE=
V,KAAI,GAAIoE,GAAIw1C,EAAQl2C,OAAS,EAAGU,EAAI,EAAGA,IACtC02C,EAAK96C,KAAK=
66C,EAGX,OAAOC,GArBR,GAAIlB,GAAUe,EAAWf,QACrBmB,EAAiB38C,KAAKk5C,OAAOl4B,=
UAAU27B,eACvCD,EAAOF,EAASD,EAAWK,KAE3BF,KAAMC,IAAmBD,EAAKp3C,OAAS,GAAKi3C=
,EAAWK,MAE3DvF,EAAiBwF,kBAAkBrB,EAASmB,EAC5C,IAAIr7C,GAAStB,KAAK88C,WAAWt=
B,EAASA,EAASkB,EAC5CjG,GAAO8F,EAAWxF,UAAWz1C,EAAOy1C,YAiBxC37B,EAAcra,UAA=
U+7C,WAAa,SAAStB,EAASjmC,EAAQmnC,EAAMK,EAAWC,GAmC9E,QAASC,GAAmB/1C,GAG1B,=
IAAI,GAFAg2C,GAEIl3C,EAAI,EAAG2M,EAAIwqC,EAAW73C,OAAYqN,EAAJ3M,EAAOA,IAAK=
,CAChD,GAAIo3C,GAAOD,EAAWn3C,EACtB,IAAIo3C,EAAKC,WAAan2C,EAAKm2C,SAAU,CAC=
nCH,EAAWE,CACX,QAICF,IACHA,EAAWh2C,EACXi2C,EAAWv7C,KAAKs7C,IAElBA,EAASI,M=
AAQvzC,KAAKwB,IAAI2xC,EAASI,MAAOp2C,EAAKo2C,OAC/CJ,EAAS9vC,EAAIrD,KAAKC,I=
AAIkzC,EAAS9vC,EAAGlG,EAAKkG,GAG1C,QAASmwC,GAAcv3C,GACtB,MAAI02C,IAAQA,EA=
AKp3C,OAASU,EAAU02C,EAAK12C,GAClC,EAGP,QAASw3C,GAAcC,EAAQC,GAC7B,GAAID,EA=
AOE,SAAWF,EAAOE,QAAU,EAAG,CACxC,GAAIC,GAAYZ,EAAWS,EAAOE,QAAU,CAC5C,IAAIC,=
GAAab,EAAUz3C,OAAQ,KAAM,uBAAyBo4C,EAAc,oDAChF,OAAOX,GAAUa,GAAWF,GAG9B,MAA=
O,MAjET,GAAInJ,GAAOv0C,KACPm9C,KAAiBpG,IA+BrB,OA7BA/2C,MAAK42C,QAAQiH,KAA=
K,cAAeZ,EAAoB,WACnD1nC,EAASA,GAAUimC,EAEnBjH,EAAK2E,OAAOl4B,UAAU88B,kBAEt=
B,KAAI,GAAI93C,GAAI,EAAG2M,EAAI6oC,EAAQl2C,OAAYqN,EAAJ3M,EAAOA,IAAK,CAC7C=
,GAAIy3C,GAASjC,EAAQx1C,GACjBiQ,EAAQV,EAAOvP,GAAG+3C,WAClBC,EAAaT,EAAcv3C=
,EAE/B,IAAIy3C,EAAOQ,SAAWR,EAAOQ,QAAU,EACnC,IAAI,GAAIvyC,GAAI,EAAGA,EAAI+=
xC,EAAOQ,QAASvyC,IAC/BuK,GAASV,IAASvP,GAAG+3C,WAAarB,EAAK12C,EAI/CuuC,GAA=
K2E,OAAOl4B,UAAUk9B,YAAYjoC,EAAO+nC,EAAYR,EAAcC,EAAQz3C,IACtEy3C,EAAOtB,M=
AGDsB,EAAOU,sBAEhB5J,EAAK2E,OAAOl4B,UAAUo9B,WAAWX,IAJjClJ,EAAK+E,YAAYmE,G=
ACjBhH,EAAOM,EAAW0G,EAAO1G,YAO7BxC,EAAK2E,OAAOl4B,UAAUq9B,yBAGhBlB,WAAYA,=
EAAYpG,UAAWA,IAsC7C37B,EAAcra,UAAU46C,YAAc,SAAS2C,EAAajpC,GAkB3D,QAASkpC,=
GAAqBlnC,GAG7B,GAAImnC,EAAY,CACf,GAAIC,GAASD,CAGb,IAFAA,EAAa,KAETC,EAAOzH=
,OAAQ,CAClB,GAAI/9B,GAASwlC,EAAOzH,OAAO,EAE3BS,GAAax+B,GAASwlC,EAAOC,UAAW=
,GACxCnK,EAAK2E,OAAOyF,UAAU1lC,OAChB,CACN,GAAI2lC,GAAa,GAAIrH,GAAKhD,EAAK=
1+B,SAASI,MACxC2oC,GAAWC,UAAUJ,EAAOK,SAAS,IACrCF,EAAWzxC,GAAKsxC,EAAOC,UA=
CvBE,EAAWxxC,EAAIiK,EAAKI,oBAAsBmnC,EAAWnnC,oBACrD88B,EAAK2E,OAAO6F,QAAQH=
,GAAY,KAlCnC,GAAIrK,GAAOv0C,KACN8W,EAAQwnC,EAAcjpC,EAAKumC,GAAKvmC,EAAKqm=
C,GACrCsD,EAAU3pC,EAAK4pC,QAEpBj/C,MAAKk5C,OAAOl4B,UAAUm6B,UAAU6D,EAAQ/oC=
,MAExC,IAAIuoC,EACJx+C,MAAK42C,QAAQiH,KAAK,YAAaU,EAAsB,WACpDznC,EAAMwxB,Q=
AAQ,SAAS96B,GACtBgxC,EAAahxC,EAAK0xC,WAClB3K,EAAK+E,YAAY9rC,GACRipC,EAAOp=
hC,EAAK0hC,UAAWvpC,EAAKupC,eAIvC/2C,KAAKk5C,OAAOl4B,UAAUm6B,WAAW6D,EAAQ/o=
C,QA0B1CmF,EAAcra,UAAU86C,aAAe,SAASsD,GAC9C,GAAIC,GAAY,GAAI9H,GAAe6H,EAEn=
CC,GAAUC,WAAWr/C,KAAKk5C,OAE1B,KAAI,GAAIlzC,GAAI,EAAG2M,EAAIwsC,EAAU7pC,M=
AAM9R,KAAK8B,OAAYqN,EAAJ3M,EAAOA,IAAK,CAC1Do5C,EAAUE,SAASt5C,EAAGhG,KAAKk=
5C,OAE3B,IAAI53C,GAAStB,KAAK88C,WAAWqC,EAAU7pC,MAAM9R,KAAKwC,GAAIm5C,EAAU=
7pC,MAAMC,OAAQ4pC,EAAUI,SAASC,QAASL,EAAU7pC,MAAM9R,KAAMwC,EAChIywC,GAAO0I=
,EAAUpI,UAAWz1C,EAAOy1C,WAEnCqI,EAAUK,OAAOz5C,EAAGhG,KAAKk5C,OAAQ53C,EAAO=
67C,YAG1CiC,EAAUM,SAAS1/C,KAAKk5C,SAI1B99B,EAAcra,UAAU+6C,YAAc,SAASzmC,GA=
K7C,IAJD,GAAIgC,GAAOrX,KAAK2/C,cAActqC,GACzBuqC,EAAgB,EAASvoC,EAAKE,YAAc,=
EAC5CsoC,EAAYxqC,EAAKwqC,WAAa,GAE3BxoC,IAAuB,KAAdwoC,GAAoCA,EAAhBD,IAA4B,=
CAC9D,GAAI7I,GAAY/2C,KAAKk5C,OAAO6F,QAAQ1nC,EACpChC,GAAK0hC,UAAUn1C,KAAKm=
1C,GACpB1/B,EAAOrX,KAAK2/C,cAActqC,GACtBgC,IACFuoC,GAAiBvoC,EAAKE,eAK5B6D=
,EAAcra,UAAU4+C,cAAgB,SAASG,GAChD,IAAKA,EAAShB,UAAyC,IAA7BgB,EAAShB,SAASx=
5C,OAAc,MAAO,KAIjE,KAFA,GAAI+R,GAAO,GAAIkgC,GAAKv3C,KAAKk5C,OAAOl4B,UAAU2=
7B,gBAEpCmD,EAAShB,UAAYgB,EAAShB,SAASx5C,OAAS,GAAK+R,EAAK0oC,wBAAwBD,EAAS=
hB,SAAS,KACzGznC,EAAKwnC,UAAUiB,EAAShB,SAASkB,QAKlC,OAFA3oC,GAAK4oC,oBAAm=
D,IAA7BH,EAAShB,SAASx5C,OAEtC+R,GAIR+D,EAAcra,UAAUg7C,aAAe,SAAS1mC,GAC5C,=
GAAIlS,GAAWnD,KAAKk5C,OAAOgH,SAAS7qC,EACpCA,GAAK0hC,UAAUn1C,KAAKuB,IAGxBi=
Y,EAAcra,UAAUi7C,cAAgB,SAAS3mC,GAChD,GAAIa,GAASb,EAAK8qC,UAEdngD,MAAKk5C,=
OAAOl4B,UAAUo/B,gBAAkBlqC,GAI3ClW,KAAKk5C,OAAO+B,iBAGb5lC,EAAK2hC,OAAO1O,=
QAAQ,SAASrvB,GAC5B,GAAI9V,GAAWnD,KAAKk5C,OAAOyF,UAAU1lC,EAC/B5D,GAAK0hC,U=
AAUn1C,KAAKuB,IACxBnD,MAEHA,KAAKk5C,OAAOl4B,UAAUk6B,SAAShlC,IAGhCkF,EAAcr=
a,UAAUm7C,UAAY,SAAS7mC,GAC5C,GAAIlS,GAAWnD,KAAKk5C,OAAOmH,MAAMhrC,EAC9BA,=
GAAK0hC,UAAUn1C,KAAKuB,IAGxB3D,EAAOD,QAAU6b,GAKZ,SAAS5b,EAAQD,GAGtB,YAOA,=
SAASs3C,KACR72C,KAAKsgD,UAGNzJ,EAAiB91C,UAAUq4C,cAAgB,SAASmH,EAAOt+C,GAC1=
D,GAAIu+C,GAAaxgD,KAAKsgD,OAAOC,KAAWvgD,KAAKsgD,OAAOC,MAEhDC,GAAU3yC,QAAQ=
5L,GAAM,GAC3Bu+C,EAAU5+C,KAAKK,IAIjB40C,EAAiB91C,UAAU0/C,aAAe,SAASF,EAAOt=
+C,GACzD,GAAIu+C,GAAYxgD,KAAKsgD,OAAOC,EAE5B,IAAIC,EAAW,CACd,GAAIriC,GAAQ=
qiC,EAAU3yC,QAAQ5L,EAC1Bkc,IAAS,GACZqiC,EAAUtzB,OAAO/O,EAAO,KAK3B04B,EAAi=
B91C,UAAU2/C,KAAO,SAASH,GAC1C,GAAI93B,GAAO/Z,MAAM3N,UAAU+I,MAAMnK,KAAKgG,=
UAAW,GAE7C66C,EAAYxgD,KAAKsgD,OAAOC,EAExBC,IACHA,EAAUlY,QAAQ,SAASrmC,GAC1=
BA,EAAG6I,MAAM9K,KAAMyoB,MAKlBouB,EAAiB91C,UAAU88C,KAAO,SAAS0C,EAAOt+C,EA=
AI0+C,GACrD3gD,KAAKo5C,cAAcmH,EAAOt+C,GAC1B0+C,IACA3gD,KAAKygD,aAAaF,EAAO=
t+C,IAG1BzC,EAAOD,QAAUs3C,GAKZ,SAASr3C,EAAQD,EAASH,GAG/B,YAYA,SAAS83C,GAA=
WzgC,EAAcqhC,EAAiBn7B,EAAcg6B,EAAcp6B,EAAcH,GAC5Fpc,KAAKy6C,UAAY,GAAI9C,G=
AAUlhC,GAC/BzW,KAAK4gD,WAAa,GAAIhJ,GAAkBE,EAAiBn7B,GACzD3c,KAAK22C,aAAeA,=
EACpB32C,KAAKuc,aAAeA,EACpBvc,KAAKoc,OAASA,EACdpc,KAAK6gD,eAAiB,EAhBvB,GA=
AIlJ,GAAYv4C,EAAoB,IAChCw4C,EAAoBx4C,EAAoB,IACxCi4C,EAAmBj4C,EAAoB,IACvCs=
4C,EAAgBt4C,EAAoB,IAAIs4C,cACxCF,EAAOp4C,EAAoB,IAAIo4C,KAC/BsJ,EAAY1hD,EA=
AoB,GAoBpC83C,GAAWn2C,UAAUk4C,gBAAkB,SAASpB,GAC/C,MAAO73C,MAAK+gD,YAAYlJ,=
IAGzBX,EAAWn2C,UAAUggD,YAAc,SAAS1rC,GA2C3C,QAAS2rC,GAAc3rC,GACtB,GAAIZ,GA=
ASY,EAAK2lC,OAOlB,OALIvmC,KACHY,EAAKqpC,WAAajqC,EAAO,GAAKA,EAAO,GACrCY,EA=
AK4rC,WAAaxsC,EAAO,GAAKA,EAAO,IAG/BY,EAGR,QAAS6rC,KAER,QAASC,GAAqB9rC,EAA=
M+rC,GACnC,MAAI/rC,GAAKgsC,YAAchsC,EAAKisC,WAAajsC,EAAKksC,aAAelsC,EAAKms=
C,cAEhEnsC,EAAKgsC,YAAcD,EAAc,IAAM,EACvC/rC,EAAKisC,WAAaF,EAAc,IAAM,EACtC=
/rC,EAAKksC,aAAeH,EAAc,IAAO,EACzC/rC,EAAKmsC,cAAgBJ,EAAc,IAAO,GAGrCA,EAGR=
,QAASK,GAAkBC,GAE1B,IAAK,GADDC,MACK37C,EAAI07C,EAAWp8C,OAAS,EAAGU,GAAK,EA=
AGA,IAAK,CAChD,GAAI47C,GAAYF,EAAW17C,GACvB9C,EAAQqxC,EAAKqM,WAAW9I,gBAAgB=
8J,EAC5C,KAAI,GAAIj+B,KAAOzgB,GACXA,EAAMke,eAAeuC,KACvBg+B,EAAgBh+B,GAAOz=
gB,EAAMygB,IAIhC,MAAOg+B,GAGR,QAASE,GAAcptC,GAQtB,MAPsB,gBAAXA,IAAuBA,YAA=
kB7L,QACnD6L,GAAWA,EAAQA,EAAQA,EAAQA,GACzBA,YAAkB/F,QACN,IAAlB+F,EAAOnP,S=
ACVmP,GAAWA,EAAO,GAAIA,EAAO,GAAIA,EAAO,GAAIA,EAAO,KAG9CA,EAGR,GAAIA,IAAUj=
P,OAAWA,OAAWA,OAAWA,OAE/C,IAAG6P,EAAKnS,MAAO,CACd,GAAIw+C,GAAcrsC,EAAKnS,=
gBAAiBwL,OAAS2G,EAAKnS,OAASmS,EAAKnS,OAChE4+C,EAAsBL,EAAkBC,EAEzCI,KACFrt=
C,EAAS0sC,EAAqBW,EAAqBrtC,IAGjDqtC,EAAoBrtC,SACtBA,EAASotC,EAAcC,EAAoBrtC=
,SAU7C,MANAA,GAAS0sC,EAAqB9rC,EAAMZ,GAEjCY,EAAKZ,SACPA,EAASotC,EAAcxsC,EA=
AKZ,SAGZjP,SAAdiP,EAAO,IAAkCjP,SAAdiP,EAAO,IAAkCjP,SAAdiP,EAAO,IAAkCjP,SA=
AdiP,EAAO,GACnF,KAEAA,EAnHLY,YAAgB3G,OACnB2G,GAASgjC,MAAOhjC,IACS,gBAARA,=
IAAoBA,YAAgBzK,WACrDyK,GAAS8C,KAAM9C,IAIiB,IAA7Bf,OAAO+R,KAAKhR,GAAM/P,SA=
ErB+P,GAAS8C,KAAM,IAGhB,IAAIo8B,GAAOv0C,IAEX,OAAOA,MAAK4gD,WAAW/C,KAAKxoC=
,EAAM,WAIjC,GAFAA,EAAK2lC,QAAUkG,EAAc7rC,GAEzBA,EAAKmmC,QACR,MAAOwF,GAAcz=
M,EAAKwN,eAAe1sC,GACnC,IAAIA,EAAKgjC,MACf,MAAO2I,GAAczM,EAAKyN,yBAAyB3sC,=
GAC7C,IAAIA,EAAKqmC,GACf,MAAOsF,GAAczM,EAAK0N,aAAY,EAAO5sC,GACvC,IAAIA,EA=
AKumC,GACf,MAAOoF,GAAczM,EAAK0N,aAAY,EAAM5sC,GACtC,IAAIA,EAAKC,MACf,MAAO0=
rC,GAAczM,EAAK2N,aAAa7sC,GACjC,IAAkB7P,SAAd6P,EAAK8C,KACf,MAAO6oC,GAAczM,=
EAAK4N,YAAY9sC,GAChC,IAAIA,EAAK0F,MACf,MAAOimC,GAAczM,EAAK6N,aAAa/sC,GACj=
C,IAAIA,EAAK2hC,OACf,MAAOgK,GAAczM,EAAK8N,cAAchtC,GAClC,IAAIA,EAAK4mC,GAC=
f,MAAO+E,GAAczM,EAAK+N,UAAUjtC,GAEpC,MAAM,oCAAsC+mC,KAAKC,UAAUhnC,EAAMqiC=
,MAmFpER,EAAWn2C,UAAUwhD,qBAAuB,SAASltC,GACpD,GAAI,sCAAsCqjB,KAAKrjB,EAAK=
0F,OAAQ,CAC3D,GAAIynC,GAAQ,cAAgBxiD,KAAK6gD,gBACjC7gD,MAAKoc,OAAOomC,GAAS=
ntC,EAAK0F,MAC1B1F,EAAK0F,MAAQynC,IAIftL,EAAWn2C,UAAUqhD,aAAe,SAAS/sC,GAC=
xCrV,KAAKoc,QACRpc,KAAKuiD,qBAAqBltC,EAG3B,IAAIotC,GAAYziD,KAAK22C,aAAayL=
,aAAa/sC,EAAK0F,MAEpD,IAAI1F,EAAKqtC,IAAK,CACb,GAAIC,GAAUF,EAAUxsC,MAAQws=
C,EAAUvsC,OAASb,EAAKqtC,IAAI,GAAKrtC,EAAKqtC,IAAI,GAAMrtC,EAAKqtC,IAAI,GA=
AKD,EAAUxsC,MAAQZ,EAAKqtC,IAAI,GAAKD,EAAUvsC,MACxIb,GAAK2F,OAAS3F,EAAKqpC=
,UAAYrpC,EAAK4rC,UAAYwB,EAAUxsC,MAAQ0sC,EAClEttC,EAAK4F,QAAUwnC,EAAUvsC,O=
AASysC,MAElCttC,GAAK2F,OAAS3F,EAAKqpC,UAAYrpC,EAAK4rC,UAAY5rC,EAAKY,OAASw=
sC,EAAUxsC,MACxEZ,EAAK4F,QAAU5F,EAAKa,QAAWusC,EAAUvsC,OAASb,EAAK2F,OAASyn=
C,EAAUxsC,KAI3E,OADAZ,GAAKutC,WAAa5iD,KAAK4gD,WAAWiC,YAAY,aACvCxtC,GAGR6h=
C,EAAWn2C,UAAUohD,YAAc,SAAS9sC,GAI3C,GAAIurC,GAAa5gD,KAAK4gD,WAAWv+B,OACj=
Cu+B,GAAWh/C,KAAKyT,EAEhB,IAAInO,GAAOlH,KAAKy6C,UAAUqI,aAAaztC,EAAK8C,KAA=
MyoC,EAMlD,OAJAvrC,GAAKypC,SAAW53C,EAAK4P,MACrBzB,EAAKqpC,UAAYx3C,EAAK67C=
,SACtB1tC,EAAK4rC,UAAY/5C,EAAK87C,SAEf3tC,GAGR6hC,EAAWn2C,UAAUihD,yBAA2B,=
SAAS3sC,GACxD,GAAIyB,GAAQzB,EAAKgjC,KAEjBhjC,GAAKqpC,UAAY,EACjBrpC,EAAK4r=
C,UAAY,CAEjB,KAAI,GAAIj7C,GAAI,EAAG2M,EAAImE,EAAMxR,OAAYqN,EAAJ3M,EAAOA,I=
ACvC8Q,EAAM9Q,GAAKhG,KAAK+gD,YAAYjqC,EAAM9Q,IAElCqP,EAAKqpC,UAAY30C,KAAKw=
B,IAAI8J,EAAKqpC,UAAW5nC,EAAM9Q,GAAG04C,WACnDrpC,EAAK4rC,UAAYl3C,KAAKwB,I=
AAI8J,EAAK4rC,UAAWnqC,EAAM9Q,GAAGi7C,UAGpD,OAAO5rC,IAGR6hC,EAAWn2C,UAAUki=
D,eAAiB,SAASC,EAAeC,GAC7D,GAAID,EAAe,CAClB,GAAIE,GAAaD,EAAgB,OAAE1+C,WAAW=
2H,QAAQ,KAAM,IAC5D,OAAOpM,MAAKy6C,UAAUE,aAAayI,EAAY,KAAMpjD,KAAK4gD,YAE1D=
,MAAO5gD,MAAKy6C,UAAUE,aAAa,MAAO36C,KAAK4gD,aAIjD1J,EAAWn2C,UAAUsiD,YAAc,=
SAASH,EAAeI,EAAS1C,EAAY5B,GAC/E,GAAIP,EAEJ,IAAIyE,EACHzE,GAAWK,SAAU9+C,KA=
AKy6C,UAAUqI,aAAaQ,EAAS1C,GAAY9pC,WAElE,CAEJ,GAAIysC,GAASvE,EAAQ1mC,SAAW,=
CAChCmmC,IACCzH,SACC7pC,EAAGo2C,EACHn2C,EAAI4xC,EAAQ9oC,OAAS8oC,EAAQ1nC,W=
AAc0nC,EAAQnJ,SAAWmJ,EAAQ1mC,SAAW,EACjFqB,GAAI4pC,EACJ3pC,GAAI2pC,EACJp/C=
,KAAM,UACN2T,MAAO,WAQV,MAHA2mC,GAAOC,UAAYD,EAAOwC,UAAYjC,EAAQ/oC,MAC9CwoC=
,EAAO0B,WAAa1B,EAAO+E,WAAaxE,EAAQ9oC,OAEzCuoC,GAGRvH,EAAWn2C,UAAUkhD,YAAc=
,SAASwB,EAAWpuC,GACtD,GAAInS,GAAQlD,KAAK4gD,WAAWv+B,QAExBvL,EAAQ2sC,EAAYp=
uC,EAAKumC,GAAKvmC,EAAKqmC,EACvCrmC,GAAK4pC,SAAWj/C,KAAKijD,eAAeQ,EAAW3sC=
,GAC/CzB,EAAKqpC,UAAY,EACjBrpC,EAAK4rC,UAAY,CAIjB,KAAI,GAFAqC,GAAU,EAENt9=
C,EAAI,EAAG2M,EAAImE,EAAMxR,OAAYqN,EAAJ3M,EAAOA,IAAK,CAC5C,GAAI09C,GAAW5s=
C,EAAM9Q,GAAKhG,KAAK+gD,YAAYjqC,EAAM9Q,IAE7Cy4C,EAAS6E,KAAY,IAEpBI,GAAS9H=
,IAAO8H,EAAShI,KAC7BgI,EAASxE,WAAal/C,KAAKqjD,YAAYI,EAAWC,EAASJ,SAAW7E,EA=
AQv7C,EAAOmS,EAAK4pC,WAG3F5pC,EAAKqpC,UAAY30C,KAAKwB,IAAI8J,EAAKqpC,UAAW5=
nC,EAAM9Q,GAAG04C,UAAYrpC,EAAK4pC,SAAShpC,OAC7EZ,EAAK4rC,UAAYl3C,KAAKwB,I=
AAI8J,EAAK4rC,UAAWnqC,EAAM9Q,GAAGi7C,UAAY5rC,EAAK4pC,SAAShpC,OAG9E,MAAOZ,=
IAGR6hC,EAAWn2C,UAAUghD,eAAiB,SAAS1sC,GAC9C,GAAImmC,GAAUnmC,EAAKmmC,OACnB=
nmC,GAAKunC,KAAO58C,KAAK4gD,WAAWiC,YAAY,cAAgB,CAExD,KAAI,GAAI78C,GAAI,EAA=
G2M,EAAI6oC,EAAQl2C,OAAYqN,EAAJ3M,EAAOA,IACzCw1C,EAAQx1C,GAAKhG,KAAK+gD,Y=
AAYvF,EAAQx1C,GAGvC,IAAI29C,GAAWtM,EAAiBuM,cAAcpI,EAK9C,OAHAnmC,GAAKqpC,U=
AAYiF,EAAS35C,IAAMqL,EAAKunC,MAAQpB,EAAQl2C,OAAS,GAC9D+P,EAAK4rC,UAAY0C,E=
AASp4C,IAAM8J,EAAKunC,MAAQpB,EAAQl2C,OAAS,GAEvD+P,GAGR6hC,EAAWn2C,UAAUmhD=
,aAAe,SAAS7sC,GA4C5C,QAASwuC,GAAU1K,EAAOjyC,GACzB,MAAO,YAIN,MAHa,QAATA,GA=
AiC,gBAATA,KAC3BA,EAAK48C,UAAY3K,EAAMyH,WAAWiC,YAAY,cAExC1J,EAAM4H,YAAY75=
C,IAI3B,QAAS68C,GAAUxnC,GAClB,GAAIynC,GAAS3uC,EAAK2uC,QAES,gBAAhB3uC,GAAK=
2uC,QAAuB3uC,YAAgBzK,WACtDo5C,EAASznC,EAAaynC,GAGvB,IAAIC,IACHhvC,WAAY,SA=
ASjP,EAAGqP,GAAQ,MAAO,IACvCH,WAAY,SAASlP,EAAGqP,GAAQ,MAAO,IACvCM,WAAY,SAA=
S3P,EAAGqP,GAAQ,MAAO,SACvC6uC,WAAY,SAASl+C,EAAGqP,GAAQ,MAAO,SACvCF,YAAa,S=
AASnP,EAAGqP,GAAQ,MAAO,IACxCD,aAAc,SAASpP,EAAGqP,GAAQ,MAAO,IACzC8uC,WAAY,=
SAASn+C,EAAGqP,GAAQ,MAAO,IACvC+uC,cAAe,SAASp+C,EAAGqP,GAAQ,MAAO,IAG3C,OAA=
OmiC,GAAKyM,EAAeD,GAG5B,QAASK,GAAWL,GAKnB,IAAI,GAJAxE,MACA8E,EAAc,EACdC,E=
AAmB,EAEfv+C,EAAI,EAAG2M,EAAI0C,EAAKC,MAAMC,OAAOjQ,OAAYqN,EAAJ3M,EAAOA,IA=
AK,CACxD,GAAIw+C,GAAUD,EAAmBP,EAAO9uC,WAAWlP,EAAGqP,GAAQ2uC,EAAO7uC,YAAYn=
P,EAAGqP,EACpFmqC,GAAQ59C,KAAK4iD,GACbF,GAAeE,EACfD,EAAmBP,EAAO5uC,aAAapP=
,EAAGqP,GAK3C,MAFAivC,IAAeC,EAAmBP,EAAO9uC,WAAWG,EAAKC,MAAMC,OAAOjQ,OAAQ+=
P,IAG7EovC,MAAOH,EACP9E,QAASA,GAIX,QAASkF,KAGR,IAAK,GAFDC,GAAGj5C,EAEE1F,=
EAAI,EAAG2M,EAAIiyC,EAASt/C,OAAYqN,EAAJ3M,EAAOA,IAAK,CAChD,GAAI6+C,GAAOD,=
EAAS5+C,GAEhB8+C,EAAgBC,EAAUF,EAAKG,IAAKH,EAAKA,KAAMxvC,EAAKkqC,UACpD0F,E=
AAgBJ,EAAK9B,SAAW+B,EAAc/B,SAC9CmC,EAAgBL,EAAK7B,SAAW8B,EAAc9B,QAElD,IAAI=
iC,EAAgB,EAGnB,IAFAN,EAAIM,EAAgBJ,EAAKA,KAErBn5C,EAAI,EAAGA,EAAIm5C,EAAKA=
,KAAMn5C,IACzB2J,EAAKC,MAAMC,OAAOsvC,EAAKG,IAAMt5C,GAAGgzC,WAAaiG,CAI/C,I=
AAIO,EAAgB,EAGnB,IAFAP,EAAIO,EAAgBL,EAAKA,KAErBn5C,EAAI,EAAGA,EAAIm5C,EAA=
KA,KAAMn5C,IACzB2J,EAAKC,MAAMC,OAAOsvC,EAAKG,IAAMt5C,GAAGu1C,WAAa0D,GAMjD=
,QAASI,GAAUC,EAAKH,EAAMrF,GAG7B,IAAI,GAFAl+C,IAAWyhD,SAAU,EAAGC,SAAU,GAE9=
Bh9C,EAAI,EAAO6+C,EAAJ7+C,EAAUA,IACxB1E,EAAOyhD,UAAY1tC,EAAKC,MAAMC,OAAOy=
vC,EAAMh/C,GAAG04C,WAAa14C,EAAGw5C,EAAQA,QAAQwF,EAAMh/C,GAAK,GACzF1E,EAAO=
0hD,UAAY3tC,EAAKC,MAAMC,OAAOyvC,EAAMh/C,GAAGi7C,WAAaj7C,EAAGw5C,EAAQA,QAA=
QwF,EAAMh/C,GAAK,EAG1F,OAAO1E,GAGR,QAAS6jD,GAAUC,EAASJ,EAAKH,GAChC,IAAK,G=
AAI7+C,GAAI,EAAO6+C,EAAJ7+C,EAAUA,IACzBo/C,EAAQJ,EAAMh/C,IACbm2C,OAAO,EAC=
PuC,UAAW,EACXuC,UAAW,EACXtD,QAASyH,EAAQJ,GAAKrH,SAKzB,QAAS0H,GAAW/vC,EAAO=
gwC,EAAKN,EAAKH,GACpC,IAAK,GAAI7+C,GAAI,EAAO6+C,EAAJ7+C,EAAUA,IACzBsP,EAA=
M9R,KAAK8hD,EAAMt/C,GAAGg/C,IACnB7I,OAAO,EACPuC,UAAW,EACXuC,UAAW,EACX6C,U=
AAWxuC,EAAM9R,KAAK8hD,GAAKN,GAAKlB,WAKnC,QAASyB,GAAkBlwC,GAK1B,GAJKA,EAAK=
C,MAAMC,SACfF,EAAKC,MAAMC,OAAS,QAGY,gBAAtBF,GAAKC,MAAMC,QAAuBF,EAAKC,MAAM=
C,iBAAkB3K,QAGzE,IAFAyK,EAAKC,MAAMC,QAAWF,EAAKC,MAAMC,QAE3BF,EAAKC,MAAMC,=
OAAOjQ,OAAS+P,EAAKC,MAAM9R,KAAK,GAAG8B,QACnD+P,EAAKC,MAAMC,OAAO3T,KAAKyT,=
EAAKC,MAAMC,OAAOF,EAAKC,MAAMC,OAAOjQ,OAAS,GAItE,KAAI,GAAIU,GAAI,EAAG2M,EA=
AI0C,EAAKC,MAAMC,OAAOjQ,OAAYqN,EAAJ3M,EAAOA,IAAK,CACxD,GAAI+T,GAAI1E,EAAK=
C,MAAMC,OAAOvP,IACT,gBAAN+T,IAAkBA,YAAanR,SAAuB,gBAANmR,IAAkBA,YAAanP,WAC=
zFyK,EAAKC,MAAMC,OAAOvP,IAAOiQ,MAAO8D,KA1KnCwrC,EAAkBlwC,GAClBA,EAAKmwC,Q=
AAUzB,EAAU/jD,KAAKuc,cAC9BlH,EAAKkqC,SAAW8E,EAAWhvC,EAAKmwC,QAEhC,IACIR,G=
AAKM,EAAKG,EAAMC,EADhBd,IAGJ,KAAII,EAAM,EAAGS,EAAOpwC,EAAKC,MAAM9R,KAAK,G=
AAG8B,OAAcmgD,EAANT,EAAYA,IAAO,CACjE,GAAInlD,GAAIwV,EAAKC,MAAMC,OAAOyvC,E=
AI1B,KAHAnlD,EAAE6+C,UAAY,EACd7+C,EAAEohD,UAAY,EAEVqE,EAAM,EAAGI,EAAOrwC,=
EAAKC,MAAM9R,KAAK8B,OAAcogD,EAANJ,EAAYA,IAAO,CAC9D,GAAIF,GAAU/vC,EAAKC,MA=
AM9R,KAAK8hD,GAC1Bp+C,EAAOk+C,EAAQJ,EACnB,KAAK99C,EAAKi1C,MAAO,CAEhBj1C,E=
AAOk+C,EAAQJ,GAAOhlD,KAAK4gD,WAAW/C,KAAK32C,EAAM28C,EAAU7jD,KAAMkH,IAE7DA=
,EAAK+2C,SAAW/2C,EAAK+2C,QAAU,GAClCkH,EAAUC,EAASJ,EAAK99C,EAAK+2C,SAC7B2G=
,EAAShjD,MAAOojD,IAAKA,EAAKH,KAAM39C,EAAK+2C,QAAS8E,SAAU77C,EAAKw3C,UAAWs=
E,SAAU97C,EAAK+5C,cAEvFphD,EAAE6+C,UAAY30C,KAAKwB,IAAI1L,EAAE6+C,UAAWx3C,=
EAAKw3C,WACzC7+C,EAAEohD,UAAYl3C,KAAKwB,IAAI1L,EAAEohD,UAAW/5C,EAAK+5C,YA=
IvC/5C,EAAKy2C,SAAWz2C,EAAKy2C,QAAU,GAClC0H,EAAWhwC,EAAKC,MAAOgwC,EAAKN,E=
AAK99C,EAAKy2C,UAKzC+G,GAEA,IAAIf,GAAWtM,EAAiBuM,cAAcvuC,EAAKC,MAAMC,OAKz=
D,OAHAF,GAAKqpC,UAAYiF,EAAS35C,IAAMqL,EAAKkqC,SAASkF,MAC9CpvC,EAAK4rC,UAA=
Y0C,EAASp4C,IAAM8J,EAAKkqC,SAASkF,MAEvCpvC,GAuIR6hC,EAAWn2C,UAAUshD,cAAgB=
,SAAShtC,GAG7C,IAAI,GAFA0E,GAAI,EAAGC,EAAI,EAEPhU,EAAI,EAAG2M,EAAI0C,EAAK=
2hC,OAAO1xC,OAAYqN,EAAJ3M,EAAOA,IAAK,CAClD,GAAIiT,GAAS5D,EAAK2hC,OAAOhxC,=
EAEzB,QAAOiT,EAAO9U,MACd,IAAK,UACJ4V,EAAIhQ,KAAKwB,IAAIwO,EAAGd,EAAO9L,EA=
AI8L,EAAOU,IAClCK,EAAIjQ,KAAKwB,IAAIyO,EAAGf,EAAO7L,EAAI6L,EAAOW,GAClC,MA=
CD,KAAK,OACJG,EAAIhQ,KAAKwB,IAAIwO,EAAGd,EAAO9L,EAAI8L,EAAOc,GAClCC,EAAIj=
Q,KAAKwB,IAAIyO,EAAGf,EAAO7L,EAAI6L,EAAOe,EAClC,MACD,KAAK,OACJD,EAAIhQ,KA=
AKwB,IAAIwO,EAAGd,EAAOkB,GAAIlB,EAAOqB,IAClCN,EAAIjQ,KAAKwB,IAAIyO,EAAGf,=
EAAOmB,GAAInB,EAAOsB,GAClC,MACD,KAAK,WACJ,IAAI,GAAIorC,GAAK,EAAGC,EAAK3sC=
,EAAOuB,OAAOlV,OAAasgD,EAALD,EAASA,IACnD5rC,EAAIhQ,KAAKwB,IAAIwO,EAAGd,EA=
AOuB,OAAOmrC,GAAIx4C,GAClC6M,EAAIjQ,KAAKwB,IAAIyO,EAAGf,EAAOuB,OAAOmrC,GA=
AIv4C,IASrC,MAHAiI,GAAKqpC,UAAYrpC,EAAK4rC,UAAYlnC,EAClC1E,EAAK8qC,WAAa9q=
C,EAAKmuC,WAAaxpC,EAE7B3E,GAGR6hC,EAAWn2C,UAAUuhD,UAAY,SAASjtC,GAGzC,MAFA=
A,GAAOyrC,EAAU+E,QAAQxwC,GACzBA,EAAKutC,WAAa5iD,KAAK4gD,WAAWiC,YAAY,aACvC=
xtC,GAGR7V,EAAOD,QAAU23C,GAKZ,SAAS13C,EAAQD,GAGtB,YAcA,SAASo4C,GAAUlhC,GA=
ClBzW,KAAKyW,aAAeA,EA8ErB,QAASqvC,GAAW3tC,EAAM4tC,GACzB,GAAIC,KACJ7tC,GAA=
OA,EAAK/L,QAAQ,IAAM,OAE1B,IAAIpF,EAEHA,GADG++C,GACO5tC,EAAM,IAERA,EAAKxK,=
MAAMs4C,EAIpB,KAAI,GAAIjgD,GAAI,EAAG2M,EAAI3L,EAAM1B,OAAYqN,EAAI,EAAR3M,E=
AAWA,IAAK,CAChD,GAAIwH,GAAOxG,EAAMhB,GAEbkgD,EAA4B,IAAhB14C,EAAKlI,MAErB,=
IAAK4gD,EAGA,CACJ,GAAIC,GAAoC,IAAnBH,EAAQ1gD,QAAgB0gD,EAAQA,EAAQ1gD,OAAS,=
GAAG8gD,OAErED,GACHH,EAAQpkD,MAAOuW,KAAM,GAAIiuC,SAAS,IAGlCJ,EAAQA,EAAQ1g=
D,OAAS,GAAG8gD,SAAU,MATvCJ,GAAQpkD,MAAMuW,KAAM3K,IAatB,MAAOw4C,GAGR,QAASK=
,GAAUxhC,EAAQyhC,GAC1BA,EAAcA,MACdzhC,EAASA,KAET,KAAI,GAAIlB,KAAOkB,GACH,=
QAAPlB,GAAiBkB,EAAOzD,eAAeuC,KAC1C2iC,EAAY3iC,GAAOkB,EAAOlB,GAI5B,OAAO2iC=
,GAGR,QAASC,GAAmBv/C,GAC3B,GAAIg/C,OAEgB,gBAATh/C,IAAqBA,YAAiB4D,WAChD5D,=
GAAUA,GAGX,KAAI,GAAIhB,GAAI,EAAG2M,EAAI3L,EAAM1B,OAAYqN,EAAJ3M,EAAOA,IAAK=
,CAC5C,GAEIsrB,GAFA9jB,EAAOxG,EAAMhB,GACb9C,EAAQ,IAGO,iBAARsK,IAAoBA,YAAg=
B5C,QAC9C0mB,EAAQw0B,EAAWt4C,IAEnB8jB,EAAQw0B,EAAWt4C,EAAK2K,KAAM3K,EAAKu=
4C,QACnC7iD,EAAQmjD,EAAU74C,GAGnB,KAAI,GAAIm4C,GAAK,EAAGC,EAAKt0B,EAAMhsB=
,OAAasgD,EAALD,EAASA,IAAM,CACjD,GAAIrkD,IACH6W,KAAMmZ,EAAMq0B,GAAIxtC,KAG=
bmZ,GAAMq0B,GAAIS,UACb9kD,EAAO8kD,SAAU,GAGlBC,EAAUnjD,EAAO5B,GAEjB0kD,EAA=
QpkD,KAAKN,IAIf,MAAO0kD,GAOR,QAASQ,GAAiBruC,GACzB,MAAOA,GAAK/L,QAAQ,qBAAs=
B,SAASc,GAClD,MAAOu5C,GAAcv5C,IAAMA,IAI7B,QAASw5C,GAAiBl5C,EAAMktC,EAAmBr=
zB,EAAUgZ,GAC5D,GAAI/0B,EAEJ,OAAuB9F,UAAnBgI,EAAK6Z,IAA8C,OAAnB7Z,EAAK6Z,=
GAEjC7Z,EAAK6Z,GAGRqzB,GAELA,EAAkBmD,KAAKrwC,EAAM,WAC5BlC,EAAQovC,EAAkBmI=
,YAAYx7B,KAGzB,OAAV/b,GAA4B9F,SAAV8F,EACdA,EAEA+0B,GATuBA,EAahC,QAASwlB,G=
AAQpvC,EAAckwC,EAAWjM,GACzC,GAAIkM,GAAaL,EAAmBI,EA8CpC,OA5CAC,GAAWte,QAAQ=
,SAAS96B,GAC3B,GAAI+nC,GAAWmR,EAAiBl5C,EAAMktC,EAAmB,OAAQ,UAC7DpiC,EAAWou=
C,EAAiBl5C,EAAMktC,EAAmB,WAAY,IACjE95C,EAAO8lD,EAAiBl5C,EAAMktC,EAAmB,QAA=
Q,GACzD75C,EAAU6lD,EAAiBl5C,EAAMktC,EAAmB,WAAW,GAC/D5iC,EAAQ4uC,EAAiBl5C,=
EAAMktC,EAAmB,QAAS,SAC3DmM,EAAaH,EAAiBl5C,EAAMktC,EAAmB,aAAc,MACrEoM,EAAk=
BJ,EAAiBl5C,EAAMktC,EAAmB,kBAAmB,MAC/EqM,EAAkBL,EAAiBl5C,EAAMktC,EAAmB,kB=
AAmB,MAC/E99B,EAAa8pC,EAAiBl5C,EAAMktC,EAAmB,aAAc,MACrEpjC,EAAaovC,EAAiBl=
5C,EAAMktC,EAAmB,aAAc,GAErExiC,EAAOzB,EAAaw+B,YAAYM,EAAU30C,EAAMC,EAGpD2M=
,GAAKyI,MAAQiC,EAAKg+B,cAAcsQ,EAAiBh5C,EAAK2K,MAAOG,GAC7D9K,EAAK0I,OAASgC=
,EAAKZ,WAAWgB,GAAYhB,CAE1C,IAAI0vC,GAAgBx5C,EAAK2K,KAAKxK,MAAMs5C,GAChCC,=
EAAiB15C,EAAK2K,KAAKxK,MAAMw5C,EACjCH,GACHx5C,EAAK45C,WAAalvC,EAAKg+B,cAA=
c8Q,EAAc,GAAI1uC,GAGvD9K,EAAK45C,WAAa,EAGfF,EACH15C,EAAK65C,YAAcnvC,EAAKg=
+B,cAAcgR,EAAe,GAAI5uC,GAGzD9K,EAAK65C,YAAc,EAGpB75C,EAAK85C,UAAYZ,EAAiBl=
5C,EAAMktC,EAAmB,YAAa,QACxEltC,EAAK0K,KAAOA,EACZ1K,EAAK8K,SAAWA,EAChB9K,E=
AAKsK,MAAQA,EACbtK,EAAKq5C,WAAaA,EAClBr5C,EAAKs5C,gBAAkBA,EACvBt5C,EAAKu5=
C,gBAAkBA,EACvBv5C,EAAKoP,WAAaA,IAGZgqC,EA7PR,GAAIX,GAAU,wCAGVgB,EAAU,UAC=
VE,EAAW,SAoBfxP,GAAU52C,UAAU+hD,aAAe,SAAS6D,EAAWjM,GAkCtD,QAAS6M,GAAgB/5C=
,GACxB,MAAOzD,MAAKwB,IAAI,EAAGiC,EAAKyI,MAAQzI,EAAK45C,WAAa55C,EAAK65C,aA=
lCxD,GAICG,GAJGC,EAAW5B,EAAQ7lD,KAAKyW,aAAckwC,EAAWjM,GAEjDqI,EAAW,EACdC,=
EAAW,CAwBZ,OArBAyE,GAASnf,QAAQ,SAAUzwB,GAC1BkrC,EAAWh5C,KAAKwB,IAAIw3C,EA=
AUlrC,EAAO5B,MAAQ4B,EAAOuvC,WAAavvC,EAAOwvC,aAEnEG,IACJA,GAAqBvxC,MAAO,EA=
AGmxC,WAAYvvC,EAAOuvC,WAAYC,YAAa,IAG5EG,EAAiBvxC,OAAS4B,EAAO5B,MACjCuxC,E=
AAiBH,YAAcxvC,EAAOwvC,YAEtCrE,EAAWj5C,KAAKwB,IAAIy3C,EAAUuE,EAAgBC,IAE1C3=
vC,EAAOuuC,UACVoB,EAAmB,QAIjBd,KAAqBhM,EAAmB,UAAU,KACrDqI,EAAWC,IAIXlsC,M=
AAO2wC,EACP1E,SAAUA,EACVC,SAAUA,IAcZrL,EAAU52C,UAAU45C,aAAe,SAASxiC,EAAMu=
iC,GACjDviC,EAAOA,EAAK/L,QAAQ,IAAM,OAG1B,IAAImpC,GAAWmR,KAAqBhM,EAAmB,OAA=
Q,UAC3DpiC,EAAWouC,KAAqBhM,EAAmB,WAAY,IAC/D95C,EAAO8lD,KAAqBhM,EAAmB,QAAQ=
,GACvD75C,EAAU6lD,KAAqBhM,EAAmB,WAAW,GAC7DpjC,EAAaovC,KAAqBhM,EAAmB,aAAc,=
GAEnExiC,EAAOlY,KAAKyW,aAAaw+B,YAAYM,EAAU30C,EAAMC,EAEzD,QACCoV,MAAOiC,EA=
AKg+B,cAAcsQ,EAAiBruC,GAAOG,GAClDpC,OAAQgC,EAAKZ,WAAWgB,GAAYhB,EACpCgB,SA=
AUA,EACVhB,WAAYA,EACZs+B,SAAU19B,EAAK09B,SAAW,IAAOt9B,EACjCu9B,SAAU39B,EA=
AK29B,SAAW,IAAOv9B,GAyFnC,IAAImuC,IAAkBiB,IAAK,IAAKC,IAAK,IAAKC,IAAK,IAAK=
C,IAAK,IAAKC,IAAK,IAAK5X,IAAK,IAAK6X,IAAK,IAAKC,IAAK,IAAKC,IAAK,IAAKC,IAA=
K,IAAKC,IAAK,IAAKC,IAAK,IAAKC,IAAK,IAAKC,IAAK,IAAK9X,IAAK,IAAK+X,IAAK,IAA=
KC,IAAK,IAAKC,IAAK,IAuFrMjpD,GAAOD,QAAUo4C,GAKZ,SAASn4C,EAAQD,GAGtB,YAUA,=
SAASq4C,GAAmBE,EAAiBn7B,GAC5C3c,KAAK2c,aAAeA,MACpB3c,KAAK83C,gBAAkBA,EACv=
B93C,KAAK0oD,kBAON9Q,EAAkB72C,UAAUshB,MAAQ,WACnC,GAAIg2B,GAAQ,GAAIT,GAAkB=
53C,KAAK83C,gBAAiB93C,KAAK2c,aAM7D,OAJA3c,MAAK0oD,eAAepgB,QAAQ,SAAS96B,GA=
CpC6qC,EAAMqQ,eAAe9mD,KAAK4L,KAGpB6qC,GASRT,EAAkB72C,UAAUa,KAAO,SAAS+mD,G=
AC3C3oD,KAAK0oD,eAAe9mD,KAAK+mD,IAS1B/Q,EAAkB72C,UAAU2qB,IAAM,SAASk9B,GAG=
1C,IAFAA,EAAUA,GAAW,EAEfA,KAAY,GACjB5oD,KAAK0oD,eAAeh9B,OAYtBksB,EAAkB72C=
,UAAU8nD,SAAW,SAASr7C,GAC/C,GAAoB,gBAATA,IAAqBA,YAAgB5C,QAAQ,MAAO,EAE/D,I=
AAIk+C,KAEAt7C,GAAKtK,QAEP4lD,EADGt7C,EAAKtK,gBAAiBwL,OACZlB,EAAKtK,OAEHs=
K,EAAKtK,OAItB,KAAI,GAAI8C,GAAI,EAAG2M,EAAIm2C,EAAWxjD,OAAYqN,EAAJ3M,EAAO=
A,IAC5ChG,KAAK4B,KAAKknD,EAAW9iD,GAGtB,IAAI+iD,MACAC,GAAU,CAkCd,QA/BC,OAC=
A,WACA,OACA,UACA,YACA,QACA,YACA,YACA,aACA,kBACA,kBACA,aACA,aACA,UAOC1gB,Q=
AAQ,SAAS3kB,GACAne,SAAdgI,EAAKmW,IAAoC,OAAdnW,EAAKmW,KACnColC,EAAoBplC,GA=
AOnW,EAAKmW,GAChCqlC,GAAU,KAIRA,GACHhpD,KAAK4B,KAAKmnD,GAGJD,EAAWxjD,QAAU=
0jD,EAAU,EAAI,IAW3CpR,EAAkB72C,UAAU88C,KAAO,SAASrwC,EAAMtM,GACjD,GAAI+nD,=
GAAcjpD,KAAK6oD,SAASr7C,GAC5BlM,EAASJ,GAMb,OAJI+nD,GAAc,GACjBjpD,KAAK0rB,=
IAAIu9B,GAGH3nD,GASRs2C,EAAkB72C,UAAU8hD,YAAc,SAASx7B,GAClD,GAAIrnB,KAAK0=
oD,eACR,IAAI,GAAI1iD,GAAIhG,KAAK0oD,eAAepjD,OAAS,EAAGU,GAAK,EAAGA,IAAK,CA=
CxD,GAAIwH,GAAOxN,KAAK0oD,eAAe1iD,EAE/B,IAAmB,gBAARwH,IAAoBA,YAAgB5C,QAAQ=
,CAGtD,GAAI1H,GAAQlD,KAAK83C,gBAAgBtqC,EACjC,IAAItK,GAA6B,OAApBA,EAAMmkB,=
IAA0C7hB,SAApBtC,EAAMmkB,GAC9C,MAAOnkB,GAAMmkB,OAId,IAAuB7hB,SAAnBgI,EAAK=
6Z,IAA8C,OAAnB7Z,EAAK6Z,GACxC,MAAO7Z,GAAK6Z,GAMhB,MAAOrnB,MAAK2c,cAAgB3c,=
KAAK2c,aAAa0K,IAG/C7nB,EAAOD,QAAUq4C,GAKZ,SAASp4C,EAAQD,GAGtB,YAEA,SAASs9=
C,GAAkBrB,EAASmB,GACnC,GAAIuM,MACHC,EAAU,EAAGC,EAAU,EACvBC,KACAC,EAAa,EAC=
bC,EAAa,EACbC,KACAC,EAAyB9M,CAE1BnB,GAAQlT,QAAQ,SAASmV,GACpBiM,EAAajM,IAC=
hByL,EAAYtnD,KAAK67C,GACjB0L,GAAW1L,EAAOiB,UAClB0K,GAAW3L,EAAOwD,WACR0I,E=
AAalM,IACvB4L,EAAYznD,KAAK67C,GACjB6L,EAAav/C,KAAKwB,IAAI+9C,EAAY7L,EAAOi=
B,WACzC6K,EAAax/C,KAAKwB,IAAIg+C,EAAY9L,EAAOwD,YAEzCuI,EAAa5nD,KAAK67C,KA=
IpB+L,EAAalhB,QAAQ,SAAS0c,GAEJ,gBAAdA,GAAI/uC,OAAsB,OAAOyiB,KAAKssB,EAAI/=
uC,SACpD+uC,EAAI/uC,MAAQgrB,WAAW+jB,EAAI/uC,OAAOwzC,EAAuB,KAEtDzE,EAAI/uC=
,MAAS+uC,EAAa,WAAKA,EAAI4E,aACtC5E,EAAIjH,WAAaiH,EAAItG,UAErBsG,EAAIjH,WA=
AaiH,EAAI/uC,MAGtB0mC,GAAkBqI,EAAIjH,YAMvB,IAAI8L,GAAOV,EAAUG,EAAaD,EAAY/=
jD,OAC1CwkD,EAAOV,EAAUG,EAAaF,EAAY/jD,MAC9C,IAAIukD,GAAQlN,EAKXuM,EAAY5gB=
,QAAQ,SAAS0c,GAC5BA,EAAIjH,WAAaiH,EAAItG,YAGtB2K,EAAY/gB,QAAQ,SAAS0c,GAC5=
BA,EAAIjH,WAAauL,QAEZ,CACN,GAAW3M,EAAPmN,EAEHZ,EAAY5gB,QAAQ,SAAS0c,GAC5BA=
,EAAIjH,WAAaiH,EAAI/D,UACrBtE,GAAkBqI,EAAIjH,iBAEjB,CAEN,GAAIgM,GAAIpN,EA=
AiBkN,EACrBrW,EAAIsW,EAAOD,CAEfX,GAAY5gB,QAAQ,SAAS0c,GAC5B,GAAIjxC,GAAIix=
C,EAAI/D,UAAY+D,EAAItG,SAC5BsG,GAAIjH,WAAaiH,EAAItG,UAAY3qC,EAAIg2C,EAAIv=
W,EACzCmJ,GAAkBqI,EAAIjH,aAIxB,GAAIsL,EAAY/jD,OAAS,EAAG,CAC3B,GAAI0kD,GAA=
WrN,EAAiB0M,EAAY/jD,MAE5C+jD,GAAY/gB,QAAQ,SAAS0c,GAC5BA,EAAIjH,WAAaiM,MAM=
rB,QAASN,GAAajM,GACrB,MAAwB,SAAjBA,EAAOxnC,MAGf,QAAS0zC,GAAalM,GACrB,MAAw=
B,QAAjBA,EAAOxnC,OAAmCzQ,SAAjBi4C,EAAOxnC,OAAwC,MAAjBwnC,EAAOxnC,OAAkC,SA=
AjBwnC,EAAOxnC,MAI9F,QAAS2tC,GAAcpI,GAMtB,IAAI,GALAl6C,IAAW0I,IAAK,EAAGuB=
,IAAK,GAExB0+C,GAAYjgD,IAAK,EAAGuB,IAAK,GACzB2+C,EAAY,EAERlkD,EAAI,EAAG2M=
,EAAI6oC,EAAQl2C,OAAYqN,EAAJ3M,EAAOA,IAAK,CAC9C,GAAInG,GAAI27C,EAAQx1C,EA=
EZ2jD,GAAa9pD,IAChBoqD,EAAQjgD,IAAMD,KAAKwB,IAAI0+C,EAAQjgD,IAAKnK,EAAE6+=
C,WACtCuL,EAAQ1+C,IAAMxB,KAAKwB,IAAI0+C,EAAQ1+C,IAAK1L,EAAEohD,WACtCiJ,KA=
CUR,EAAa7pD,IACvByB,EAAO0I,KAAOnK,EAAE6+C,UAChBp9C,EAAOiK,KAAO1L,EAAEohD,=
YAEhB3/C,EAAO0I,KAAqBxE,SAAZ3F,EAAEoW,OAAuBpW,EAAEoW,OAAUpW,EAAE6+C,UACvD=
p9C,EAAOiK,KAAsB/F,SAAb3F,EAAEoW,OAAwBpW,EAAEoW,OAAUpW,EAAEohD,WAS1D,MALI=
iJ,KACH5oD,EAAO0I,KAAOkgD,EAAYD,EAAQjgD,IAClC1I,EAAOiK,KAAO2+C,EAAYD,EAAQ=
1+C,KAG5BjK,EAOR9B,EAAOD,SACNs9C,kBAAmBA,EACnB+G,cAAeA,EACf8F,aAAcA,EACdC=
,aAAcA,IAMV,SAASnqD,EAAQD,GAGtB,YAEA,SAASi4C,KAGR,IAAI,GAFAl2C,MAEI0E,EAA=
I,EAAG2M,EAAIhN,UAAUL,OAAYqN,EAAJ3M,EAAOA,IAAK,CAChD,GAAImkD,GAAMxkD,UAAU=
K,EAEpB,IAAImkD,EACH,IAAI,GAAIxmC,KAAOwmC,GACVA,EAAI/oC,eAAeuC,KACtBriB,E=
AAOqiB,GAAOwmC,EAAIxmC,IAMtB,MAAOriB,GAGR,QAASm2C,GAAax+B,EAAQ9L,EAAGC,GA=
ChC,OAAO6L,EAAO9U,MACd,IAAK,UACL,IAAK,OACJ8U,EAAO9L,GAAKA,EACZ8L,EAAO7L,G=
AAKA,CACZ,MACD,KAAK,OACJ6L,EAAOkB,IAAMhN,EACb8L,EAAOqB,IAAMnN,EACb8L,EAAO=
mB,IAAMhN,EACb6L,EAAOsB,IAAMnN,CACb,MACD,KAAK,WACJ,IAAI,GAAIpH,GAAI,EAAG2=
M,EAAIsG,EAAOuB,OAAOlV,OAAYqN,EAAJ3M,EAAOA,IAC/CiT,EAAOuB,OAAOxU,GAAGmH,G=
AAKA,EACtB8L,EAAOuB,OAAOxU,GAAGoH,GAAKA,GAMzB,QAASsqC,GAAc/zB,EAAK7V,GAC3=
B,MAAY,SAAR6V,EACI,OAED7V,EAGR,QAASqc,GAAWigC,GACnB,GAAIC,KACJ,OAAOD,IAA8=
D,sBAA3CC,EAAQ5lD,SAAS9E,KAAKyqD,GAIjD5qD,EAAOD,SACNi4C,KAAMA,EACNE,cAAeA=
,EACfD,aAAcA,EACdttB,WAAYA,IAMR,SAAS3qB,EAAQD,GAGtB,YA0nBA,SAAS+qD,GAAcpj=
D,EAAMjG,GAC3B,GAAIspD,IAASC,QAAWC,EAAcC,aAAgBC,EACrDC,MAASC,GACNC,GAAap4=
C,EAAKq4C,EAAYC,EAAKC,EAAYC,EAAKC,EACvDC,EAAKC,EAENpqD,GAAUA,KACV,IAAIqqD=
,GAAMrqD,EAAQsqD,SAAW,GACzBC,EAAWV,GAAW7pD,EAAQwqD,UAAY,KAAKz1C,eAC/C01C,=
EAAOzqD,EAAQyqD,KAAOnB,EAAMtpD,EAAQyqD,KAAK1jD,eAAiB,GAC1D2jD,EAAO,QAAU1q=
D,GAAUA,EAAQ0qD,KAAO,EAE9C,IAAW,EAAPD,EAGDA,EAFkB,gBAATxkD,GACNA,EAAKyG,M=
AAMi+C,GACPnB,EACGvjD,EAAKyG,MAAMk+C,GAEdlB,EAEAE,EAGDA,MAEF,IAAMa,GAAQjB=
,GAAgBiB,GAAQf,GAC3Ce,GAAQb,EACT,KAAM,6BAIP,IADA3jD,EAAO4kD,EAAaJ,EAAMxkD=
,GACb,OAATA,EAAe,KAAM,qBAEzB,IAAe,EAAXskD,GAAgBA,EAAW,EAAG,KAAM,mBAExC,IA=
AU,EAANF,EAAS,CACZ,IAAKA,EAAM,EAAU,IAAPA,KACTpkD,EAAK5B,QAAUymD,EAAcT,EAA=
KI,EAAMF,MADlBF,GAG3B,GAAIA,EAAM,GAAI,KAAM,uCACd,IAAU,EAANA,GAAWA,EAAM,GA=
C3B,KAAM,gDAGP,IAAY,IAARK,IAAsB,EAAPA,GAAYA,EAAO,GAAI,KAAM,cAEhD,OAAOK,GA=
AS9kD,EAAMokD,EAAKI,EAAMF,EAAUG,GAW7C,QAASM,GAAY/kD,EAAMjG,GAEvB,GAAI+1C,=
MACAp6B,EAAa1V,EAAK0V,YAAc,OAChCsvC,EAAahlD,EAAKglD,YAAc,OAEnCC,EAAS7B,EA=
AcpjD,EAAMjG,GAC7BsL,EAAI4/C,EAAO7mD,OACX8mD,EAAUriD,KAAKqG,MAAOnP,EAAQyh=
D,IAAMzhD,EAAQyhD,IAAIn2C,EAAI,GACpDuJ,EAAOvJ,EAAI6/C,CAEZpV,GAAOp1C,MACL=
uC,KAAM,OACNgJ,EAAG,EAAGC,EAAG,EAAG2M,EAAGjE,EAAMkE,EAAGlE,EAAMqD,UAAW,EA=
AGrB,MAAO8E,GAGxD,KAAK,GAAI5W,GAAI,EAAOuG,EAAJvG,IAASA,EACxB,IAAK,GAAI0F,=
GAAI,EAAOa,EAAJb,IAASA,EACZygD,EAAOnmD,GAAG0F,IACXsrC,EAAOp1C,MACLuC,KAAM=
,OACNgJ,EAAGi/C,EAAUpmD,EACboH,EAAGg/C,EAAU1gD,EACbqO,EAAGqyC,EACHpyC,EAA=
GoyC,EACHjzC,UAAW,EACXrB,MAAOo0C,GAMnB,QACIlV,OAAQA,EACRlhC,KAAMA,GAKd,QA=
AS+vC,GAAQxwC,GACb,GAAIg3C,GAAKJ,EAAY52C,EAAK4mC,GAAI5mC,EAG9B,OAFAA,GAAK=
i3C,QAAUD,EAAGrV,OAClB3hC,EAAK2F,OAAS3F,EAAK4F,QAAU5F,EAAKqpC,UAAYrpC,EAA=
K4rC,UAAY5rC,EAAK8qC,WAAa9qC,EAAKmuC,WAAa6I,EAAGv2C,KAC/FT,EAjpBX,IAAK,GA=
1DDk3C,IACH,OACE,GAAI,EAAE,GAAG,KAAO,EAAG,EAAG,EAAG,SACzB,GAAG,GAAG,GAAG,=
KAAO,EAAG,EAAG,EAAG,IAAK,EAAE,OAChC,GAAG,GAAG,GAAG,KAAO,EAAG,EAAG,EAAG,IA=
AK,EAAE,OAChC,GAAG,GAAG,GAAG,KAAO,EAAG,EAAG,EAAG,IAAK,EAAE,OAChC,GAAG,GAA=
G,GAAG,KAAO,EAAG,EAAG,EAAG,IAAK,EAAE,OAChC,GAAG,GAAG,GAAG,KAAO,EAAG,EAAG,=
EAAG,IAAK,EAAE,OAChC,GAAG,GAAG,GAAG,KAAO,EAAG,EAAG,EAAG,IAAK,EAAE,GAAG,OA=
CnC,GAAG,GAAG,GAAG,KAAO,EAAG,EAAG,EAAG,IAAK,EAAE,GAAG,OACnC,GAAG,GAAG,GAA=
G,KAAO,EAAG,EAAG,EAAG,IAAK,EAAE,GAAG,OACnC,GAAG,GAAG,GAAG,KAAO,EAAG,EAAG,=
EAAG,IAAK,EAAE,GAAG,OACnC,GAAG,GAAG,GAAG,KAAO,EAAG,EAAE,GAAI,IAAK,EAAE,GA=
AG,OACnC,GAAG,GAAG,GAAG,KAAO,EAAG,EAAE,GAAG,KAAM,EAAE,GAAG,OACnC,GAAG,GAA=
G,GAAG,KAAO,EAAG,EAAE,GAAG,KAAM,EAAE,GAAG,OACnC,GAAG,GAAG,GAAG,KAAO,EAAG,=
EAAE,GAAG,KAAM,EAAE,GAAG,GAAG,OACtC,GAAG,GAAG,GAAG,KAAM,GAAI,EAAE,GAAG,KA=
AM,EAAE,GAAG,GAAG,OACtC,GAAG,GAAG,GAAG,KAAM,GAAI,EAAE,GAAG,KAAM,EAAE,GAAG=
,GAAG,OACtC,GAAG,GAAG,GAAG,KAAM,GAAI,EAAE,GAAG,KAAM,EAAE,GAAG,GAAG,OACtC,=
GAAG,GAAG,GAAG,KAAM,GAAI,EAAE,GAAG,KAAM,EAAE,GAAG,GAAG,OACtC,GAAG,GAAG,GA=
AG,KAAM,GAAI,EAAE,GAAG,KAAM,EAAE,GAAG,GAAG,OACtC,GAAG,GAAG,GAAG,KAAM,GAAI=
,EAAE,GAAG,KAAM,EAAE,GAAG,GAAG,OACtC,GAAG,GAAG,GAAG,KAAM,GAAI,EAAE,GAAG,K=
AAM,EAAE,GAAG,GAAG,GAAG,OACzC,GAAG,GAAG,GAAG,KAAM,GAAI,EAAE,GAAG,KAAM,EAA=
E,GAAG,GAAG,GAAG,OACzC,GAAG,GAAG,GAAG,KAAM,GAAI,EAAE,GAAG,KAAM,EAAE,GAAG,=
GAAG,GAAG,QACzC,GAAG,GAAG,GAAG,KAAM,GAAG,GAAG,GAAG,KAAM,EAAE,GAAG,GAAG,GA=
AG,QACzC,GAAG,GAAG,GAAG,KAAM,GAAG,GAAG,GAAG,KAAM,EAAE,GAAG,GAAG,GAAG,QACz=
C,GAAG,GAAG,GAAG,KAAM,GAAG,GAAG,GAAG,KAAM,EAAE,GAAG,GAAG,GAAG,QACzC,GAAG,=
GAAG,GAAG,KAAM,GAAG,GAAG,GAAG,KAAM,EAAE,GAAG,GAAG,GAAG,QACzC,GAAG,GAAG,GA=
AG,KAAM,GAAG,GAAG,GAAG,KAAM,EAAE,GAAG,GAAG,GAAG,GAAG,QAC5C,GAAG,GAAG,GAAG=
,KAAM,GAAG,GAAG,GAAG,KAAM,EAAE,GAAG,GAAG,GAAG,IAAI,QAC7C,GAAG,GAAG,GAAG,K=
AAM,GAAG,GAAG,GAAG,KAAM,EAAE,GAAG,GAAG,GAAG,IAAI,QAC7C,GAAG,GAAG,GAAG,KAA=
M,GAAG,GAAG,GAAG,KAAM,EAAE,GAAG,GAAG,GAAG,IAAI,QAC7C,GAAG,GAAG,GAAG,KAAM,=
GAAG,GAAG,GAAG,KAAM,EAAE,GAAG,GAAG,GAAG,IAAI,QAC7C,GAAG,GAAG,GAAG,KAAM,GA=
AG,GAAG,GAAG,KAAM,EAAE,GAAG,GAAG,GAAG,IAAI,QAC7C,GAAG,GAAG,GAAG,KAAM,GAAG=
,GAAG,GAAG,KAAM,EAAE,GAAG,GAAG,GAAG,IAAI,QAC7C,GAAG,GAAG,GAAG,KAAM,GAAG,G=
AAG,GAAG,KAAM,EAAE,GAAG,GAAG,GAAG,IAAI,IAAI,QACjD,GAAG,GAAG,GAAG,KAAM,GAA=
G,GAAG,GAAG,KAAM,EAAE,GAAG,GAAG,GAAG,IAAI,IAAI,QACjD,GAAG,GAAG,GAAG,KAAM,=
GAAG,GAAG,GAAG,KAAM,EAAE,GAAG,GAAG,GAAG,IAAI,IAAI,QACjD,GAAG,GAAG,GAAG,KA=
AM,GAAG,GAAG,GAAG,KAAM,EAAE,GAAG,GAAG,GAAG,IAAI,IAAI,QACjD,GAAG,GAAG,GAAG=
,KAAM,GAAG,GAAG,GAAG,KAAM,EAAE,GAAG,GAAG,GAAG,IAAI,IAAI,QACjD,GAAG,GAAG,G=
AAG,KAAM,GAAG,GAAG,GAAG,KAAM,EAAE,GAAG,GAAG,GAAG,IAAI,IAAI,OAGhDC,EAAkB,E=
AClB/B,EAAe,EAAGE,EAAoB,EAAGE,EAAa,EAAG4B,EAAa,EAGtEb,EAAiB,QACjBc,EAAsB,=
2BACtBb,EAA0B,wBAG1Bd,EAAa,EAAGE,EAAa,EAAGE,EAAa,EAAGE,EAAa,EAI7DsB,KAAgB=
C,GAAgB,IAC3B5mD,EAAI,EAAGqI,EAAI,EAAO,IAAJrI,IAAWA,EACjC2mD,EAAU/qD,KAAK=
yM;AACfu+C,EAAav+C,GAAKrI,EAClBqI,EAAS,EAAJA,GAAUA,GAAK,IAAM,IAAQ,EAWnC,K=
AAK,GADDw+C,QACK7mD,EAAI,EAAO,GAAJA,IAAUA,EAAG,CAE5B,IAAK,GADD8mD,GAAWD,E=
AAc7mD,GAAI+mD,KACxBrhD,EAAI,EAAQ1F,GAAL0F,IAAUA,EAAG,CAC5B,GAAIwB,GAASlH=
,EAAJ0F,EAAQihD,EAAUG,EAASphD,IAAM,EACtCsB,EAAI2/C,GAAW3mD,GAAK8mD,EAASph=
D,EAAE,IAAM,IAAM,IAC/CqhD,GAAKnrD,KAAKgrD,EAAa1/C,EAAIF,IAE5B6/C,EAAcjrD,=
KAAKmrD,GAKpB,IAAK,GADDC,MACKhnD,EAAI,EAAO,GAAJA,IAAUA,EACzBgnD,EAAiB,gDA=
AgDl6C,OAAO9M,IAAMA,CAK/E,IAAIinD,IACH,SAASjnD,EAAE0F,GAAK,OAAQ1F,EAAE0F,=
GAAK,IAAM,GACrC,SAAS1F,EAAE0F,GAAK,MAAO1F,GAAI,IAAM,GACjC,SAASA,EAAE0F,GA=
AK,MAAOA,GAAI,IAAM,GACjC,SAAS1F,EAAE0F,GAAK,OAAQ1F,EAAE0F,GAAK,IAAM,GACrC=
,SAAS1F,EAAE0F,GAAK,QAAU1F,EAAE,EAAG,IAAO0F,EAAE,EAAG,IAAM,IAAM,GACvD,SAA=
S1F,EAAE0F,GAAK,MAAQ1F,GAAE0F,EAAK,EAAK1F,EAAE0F,EAAK,IAAM,GACjD,SAAS1F,E=
AAE0F,GAAK,OAAS1F,EAAE0F,EAAK,EAAK1F,EAAE0F,EAAK,GAAK,IAAM,GACvD,SAAS1F,E=
AAE0F,GAAK,QAAS1F,EAAE0F,GAAK,EAAK1F,EAAE0F,EAAK,GAAK,IAAM,IAGpDwhD,EAAe,=
SAAS5B,GAAO,MAAOA,GAAM,GAG5C6B,EAAe,SAAS7B,GAAO,MAAO,GAAIA,EAAM,IAGhD8B,E=
AAY,SAAS9B,GAkCxB,GAAIj9C,GAAIk+C,EAASjB,GACb+B,EAAQ,GAAG/B,EAAIA,EAAM,IA=
AIA,EAAM,EAKnC,OAJI4B,GAAa5B,KAAM+B,GAAS,IAC5Bh/C,EAAE,GAAG/I,SACR+nD,GAA=
S,GAAKh/C,EAAE,GAAG/I,OAAS+I,EAAE,GAAG/I,OAAS,GAAK+I,EAAE,GAAG/I,OAAS,IAE=
vD+nD,GAKJC,EAAY,SAAShC,EAAKE,GAC7B,GAAI6B,GAAyB,GAAjBD,EAAU9B,GAClBj9C,E=
AAIk+C,EAASjB,EAEjB,OADA+B,IAAS,EAAIh/C,EAAE,GAAGm9C,GAAYn9C,EAAE,GAAGm9C=
,IAMhC+B,EAAe,SAASjC,EAAKI,GAChC,OAAQA,GACR,IAAKjB,GAAc,MAAc,IAANa,EAAW,G=
AAW,GAANA,EAAW,GAAK,EAC3D,KAAKX,GAAmB,MAAc,IAANW,EAAW,EAAU,GAANA,EAAW,GAA=
K,EAC/D,KAAKT,GAAY,MAAc,IAANS,EAAW,EAAI,EACxC,KAAKmB,GAAY,MAAc,IAANnB,EAA=
W,EAAU,GAANA,EAAW,GAAK,KAKrDS,EAAgB,SAAST,EAAKI,EAAMF,GACvC,GAAI6B,GAAQC,=
EAAUhC,EAAKE,GAAY,EAAI+B,EAAajC,EAAKI,EAC7D,QAAQA,GACR,IAAKjB,GACJ,MAA0B,=
IAAjB4C,EAAM,GAAM,IAAqB,EAAXA,EAAM,GAAS,EAAe,EAAXA,EAAM,GAAS,EAAI,EACtE,K=
AAK1C,GACJ,MAA0B,IAAjB0C,EAAM,GAAM,IAAqB,EAAXA,EAAM,GAAS,EAAI,EACnD,KAAKx=
C,GACJ,MAAQwC,GAAM,EAAK,CACpB,KAAKZ,GACJ,MAAQY,GAAM,GAAM,IAUlBvB,EAAe,SAA=
SJ,EAAMxkD,GACjC,OAAQwkD,GACR,IAAKjB,GACJ,MAAKvjD,GAAKyG,MAAMi+C,GACT1kD,=
EADiC,IAGzC,KAAKyjD,GACJ,MAAKzjD,GAAKyG,MAAM++C,GACTxlD,EAAK8O,cADiC,IAG9=
C,KAAK60C,GACJ,GAAoB,gBAAT3jD,GAAmB,CAE7B,IAAK,GADDsmD,MACKxnD,EAAI,EAAGA=
,EAAIkB,EAAK5B,SAAUU,EAAG,CACrC,GAAIynD,GAAKvmD,EAAKwF,WAAW1G,EAChB,KAALy=
nD,EACHD,EAAQ5rD,KAAK6rD,GACE,KAALA,EACVD,EAAQ5rD,KAAK,IAAQ6rD,GAAM,EAC1B=
,IAAa,GAALA,GACM,MAALA,EACVD,EAAQ5rD,KAAK,IAAQ6rD,GAAM,GAC1B,IAASA,GAAM,E=
AAK,GACpB,IAAa,GAALA,GAETD,EAAQ5rD,KAAK,IAAQ6rD,GAAM,GAC1B,IAASA,GAAM,GAA=
M,GACrB,IAASA,GAAM,EAAK,GACpB,IAAa,GAALA,GAGX,MAAOD,GAEP,MAAOtmD,KAQNgM,E=
AAS,SAASo4C,EAAKI,EAAMxkD,EAAMwmD,GACtC,GAAI/lD,MACAgmD,EAAO,EAAG9kD,EAAY=
,EACtB+kD,EAAU1mD,EAAK5B,OAGfkyC,EAAO,SAASrqC,EAAGZ,GACtB,GAAIA,GAAK1D,EA=
AW,CAEnB,IADAlB,EAAI/F,KAAK+rD,EAAQxgD,IAAMZ,GAAK1D,IACrB0D,GAAK,GAAG5E,E=
AAI/F,KAAMuL,IAAMZ,GAAK,GAAM,IAC1CohD,GAAO,EACP9kD,EAAY,EAET0D,EAAI,IAAGo=
hD,IAASxgD,GAAM,GAAKZ,GAAK,KAAQ1D,GAAa0D,KAGtDshD,EAAWN,EAAajC,EAAKI,EAIj=
C,QAHAlU,EAAKkU,EAAM,GACXlU,EAAKoW,EAASC,GAENnC,GACR,IAAKjB,GACJ,IAAK,GAA=
IzkD,GAAI,EAAO4nD,EAAJ5nD,EAAaA,GAAK,EACjCwxC,EAAKvuC,SAAS/B,EAAKq9B,UAAU=
v+B,EAAE,EAAEA,EAAE,GAAI,IAAK,GAE7CwxC,GAAKvuC,SAAS/B,EAAKq9B,UAAUv+B,EAA=
E,GAAI,KAAM,EAAE,EAAE,GAAG4nD,EAAQ,GACxD,MAED,KAAKjD,GACJ,IAAK,GAAI3kD,GA=
AI,EAAO4nD,EAAJ5nD,EAAaA,GAAK,EACjCwxC,EAA0C,GAArCwV,EAAiB9lD,EAAK4L,OAAO=
9M,EAAE,IACnCgnD,EAAiB9lD,EAAK4L,OAAO9M,IAAK,GAEhC4nD,GAAU,GAAK,GAClBpW,E=
AAKwV,EAAiB9lD,EAAK4L,OAAO9M,EAAE,IAAK,EAE1C,MAED,KAAK6kD,GACJ,IAAK,GAAI7=
kD,GAAI,EAAO4nD,EAAJ5nD,IAAeA,EAC9BwxC,EAAKtwC,EAAKlB,GAAI,GAchB,IALAwxC,=
EAAKgV,EAAiB,GACN,EAAZ3jD,GAAelB,EAAI/F,KAAK+rD,GAIrBhmD,EAAIrC,OAAS,EAAI=
ooD,GAAW/lD,EAAI/F,KAAK,IAAM,GAElD,OADI+F,GAAIrC,OAASooD,GAAW/lD,EAAI/F,K=
AAK,KAC9B+F,GAUJmmD,EAAe,SAASf,EAAMgB,GAGjC,IAAK,GAFDC,GAAUjB,EAAKjjD,MAA=
M,GACrBmkD,EAAUlB,EAAKznD,OAAQ4oD,EAAaH,EAAQzoD,OACvCU,EAAI,EAAOkoD,EAAJl=
oD,IAAkBA,EAAGgoD,EAAQpsD,KAAK,EAClD,KAAK,GAAIoE,GAAI,EAAOioD,EAAJjoD,GAA=
e,CAC9B,GAAImoD,GAAWvB,EAAaoB,EAAQhoD,KACpC,IAAImoD,GAAY,EACf,IAAK,GAAIzi=
D,GAAI,EAAOwiD,EAAJxiD,IAAkBA,EACjCsiD,EAAQhoD,EAAE0F,IAAMihD,GAAWwB,EAAW=
J,EAAQriD,IAAM,KAIvD,MAAOsiD,GAAQlkD,MAAMmkD,IAUlBG,EAAe,SAASrB,EAAMsB,EA=
ASN,GAI1C,IAAK,GAHDO,MACAC,EAAWxB,EAAKznD,OAAS+oD,EAAW,EAAGG,EAAW,EAClDC,=
EAAQJ,EAAUtB,EAAKznD,OAAS+oD,EAC3BroD,EAAI,EAAOyoD,EAAJzoD,IAAaA,EAC5BsoD=
,EAAS1sD,KAAK4sD,GACdA,GAAYD,CAEb,KAAK,GAAIvoD,GAAIyoD,EAAWJ,EAAJroD,IAAe=
A,EAClCsoD,EAAS1sD,KAAK4sD,GACdA,GAAYD,EAAQ,CAErBD,GAAS1sD,KAAK4sD,EAGd,K=
AAK,GADDE,MACK1oD,EAAI,EAAOqoD,EAAJroD,IAAeA,EAC9B0oD,EAAK9sD,KAAKksD,EAA=
af,EAAKjjD,MAAMwkD,EAAStoD,GAAIsoD,EAAStoD,EAAE,IAAK+nD,GAKhE,KAAK,GAFDzs=
D,MACAqtD,EAAkB5B,EAAKznD,OAAS+oD,EAAW,EACtCroD,EAAI,EAAO2oD,EAAJ3oD,IAAs=
BA,EACrC,IAAK,GAAI0F,GAAI,EAAO2iD,EAAJ3iD,IAAeA,EAC9BpK,EAAOM,KAAKmrD,EAA=
KuB,EAAS5iD,GAAK1F,GAGjC,KAAK,GAAI0F,GAAI+iD,EAAWJ,EAAJ3iD,IAAeA,EAClCpK,=
EAAOM,KAAKmrD,EAAKuB,EAAS5iD,EAAE,GAAK,GAElC,KAAK,GAAI1F,GAAI,EAAGA,EAAI+=
nD,EAAQzoD,SAAUU,EACrC,IAAK,GAAI0F,GAAI,EAAO2iD,EAAJ3iD,IAAeA,EAC9BpK,EAA=
OM,KAAK8sD,EAAKhjD,GAAG1F,GAGtB,OAAO1E,IAUJstD,EAAc,SAAS7B,EAAMjtD,EAAGiu=
D,EAASpJ,GAE5C,IAAK,GADDqJ,GAAUjB,GAAQpI,EACb3+C,EAAIlG,EAAI,EAAGkG,GAAK,=
IAAKA,EACxBgoD,GAAYrJ,EAAE3+C,EAAM,IAAGgoD,GAAWD,GAAW/nD,EAEnD,OAAQ+mD,IA=
AQpI,EAAKqJ,GAUlBa,EAAiB,SAASvD,GAG7B,IAAK,GAFDj9C,GAAIk+C,EAASjB,GAAM/+C=
,EAAI4gD,EAAa7B,GACpCa,KAAa2C,KACR9oD,EAAI,EAAOuG,EAAJvG,IAASA,EACxBmmD,E=
AAOvqD,SACPktD,EAASltD,QAGV,IAAImtD,GAAO,SAAS3hD,EAAGD,EAAG6M,EAAGD,EAAG4=
zC,GAC/B,IAAK,GAAI3nD,GAAI,EAAOgU,EAAJhU,IAASA,EACxB,IAAK,GAAI0F,GAAI,EAA=
OqO,EAAJrO,IAASA,EACxBygD,EAAO/+C,EAAEpH,GAAGmH,EAAEzB,GAAMiiD,EAAK3nD,IA=
AM0F,EAAK,EACpCojD,EAAS1hD,EAAEpH,GAAGmH,EAAEzB,GAAK,EAOxBqjD,GAAK,EAAG,E=
AAG,EAAG,GAAI,IAAM,GAAM,GAAM,GAAM,GAAM,GAAM,IAAO,EAAM,KACnEA,EAAKxiD,EAAE=
,EAAG,EAAG,EAAG,GAAI,IAAO,IAAM,GAAM,GAAM,GAAM,GAAM,GAAM,MAC/DwiD,EAAK,EAA=
GxiD,EAAE,EAAG,EAAG,GAAI,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,EAAM,GAGpE,KA=
AK,GAAIvG,GAAI,EAAOuG,EAAE,EAANvG,IAAWA,EAC1BmmD,EAAO,GAAGnmD,GAAKmmD,EAA=
OnmD,GAAG,GAAU,GAAJA,EAC/B8oD,EAAS,GAAG9oD,GAAK8oD,EAAS9oD,GAAG,GAAK,CAKn=
C,KAAK,GADDgpD,GAAS3gD,EAAE,GAAIzO,EAAIovD,EAAO1pD,OACrBU,EAAI,EAAOpG,EAA=
JoG,IAASA,EAExB,IAAK,GADDipD,GAAY,IAAJjpD,GAASA,IAAIpG,EAAE,EAAI,EAAI,EAA=
IsvD,EAAY,IAAJlpD,EAAQpG,EAAE,EAAIA,EACpD8L,EAAIujD,EAAUC,EAAJxjD,IAAYA,E=
AC9BqjD,EAAKC,EAAOhpD,GAAIgpD,EAAOtjD,GAAI,EAAG,GAAI,GAAM,GAAM,GAAM,GAAM,=
IAK5D,IAAIwhD,EAAa5B,GAGhB,IAAK,GAFDt5C,GAAO48C,EAAYtD,EAAK,EAAG,KAAQ,IAC=
nC6D,EAAI,EACCnpD,EAAI,EAAO,EAAJA,IAASA,EACxB,IAAK,GAAI0F,GAAI,EAAO,EAAJA=
,IAASA,EACxBygD,EAAOnmD,GAAIuG,EAAE,GAAIb,GAAKygD,EAAQ5/C,EAAE,GAAIb,GAAG=
1F,GAAMgM,GAAQm9C,IAAO,EAC5DL,EAAS9oD,GAAIuG,EAAE,GAAIb,GAAKojD,EAAUviD,E=
AAE,GAAIb,GAAG1F,GAAK,CAKnD,QAAQmmD,OAAQA,EAAQ2C,SAAUA,IAM/BM,EAAU,SAASjD=
,EAAQ2C,EAAUnnD,GAGxC,IAAK,GAFD4E,GAAI4/C,EAAO7mD,OACX6pD,EAAI,EAAG5sC,EA=
AM,GACRvc,EAAIuG,EAAE,EAAGvG,GAAK,EAAGA,GAAK,EAAG,CACxB,GAALA,KAAUA,CAEd,=
KAAK,GADDqpD,GAAY,EAAN9sC,EAAUhW,EAAE,EAAI,EACjBb,EAAI,EAAOa,EAAJb,IAASA,=
EAAG,CAC3B,IAAK,GAAIkL,GAAK5Q,EAAG4Q,EAAK5Q,EAAE,IAAK4Q,EACvBk4C,EAASO,GA=
AIz4C,KAGjBu1C,EAAOkD,GAAIz4C,GAAOjP,EAAIwnD,GAAK,KAAU,GAAFA,GAAQ,IACzCA,=
EAGJE,IAAM9sC,EAEPA,GAAOA,EAER,MAAO4pC,IAKJmD,EAAW,SAASnD,EAAQ2C,EAAUnD,G=
AGzC,IAAK,GAFD4D,GAAQtC,EAAUtB,GAClBp/C,EAAI4/C,EAAO7mD,OACNU,EAAI,EAAOuG=
,EAAJvG,IAASA,EACxB,IAAK,GAAI0F,GAAI,EAAOa,EAAJb,IAASA,EACnBojD,EAAS9oD,G=
AAG0F,KAAIygD,EAAOnmD,GAAG0F,IAAM6jD,EAAMvpD,EAAE0F,GAG/C,OAAOygD,IAIJqD,=
EAAgB,SAASrD,EAAQ2C,EAAUtD,EAAUG,GAGxD,IAAK,GAFDp/C,GAAI4/C,EAAO7mD,OACX0=
M,EAA2D,MAApD48C,EAAapD,GAAY,EAAKG,EAAM,EAAG,KAAO,IAChD3lD,EAAI,EAAO,GAAJ=
A,IAAUA,EAAG,CAC5B,GAAI6T,IAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAEtN,=
EAAE,EAAEA,EAAE,EAAEA,EAAE,EAAEA,EAAE,EAAEA,EAAE,EAAEA,EAAE,EAAEA,EAAE,GA=
AGvG,GAClDnG,GAAK0M,EAAE,EAAEA,EAAE,EAAEA,EAAE,EAAEA,EAAE,EAAEA,EAAE,EAAE=
A,EAAE,EAAEA,EAAE,EAAEA,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAGvG,EA=
CxDmmD,GAAOtyC,GAAG,GAAKsyC,EAAO,GAAGtsD,GAAMmS,GAAQhM,EAAK,EAI7C,MAAOmmD=
,IAaJsD,EAAiB,SAAStD,GAiC7B,IAAK,GA9BDuD,GAAsB,EAGtBC,EAAmB,EAInBC,EAAqB,=
GAGrBC,EAAkB,GAElBC,EAAgB,SAASC,GAE5B,IAAK,GADDC,GAAQ,EACHhqD,EAAI,EAAGA,=
EAAI+pD,EAAOzqD,SAAUU,EAChC+pD,EAAO/pD,IAAM,IAAGgqD,GAASN,GAAuBK,EAAO/pD,=
GAAG,GAE/D,KAAK,GAAIA,GAAI,EAAGA,EAAI+pD,EAAOzqD,OAAQU,GAAK,EAAG,CAC1C,GA=
AIlG,GAAIiwD,EAAO/pD,EACX+pD,GAAO/pD,EAAE,IAAMlG,GAAKiwD,EAAO/pD,EAAE,IAA=
M,EAAElG,GAAKiwD,EAAO/pD,EAAE,IAAMlG,GAC3DiwD,EAAO/pD,EAAE,IAAMlG,IAAMiwD=
,EAAO/pD,EAAE,IAAM,EAAElG,GAAKiwD,EAAO/pD,EAAE,IAAM,EAAElG,KAE7DkwD,GAASJ=
,GAGX,MAAOI,IAGJzjD,EAAI4/C,EAAO7mD,OACX0qD,EAAQ,EAAGC,EAAU,EAChBjqD,EAAI=
,EAAOuG,EAAJvG,IAASA,EAAG,CAC3B,GACI+pD,GADAzK,EAAM6G,EAAOnmD,EAIjB+pD,IA=
AU,EACV,KAAK,GAAIrkD,GAAI,EAAOa,EAAJb,GAAS,CACxB,GAAIyjD,EACJ,KAAKA,EAAI,=
EAAO5iD,EAAJb,GAAS45C,EAAI55C,KAAMyjD,IAAKzjD,CAEpC,KADAqkD,EAAOnuD,KAAKu=
tD,GACPA,EAAI,EAAO5iD,EAAJb,IAAU45C,EAAI55C,KAAMyjD,IAAKzjD,CACrCqkD,GAAO=
nuD,KAAKutD,GAEba,GAASF,EAAcC,GAGvBA,GAAU,EACV,KAAK,GAAIrkD,GAAI,EAAOa,EA=
AJb,GAAS,CACxB,GAAIyjD,EACJ,KAAKA,EAAI,EAAO5iD,EAAJb,GAASygD,EAAOzgD,GAAG=
1F,KAAMmpD,IAAKzjD,CAE1C,KADAqkD,EAAOnuD,KAAKutD,GACPA,EAAI,EAAO5iD,EAAJb=
,IAAUygD,EAAOzgD,GAAG1F,KAAMmpD,IAAKzjD,CAC3CqkD,GAAOnuD,KAAKutD,GAEba,GA=
ASF,EAAcC,EAGvB,IAAIG,GAAU/D,EAAOnmD,EAAE,MACvBiqD,IAAW3K,EAAI,EACf,KAAK,=
GAAI55C,GAAI,EAAOa,EAAJb,IAASA,EAAG,CAC3B,GAAI5L,GAAIwlD,EAAI55C,EACZukD,=
IAAWnwD,EAEPwlD,EAAI55C,EAAE,IAAM5L,GAAKowD,EAAQxkD,KAAO5L,GAAKowD,EAAQxk=
D,EAAE,KAAO5L,IACzDkwD,GAASL,IAMZ,MADAK,IAASH,GAAoB9lD,KAAKoK,IAAI87C,EAA=
U1jD,EAAIA,EAAI,IAAO,IAAQ,IAMpEy/C,EAAW,SAAS9kD,EAAMokD,EAAKI,EAAMF,EAAUG=
,GAClD,GAAIt9C,GAAIk+C,EAASjB,GACb3jD,EAAMuL,EAAOo4C,EAAKI,EAAMxkD,EAAMom=
D,EAAUhC,EAAKE,IAAa,EAC9D7jD,GAAMymD,EAAazmD,EAAK0G,EAAE,GAAGm9C,GAAWqB,E=
AAcx+C,EAAE,GAAGm9C,IAE3D,IAAIlqD,GAASutD,EAAevD,GACxBa,EAAS7qD,EAAO6qD,O=
AAQ2C,EAAWxtD,EAAOwtD,QAG9C,IAFAM,EAAQjD,EAAQ2C,EAAUnnD,GAEf,EAAPgkD,EAAU=
,CAEb2D,EAASnD,EAAQ2C,EAAU,GAC3BU,EAAcrD,EAAQ2C,EAAUtD,EAAU,EAC1C,IAAI2E,=
GAAW,EAAGC,EAAYX,EAAetD,EAE7C,KADAmD,EAASnD,EAAQ2C,EAAU,GACtBnD,EAAO,EAAU=
,EAAPA,IAAYA,EAAM,CAChC2D,EAASnD,EAAQ2C,EAAUnD,GAC3B6D,EAAcrD,EAAQ2C,EAAU=
tD,EAAUG,EAC1C,IAAIqE,GAAQP,EAAetD,EACvBiE,GAAYJ,IACfI,EAAYJ,EACZG,EAAWxE=
,GAEZ2D,EAASnD,EAAQ2C,EAAUnD,GAE5BA,EAAOwE,EAKR,MAFAb,GAASnD,EAAQ2C,EAAUn=
D,GAC3B6D,EAAcrD,EAAQ2C,EAAUtD,EAAUG,GACnCQ,EAoHR3sD,GAAOD,SACLsmD,QAASA,=
IAKN,SAASrmD,EAAQD,EAASH,GAG/B,YAQA,SAAS+3C,GAAgBthC,EAAUyG,GAClCtc,KAAKm=
C,SAELnC,KAAKsc,YAAcA,EAEnBtc,KAAKmN,EAAImP,EAAYlZ,KACrBpD,KAAK28C,eAAiB9=
mC,EAASI,MAAQqG,EAAYlZ,KAAOkZ,EAAY5H,MACtE1U,KAAKogD,gBAAkB,EACvBpgD,KAAK=
2W,KAAO,GAEZ3W,KAAKqwD,aAELrwD,KAAKswD,WAAa,KAEjBtwD,KAAK42C,QAAU,GAAIC,G=
AEpB72C,KAAK0W,QAAQb,GAyId,QAAS2F,GAAgB+0C,EAAuBC,GAC/C,MAA6BhrD,UAA1B+qD=
,EACKC,EAC4B,cAA1BD,EACF,YAEA,WAkFT,QAASE,GAAkBC,EAAIC,GAC9B,GAAI92C,EAMJ=
,OAJuBA,GAAnB62C,EAAG/5C,KAAOg6C,EAAGh6C,KAAU+5C,EAClBC,EAAGh6C,KAAO+5C,E=
AAG/5C,KAAUg6C,EACtBD,EAAGtjD,EAAIujD,EAAGvjD,EAAKsjD,EAAKC,GAG7Bh6C,KAAM=
kD,EAAElD,KACRxJ,EAAG0M,EAAE1M,EACLC,EAAGyM,EAAEzM,EACLgzC,gBAAiBvmC,EAAE=
umC,gBACnBzD,eAAgB9iC,EAAE8iC,gBAnQpB,GAAI9F,GAAmBz3C,EAAoB,GAyB3C+3C,GAA=
gBp2C,UAAU+8C,iBAAmB,WAC5C99C,KAAKqwD,UAAUzuD,MACduL,EAAGnN,KAAKmN,EACRC,=
EAAGpN,KAAKoN,EACRgzC,gBAAiBpgD,KAAKogD,gBACtBzD,eAAgB38C,KAAK28C,eACrBhm=
C,KAAM3W,KAAK2W,KACXi6C,YAAcxjD,EAAGpN,KAAKoN,EAAGuJ,KAAM3W,KAAK2W,MACpC2=
5C,WAAYtwD,KAAKswD,WACjBO,gBAAiB7wD,KAAK6wD,kBAGvB7wD,KAAK6wD,gBAAkB,GAGx=
B1Z,EAAgBp2C,UAAUm9C,YAAc,SAASjoC,EAAOtN,EAAQ2nD,GAC/D,GAAIQ,GAAQ9wD,KAAK=
qwD,UAAUrwD,KAAKqwD,UAAU/qD,OAAS,EAEnDtF,MAAK+wD,oBAAoBD,GAExB9wD,KAAKswD=
,WAAaA,EACnBtwD,KAAK2W,KAAOm6C,EAAMn6C,KAClB3W,KAAKmN,EAAInN,KAAKmN,EAAIn=
N,KAAK6wD,iBAAmBloD,GAAU,GACpD3I,KAAKoN,EAAI0jD,EAAM1jD,EACfpN,KAAK28C,eA=
AiB1mC,EACtBjW,KAAKogD,gBAAkB0Q,EAAM1Q,gBAE7BpgD,KAAK6wD,gBAAkB56C,GAGxBk=
hC,EAAgBp2C,UAAUgwD,oBAAsB,SAASC,GACpDhxD,KAAKswD,YACRtwD,KAAKixD,wBAAwBj=
xD,KAAKswD,YAClCtwD,KAAKswD,WAAa,MAElBU,EAAYJ,WAAaH,EAAkBzwD,KAAMgxD,EAAY=
J,aAI/DzZ,EAAgBp2C,UAAUq9C,WAAa,SAASkS,GAC/CtwD,KAAK2W,KAAO25C,EAAWnS,qBA=
AqBxnC,KAC5C3W,KAAKmN,EAAImjD,EAAWnS,qBAAqBhxC,EACzCnN,KAAKoN,EAAIkjD,EAA=
WnS,qBAAqB/wC,EACzCpN,KAAK28C,eAAiB2T,EAAWnS,qBAAqBxB,eACtD38C,KAAKogD,gB=
AAkBkQ,EAAWnS,qBAAqBiC,gBACvDpgD,KAAK6wD,gBAAkBP,EAAWnS,qBAAqB0S,iBAGxD1Z=
,EAAgBp2C,UAAUkwD,wBAA0B,SAASX,GAC5DA,EAAWnS,sBACVxnC,KAAM3W,KAAK2W,KACXx=
J,EAAGnN,KAAKmN,EACRC,EAAGpN,KAAKoN,EACRgzC,gBAAiBpgD,KAAKogD,gBACtBzD,eA=
AgB38C,KAAK28C,eACrBkU,gBAAiB7wD,KAAK6wD,kBAIxB1Z,EAAgBp2C,UAAUs9C,oBAAsB=
,WAC/C,GAAIyS,GAAQ9wD,KAAKqwD,UAAU3kC,KAE3B1rB,MAAK+wD,oBAAoBD,GAEzB9wD,K=
AAKswD,WAAa,KAClBtwD,KAAKmN,EAAI2jD,EAAM3jD,EACfnN,KAAKoN,EAAI0jD,EAAMF,W=
AAWxjD,EAC1BpN,KAAK2W,KAAOm6C,EAAMF,WAAWj6C,KAC7B3W,KAAK28C,eAAiBmU,EAAMn=
U,eAC5B38C,KAAKogD,gBAAkB0Q,EAAMF,WAAWxQ,gBACxCpgD,KAAK6wD,gBAAkBC,EAAMD,=
iBAG9B1Z,EAAgBp2C,UAAUo6C,UAAY,SAAS/3C,EAAMsR,GACpD1U,KAAKmN,GAAK/J,EACVp=
D,KAAK28C,gBAAkBv5C,GAAQsR,GAAS,IAGzCyiC,EAAgBp2C,UAAUm6C,SAAW,SAASvyC,GA=
I7C,MAHA3I,MAAKoN,GAAKzE,EACV3I,KAAKogD,iBAAmBz3C,EAEjB3I,KAAKogD,gBAAkB,=
GAG/BjJ,EAAgBp2C,UAAUmwD,eAAiB,WAC1ClxD,KAAKoN,EAAIpN,KAAKsc,YAAY3H,IAC1B=
3U,KAAKogD,gBAAkBpgD,KAAK25C,iBAAiB9jC,SAASK,OAASlW,KAAKsc,YAAY3H,IAAM3U,=
KAAKsc,YAAY1H,OACvG5U,KAAKmxD,eAAexU,eAAiB38C,KAAK25C,iBAAiB9jC,SAASI,MAA=
QjW,KAAKsc,YAAYlZ,KAAOpD,KAAKsc,YAAY5H,OAGtHyiC,EAAgBp2C,UAAUowD,aAAe,WAC=
vC,MAAGnxD,MAAKqwD,UAAU,GACTrwD,KAAKqwD,UAAU,GAEfrwD,MAIXm3C,EAAgBp2C,UAA=
UmZ,OAAS,SAAS/M,EAAEC,GACpC5H,SAAN2H,GAAyB,OAANA,IACrBnN,KAAKmN,EAAIA,EAC=
TnN,KAAK28C,eAAiB38C,KAAK25C,iBAAiB9jC,SAASI,MAAQjW,KAAKmN,EAAInN,KAAKsc,=
YAAY5H,OAE/ElP,SAAN4H,GAAyB,OAANA,IACrBpN,KAAKoN,EAAIA,EACTpN,KAAKogD,gBA=
AkBpgD,KAAK25C,iBAAiB9jC,SAASK,OAASlW,KAAKoN,EAAIpN,KAAKsc,YAAY1H,SAI3Fui=
C,EAAgBp2C,UAAUu6C,mBAAqB,WAC9Ct7C,KAAKqwD,UAAUzuD,MACduL,EAAGnN,KAAKmN,E=
ACRC,EAAGpN,KAAKoN,EACRgzC,gBAAiBpgD,KAAKogD,gBACtBzD,eAAgB38C,KAAK28C,eA=
CrBhmC,KAAM3W,KAAK2W,KACX25C,WAAYtwD,KAAKswD,WACjBO,gBAAiB7wD,KAAK6wD,mBA=
IxB1Z,EAAgBp2C,UAAUu7C,iBAAmB,WAC5C,GAAIwU,GAAQ9wD,KAAKqwD,UAAU3kC,KAE3B1=
rB,MAAKmN,EAAI2jD,EAAM3jD,EACfnN,KAAKoN,EAAI0jD,EAAM1jD,EACfpN,KAAK28C,eA=
AiBmU,EAAMnU,eAC5B38C,KAAKogD,gBAAkB0Q,EAAM1Q,gBAC7BpgD,KAAK2W,KAAOm6C,EA=
AMn6C,KAClB3W,KAAKswD,WAAaQ,EAAMR,WACxBtwD,KAAK6wD,gBAAkBC,EAAMD,gBAa9B,I=
AAIO,GAAc,SAAUh7C,EAAai7C,GAIxC,MAFAA,GAAqB71C,EAAgB61C,EAAoBj7C,EAAYP,SA=
ASU,aAE3E86C,IAAuBj7C,EAAYP,SAASU,aAE7CA,YAAa86C,EACbp7C,MAAOG,EAAYP,SAAS=
K,OAC5BA,OAAQE,EAAYP,SAASI,QAI7BM,YAAaH,EAAYP,SAASU,YAClCN,MAAOG,EAAYP,SA=
ASI,MAC5BC,OAAQE,EAAYP,SAASK,QAOhCihC,GAAgBp2C,UAAUk6C,eAAiB,SAASz/B,GACn=
D,GAAI81C,GAAgBtxD,KAAK2W,KAAO,EAE5B0mC,EAAWr9C,KAAK2W,KAChB2mC,EAAQt9C,K=
AAKoN,EAEbmkD,EAAgBD,GAAiBtxD,KAAKmC,MAAMmD,MAQ/C,OAPGisD,GACHvxD,KAAK0W,=
QAAQ06C,EAAYpxD,KAAK25C,iBAAkBn+B,KAEhDxb,KAAK2W,KAAO26C,EACZtxD,KAAKkxD,=
mBAILM,eAAgBD,EAChBlU,SAAUA,EACVC,MAAOA,EACPlwC,EAAGpN,KAAKoN,IAKV+pC,EAA=
gBp2C,UAAU2V,QAAU,SAASb,GAC5C,GAAIc,IAASG,SAAWjB,SAAUA,EAOlC,OANA7V,MAAKm=
C,MAAMP,KAAK+U,GAChB3W,KAAK2W,KAAO3W,KAAKmC,MAAMmD,OAAS,EAChCtF,KAAKkxD,i=
BAELlxD,KAAK42C,QAAQ8J,KAAK,aAEX/pC,GAGRwgC,EAAgBp2C,UAAU44C,eAAiB,WAC1C,=
MAAI35C,MAAK2W,KAAO,GAAK3W,KAAK2W,MAAQ3W,KAAKmC,MAAMmD,OAAe,KAErDtF,KAAKm=
C,MAAMnC,KAAK2W,OAGxBwgC,EAAgBp2C,UAAU0wD,mBAAqB,WAC7C,GAAI57C,GAAW7V,KAA=
K25C,iBAAiB9jC,SACjC67C,EAAc77C,EAASK,OAASlW,KAAKsc,YAAY3H,IAAM3U,KAAKsc,=
YAAY1H,OACxE+8C,EAAa97C,EAASI,MAAQjW,KAAKsc,YAAYlZ,KAAOpD,KAAKsc,YAAY5H,K=
AE3E,QACE+jC,WAAYz4C,KAAK2W,KAAO,EACxB6E,gBAAiB3F,EAASU,YAC1Bq7C,gBAAiBF,=
EACjBG,eAAgBF,EAChBvuD,KAAMpD,KAAKmN,EACXwH,IAAK3U,KAAKoN,EACV0kD,eAAiB9x=
D,KAAKoN,EAAIpN,KAAKsc,YAAY3H,KAAO+8C,EAClDK,iBAAmB/xD,KAAKmN,EAAInN,KAAK=
sc,YAAYlZ,MAAQuuD,IAwBzDnyD,EAAOD,QAAU43C,GAKZ,SAAS33C,EAAQD,EAASH,GAG/B,=
YAaA,SAASg4C,GAAkBp2B,EAAS41B,GACnC52C,KAAKgyD,iBAAmB,EACxBhyD,KAAKiyD,eA=
CLjyD,KAAK42C,QAAUA,EACf52C,KAAKk5C,OAAS,GAAIgZ,GAAclxC,EAAS41B,GAG1C,QAA=
Sub,GAAU5d,EAAM6d,GACvB,GAAIjvD,GAAWivD,EAAO7d,EAKtB,OAJKpxC,KACHoxC,EAAK=
0G,iBACL93C,EAAWivD,EAAO7d,IAEbpxC,EAxBT,GAAI+uD,GAAgB9yD,EAAoB,GA2BxCg4C=
,GAAkBr2C,UAAUg+C,QAAU,SAAS1nC,EAAMg7C,EAA2Bl0C,GAC9E,MAAOg0C,GAAUnyD,KAA=
M,SAASu0C,GAC9B,MAAOA,GAAK2E,OAAO6F,QAAQ1nC,EAAMg7C,EAA2Bl0C,MAIhEi5B,EAA=
kBr2C,UAAUm/C,SAAW,SAASnlC,EAAOoD,GACrD,MAAOg0C,GAAUnyD,KAAM,SAASu0C,GAC9=
B,MAAOA,GAAK2E,OAAOgH,SAASnlC,EAAOoD,MAIvCi5B,EAAkBr2C,UAAUs/C,MAAQ,SAASp=
E,EAAI99B,GAC/C,MAAOg0C,GAAUnyD,KAAM,SAASu0C,GAChC,MAAOA,GAAK2E,OAAOmH,MA=
AMpE,EAAI99B,MAI/Bi5B,EAAkBr2C,UAAU49C,UAAY,SAAS1lC,EAAQq5C,EAAgBC,EAAgBp=
0C,GACxF,MAAOne,MAAKk5C,OAAOyF,UAAU1lC,EAAQq5C,EAAgBC,EAAgBp0C,IAGtEi5B,E=
AAkBr2C,UAAUyxD,YAAc,SAASC,EAAUC,EAAiBC,EAAiBN,GACzFryD,KAAKk5C,OAAOsZ,YA=
AYC,EAAUC,EAAiBC,EAAiBN,KACxEryD,KAAKi7C,iBACLj7C,KAAKk5C,OAAOsZ,YAAYC,EA=
AUC,EAAiBC,EAAiBN,KAItEjb,EAAkBr2C,UAAUk6C,eAAiB,SAASz/B,GAErD,GAAIo3C,GA=
AW5yD,KAAKk5C,OAAOl4B,QAAQi6B,eAAez/B,EAE7Co3C,GAASpB,eACbxxD,KAAKiyD,YAA=
Y3pB,QAAQ,SAASuqB,GACjC7yD,KAAKk5C,OAAOsZ,YAAYK,GAAK,IAC3B7yD,MAEHA,KAAKi=
yD,YAAY3pB,QAAQ,SAASuqB,GACjC7yD,KAAKk5C,OAAOl4B,QAAQk6B,SAAS2X,EAAI38C,S=
AC/BlW,MAGJA,KAAKk5C,OAAOtC,QAAQ8J,KAAK,eACxBrD,SAAUuV,EAASvV,SACnBC,MAAO=
sV,EAAStV,MAChBlwC,EAAGwlD,EAASxlD,KAIdgqC,EAAkBr2C,UAAU64C,sBAAwB,SAAS3j=
C,EAAOC,GACnC,IAA5BlW,KAAKgyD,qBACRhyD,KAAK8yD,UAAY9yD,KAAKk5C,OAAOl4B,QA=
AQ7T,EACrCnN,KAAKk5C,OAAO6Z,YAAY98C,EAAOC,KAIjCkhC,EAAkBr2C,UAAU84C,uBAAy=
B,SAASmZ,EAASC,GACtE,GAAgC,MAA1BjzD,KAAKgyD,iBAAwB,CAClC,GAAIkB,GAAqBlzD,=
KAAKk5C,OAAOl4B,OACrChhB,MAAKk5C,OAAOia,YAEZ,IAAIC,GAAUF,EAAmB/wD,MAAMmD,=
MACvC,IAAG8tD,EAAU,EAAG,CAEf,GAAIX,GAAWS,EAAmB/wD,MAAM,EAKxC,IAJAswD,EAAS=
Y,QAAUL,EACnBP,EAASa,QAAUL,EAGhBG,EAAU,EAEZ,GAAgB5tD,SAAZwtD,GAAqCxtD,SAA=
ZytD,EAC5BR,EAASv8C,OAASg9C,EAAmBvZ,iBAAiB9jC,SAASK,OAASg9C,EAAmB52C,YAAY=
3H,IAAMu+C,EAAmB52C,YAAY1H,WACtI,CACN69C,EAASv8C,OAASlW,KAAKk5C,OAAOl4B,Q=
AAQ24B,iBAAiB9jC,SAASK,OAASlW,KAAKk5C,OAAOl4B,QAAQ1E,YAAY3H,IAAM3U,KAAKk5=
C,OAAOl4B,QAAQ1E,YAAY1H,MAC/I,KAAK,GAAI5O,GAAI,EAAG2M,EAAI3S,KAAKiyD,YAAY=
3sD,OAAYqN,EAAJ3M,EAAOA,IACnDysD,EAASv8C,QAAUlW,KAAKiyD,YAAYjsD,GAAGkQ,WA=
IzCu8C,GAASv8C,OAASg9C,EAAmB9lD,CAGtB5H,UAAZwtD,GAAqCxtD,SAAZytD,EAC5BjzD=
,KAAKk5C,OAAOsZ,YAAYC,GAAU,GAAM,GAAM,GAE9CzyD,KAAKwyD,YAAYC,MAMrBrb,EAAkB=
r2C,UAAUwyD,yBAA2B,WACtD,GAAIL,GAAqBlzD,KAAKk5C,OAAOl4B,QACjC6xC,GAAQ/7C,=
SAWZ,OATGo8C,GAAmB/wD,MAAM,GAAG2U,MAAMwxB,QAAQ,SAAS96B,GAC/CqlD,EAAI/7C,M=
AAMlV,KAAK4L,KAGtBqlD,EAAIQ,QAAUrzD,KAAK8yD,UAGnBD,EAAI38C,OAASg9C,EAAmB9=
lD,EAEzBylD,GAGRzb,EAAkBr2C,UAAUyyD,kBAAoB,SAASX,GACxD7yD,KAAKiyD,YAAYrwD=
,KAAKixD,IAGvBzb,EAAkBr2C,UAAU0yD,mBAAqB,WAChDzzD,KAAKiyD,YAAYvmC,OAGlB0r=
B,EAAkBr2C,UAAUigB,QAAU,WACrC,MAAOhhB,MAAKk5C,OAAOl4B,SAGpBxhB,EAAOD,QAAU=
63C,GAKZ,SAAS53C,EAAQD,EAASH,GAG/B,YAWA,SAAS8yD,GAAclxC,EAAS41B,GAC/B52C,=
KAAKghB,QAAUA,EACfhhB,KAAK0zD,gBACL1zD,KAAK42C,QAAUA,EAGhB,QAAS+c,GAAYh9C=
,EAAMnJ,EAAM2Q,GACnB,OAAVA,GAA4B3Y,SAAV2Y,GAA+B,EAARA,GAAaA,EAAQxH,EAAKG,=
MAAMxR,OAC3EqR,EAAKG,MAAMlV,KAAK4L,GAEhBmJ,EAAKG,MAAMoW,OAAO/O,EAAO,EAAG3=
Q,GAmJ9B,QAASomD,GAAUv8C,GAClB,GAAI/V,GAAS,GAAIi2C,GAAKlgC,EAAK2rC,SAE3B,=
KAAI,GAAIr/B,KAAOtM,GACVA,EAAK+J,eAAeuC,KACvBriB,EAAOqiB,GAAOtM,EAAKsM,GA=
IrB,OAAOriB,GA/KR,GAAIi2C,GAAOn4C,EAAoB,IAC3Bo4C,EAAOp4C,EAAoB,IAAIo4C,KA=
C/BC,EAAer4C,EAAoB,IAAIq4C,aACvCN,EAAkB/3C,EAAoB,GAoB1C8yD,GAAcnxD,UAAUg+=
C,QAAU,SAAS1nC,EAAMg7C,EAA2Bl0C,GAC3E,GAAIjI,GAASmB,EAAKE,YACdyJ,EAAUhhB,=
KAAKghB,QACfrK,EAAOqK,EAAQ24B,iBACdx2C,EAAWnD,KAAK6zD,0BAErB,OAAI7yC,GAAQ=
o/B,gBAAkBlqC,IAAWS,GACjC,GAGRU,EAAKlK,EAAI6T,EAAQ7T,GAAKkK,EAAKlK,GAAK,G=
AChCkK,EAAKjK,EAAI4T,EAAQ5T,GAAKiK,EAAKjK,GAAK,GAEhCpN,KAAK8zD,UAAUz8C,GA=
EZs8C,EAAYh9C,GACRxS,KAAM,OACNqJ,KAAM6J,GACP8G,GACNne,KAAK42C,QAAQ8J,KAAK=
,YAAarpC,GAE1Bg7C,GAA2BrxC,EAAQk6B,SAAShlC,GAE1C/S,IAGR+uD,EAAcnxD,UAAU+y=
D,UAAY,SAASz8C,GAC5C,GAAIpB,GAAQjW,KAAKghB,QAAQ27B,eACrBxjC,EAAY9B,EAAK08=
C,WAEjBzM,EAAYjwC,EAAKO,SAAWP,EAAKO,QAAQtS,OAAS,GAAK+R,EAAKO,QAAQ,GAAG0vC=
,UAEvE3+C,EAAS,CACb,QAAO2+C,GACN,IAAK,QACJ3+C,EAASsN,EAAQkD,CACjB,MACD,KA=
AK,SACJxQ,GAAUsN,EAAQkD,GAAa,EAQjC,GAJIxQ,IACH0O,EAAKlK,GAAKkK,EAAKlK,GAA=
K,GAAKxE,GAGR,YAAd2+C,IACFjwC,EAAK28C,gBACL38C,EAAK4oC,qBACN5oC,EAAKO,QAA=
QtS,OAAS,EAGtB,IAAI,GAFA2uD,IAAqBh+C,EAAQkD,IAAc9B,EAAKO,QAAQtS,OAAS,GAE7=
DU,EAAI,EAAG2M,EAAI0E,EAAKO,QAAQtS,OAAYqN,EAAJ3M,EAAOA,IAC9C2C,EAAS3C,EAA=
IiuD,EAEb58C,EAAKO,QAAQ5R,GAAGmH,GAAKxE,GAKxBupD,EAAcnxD,UAAUm/C,SAAW,SAA=
SnlC,EAAOoD,GAClD,GAAI6C,GAAUhhB,KAAKghB,QACfrK,EAAOqK,EAAQ24B,iBACdx2C,E=
AAWnD,KAAK6zD,0BAErB,OAAI7yC,GAAQo/B,gBAAkBrlC,EAAME,UAAYtE,GACxC,GAGRoE,=
EAAM5N,EAAI6T,EAAQ7T,GAAK4N,EAAM5N,GAAK,GAClC4N,EAAM3N,EAAI4T,EAAQ5T,EAEl=
BpN,KAAKk0D,WAAWn5C,GAEhB44C,EAAYh9C,GACLxS,KAAM,QACNqJ,KAAMuN,GACPoD,GAE=
N6C,EAAQk6B,SAASngC,EAAME,SAEhB9X,IAGR+uD,EAAcnxD,UAAUs/C,MAAQ,SAASpE,EAA=
I99B,GAC5C,GAAI6C,GAAUhhB,KAAKghB,QACfrK,EAAOqK,EAAQ24B,iBACdx2C,EAAWnD,K=
AAK6zD,0BAErB,IAAI7yC,EAAQo/B,gBAAkBnE,EAAGhhC,UAAYtE,EAC5C,OAAO,CAGRslC,=
GAAG9uC,EAAI6T,EAAQ7T,GAAK8uC,EAAG9uC,GAAK,GAC5B8uC,EAAG7uC,EAAI4T,EAAQ5T=
,EAEfpN,KAAKk0D,WAAWjY,EAEhB,KAAK,GAAIj2C,GAAE,EAAG2M,EAAEspC,EAAGqQ,QAAQ=
hnD,OAAYqN,EAAJ3M,EAAOA,IAAK,CAC9C,GAAIiT,GAASgjC,EAAGqQ,QAAQtmD,EACxBiT,=
GAAO9L,GAAK8uC,EAAG9uC,EACf8L,EAAO7L,GAAK6uC,EAAG7uC,EACfpN,KAAK2+C,UAAU1=
lC,GAAQ,GAAM,EAAMkF,GAKpC,MAFA6C,GAAQk6B,SAASe,EAAGhhC,SAEb9X,GAGR+uD,EAA=
cnxD,UAAUmzD,WAAa,SAASn5C,GAC7C,GAAI9E,GAAQjW,KAAKghB,QAAQ27B,eACrBwX,EAA=
ap5C,EAAM2jC,UACnB/1C,EAAS,CACb,QAAOoS,EAAM6nC,YACZ,IAAK,QACJj6C,EAASsN,E=
AAQk+C,CACjB,MACD,KAAK,SACJxrD,GAAUsN,EAAQk+C,GAAc,EAI9BxrD,IACHoS,EAAM5N=
,GAAK4N,EAAM5N,GAAK,GAAKxE,IAI7BupD,EAAcnxD,UAAU49C,UAAY,SAAS1lC,EAAQq5C,=
EAAgBC,EAAgBp0C,GACpF,GAAI6C,GAAUhhB,KAAKghB,QACfrK,EAAOqK,EAAQ24B,iBACdx=
2C,EAAWnD,KAAK6zD,0BAErB,OAAIl9C,IACH8gC,EAAax+B,EAAQq5C,EAAiB,EAAItxC,EA=
AQ7T,EAAGolD,EAAiB,EAAIvxC,EAAQ5T,GAC5EumD,EAAYh9C,GACRxS,KAAM,SACNqJ,KAA=
MyL,GACPkF,GACFhb,GANR,QAsBD+uD,EAAcnxD,UAAUyxD,YAAc,SAAS4B,EAAO1B,EAAiBC=
,EAAiBN,GACvF,GAAIgC,GAAMr0D,KAAKghB,QACXrK,EAAO09C,EAAI1a,gBAEf,QAAK+Y,G=
AAmB0B,EAAMl+C,OAASm+C,EAAIjU,iBAAwB,GAEnEgU,EAAMt9C,MAAMwxB,QAAQ,SAAS96B=
,GACtB,OAAOA,EAAKrJ,MACR,IAAK,OACD,GAAIwO,GAAIihD,EAAUpmD,EAAKA,KAEvBmF,G=
AAExF,GAAKwF,EAAExF,GAAK,IAAMulD,EAAmB0B,EAAMf,SAAW,EAAKgB,EAAIlnD,GACjEw=
F,EAAEvF,GAAKuF,EAAEvF,GAAK,IAAMulD,EAAmByB,EAAMd,SAAW,EAAKe,EAAIjnD,GAEj=
EuJ,EAAKG,MAAMlV,MACPuC,KAAM,OACNqJ,KAAMmF,GAEV,MAEJ,KAAK,SACD,GAAItE,GAA=
ImpC,EAAKhqC,EAAKA,KAElBiqC,GAAappC,EAAGqkD,EAAmB0B,EAAMf,SAAW,EAAKgB,EAA=
IlnD,EAAGwlD,EAAmByB,EAAMd,SAAW,EAAKe,EAAIjnD,GAC7GuJ,EAAKG,MAAMlV,MACPuC=
,KAAM,SACNqJ,KAAMa,GAEV,MAEJ,KAAK,QACD,GAAIimD,GAAM9c,EAAKhqC,EAAKA,KAEpB=
8mD,GAAInnD,GAAKmnD,EAAInnD,GAAK,IAAMulD,EAAmB0B,EAAMf,SAAW,EAAKgB,EAAIln=
D,GACrEmnD,EAAIlnD,GAAKknD,EAAIlnD,GAAK,IAAMulD,EAAmByB,EAAMd,SAAW,EAAKe,=
EAAIjnD,GAErEuJ,EAAKG,MAAMlV,MACPuC,KAAM,QACNqJ,KAAM8mD,OAMpBjC,GAA2BgC,E=
AAInZ,SAASkZ,EAAMl+C,SAE5C,IAURg8C,EAAcnxD,UAAUgyD,YAAc,SAASwB,EAAgBr+C,G=
ACvC1Q,SAAnB+uD,IACHr+C,EAASlW,KAAKghB,QAAQ24B,iBAAiBzjC,OAASlW,KAAKghB,Q=
AAQ1E,YAAY3H,IAAM3U,KAAKghB,QAAQ1E,YAAY1H,OACxG2/C,EAAiBv0D,KAAKghB,QAAQ2=
7B,iBAGD,gBAAnB4X,IAA+BA,YAA0B3rD,WACnE2rD,EAAiB,GAAIpd,IAAkBlhC,MAAOs+C,=
EAAgBr+C,OAAQA,IAAY9S,KAAM,EAAGsR,MAAO,EAAGC,IAAK,EAAGC,OAAQ,KAGtH5U,KAAK=
0zD,aAAa9xD,KAAK5B,KAAKghB,SAC5BhhB,KAAKghB,QAAUuzC,GAGhBrC,EAAcnxD,UAAUo=
yD,WAAa,WACpCnzD,KAAKghB,QAAUhhB,KAAK0zD,aAAahoC,OAGlCwmC,EAAcnxD,UAAU8yD=
,yBAA2B,WAClD,OAAQ7zD,KAAK0zD,aAAa,IAAM1zD,KAAKghB,SAASywC,sBAI/CjyD,EAAO=
D,QAAU2yD,GAKZ,SAAS1yD,EAAQD,GAGtB,YASA,SAASg4C,GAAKyL,GACbhjD,KAAKgjD,SA=
AWA,EAChBhjD,KAAKonD,WAAa,EAClBpnD,KAAKqnD,YAAc,EACnBrnD,KAAKw0D,aAAe,EAC=
pBx0D,KAAK4X,WAGN2/B,EAAKx2C,UAAU0W,kBAAoB,WAClC,GAAIrK,GAAI,CAKR,OAHApN,=
MAAK4X,QAAQ0wB,QAAQ,SAASzwB,GAC7BzK,EAAIrD,KAAKwB,IAAI6B,EAAGyK,EAAOK,KAA=
K09B,SAAW,IAAO/9B,EAAOS,YAE/ClL,GAGRmqC,EAAKx2C,UAAUg/C,wBAA0B,SAASloC,GA=
CjD,MAA4B,KAAxB7X,KAAK4X,QAAQtS,QAAqB,EAClCtF,KAAKg0D,eAAsB,EAExBh0D,KAAK=
w0D,aAAe38C,EAAO5B,MAAQjW,KAAKonD,YAAcvvC,EAAOwvC,aAAe,IAAMrnD,KAAKgjD,UA=
G/FzL,EAAKx2C,UAAU89C,UAAY,SAAShnC,GACP,IAAxB7X,KAAK4X,QAAQtS,SAChBtF,KAA=
KonD,WAAavvC,EAAOuvC,YAAc,GAExCpnD,KAAKqnD,YAAcxvC,EAAOwvC,aAAe,EAEzCxvC,=
EAAO1K,EAAInN,KAAKw0D,aAAex0D,KAAKonD,WAEpCpnD,KAAK4X,QAAQhW,KAAKiW,GAClB=
7X,KAAKw0D,cAAgB38C,EAAO5B,MAExB4B,EAAOuuC,UACVpmD,KAAKg0D,eAAgB,IAIvBzc,=
EAAKx2C,UAAUgzD,SAAW,WACzB,MAAO/zD,MAAKw0D,aAAex0D,KAAKonD,WAAapnD,KAAKqn=
D,aAOnD9P,EAAKx2C,UAAUwW,UAAY,WAC1B,GAAIhM,GAAM,CAMV,OAJAvL,MAAK4X,QAAQ0w=
B,QAAQ,SAAS96B,GAC7BjC,EAAMxB,KAAKwB,IAAIA,EAAKiC,EAAK0I,QAAU,KAG7B3K,GAG=
R/L,EAAOD,QAAUg4C,GAKZ,SAAS/3C,EAAQD,EAASH,GAG/B,YAIA,SAASk4C,GAAe6H,GACt=
Bn/C,KAAKm/C,UAAYA,EAHnB,GAAI9H,GAAmBj4C,EAAoB,GAM3Ck4C,GAAev2C,UAAUs+C,W=
AAa,SAASnG,GA0B7C,QAASub,KACP,GAAIx+C,GAAQ,CAMZ,OAJAkpC,GAAU7pC,MAAMC,OAA=
O+yB,QAAQ,SAASvuB,GACtC9D,GAAS8D,EAAEgkC,aAGN9nC,EAGT,QAASy+C,KACP,GAAIC,=
MACAxnD,EAAI,EACJynD,EAAY,CAEhBD,GAAI/yD,MAAOwB,KAAM,EAAGu6C,QAAS,GAE7B,K=
AAI,GAAI33C,GAAI,EAAG2M,EAAI4hC,EAAK4K,UAAU7pC,MAAM9R,KAAK,GAAG8B,OAAYqN,=
EAAJ3M,EAAOA,IAAK,CAClE,GAAI6uD,GAAWtgB,EAAKyP,OAAO7uC,YAAYnP,EAAGuuC,EAA=
K4K,WAAa5K,EAAKyP,OAAO5uC,aAAapP,EAAGuuC,EAAK4K,WACzF2V,EAAUvgB,EAAKyP,OA=
AO9uC,WAAWlP,EAAGuuC,EAAK4K,UAC7CyV,GAAYC,EAAWC,EAAUvgB,EAAK4K,UAAU7pC,MA=
AMC,OAAOvP,GAAG+3C,WAChE4W,EAAIA,EAAIrvD,OAAS,GAAG2Q,MAAQ2+C,EAC5BznD,GAA=
KynD,EACLD,EAAI/yD,MAAOwB,KAAM+J,EAAGwwC,QAAS,EAAG1nC,MAAO,IAGzC,MAAO0+C,=
GAnDT,GAAIxV,GACAxC,EACApI,EAAOv0C,IAEXm/C,GAAYn/C,KAAKm/C,UACjBn/C,KAAKw=
/C,QAAUL,EAAUI,SACzBv/C,KAAKgkD,OAAS7E,EAAUqG,QAExB7I,EAAiBzD,EAAOl4B,UAA=
U27B,eAAiB38C,KAAKw/C,QAAQiF,MAChEpN,EAAiBwF,kBAAkBsC,EAAU7pC,MAAMC,OAAQo=
nC,GAE3D38C,KAAK+0D,WAAa5V,EAAUI,SAASkF,MAAQgQ,IAC7Cz0D,KAAKg1D,YAAcN,IAC=
nB10D,KAAKi1D,oBAAqB,EAE1Bj1D,KAAKyV,WAAa0pC,EAAU7pC,MAAMG,YAAc,EAChDzV,K=
AAKk1D,qBAAuBl1D,KAAKyV,YAAc0pC,EAAU7pC,MAAM6/C,oBAAsB,GACrFn1D,KAAKo1D,c=
AAgBjW,EAAU7pC,MAAM8/C,gBAAiB,EAElDp1D,KAAKk1D,sBACPhc,EAAOU,wBAGT55C,KAA=
Kq1D,mBAAmB,EAAGnc,IAgC7B5B,EAAev2C,UAAUu0D,WAAa,SAASC,EAAUrc,GACvD,GAAI3=
E,GAAOv0C,IACX,OAAO,YAEL,GAAI2I,GAAS4rC,EAAKihB,eAAkBjhB,EAAK9+B,WAAiC,EA=
ApB8+B,EAAKkhB,aAC3Dvc,GAAOl4B,UAAUk6B,SAASvyC,KAK9B2uC,EAAev2C,UAAUu+C,S=
AAW,SAASiW,EAAUrc,GACrDl5C,KAAKy1D,aAAez1D,KAAKgkD,OAAO/uC,WAAWsgD,EAAUv1=
D,KAAKm/C,WAC1Dn/C,KAAKw1D,cAAgBx1D,KAAKgkD,OAAOG,WAAWoR,EAAUv1D,KAAKm/C,=
WAC3Dn/C,KAAK01D,gBAAkB11D,KAAKgkD,OAAO/uC,WAAWsgD,EAAS,EAAGv1D,KAAKm/C,W=
AC/Dn/C,KAAK21D,iBAAmB31D,KAAKgkD,OAAOI,cAAcmR,EAAUv1D,KAAKm/C,WAEjEn/C,K=
AAK41D,YAAc51D,KAAKs1D,WAAWC,EAAUrc,GAC7CA,EAAOtC,QAAQwC,cAAc,cAAep5C,KAA=
K41D,aAC5C51D,KAAKo1D,eACJlc,EAAOU,wBAEb55C,KAAK61D,QAAU3c,EAAOl4B,UAAU5T=
,EAChCpN,KAAK81D,iBAAmB91D,KAAK01D,gBAAkB11D,KAAK21D,iBAEpDzc,EAAOl4B,UAA=
Uo/B,iBAAmBpgD,KAAK81D,iBAEzC5c,EAAOl4B,UAAUk6B,SAASl7C,KAAKw1D,gBAGjCle,=
EAAev2C,UAAUs0D,mBAAqB,SAASU,EAAW7c,EAAQ8c,GACxE,GAAI78C,GAAYnZ,KAAKgkD,O=
AAO/uC,WAAW8gD,EAAW/1D,KAAKm/C,UACvD,IAAIhmC,EAAW,CAIb,IAAI,GAHAxQ,GAASwQ=
,EAAY,EACrB88C,EAAc,KAEVjwD,EAAI,EAAG2M,EAAI3S,KAAKg1D,YAAY1vD,OAAYqN,EAA=
J3M,EAAOA,IAAK,CACtD,GAAIkB,GAAOlH,KAAKg1D,YAAYhvD,GACxBkwD,GAAkBhvD,EAAK=
y2C,SAEtBsY,GAAeC,IAClBD,GAAgB7yD,KAAM8D,EAAK9D,KAAM6S,MAAO,IAGtCigD,IACF=
D,EAAYhgD,OAAU/O,EAAK+O,OAAS,EAGtC,IAAI7I,IAAK4oD,GAAa,GAAKrtD,CAEtButD,I=
AAkBlwD,IAAM2M,EAAI,GAC3BsjD,IACF/c,EAAOyF,WACLx6C,KAAM,OACNgW,GAAI87C,EA=
AY7yD,KAChBkX,GAAI27C,EAAY7yD,KAAO6yD,EAAYhgD,MACnCmE,GAAIhN,EACJmN,GAAIn=
N,EACJ+L,UAAWA,EACXyB,UAA6C,kBAA3B5a,MAAKgkD,OAAOruC,WAA4B3V,KAAKgkD,OAAO=
ruC,WAAWogD,EAAW/1D,KAAKm/C,WAAan/C,KAAKgkD,OAAOruC,aACzH,EAAOqgD,GACVC,E=
AAc,MAKpB/c,EAAOl4B,UAAUk6B,SAAS/hC,KAI9Bm+B,EAAev2C,UAAUo1D,iBAAmB,SAASh=
pD,EAAGipD,EAAIh8C,EAAIi8C,EAAYnd,GAC1E,GAAIjjC,GAAQjW,KAAKgkD,OAAO9uC,WA=
AWmhD,EAAYr2D,KAAKm/C,UACtC,KAAVlpC,GACJijC,EAAOyF,WACLx6C,KAAM,OACNgW,GA=
AIhN,EAAI8I,EAAM,EACdqE,GAAInN,EAAI8I,EAAM,EACdmE,GAAIg8C,EACJ77C,GAAIH,E=
ACJjB,UAAWlD,EACX2E,UAA6C,kBAA3B5a,MAAKgkD,OAAOE,WAA4BlkD,KAAKgkD,OAAOE,W=
AAWmS,EAAYr2D,KAAKm/C,WAAan/C,KAAKgkD,OAAOE,aAC1H,GAAO,IAGZ5M,EAAev2C,UAA=
U2+C,SAAW,SAASxG,GACvCl5C,KAAKi1D,oBACP/b,EAAOua,sBAIXnc,EAAev2C,UAAU0+C,=
OAAS,SAAS8V,EAAUrc,EAAQiE,GAgIzD,QAASmZ,KAIP,IAAI,GAHAh1D,MACAmkD,EAAO,EA=
EHz/C,EAAI,EAAG2M,EAAI4hC,EAAK4K,UAAU7pC,MAAM9R,KAAK+xD,GAAUjwD,OAAYqN,EA=
AJ3M,EAAOA,IAAK,CACzE,IAAKy/C,EAAM,CACTnkD,EAAOM,MAAOuL,EAAGonC,EAAKygB,Y=
AAYhvD,GAAG5C,KAAM+a,MAAOnY,GAElD,IAAIwH,GAAO+mC,EAAK4K,UAAU7pC,MAAM9R,KA=
AK+xD,GAAUvvD,EAC/Cy/C,GAAQj4C,EAAK+oD,UAAY/oD,EAAKywC,SAAW,EAEvCwH,EAAO,=
GACTA,IAMJ,MAFAnkD,GAAOM,MAAOuL,EAAGonC,EAAKygB,YAAYzgB,EAAKygB,YAAY1vD,O=
AAS,GAAGlC,KAAM+a,MAAOo2B,EAAKygB,YAAY1vD,OAAS,IAE/FhE,EAjJT,GAAIqR,GAAG3=
M,EACHuuC,EAAOv0C,IACXk5C,GAAOtC,QAAQ6J,aAAa,cAAezgD,KAAK41D,aAChD1c,EAAO=
l4B,UAAUk6B,SAASl7C,KAAKgkD,OAAOI,cAAcmR,EAAUv1D,KAAKm/C,YACnEjG,EAAOl4B,=
UAAUo/B,iBAAmBpgD,KAAK81D,gBAEzC,IAAIU,GAAatd,EAAOl4B,UAAUrK,KAC9B8/C,EAA=
Uvd,EAAOl4B,UAAU5T,EAE3BspD,EAAKJ,IAELK,KAEAC,EAAYzZ,GAAcA,EAAW73C,OAAS,C=
AOlD,IALAqxD,EAAG/0D,MACDw0D,GAAIp2D,KAAK61D,QACTl/C,KAAMigD,EAAYzZ,EAAW,=
GAAGE,SAAWmZ,IAGzCI,EACF,IAAI5wD,EAAI,EAAG2M,EAAIwqC,EAAW73C,OAAYqN,EAAJ3=
M,EAAOA,IAAK,CAC5C,GAAIuyC,GAAY4E,EAAWn3C,EAC3B2wD,GAAGA,EAAGrxD,OAAS,GAA=
G8U,GAAKm+B,EAAU+E,MAEjCqZ,EAAG/0D,MAAMw0D,GAAI7d,EAAUnrC,EAAGuJ,KAAM4hC,=
EAAU8E,SAAW,IAIzDsZ,EAAGA,EAAGrxD,OAAS,GAAG8U,GAAKq8C,CAGvB,KAAI,GADAI,GA=
AsBF,EAAG,GAAGv8C,GAAKu8C,EAAG,GAAGP,KAAOp2D,KAAKw1D,cAC/CsB,EAAMD,EAAqB,=
EAAI,EAAIE,EAAKJ,EAAGrxD,OAAayxD,EAALD,EAASA,IAAM,CACxE,GAAIE,GAAYF,EAAKH=
,EAAGrxD,OAAS,EAC7B2xD,EAAyBH,EAAK,IAAM92D,KAAKyV,WACzCyhD,EAAgBD,EAAwB,E=
AAIj3D,KAAKy1D,aACjDr7C,EAAKu8C,EAAGG,GAAIV,GACZ77C,EAAKo8C,EAAGG,GAAI18C=
,EAchB,KAZA48C,IACFz8C,GAAUva,KAAK21D,kBAGTzc,EAAOl4B,UAAUrK,MAAQggD,EAAG=
G,GAAIngD,OAClCuiC,EAAOl4B,UAAUrK,KAAOggD,EAAGG,GAAIngD,KAI/B3W,KAAK81D,i=
BAAmB,GAGtB9vD,EAAI,EAAG2M,EAAI+jD,EAAGpxD,OAAYqN,EAAJ3M,EAAOA,IAE/B,GADA=
hG,KAAKm2D,iBAAiBO,EAAG1wD,GAAGmH,EAAGiN,EAAK88C,EAAc38C,EAAKva,KAAK01D,g=
BAAiBgB,EAAG1wD,GAAGmY,MAAO+6B,GACnFvmC,EAAE,EAAN3M,EAAS,CACV,GAAImxD,GAA=
WT,EAAG1wD,GAAGmY,MACjB2lC,EAAY9jD,KAAKm/C,UAAU7pC,MAAM9R,KAAK+xD,GAAU4B,=
GAAUrT,SAC9D,IAAGA,EAAY,CACb,GAAIsT,GAAUp3D,KAAKgkD,OAAO9uC,WAAWiiD,EAAUn=
3D,KAAKm/C,WAChDkY,EAAKX,EAAG1wD,GAAGmH,EAAEiqD,EACbE,EAAKl9C,EAAK88C,CAC=
dhe,GAAOyF,WACLx6C,KAAM,OACNgJ,EAAGkqD,EACHjqD,EAAGkqD,EACHv9C,EAAG28C,EA=
AG1wD,EAAE,GAAGmH,EAAEkqD,EACbr9C,EAAGO,EAAGva,KAAK01D,gBAAgB4B,EAC3Bn+C,=
UAAW,EACXrB,MAAOgsC,IACN,GAAO,EAAM,IAKlBkT,GAAah3D,KAAKgkD,OAAOuT,mBAAoB,=
GAC/Cv3D,KAAKq1D,mBAAmBE,EAAW,EAAGrc,EAAQ3+B,GAE7C08C,GAAyBj3D,KAAKgkD,OA=
AOuT,mBAAoB,GAC1Dv3D,KAAKq1D,mBAAmBE,EAAUrc,EAAQ9+B,GAI9C8+B,EAAOl4B,UAAU=
rK,KAAO6/C,EACxBtd,EAAOl4B,UAAU5T,EAAIqpD,CAErB,IAAInR,GAAMtlD,KAAKm/C,UA=
AU7pC,MAAM9R,KAAK+xD,EACpC,KAAIvvD,EAAI,EAAG2M,EAAI2yC,EAAIhgD,OAAYqN,EAA=
J3M,EAAOA,IAAK,CACrC,GAAIs/C,EAAIt/C,GAAG23C,UACT39C,KAAKg1D,YAAYhvD,GAAG=
23C,QAAU2H,EAAIt/C,GAAG23C,QAGjC2H,EAAIt/C,GAAGi4C,SAAWqH,EAAIt/C,GAAGi4C=
,QAAU,GACrC,IAAI,GAAIvyC,GAAI,EAAGA,EAAI45C,EAAIt/C,GAAG23C,QAASjyC,IACjC=
1L,KAAKm/C,UAAU7pC,MAAM9R,KAAK+xD,EAAW7pD,GAAG1F,GAAGuwD,SAAWjR,EAAIt/C,G=
AAGi4C,OAKhEj+C,MAAKg1D,YAAYhvD,GAAG23C,QAAU,GAC/B39C,KAAKg1D,YAAYhvD,GAA=
G23C,UAIxB39C,KAAKq1D,mBAAmBE,EAAW,EAAGrc,GAEnCl5C,KAAKyV,YAAc8/C,IAAav1D=
,KAAKyV,WAAa,IACnDzV,KAAKw3D,iBAAmBte,EAAOqa,4BAG9BvzD,KAAKo1D,eACNlc,EAA=
OtC,QAAQiH,KAAK,cAClB,WACEtJ,EAAK8gB,mBAAmBE,EAAUrc,IAEpC,WACEA,EAAOW,yBA=
CPtF,EAAK8gB,mBAAmBE,EAAUrc,MAKrCl5C,KAAKw3D,kBAAqBjC,IAAcv1D,KAAKk1D,qBA=
AuB,GAAMK,IAAav1D,KAAKm/C,UAAU7pC,MAAM9R,KAAK8B,OAAS,IAC3H4zC,EAAOW,yBACP=
X,EAAOsa,kBAAkBxzD,KAAKw3D,kBAC9Bx3D,KAAKi1D,oBAAqB,EAC1Bj1D,KAAKw3D,iBAA=
mB,OAyB9Bh4D,EAAOD,QAAU+3C,GAKZ,SAAS93C,EAAQD,EAASH,IAEH,SAASa,IAOrC,WACE=
,GAAIw3D,GAAaC,EAAWC,EAASC,EAAcx2D,EAAIy2D,EACrDC,KAAe12C,eACf22C,EAAY,SA=
ASC,EAAOzyD,GAAiG,QAAS0yD,KAASj4D,KAAKgF,YAAcgzD,EAA5H,IAAK,GAAIr0C,KAAOp=
e,GAAcuyD,EAAUn4D,KAAK4F,EAAQoe,KAAMq0C,EAAMr0C,GAAOpe,EAAOoe,GAA2J,OAArG=
s0C,GAAKl3D,UAAYwE,EAAOxE,UAAWi3D,EAAMj3D,UAAY,GAAIk3D,GAAQD,EAAME,UAAY3y=
D,EAAOxE,UAAkBi3D,EAEzRH,GAASz4D,EAAoB,IAE7BgC,EAAKhC,EAAoB,IAEzBs4D,EAAY=
t4D,EAAoB,IAEhCw4D,EAAex4D,EAAoB,IAEnCu4D,EAAUv4D,EAAoB,IAE9Bq4D,EAAc,SAA=
UU,GAKtB,QAASV,GAAYx2D,GACnB,GAAI0iB,GAAK7V,EAAKsqD,EAAMC,CA8BpB,IA7BAr4D=
,KAAKiB,QAAqB,MAAXA,EAAkBA,KACjCw2D,EAAYS,UAAUlzD,YAAY8F,MAAM9K,KAAM2F,WA=
C9C3F,KAAKurD,QAAU,IACfvrD,KAAKyb,SAA6C,OAAjC28C,EAAOp4D,KAAKiB,QAAQwa,UA=
AoB28C,GAAO,EAChEp4D,KAAKs4D,eACLt4D,KAAKu4D,iBAAmB,EACxBv4D,KAAKu/C,YACL=
v/C,KAAKw4D,SAAW,EAChBx4D,KAAKy4D,QAAS,EACdz4D,KAAK04D,QAAU,EACf14D,KAAKq=
d,MAAQrd,KAAKid,KAChBC,KAAM,UACNy7C,MAAO34D,KAAKid,KACVC,KAAM,QACN07C,MAA=
O,EACPC,YAGJ74D,KAAK2W,KAAO,KACZ3W,KAAK84D,YACL94D,KAAK+4D,aACL/4D,KAAKg5=
D,YACLh5D,KAAKi5D,WACLj5D,KAAKk5D,aACLl5D,KAAK0b,MACHC,SAAU,SACVC,QAAS,SA=
CTu9C,aAAc,GAAIhzB,OAEhBnmC,KAAKiB,QAAQya,KAAM,CACrB28C,EAAQr4D,KAAKiB,QA=
AQya,IACrB,KAAKiI,IAAO00C,GACVvqD,EAAMuqD,EAAM10C,GACZ3jB,KAAK0b,KAAKiI,G=
AAO7V,EAGrB9N,KAAKo5D,OAAO,QAAUp5D,KAAKurD,SAC3BvrD,KAAKo5D,OAAO,SACZp5D,=
KAAK0W,UA5CP,GAAIsuB,EAsNJ,OApNA+yB,GAAUN,EAAaU,GA6CvBnzB,EAAQ,SAASyG,GAC=
f,GAAIT,GAAQ5mC,EAAMi1D,CAClBA,KACA,KAAKj1D,IAAQqnC,GACXT,EAASS,EAAQrnC,G=
ACjBi1D,EAASz3D,KAAK61D,EAAY12D,UAAUqD,GAAQ4mC,EAE9C,OAAOquB,IAGTr0B,EAAM=
5lC,EAAoB,KAE1B4lC,EAAM5lC,EAAoB,KAE1B4lC,EAAM5lC,EAAoB,KAE1B4lC,EAAM5lC,=
EAAoB,KAE1B4lC,EAAM5lC,EAAoB,KAE1B4lC,EAAM5lC,EAAoB,MAE1Bq4D,EAAY12D,UAAU=
2V,QAAU,SAASzV,GACvC,GAAIkB,EAgBJ,OAfe,OAAXlB,IACFA,EAAUjB,KAAKiB,SAEZjB,=
KAAKiB,QAAQq4D,aAChBt5D,KAAKu5D,aAEPv5D,KAAK2W,KAAO,GAAIghD,GAAQ33D,KAAMi=
B,GAC9BjB,KAAKs4D,YAAY12D,KAAK5B,KAAK2W,MAC3BxU,EAAQnC,KAAKqd,MAAMnW,KAAK=
yxD,MAAMzxD,KAC9B/E,EAAM02D,KAAKj3D,KAAK5B,KAAK2W,KAAK6iD,YAC1Br3D,EAAMy2=
D,QACN54D,KAAKmN,EAAInN,KAAK2W,KAAK8iD,QAAQr2D,KAC3BpD,KAAKoN,EAAIpN,KAAK=
2W,KAAK8iD,QAAQ9kD,IAC3B3U,KAAK05D,MAAQ,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B15D=
,KAAKgY,UAAU,EAAG,EAAG,EAAG,GAAI,EAAGhY,KAAK2W,KAAKT,QAClClW,MAGTy3D,EAAY=
12D,UAAU44D,kBAAoB,WACxC,OACEzxD,MAAOlI,KAAKu4D,iBACZrxB,MAAOlnC,KAAKs4D,=
YAAYhzD,SAI5BmyD,EAAY12D,UAAU64D,aAAe,SAASrtD,GAC5C,GAAIoK,EACJ,MAAMA,EAA=
O3W,KAAKs4D,YAAY/rD,EAAIvM,KAAKu4D,mBACrC,KAAM,IAAIxvD,OAAM,gBAAkBwD,EAAI=
,gDAAkDvM,KAAKu4D,iBAAmB,QAAUv4D,KAAKu4D,iBAAmBv4D,KAAKs4D,YAAYhzD,OAAS,G=
AE9K,OAAOtF,MAAK2W,KAAOA,GAGrB8gD,EAAY12D,UAAUw4D,WAAa,WACjC,GAAI5iD,GAAM=
xU,EAAO03D,EAAIC,CAIrB,KAHA33D,EAAQnC,KAAKs4D,YACbt4D,KAAKs4D,eACLt4D,KAA=
Ku4D,kBAAoBp2D,EAAMmD,OAC1Bu0D,EAAK,EAAGC,EAAO33D,EAAMmD,OAAaw0D,EAALD,EA=
AWA,IAC3CljD,EAAOxU,EAAM03D,GACbljD,EAAK5U,OAIT01D,EAAY12D,UAAUkc,IAAM,SA=
AS/V,GACnC,GAAI+V,EAIJ,OAHAA,GAAM,GAAI26C,GAAa53D,KAAMA,KAAKu/C,SAASj6C,O=
AAS,EAAG4B,GACvDlH,KAAKu/C,SAAS39C,KAAK,MACnB5B,KAAKw4D,WACEv7C,GAGTw6C,E=
AAY12D,UAAUg5D,MAAQ,aAE9BtC,EAAY12D,UAAUq4D,OAAS,SAASlyD,GAKtC,MAJKjH,GAA=
OoG,SAASa,KACnBA,EAAO,GAAIjH,GAAOiH,EAAO,KAAM,WAEjClH,KAAK4B,KAAKsF,GACHl=
H,KAAK04D,SAAWxxD,EAAK5B,QAG9BmyD,EAAY12D,UAAUqX,WAAa,SAASlR,GAE1C,MADAlH=
,MAAK2W,KAAKxQ,MAAMe,GACTlH,MAGTy3D,EAAY12D,UAAUi5D,QAAU,SAAS/8C,GAEvC,MA=
DAjd,MAAKu/C,SAAStiC,EAAIxd,GAAK,GAAKwd,EAAItU,OACR,MAAlB3I,KAAKw4D,UAAkB=
x4D,KAAKy4D,QAChCz4D,KAAKi6D,YACEj6D,KAAKy4D,QAAS,GAFvB,QAMFhB,EAAY12D,UA=
AUoF,MAAQ,SAAS+zD,EAAUjpC,GAC/C,GAAIkpC,EAKJ,OAJAA,GAAM,GAAIpxD,OAAM,oIAE=
hB/I,KAAKo6D,KAAKh5D,EAAGi5D,kBAAkBH,IAC/Bl6D,KAAK+B,MACE/B,KAAKu+B,KAAK,=
MAAOtN,IAG1BwmC,EAAY12D,UAAUwS,OAAS,SAAS0d,GACtC,KAAM,IAAIloB,OAAM,qHAGlB=
0uD,EAAY12D,UAAUgB,IAAM,WAC1B,GAAImW,GAAMyL,EAAKvf,EAAM0J,EAAKsqD,EAAMC,C=
AChCr4D,MAAKu5D,aACLv5D,KAAKs6D,MAAQt6D,KAAKid,MAClBm7C,EAAOp4D,KAAK0b,IA=
CZ,KAAKiI,IAAOy0C,GACVtqD,EAAMsqD,EAAKz0C,GACQ,gBAAR7V,KACTA,EAAM,GAAIlD,=
QAAOkD,IAEnB9N,KAAKs6D,MAAMpzD,KAAKyc,GAAO7V,CAEzB9N,MAAKs6D,MAAMv4D,MACX=
s2D,EAAQr4D,KAAKg2C,aACb,KAAK5xC,IAAQi0D,GACXngD,EAAOmgD,EAAMj0D,GACb8T,E=
AAKqiD,OAIP,OAFAv6D,MAAKqd,MAAMtb,MACX/B,KAAKqd,MAAMnW,KAAKyxD,MAAM52D,MA=
CA,IAAlB/B,KAAKw4D,SACAx4D,KAAKi6D,YAELj6D,KAAKy4D,QAAS,GAIzBhB,EAAY12D,U=
AAUk5D,UAAY,SAAShpC,GACzC,GAAItoB,GAAQ6xD,EAAYX,EAAIC,EAAM1B,CAMlC,KALAoC=
,EAAax6D,KAAK04D,QAClB14D,KAAKo5D,OAAO,QACZp5D,KAAKo5D,OAAO,MAAQp5D,KAAKu=
/C,SAASj6C,OAAS,IAC3CtF,KAAKo5D,OAAO,uBACZhB,EAAOp4D,KAAKu/C,SACPsa,EAAK,=
EAAGC,EAAO1B,EAAK9yD,OAAaw0D,EAALD,EAAWA,IAC1ClxD,EAASyvD,EAAKyB,GACdlxD,=
GAAU,aAAeA,GAAQmB,MAAM,KACvC9J,KAAKo5D,OAAOzwD,EAAS,YAWvB,OATA3I,MAAKo5D,=
OAAO,WACZp5D,KAAKo5D,OAAO1B,EAAU+C,SACpBC,KAAM16D,KAAKu/C,SAASj6C,OAAS,EA=
C7Bq1D,KAAM36D,KAAKqd,MACXu9C,KAAM56D,KAAKs6D,SAEbt6D,KAAKo5D,OAAO,aACZp5=
D,KAAKo5D,OAAO,GAAKoB,GACjBx6D,KAAKo5D,OAAO,SACLp5D,KAAK4B,KAAK,OAGnB61D,=
EAAY12D,UAAU0D,SAAW,WAC/B,MAAO,wBAGFgzD,GAENI,EAAOgD,UAEVr7D,EAAOD,QAAUk4=
D,IAEhB93D,KAAKK,QAEqBL,KAAKJ,EAASH,EAAoB,GAAGa,SAI7D,SAAST,EAAQD,EAASH,G=
A2C/B,QAAS07D,KACPC,EAAGp7D,KAAKK,MArBVR,EAAOD,QAAUu7D,CAEjB,IAAIC,GAAK37=
D,EAAoB,IAAI47D,aAC7BC,EAAW77D,EAAoB,GAEnC67D,GAASH,EAAQC,GACjBD,EAAOD,SA=
AWz7D,EAAoB,IACtC07D,EAAOI,SAAW97D,EAAoB,IACtC07D,EAAOK,OAAS/7D,EAAoB,IAC=
pC07D,EAAOM,UAAYh8D,EAAoB,IACvC07D,EAAOO,YAAcj8D,EAAoB,IAGzC07D,EAAOA,OAA=
SA,EAWhBA,EAAO/5D,UAAUq5D,KAAO,SAASkB,EAAMr6D,GAGrC,QAASs6D,GAAO55D,GACV2=
5D,EAAKE,WACH,IAAUF,EAAKn1D,MAAMxE,IAAUkjB,EAAO42C,OACxC52C,EAAO42C,QAOb,=
QAASC,KACH72C,EAAO82C,UAAY92C,EAAO+2C,QAC5B/2C,EAAO+2C,SAcX,QAASC,KACHC,I=
ACJA,GAAW,EAEXR,EAAKv5D,OAIP,QAASg6D,KACHD,IACJA,GAAW,EAEiB,kBAAjBR,GAAKU=
,SAAwBV,EAAKU,WAI/C,QAASC,GAAQC,GAEf,GADAC,IACwC,IAApCpB,EAAGqB,cAAcp8D,K=
AAM,SACzB,KAAMk8D,GAQV,QAASC,KACPt3C,EAAOw3C,eAAe,OAAQd,GAC9BD,EAAKe,eAAe=
,QAASX,GAE7B72C,EAAOw3C,eAAe,MAAOR,GAC7Bh3C,EAAOw3C,eAAe,QAASN,GAE/Bl3C,E=
AAOw3C,eAAe,QAASJ,GAC/BX,EAAKe,eAAe,QAASJ,GAE7Bp3C,EAAOw3C,eAAe,MAAOF,GAC=
7Bt3C,EAAOw3C,eAAe,QAASF,GAE/Bb,EAAKe,eAAe,QAASF,GApE/B,GAAIt3C,GAAS7kB,I=
AUb6kB,GAAOnjB,GAAG,OAAQ65D,GAQlBD,EAAK55D,GAAG,QAASg6D,GAIZJ,EAAKgB,UAAc=
r7D,GAAWA,EAAQc,OAAQ,IACjD8iB,EAAOnjB,GAAG,MAAOm6D,GACjBh3C,EAAOnjB,GAAG,=
QAASq6D,GAGrB,IAAID,IAAW,CAoDf,OA5BAj3C,GAAOnjB,GAAG,QAASu6D,GACnBX,EAAK5=
5D,GAAG,QAASu6D,GAmBjBp3C,EAAOnjB,GAAG,MAAOy6D,GACjBt3C,EAAOnjB,GAAG,QAAS=
y6D,GAEnBb,EAAK55D,GAAG,QAASy6D,GAEjBb,EAAK5a,KAAK,OAAQ77B,GAGXy2C,IAMJ,S=
AAS97D,EAAQD,GAuBtB,QAASy7D,KACPh7D,KAAKu8D,QAAUv8D,KAAKu8D,YACpBv8D,KAAK=
w8D,cAAgBx8D,KAAKw8D,eAAiBh3D,OAoQ7C,QAAS2kB,GAAW9kB,GAClB,MAAsB,kBAARA,G=
AGhB,QAASm6B,GAASn6B,GAChB,MAAsB,gBAARA,GAGhB,QAASkf,GAASlf,GAChB,MAAsB,g=
BAARA,IAA4B,OAARA,EAGpC,QAAS06B,GAAY16B,GACnB,MAAe,UAARA,EA/QT7F,EAAOD,QA=
AUy7D,EAGjBA,EAAaA,aAAeA,EAE5BA,EAAaj6D,UAAUw7D,QAAU/2D,OACjCw1D,EAAaj6D,=
UAAUy7D,cAAgBh3D,OAIvCw1D,EAAayB,oBAAsB,GAInCzB,EAAaj6D,UAAU27D,gBAAkB,SA=
ASnwD,GAChD,IAAKizB,EAASjzB,IAAU,EAAJA,GAASpD,MAAMoD,GACjC,KAAM9F,WAAU,8B=
AElB,OADAzG,MAAKw8D,cAAgBjwD,EACdvM,MAGTg7D,EAAaj6D,UAAU2/C,KAAO,SAASv8C,=
GACrC,GAAI+3D,GAAIS,EAAS/0D,EAAK6gB,EAAMziB,EAAG42D,CAM/B,IAJK58D,KAAKu8D=
,UACRv8D,KAAKu8D,YAGM,UAATp4D,KACGnE,KAAKu8D,QAAQM,OACbt4C,EAASvkB,KAAKu8=
D,QAAQM,SAAW78D,KAAKu8D,QAAQM,MAAMv3D,QAAS,CAEhE,GADA42D,EAAKv2D,UAAU,GAC=
Xu2D,YAAcnzD,OAChB,KAAMmzD,EAER,MAAMz1D,WAAU,wCAMpB,GAFAk2D,EAAU38D,KAAKu=
8D,QAAQp4D,GAEnB47B,EAAY48B,GACd,OAAO,CAET,IAAIxyC,EAAWwyC,GACb,OAAQh3D,U=
AAUL,QAEhB,IAAK,GACHq3D,EAAQh9D,KAAKK,KACb,MACF,KAAK,GACH28D,EAAQh9D,KAAK=
K,KAAM2F,UAAU,GAC7B,MACF,KAAK,GACHg3D,EAAQh9D,KAAKK,KAAM2F,UAAU,GAAIA,UAA=
U,GAC3C,MAEF,SACE8iB,EAAO/Z,MAAM3N,UAAU+I,MAAMnK,KAAKgG,UAAW,GAC7Cg3D,EAA=
Q7xD,MAAM9K,KAAMyoB,OAEnB,IAAIlE,EAASo4C,GAIlB,IAHAl0C,EAAO/Z,MAAM3N,UAAU=
+I,MAAMnK,KAAKgG,UAAW,GAC7Ci3D,EAAYD,EAAQ7yD,QACpBlC,EAAMg1D,EAAUt3D,OACX=
U,EAAI,EAAO4B,EAAJ5B,EAASA,IACnB42D,EAAU52D,GAAG8E,MAAM9K,KAAMyoB,EAG7B,Q=
AAO,GAGTuyC,EAAaj6D,UAAU+7D,YAAc,SAAS34D,EAAM44D,GAClD,GAAIn9D,EAEJ,KAAKu=
qB,EAAW4yC,GACd,KAAMt2D,WAAU,8BA2ClB,OAzCKzG,MAAKu8D,UACRv8D,KAAKu8D,YAIH=
v8D,KAAKu8D,QAAQS,aACfh9D,KAAK0gD,KAAK,cAAev8C,EACfgmB,EAAW4yC,EAASA,UACp=
BA,EAASA,SAAWA,GAE3B/8D,KAAKu8D,QAAQp4D,GAGTogB,EAASvkB,KAAKu8D,QAAQp4D,I=
AE7BnE,KAAKu8D,QAAQp4D,GAAMvC,KAAKm7D,GAGxB/8D,KAAKu8D,QAAQp4D,IAASnE,KAA=
Ku8D,QAAQp4D,GAAO44D,GAN1C/8D,KAAKu8D,QAAQp4D,GAAQ44D,EASnBx4C,EAASvkB,KA=
AKu8D,QAAQp4D,MAAWnE,KAAKu8D,QAAQp4D,GAAM84D,SAIpDr9D,EAHGmgC,EAAY//B,KAA=
Kw8D,eAGhBxB,EAAayB,oBAFbz8D,KAAKw8D,cAKP58D,GAAKA,EAAI,GAAKI,KAAKu8D,QAA=
Qp4D,GAAMmB,OAAS1F,IAC5CI,KAAKu8D,QAAQp4D,GAAM84D,QAAS,EAKC,kBAAlBC,SAAQC=
,QAOhBn9D,MAGTg7D,EAAaj6D,UAAUW,GAAKs5D,EAAaj6D,UAAU+7D,YAEnD9B,EAAaj6D,U=
AAUw9B,KAAO,SAASp6B,EAAM44D,GAM3C,QAASK,KACPp9D,KAAKq8D,eAAel4D,EAAMi5D,G=
AErBC,IACHA,GAAQ,EACRN,EAASjyD,MAAM9K,KAAM2F,YAVzB,IAAKwkB,EAAW4yC,GACd,K=
AAMt2D,WAAU,8BAElB,IAAI42D,IAAQ,CAcZ,OAHAD,GAAEL,SAAWA,EACb/8D,KAAK0B,GAA=
GyC,EAAMi5D,GAEPp9D,MAITg7D,EAAaj6D,UAAUs7D,eAAiB,SAASl4D,EAAM44D,GACrD,G=
AAIzvD,GAAMnK,EAAUmC,EAAQU,CAE5B,KAAKmkB,EAAW4yC,GACd,KAAMt2D,WAAU,8BAElB=
,KAAKzG,KAAKu8D,UAAYv8D,KAAKu8D,QAAQp4D,GACjC,MAAOnE,KAMT,IAJAsN,EAAOtN,K=
AAKu8D,QAAQp4D,GACpBmB,EAASgI,EAAKhI,OACdnC,EAAW,GAEPmK,IAASyvD,GACR5yC,E=
AAW7c,EAAKyvD,WAAazvD,EAAKyvD,WAAaA,QAC3C/8D,MAAKu8D,QAAQp4D,GAChBnE,KAAK=
u8D,QAAQF,gBACfr8D,KAAK0gD,KAAK,iBAAkBv8C,EAAM44D,OAE/B,IAAIx4C,EAASjX,GA=
AO,CACzB,IAAKtH,EAAIV,EAAQU,KAAM,GACrB,GAAIsH,EAAKtH,KAAO+2D,GACXzvD,EAAK=
tH,GAAG+2D,UAAYzvD,EAAKtH,GAAG+2D,WAAaA,EAAW,CACvD55D,EAAW6C,CACX,OAIJ,GA=
Ae,EAAX7C,EACF,MAAOnD,KAEW,KAAhBsN,EAAKhI,QACPgI,EAAKhI,OAAS,QACPtF,MAAKu=
8D,QAAQp4D,IAEpBmJ,EAAK4f,OAAO/pB,EAAU,GAGpBnD,KAAKu8D,QAAQF,gBACfr8D,KAA=
K0gD,KAAK,iBAAkBv8C,EAAM44D,GAGtC,MAAO/8D,OAGTg7D,EAAaj6D,UAAUu8D,mBAAqB,=
SAASn5D,GACnD,GAAIwf,GAAKi5C,CAET,KAAK58D,KAAKu8D,QACR,MAAOv8D,KAGT,KAAKA=
,KAAKu8D,QAAQF,eAKhB,MAJyB,KAArB12D,UAAUL,OACZtF,KAAKu8D,WACEv8D,KAAKu8D,=
QAAQp4D,UACbnE,MAAKu8D,QAAQp4D,GACfnE,IAIT,IAAyB,IAArB2F,UAAUL,OAAc,CAC1B=
,IAAKqe,IAAO3jB,MAAKu8D,QACH,mBAAR54C,GACJ3jB,KAAKs9D,mBAAmB35C,EAI1B,OAF=
A3jB,MAAKs9D,mBAAmB,kBACxBt9D,KAAKu8D,WACEv8D,KAKT,GAFA48D,EAAY58D,KAAKu8=
D,QAAQp4D,GAErBgmB,EAAWyyC,GACb58D,KAAKq8D,eAAel4D,EAAMy4D,OACrB,IAAIA,EA=
ET,KAAOA,EAAUt3D,QACftF,KAAKq8D,eAAel4D,EAAMy4D,EAAUA,EAAUt3D,OAAS,GAI3D,=
cAFOtF,MAAKu8D,QAAQp4D,GAEbnE,MAGTg7D,EAAaj6D,UAAU67D,UAAY,SAASz4D,GAC1C,=
GAAI4G,EAOJ,OAHEA,GAHG/K,KAAKu8D,SAAYv8D,KAAKu8D,QAAQp4D,GAE1BgmB,EAAWnqB=
,KAAKu8D,QAAQp4D,KACxBnE,KAAKu8D,QAAQp4D,IAEdnE,KAAKu8D,QAAQp4D,GAAM2F,YA=
I7BkxD,EAAaj6D,UAAUq7D,cAAgB,SAASj4D,GAC9C,GAAInE,KAAKu8D,QAAS,CAChB,GAAI=
gB,GAAav9D,KAAKu8D,QAAQp4D,EAE9B,IAAIgmB,EAAWozC,GACb,MAAO,EACJ,IAAIA,EAC=
P,MAAOA,GAAWj4D,OAEtB,MAAO,IAGT01D,EAAaoB,cAAgB,SAASoB,EAASr5D,GAC7C,MAAO=
q5D,GAAQpB,cAAcj4D,KAsB1B,SAAS3E,EAAQD,GAEO,kBAAlB+U,QAAO4rB,OAEhB1gC,EAA=
OD,QAAU,SAAkB04D,EAAMwF,GACvCxF,EAAKyF,OAASD,EACdxF,EAAKl3D,UAAYuT,OAAO4r=
B,OAAOu9B,EAAU18D,WACvCiE,aACEsG,MAAO2sD,EACP0F,YAAY,EACZnC,UAAU,EACVoC,c=
AAc,MAMpBp+D,EAAOD,QAAU,SAAkB04D,EAAMwF,GACvCxF,EAAKyF,OAASD,CACd,IAAII,G=
AAW,YACfA,GAAS98D,UAAY08D,EAAU18D,UAC/Bk3D,EAAKl3D,UAAY,GAAI88D,GACrB5F,E=
AAKl3D,UAAUiE,YAAcizD,IAO5B,SAASz4D,EAAQD,EAASH,GAE/BG,EAAUC,EAAOD,QAAUH,=
EAAoB,IAC/CG,EAAQu7D,OAAS17D,EAAoB,IACrCG,EAAQs7D,SAAWt7D,EACnBA,EAAQ27D,=
SAAW97D,EAAoB,IACvCG,EAAQ47D,OAAS/7D,EAAoB,IACrCG,EAAQ67D,UAAYh8D,EAAoB,I=
ACxCG,EAAQ87D,YAAcj8D,EAAoB,KAKrC,SAASI,EAAQD,EAASH,IAEH,SAAS0+D,GAgErC,Q=
AASC,GAAc98D,EAAS42D,GAC9B,GAAIsD,GAAS/7D,EAAoB,GAEjC6B,GAAUA,KAIV,IAAI+8=
D,GAAM/8D,EAAQg9D,cACdC,EAAaj9D,EAAQk9D,WAAa,GAAK,KAC3Cn+D,MAAKi+D,cAAiBD=
,GAAe,IAARA,EAAaA,EAAME,EAGhDl+D,KAAKi+D,gBAAkBj+D,KAAKi+D,cAE5Bj+D,KAAKu=
E,UACLvE,KAAKsF,OAAS,EACdtF,KAAKo+D,MAAQ,KACbp+D,KAAKq+D,WAAa,EAClBr+D,KA=
AKs+D,QAAU,KACft+D,KAAKu+D,OAAQ,EACbv+D,KAAKw+D,YAAa,EAClBx+D,KAAKy+D,SAA=
U,EAMfz+D,KAAK0+D,MAAO,EAIZ1+D,KAAK2+D,cAAe,EACpB3+D,KAAK4+D,iBAAkB,EACvB=
5+D,KAAK6+D,mBAAoB,EAKzB7+D,KAAKm+D,aAAel9D,EAAQk9D,WAExBtG,YAAkBsD,KACpB=
n7D,KAAKm+D,WAAan+D,KAAKm+D,cAAgBl9D,EAAQ69D,oBAKjD9+D,KAAK++D,gBAAkB99D,=
EAAQ89D,iBAAmB,OAIlD/+D,KAAKg/D,QAAS,EAGdh/D,KAAKi/D,WAAa,EAGlBj/D,KAAKk/=
D,aAAc,EAEnBl/D,KAAKm/D,QAAU,KACfn/D,KAAKkG,SAAW,KACZjF,EAAQiF,WACLk5D,IA=
CHA,EAAgBhgE,EAAoB,IAAIggE,eAC1Cp/D,KAAKm/D,QAAU,GAAIC,GAAcn+D,EAAQiF,UAC=
zClG,KAAKkG,SAAWjF,EAAQiF,UAI5B,QAAS20D,GAAS55D,GACH7B,EAAoB,GAEjC,OAAMY,=
gBAAgB66D,IAGtB76D,KAAKq/D,eAAiB,GAAItB,GAAc98D,EAASjB,MAGjDA,KAAK27D,UAA=
W,MAEhBb,GAAOn7D,KAAKK,OAPH,GAAI66D,GAAS55D,GAkCxB,QAASq+D,GAAiBzH,EAAQ0H=
,EAAO59D,EAAOuE,EAAUs5D,GACxD,GAAItD,GAAKuD,EAAaF,EAAO59D,EAC7B,IAAIu6D,E=
ACFrE,EAAOnX,KAAK,QAASwb,OAChB,IAAIwD,EAAKC,kBAAkBh+D,GAChC49D,EAAMd,SAAU=
,EACXc,EAAMhB,OACTqB,EAAW/H,EAAQ0H,OAChB,IAAIA,EAAMpB,YAAcx8D,GAASA,EAAM2=
D,OAAS,EACrD,GAAIi6D,EAAMhB,QAAUiB,EAAY,CAC9B,GAAI78D,GAAI,GAAIoG,OAAM,0B=
AClB8uD,GAAOnX,KAAK,QAAS/9C,OAChB,IAAI48D,EAAMf,YAAcgB,EAAY,CACzC,GAAI78D=
,GAAI,GAAIoG,OAAM,mCAClB8uD,GAAOnX,KAAK,QAAS/9C,QAEjB48D,EAAMJ,SAAYK,GAAe=
t5D,IACnCvE,EAAQ49D,EAAMJ,QAAQh5D,MAAMxE,IAEzB69D,IACHD,EAAMd,SAAU,GAGdc,=
EAAMjB,SAA4B,IAAjBiB,EAAMj6D,SAAiBi6D,EAAMb,MAChD7G,EAAOnX,KAAK,OAAQ/+C,G=
ACpBk2D,EAAO/nD,KAAK,KAGZyvD,EAAMj6D,QAAUi6D,EAAMpB,WAAa,EAAIx8D,EAAM2D,O=
ACzCk6D,EACFD,EAAMh7D,OAAOs7D,QAAQl+D,GAErB49D,EAAMh7D,OAAO3C,KAAKD,GAEhB=
49D,EAAMZ,cACRmB,EAAajI,IAGjBkI,EAAclI,EAAQ0H,OAEdC,KACVD,EAAMd,SAAU,EAGl=
B,OAAOuB,GAAaT,GAYtB,QAASS,GAAaT,GACpB,OAAQA,EAAMhB,QACNgB,EAAMZ,cACNY,EA=
AMj6D,OAASi6D,EAAMtB,eACJ,IAAjBsB,EAAMj6D,QAchB,QAAS26D,GAAsB1zD,GAC7B,GA=
AIA,GAAK2zD,EACP3zD,EAAI2zD,MACC,CAEL3zD,GACA,KAAK,GAAIzM,GAAI,EAAO,GAAJA=
,EAAQA,IAAM,EAAGyM,GAAKA,GAAKzM,CAC3CyM,KAEF,MAAOA,GAGT,QAAS4zD,GAAc5zD,E=
AAGgzD,GACxB,MAAqB,KAAjBA,EAAMj6D,QAAgBi6D,EAAMhB,MACvB,EAELgB,EAAMpB,WAC=
K,IAAN5xD,EAAU,EAAI,EAEnBpD,MAAMoD,IAAMmzD,EAAK9/B,OAAOrzB,GAEtBgzD,EAAMj=
B,SAAWiB,EAAMh7D,OAAOe,OACzBi6D,EAAMh7D,OAAO,GAAGe,OAEhBi6D,EAAMj6D,OAGR,=
GAALiH,EACK,GAMLA,EAAIgzD,EAAMtB,gBACZsB,EAAMtB,cAAgBgC,EAAsB1zD,IAG1CA,E=
AAIgzD,EAAMj6D,OACPi6D,EAAMhB,MAIFgB,EAAMj6D,QAHbi6D,EAAMZ,cAAe,EACd,GAKJ=
pyD,GAuHT,QAASkzD,GAAaF,EAAO59D,GAC3B,GAAIu6D,GAAK,IAOT,OANKwD,GAAKr5D,SA=
AS1E,IACd+9D,EAAKxjC,SAASv6B,IACd+9D,EAAKC,kBAAkBh+D,IACvB49D,EAAMpB,aACT=
jC,EAAK,GAAIz1D,WAAU,oCAEdy1D,EAIT,QAAS0D,GAAW/H,EAAQ0H,GAC1B,GAAIA,EAAMJ=
,UAAYI,EAAMhB,MAAO,CACjC,GAAI58D,GAAQ49D,EAAMJ,QAAQp9D,KACtBJ,IAASA,EAAM2=
D,SACjBi6D,EAAMh7D,OAAO3C,KAAKD,GAClB49D,EAAMj6D,QAAUi6D,EAAMpB,WAAa,EAAI=
x8D,EAAM2D,QAGjDi6D,EAAMhB,OAAQ,EAGduB,EAAajI,GAMf,QAASiI,GAAajI,GACpB,GA=
AI0H,GAAQ1H,EAAOwH,cACnBE,GAAMZ,cAAe,EAChBY,EAAMX,kBACTwB,EAAM,eAAgBb,EAA=
MjB,SAC5BiB,EAAMX,iBAAkB,EACpBW,EAAMb,KACRZ,EAAQuC,SAAS,WACfC,EAAczI,KAGh=
ByI,EAAczI,IAIpB,QAASyI,GAAczI,GACrBuI,EAAM,iBACNvI,EAAOnX,KAAK,YACZlX,EA=
AKquB,GAUP,QAASkI,GAAclI,EAAQ0H,GACxBA,EAAML,cACTK,EAAML,aAAc,EACpBpB,EAA=
QuC,SAAS,WACfE,EAAe1I,EAAQ0H,MAK7B,QAASgB,GAAe1I,EAAQ0H,GAE9B,IADA,GAAI33=
D,GAAM23D,EAAMj6D,QACRi6D,EAAMd,UAAYc,EAAMjB,UAAYiB,EAAMhB,OAC3CgB,EAAMj6=
D,OAASi6D,EAAMtB,gBAC1BmC,EAAM,wBACNvI,EAAO/nD,KAAK,GACRlI,IAAQ23D,EAAMj6=
D,SAIhBsC,EAAM23D,EAAMj6D,MAEhBi6D,GAAML,aAAc,EA+ItB,QAASsB,GAAYn9D,GACnB=
,MAAO,YACL,GAAIk8D,GAAQl8D,EAAIg8D;AAChBe,EAAM,cAAeb,EAAMN,YACvBM,EAAMN,Y=
ACRM,EAAMN,aACiB,IAArBM,EAAMN,YAAoBlE,EAAGqB,cAAc/4D,EAAK,UAClDk8D,EAAMjB=
,SAAU,EAChB90B,EAAKnmC,KA8GX,QAASu4D,GAAO/D,EAAQ0H,GACjBA,EAAMkB,kBACTlB,=
EAAMkB,iBAAkB,EACxB3C,EAAQuC,SAAS,WACfK,EAAQ7I,EAAQ0H,MAKtB,QAASmB,GAAQ7I=
,EAAQ0H,GACvBA,EAAMkB,iBAAkB,EACxB5I,EAAOnX,KAAK,UACZlX,EAAKquB,GACD0H,EA=
AMjB,UAAYiB,EAAMd,SAC1B5G,EAAO/nD,KAAK,GAahB,QAAS05B,GAAKquB,GACZ,GAAI0H,=
GAAQ1H,EAAOwH,cAEnB,IADAe,EAAM,OAAQb,EAAMjB,SAChBiB,EAAMjB,QACR,EACE,IAAI=
38D,GAAQk2D,EAAO/nD,aACZ,OAASnO,GAAS49D,EAAMjB,SAyErC,QAASqC,GAASp0D,EAAG=
gzD,GACnB,GAIIx0D,GAJAuC,EAAOiyD,EAAMh7D,OACbe,EAASi6D,EAAMj6D,OACfs7D,IA=
AerB,EAAMJ,QACrBhB,IAAeoB,EAAMpB,UAIzB,IAAoB,IAAhB7wD,EAAKhI,OACP,MAAO,KA=
ET,IAAe,IAAXA,EACFyF,EAAM,SACH,IAAIozD,EACPpzD,EAAMuC,EAAK0yC,YACR,KAAKzz=
C,GAAKA,GAAKjH,EAGhByF,EADE61D,EACItzD,EAAKM,KAAK,IAEV3N,EAAO4B,OAAOyL,EA=
AMhI,GAC5BgI,EAAKhI,OAAS,MAGd,IAAIiH,EAAIe,EAAK,GAAGhI,OAAQ,CAGtB,GAAIqC,=
GAAM2F,EAAK,EACfvC,GAAMpD,EAAImC,MAAM,EAAGyC,GACnBe,EAAK,GAAK3F,EAAImC,MA=
AMyC,OACf,IAAIA,IAAMe,EAAK,GAAGhI,OAEvByF,EAAMuC,EAAK0yC,YACN,CAIHj1C,EAD=
E61D,EACI,GAEA,GAAI3gE,GAAOsM,EAGnB,KAAK,GADD1M,GAAI,EACCmG,EAAI,EAAG2M,E=
AAIrF,EAAKhI,OAAYqN,EAAJ3M,GAAauG,EAAJ1M,EAAOmG,IAAK,CACpD,GAAI2B,GAAM2F,=
EAAK,GACXuzD,EAAM92D,KAAKC,IAAIuC,EAAI1M,EAAG8H,EAAIrC,OAE1Bs7D,GACF71D,G=
AAOpD,EAAImC,MAAM,EAAG+2D,GAEpBl5D,EAAIZ,KAAKgE,EAAKlL,EAAG,EAAGghE,GAElB=
A,EAAMl5D,EAAIrC,OACZgI,EAAK,GAAK3F,EAAImC,MAAM+2D,GAEpBvzD,EAAK0yC,QAEPn=
gD,GAAKghE,GAKX,MAAO91D,GAGT,QAAS+1D,GAAYjJ,GACnB,GAAI0H,GAAQ1H,EAAOwH,cA=
InB,IAAIE,EAAMj6D,OAAS,EACjB,KAAM,IAAIyD,OAAM,yCAEbw2D,GAAMf,aACTe,EAAMhB=
,OAAQ,EACdT,EAAQuC,SAAS,WAEVd,EAAMf,YAA+B,IAAjBe,EAAMj6D,SAC7Bi6D,EAAMf,Y=
AAa,EACnB3G,EAAO8D,UAAW,EAClB9D,EAAOnX,KAAK,WAMpB,QAASpY,GAASouB,EAAI/iB,=
GACpB,IAAK,GAAI3tC,GAAI,EAAG2M,EAAI+jD,EAAGpxD,OAAYqN,EAAJ3M,EAAOA,IACpC2=
tC,EAAE+iB,EAAG1wD,GAAIA,GAIb,QAAS6H,GAAS6oD,EAAIvpD,GACpB,IAAK,GAAInH,GA=
AI,EAAG2M,EAAI+jD,EAAGpxD,OAAYqN,EAAJ3M,EAAOA,IACpC,GAAI0wD,EAAG1wD,KAAOm=
H,EAAG,MAAOnH,EAE1B,OAAO,GAh6BTxG,EAAOD,QAAUs7D,CAGjB,IAAIt0D,GAAUnH,EAAo=
B,IAK9Ba,EAASb,EAAoB,GAAGa,MAGpC46D,GAASkD,cAAgBA,CAEzB,IAAIhD,GAAK37D,EA=
AoB,IAAI47D,YAG5BD,GAAGqB,gBAAerB,EAAGqB,cAAgB,SAASoB,EAASr5D,GAC1D,MAAOq=
5D,GAAQZ,UAAUz4D,GAAMmB,QAIjC,IAAIw1D,GAAS17D,EAAoB,IAG7BsgE,EAAOtgE,EAAo=
B,GAC/BsgE,GAAKzE,SAAW77D,EAAoB,GAGpC,IAAIggE,GAIAgB,EAAQhhE,EAAoB,GAE9Bg=
hE,GADEA,GAASA,EAAMW,SACTX,EAAMW,SAAS,UAEf,aAKVrB,EAAKzE,SAASJ,EAAUC,GAwF=
xBD,EAAS95D,UAAUa,KAAO,SAASD,EAAOuE,GACxC,GAAIq5D,GAAQv/D,KAAKq/D,cAUjB,O=
ARIK,GAAKxjC,SAASv6B,KAAW49D,EAAMpB,aACjCj4D,EAAWA,GAAYq5D,EAAMR,gBACzB74=
D,IAAaq5D,EAAMr5D,WACrBvE,EAAQ,GAAI1B,GAAO0B,EAAOuE,GAC1BA,EAAW,KAIRo5D,E=
AAiBt/D,KAAMu/D,EAAO59D,EAAOuE,GAAU,IAIxD20D,EAAS95D,UAAU8+D,QAAU,SAASl+D=
,GACpC,GAAI49D,GAAQv/D,KAAKq/D,cACjB,OAAOC,GAAiBt/D,KAAMu/D,EAAO59D,EAAO,=
IAAI,IAmElDk5D,EAAS95D,UAAUigE,YAAc,SAASC,GAKxC,MAJK7B,KACHA,EAAgBhgE,EAA=
oB,IAAIggE,eAC1Cp/D,KAAKq/D,eAAeF,QAAU,GAAIC,GAAc6B,GAChDjhE,KAAKq/D,eAAe=
n5D,SAAW+6D,EACxBjhE,KAIT,IAAIkgE,GAAU,OAmDdrF,GAAS95D,UAAU+O,KAAO,SAASvD=
,GACjC6zD,EAAM,OAAQ7zD,EACd,IAAIgzD,GAAQv/D,KAAKq/D,eACb6B,EAAQ30D,CAQZ,M=
ANKmzD,EAAKlgC,SAASjzB,IAAMA,EAAI,KAC3BgzD,EAAMX,iBAAkB,GAKhB,IAANryD,GAC=
AgzD,EAAMZ,eACLY,EAAMj6D,QAAUi6D,EAAMtB,eAAiBsB,EAAMhB,OAMhD,MALA6B,GAAM,=
qBAAsBb,EAAMj6D,OAAQi6D,EAAMhB,OAC3B,IAAjBgB,EAAMj6D,QAAgBi6D,EAAMhB,MAC9=
BuC,EAAY9gE,MAEZ8/D,EAAa9/D,MACR,IAMT,IAHAuM,EAAI4zD,EAAc5zD,EAAGgzD,GAGX=
,IAANhzD,GAAWgzD,EAAMhB,MAGnB,MAFqB,KAAjBgB,EAAMj6D,QACRw7D,EAAY9gE,MACP,=
IA0BT,IAAImhE,GAAS5B,EAAMZ,YACnByB,GAAM,gBAAiBe,IAGF,IAAjB5B,EAAMj6D,QAAg=
Bi6D,EAAMj6D,OAASiH,EAAIgzD,EAAMtB,iBACjDkD,GAAS,EACTf,EAAM,6BAA8Be,KAKlC=
5B,EAAMhB,OAASgB,EAAMd,WACvB0C,GAAS,EACTf,EAAM,mBAAoBe,IAGxBA,IACFf,EAAM,=
WACNb,EAAMd,SAAU,EAChBc,EAAMb,MAAO,EAEQ,IAAjBa,EAAMj6D,SACRi6D,EAAMZ,cAAe=
,GAEvB3+D,KAAK+5D,MAAMwF,EAAMtB,eACjBsB,EAAMb,MAAO,GAKXyC,IAAW5B,EAAMd,UA=
CnBlyD,EAAI4zD,EAAce,EAAO3B,GAE3B,IAAIx0D,EAyBJ,OAvBEA,GADEwB,EAAI,EACAo0=
D,EAASp0D,EAAGgzD,GAEZ,KAEJG,EAAK9/B,OAAO70B,KACdw0D,EAAMZ,cAAe,EACrBpyD,=
EAAI,GAGNgzD,EAAMj6D,QAAUiH,EAIK,IAAjBgzD,EAAMj6D,QAAiBi6D,EAAMhB,QAC/BgB=
,EAAMZ,cAAe,GAGnBuC,IAAU30D,GAAKgzD,EAAMhB,OAA0B,IAAjBgB,EAAMj6D,QACtCw7D=
,EAAY9gE,MAET0/D,EAAK9/B,OAAO70B,IACf/K,KAAK0gD,KAAK,OAAQ31C,GAEbA,GAwFT8=
vD,EAAS95D,UAAUg5D,MAAQ,SAASxtD,GAClCvM,KAAK0gD,KAAK,QAAS,GAAI33C,OAAM,qB=
AG/B8xD,EAAS95D,UAAUq5D,KAAO,SAASkB,EAAM8F,GA6BvC,QAASC,GAAS1F,GAChByE,EA=
AM,YACFzE,IAAat4D,GACf84D,IAIJ,QAASN,KACPuE,EAAM,SACN9E,EAAKv5D,MAUP,QAAS=
o6D,KACPiE,EAAM,WAEN9E,EAAKe,eAAe,QAASN,GAC7BT,EAAKe,eAAe,SAAUiF,GAC9BhG,=
EAAKe,eAAe,QAASX,GAC7BJ,EAAKe,eAAe,QAASJ,GAC7BX,EAAKe,eAAe,SAAUgF,GAC9Bh+=
D,EAAIg5D,eAAe,MAAOR,GAC1Bx4D,EAAIg5D,eAAe,MAAOF,GAC1B94D,EAAIg5D,eAAe,OA=
AQd,IAOvBgE,EAAMN,YACJ3D,EAAKiG,iBAAkBjG,EAAKiG,eAAeC,WAC/C9F,IAIJ,QAASH,=
GAAO55D,GACdy+D,EAAM,SACN,IAAIr1D,GAAMuwD,EAAKn1D,MAAMxE,IACjB,IAAUoJ,IAC=
Zq1D,EAAM,8BACA/8D,EAAIg8D,eAAeJ,YACzB57D,EAAIg8D,eAAeJ,aACnB57D,EAAIo4D,=
SAMR,QAASQ,GAAQC,GACfkE,EAAM,UAAWlE,GACjBuF,IACAnG,EAAKe,eAAe,QAASJ,GACW,=
IAApClB,EAAGqB,cAAcd,EAAM,UACzBA,EAAK5a,KAAK,QAASwb,GAcvB,QAASH,KACPT,EAA=
Ke,eAAe,SAAUiF,GAC9BG,IAGF,QAASH,KACPlB,EAAM,YACN9E,EAAKe,eAAe,QAASN,GAC7=
B0F,IAIF,QAASA,KACPrB,EAAM,UACN/8D,EAAIo+D,OAAOnG,GApHb,GAAIj4D,GAAMrD,KA=
CNu/D,EAAQv/D,KAAKq/D,cAEjB,QAAQE,EAAMlB,YACZ,IAAK,GACHkB,EAAMnB,MAAQ9C,C=
ACd,MACF,KAAK,GACHiE,EAAMnB,OAASmB,EAAMnB,MAAO9C,EAC5B,MACF,SACEiE,EAAMnB=
,MAAMx8D,KAAK05D,GAGrBiE,EAAMlB,YAAc,EACpB+B,EAAM,wBAAyBb,EAAMlB,WAAY+C,E=
AEjD,IAAIM,KAAUN,GAAYA,EAASr/D,OAAQ,IAC/Bu5D,IAASwC,EAAQ6D,QACjBrG,IAASwC=
,EAAQ8D,OAEzBC,EAAQH,EAAQ7F,EAAQM,CACxBoD,GAAMf,WACRV,EAAQuC,SAASwB,GAEjB=
x+D,EAAIk7B,KAAK,MAAOsjC,GAElBvG,EAAK55D,GAAG,SAAU2/D,EAiBlB,IAAI3F,GAAU8=
E,EAAYn9D,EAoF1B,OAnFAi4D,GAAK55D,GAAG,QAASg6D,GAwBjBr4D,EAAI3B,GAAG,OAAQ=
65D,GAuBVD,EAAKiB,SAAYjB,EAAKiB,QAAQM,MAE1Bt2D,EAAQ+0D,EAAKiB,QAAQM,OAC5B=
vB,EAAKiB,QAAQM,MAAMgD,QAAQ5D,GAE3BX,EAAKiB,QAAQM,OAASZ,EAASX,EAAKiB,QAAQ=
M,OAJ5CvB,EAAK55D,GAAG,QAASu6D,GAanBX,EAAK/8B,KAAK,QAASw9B,GAMnBT,EAAK/8B=
,KAAK,SAAU+iC,GAQpBhG,EAAK5a,KAAK,OAAQr9C,GAGbk8D,EAAMjB,UACT8B,EAAM,eACN=
/8D,EAAIu4D,UAGCN,GAiBTT,EAAS95D,UAAU0gE,OAAS,SAASnG,GACnC,GAAIiE,GAAQv/D=
,KAAKq/D,cAGjB,IAAyB,IAArBE,EAAMlB,WACR,MAAOr+D,KAGT,IAAyB,IAArBu/D,EAAMl=
B,WAER,MAAI/C,IAAQA,IAASiE,EAAMnB,MAClBp+D,MAEJs7D,IACHA,EAAOiE,EAAMnB,OA=
GfmB,EAAMnB,MAAQ,KACdmB,EAAMlB,WAAa,EACnBkB,EAAMjB,SAAU,EACZhD,GACFA,EAAK=
5a,KAAK,SAAU1gD,MACfA,KAKT,KAAKs7D,EAAM,CAET,GAAIwG,GAAQvC,EAAMnB,MACdx2D=
,EAAM23D,EAAMlB,UAChBkB,GAAMnB,MAAQ,KACdmB,EAAMlB,WAAa,EACnBkB,EAAMjB,SAA=
U,CAEhB,KAAK,GAAIt4D,GAAI,EAAO4B,EAAJ5B,EAASA,IACvB87D,EAAM97D,GAAG06C,KA=
AK,SAAU1gD,KAC1B,OAAOA,MAIT,GAAIgG,GAAI6H,EAAQ0xD,EAAMnB,MAAO9C,EAC7B,OAA=
U,KAANt1D,EACKhG,MAETu/D,EAAMnB,MAAMlxC,OAAOlnB,EAAG,GACtBu5D,EAAMlB,YAAc=
,EACK,IAArBkB,EAAMlB,aACRkB,EAAMnB,MAAQmB,EAAMnB,MAAM,IAE5B9C,EAAK5a,KAAK=
,SAAU1gD,MAEbA,OAKT66D,EAAS95D,UAAUW,GAAK,SAASqgE,EAAI9wC,GACnC,GAAIhnB,G=
AAM6wD,EAAO/5D,UAAUW,GAAG/B,KAAKK,KAAM+hE,EAAI9wC,EAQ7C,IAJW,SAAP8wC,IAAi=
B,IAAU/hE,KAAKq/D,eAAef,SACjDt+D,KAAK47D,SAGI,aAAPmG,GAAqB/hE,KAAK27D,SAA=
U,CACtC,GAAI4D,GAAQv/D,KAAKq/D,cACjB,KAAKE,EAAMV,kBAIT,GAHAU,EAAMV,mBAAoB=
,EAC1BU,EAAMX,iBAAkB,EACxBW,EAAMZ,cAAe,EAChBY,EAAMd,QAMAc,EAAMj6D,QACfw6D=
,EAAa9/D,KAAMu/D,OAPD,CAClB,GAAIhrB,GAAOv0C,IACX89D,GAAQuC,SAAS,WACfD,EAA=
M,4BACN7rB,EAAKzkC,KAAK,MAQlB,MAAO7F,IAET4wD,EAAS95D,UAAU+7D,YAAcjC,EAAS9=
5D,UAAUW,GAIpDm5D,EAAS95D,UAAU66D,OAAS,WAC1B,GAAI2D,GAAQv/D,KAAKq/D,cAUjB=
,OATKE,GAAMjB,UACT8B,EAAM,UACNb,EAAMjB,SAAU,EACXiB,EAAMd,UACT2B,EAAM,iBAC=
NpgE,KAAK8P,KAAK,IAEZ8rD,EAAO57D,KAAMu/D,IAERv/D,MAoBT66D,EAAS95D,UAAU06D=
,MAAQ,WAOzB,MANA2E,GAAM,wBAAyBpgE,KAAKq/D,eAAef,UAC/C,IAAUt+D,KAAKq/D,eAA=
ef,UAChC8B,EAAM,SACNpgE,KAAKq/D,eAAef,SAAU,EAC9Bt+D,KAAK0gD,KAAK,UAEL1gD,=
MAgBT66D,EAAS95D,UAAU49B,KAAO,SAASk5B,GACjC,GAAI0H,GAAQv/D,KAAKq/D,eACb2C=
,GAAS,EAETztB,EAAOv0C,IACX63D,GAAOn2D,GAAG,MAAO,WAEf,GADA0+D,EAAM,eACFb,E=
AAMJ,UAAYI,EAAMhB,MAAO,CACjC,GAAI58D,GAAQ49D,EAAMJ,QAAQp9D,KACtBJ,IAASA,E=
AAM2D,QACjBivC,EAAK3yC,KAAKD,GAGd4yC,EAAK3yC,KAAK,QAGZi2D,EAAOn2D,GAAG,OA=
AQ,SAASC,GAIzB,GAHAy+D,EAAM,gBACFb,EAAMJ,UACRx9D,EAAQ49D,EAAMJ,QAAQh5D,MA=
AMxE,IACzBA,IAAU49D,EAAMpB,YAAex8D,EAAM2D,QAA1C,CAGA,GAAIyF,GAAMwpC,EAAK3=
yC,KAAKD,EACfoJ,KACHi3D,GAAS,EACTnK,EAAO4D,WAMX,KAAK,GAAIz1D,KAAK6xD,GACR=
6H,EAAKv1C,WAAW0tC,EAAO7xD,KAAO05D,EAAK3/B,YAAY//B,KAAKgG,MACtDhG,KAAKgG,=
GAAK,SAASglC,GAAU,MAAO,YAClC,MAAO6sB,GAAO7sB,GAAQlgC,MAAM+sD,EAAQlyD,aACn=
CK,GAKP,IAAIs6C,IAAU,QAAS,QAAS,UAAW,QAAS,SAepD,OAdAhY,GAAQgY,EAAQ,SAASyhB=
,GACvBlK,EAAOn2D,GAAGqgE,EAAIxtB,EAAKmM,KAAKzX,KAAKsL,EAAMwtB,MAKrCxtB,EA=
AKwlB,MAAQ,SAASxtD,GACpB6zD,EAAM,gBAAiB7zD,GACnBy1D,IACFA,GAAS,EACTnK,EAA=
O+D,WAIJrnB,GAMTsmB,EAASoH,UAAYtB,IAsGQhhE,KAAKJ,EAASH,EAAoB,MAI1D,SAASI,=
EAAQD,GAUtB,QAAS2iE,KACLC,GAAW,EACPC,EAAa98D,OACb+8D,EAAQD,EAAavgE,OAAOwg=
E,GAE5BC,EAAa,GAEbD,EAAM/8D,QACNi9D,IAIR,QAASA,KACL,IAAIJ,EAAJ,CAGA,GAAIK=
,GAAU75C,WAAWu5C,EACzBC,IAAW,CAGX,KADA,GAAIv6D,GAAMy6D,EAAM/8D,OACVsC,GAA=
K,CAGP,IAFAw6D,EAAeC,EACfA,OACSC,EAAa16D,GACdw6D,GACAA,EAAaE,GAAY90B,KAGj=
C80B,GAAa,GACb16D,EAAMy6D,EAAM/8D,OAEhB88D,EAAe,KACfD,GAAW,EACXhlC,aAAaql=
C,IAiBjB,QAASC,GAAKC,EAAK17D,GACfhH,KAAK0iE,IAAMA,EACX1iE,KAAKgH,MAAQA,EA=
YjB,QAASo+B,MAtET,GAGIg9B,GAHAtE,EAAUt+D,EAAOD,WACjB8iE,KACAF,GAAW,EAEXG,=
EAAa,EAsCjBxE,GAAQuC,SAAW,SAAUqC,GACzB,GAAIj6C,GAAO,GAAI/Z,OAAM/I,UAAUL,O=
AAS,EACxC,IAAIK,UAAUL,OAAS,EACnB,IAAK,GAAIU,GAAI,EAAGA,EAAIL,UAAUL,OAAQU,=
IAClCyiB,EAAKziB,EAAI,GAAKL,UAAUK,EAGhCq8D,GAAMzgE,KAAK,GAAI6gE,GAAKC,EAA=
Kj6C,IACJ,IAAjB45C,EAAM/8D,QAAiB68D,GACvBx5C,WAAW45C,EAAY,IAS/BE,EAAK1hE,=
UAAUysC,IAAM,WACjBxtC,KAAK0iE,IAAI53D,MAAM,KAAM9K,KAAKgH,QAE9B82D,EAAQhiD=
,MAAQ,UAChBgiD,EAAQ6E,SAAU,EAClB7E,EAAQ8E,OACR9E,EAAQ+E,QACR/E,EAAQvS,QAA=
U,GAClBuS,EAAQgF,YAIRhF,EAAQp8D,GAAK0jC,EACb04B,EAAQhB,YAAc13B,EACtB04B,E=
AAQv/B,KAAO6G,EACf04B,EAAQiF,IAAM39B,EACd04B,EAAQzB,eAAiBj3B,EACzB04B,EAA=
QR,mBAAqBl4B,EAC7B04B,EAAQpd,KAAOtb,EAEf04B,EAAQkF,QAAU,SAAU5+D,GACxB,KAA=
M,IAAI2E,OAAM,qCAGpB+0D,EAAQmF,IAAM,WAAc,MAAO,KACnCnF,EAAQoF,MAAQ,SAAU3gD=
,GACtB,KAAM,IAAIxZ,OAAM,mCAEpB+0D,EAAQqF,MAAQ,WAAa,MAAO,KAK/B,SAAS3jE,EAA=
QD,GAEtBC,EAAOD,QAAUmP,MAAMnI,SAAW,SAAUzB,GAC1C,MAA8C,kBAAvCwP,OAAOvT,UAA=
U0D,SAAS9E,KAAKmF,KAMnC,SAAStF,EAAQD,EAASH,IAEH,SAASa,GAwBrC,QAASsG,GAAQl=
B,GACf,MAAIqJ,OAAMnI,QACDmI,MAAMnI,QAAQlB,GAEQ,mBAAxB+9D,EAAe/9D,GAIxB,QA=
AS25B,GAAU35B,GACjB,MAAsB,iBAARA,GAIhB,QAASu6B,GAAOv6B,GACd,MAAe,QAARA,EA=
IT,QAASs6D,GAAkBt6D,GACzB,MAAc,OAAPA,EAIT,QAASm6B,GAASn6B,GAChB,MAAsB,gBA=
ARA,GAIhB,QAAS62B,GAAS72B,GAChB,MAAsB,gBAARA,GAIhB,QAASg+D,GAASh+D,GAChB,=
MAAsB,gBAARA,GAIhB,QAAS06B,GAAY16B,GACnB,MAAe,UAARA,EAIT,QAASw6B,GAASyjC,=
GAChB,MAA8B,oBAAvBF,EAAeE,GAIxB,QAAS/+C,GAASlf,GAChB,MAAsB,gBAARA,IAA4B,O=
AARA,EAIpC,QAAS45B,GAAOlrB,GACd,MAA6B,kBAAtBqvD,EAAervD,GAIxB,QAASurB,GAA=
Q38B,GACf,MAA8B,mBAAtBygE,EAAezgE,IAA2BA,YAAaoG,OAIjE,QAASohB,GAAW9kB,GAC=
lB,MAAsB,kBAARA,GAIhB,QAASk+D,GAAYl+D,GACnB,MAAe,QAARA,GACe,iBAARA,IACQ,g=
BAARA,IACQ,gBAARA,IACQ,gBAARA,IACQ,mBAARA,GAMhB,QAAS+9D,GAAeI,GACtB,MAAOl=
vD,QAAOvT,UAAU0D,SAAS9E,KAAK6jE,GA3ExCjkE,EAAQgH,QAAUA,EAKlBhH,EAAQy/B,UA=
AYA,EAKpBz/B,EAAQqgC,OAASA,EAKjBrgC,EAAQogE,kBAAoBA,EAK5BpgE,EAAQigC,SAAW=
A,EAKnBjgC,EAAQ28B,SAAWA,EAKnB38B,EAAQ8jE,SAAWA,EAKnB9jE,EAAQwgC,YAAcA,EA=
KtBxgC,EAAQsgC,SAAWA,EAKnBtgC,EAAQglB,SAAWA,EAKnBhlB,EAAQ0/B,OAASA,EAKjB1=
/B,EAAQ+/B,QAAUA,EAKlB//B,EAAQ4qB,WAAaA,EAUrB5qB,EAAQgkE,YAAcA,EAEtBhkE,E=
AAQ8G,SAAWpG,EAAOoG,WAMG1G,KAAKJ,EAASH,EAAoB,GAAGa,SAI7D,SAAST,EAAQD,GAEO=
,kBAAlB+U,QAAO4rB,OAEhB1gC,EAAOD,QAAU,SAAkB04D,EAAMwF,GACvCxF,EAAKyF,OAAS=
D,EACdxF,EAAKl3D,UAAYuT,OAAO4rB,OAAOu9B,EAAU18D,WACvCiE,aACEsG,MAAO2sD,EA=
CP0F,YAAY,EACZnC,UAAU,EACVoC,cAAc,MAMpBp+D,EAAOD,QAAU,SAAkB04D,EAAMwF,GAC=
vCxF,EAAKyF,OAASD,CACd,IAAII,GAAW,YACfA,GAAS98D,UAAY08D,EAAU18D,UAC/Bk3D,=
EAAKl3D,UAAY,GAAI88D,GACrB5F,EAAKl3D,UAAUiE,YAAcizD,IAO5B,SAASz4D,EAAQD,K=
AMjB,SAASC,EAAQD,EAASH,IAEH,SAAS0+D,GAoDrC,QAAS3C,GAAOl6D,GACd,MAAMjB,gBA=
AgBm7D,IAGtBN,EAASl7D,KAAKK,KAAMiB,GACpBi6D,EAASv7D,KAAKK,KAAMiB,GAEhBA,G=
AAWA,EAAQ06D,YAAa,IAClC37D,KAAK27D,UAAW,GAEd16D,GAAWA,EAAQu6D,YAAa,IAClCx=
7D,KAAKw7D,UAAW,GAElBx7D,KAAKyjE,eAAgB,EACjBxiE,GAAWA,EAAQwiE,iBAAkB,IACv=
CzjE,KAAKyjE,eAAgB,OAEvBzjE,MAAKu+B,KAAK,MAAOs9B,IAfR,GAAIV,GAAOl6D,GAmBt=
B,QAAS46D,KAGH77D,KAAKyjE,eAAiBzjE,KAAKuhE,eAAehD,OAK9CT,EAAQuC,SAASrgE,K=
AAK+B,IAAIknC,KAAKjpC,OAGjC,QAASsoC,GAASouB,EAAI/iB,GACpB,IAAK,GAAI3tC,GA=
AI,EAAG2M,EAAI+jD,EAAGpxD,OAAYqN,EAAJ3M,EAAOA,IACpC2tC,EAAE+iB,EAAG1wD,GA=
AIA,GA5DbxG,EAAOD,QAAU47D,CAGjB,IAAIuI,GAAapvD,OAAO+R,MAAQ,SAAU8jC,GACxC,=
GAAI9jC,KACJ,KAAK,GAAI1C,KAAOwmC,GAAK9jC,EAAKzkB,KAAK+hB,EAC/B,OAAO0C,IAM=
Lq5C,EAAOtgE,EAAoB,GAC/BsgE,GAAKzE,SAAW77D,EAAoB,GAGpC,IAAIy7D,GAAWz7D,EA=
AoB,IAC/B87D,EAAW97D,EAAoB,GAEnCsgE,GAAKzE,SAASE,EAAQN,GAEtBvyB,EAAQo7B,E=
AAWxI,EAASn6D,WAAY,SAASiqC,GAC1CmwB,EAAOp6D,UAAUiqC,KACpBmwB,EAAOp6D,UAAU=
iqC,GAAUkwB,EAASn6D,UAAUiqC,QAyCrBrrC,KAAKJ,EAASH,EAAoB,MAI1D,SAASI,EAAQD=
,EAASH,IAEH,SAAS0+D,GA2CrC,QAAS6F,GAAShiE,EAAOuE,EAAUjE,GACjCjC,KAAK2B,MA=
AQA,EACb3B,KAAKkG,SAAWA,EAChBlG,KAAKkB,SAAWe,EAGlB,QAAS2hE,GAAc3iE,EAAS42=
D,GAC9B,GAAIsD,GAAS/7D,EAAoB,GAEjC6B,GAAUA,KAKV,IAAI+8D,GAAM/8D,EAAQg9D,c=
ACdC,EAAaj9D,EAAQk9D,WAAa,GAAK,KAC3Cn+D,MAAKi+D,cAAiBD,GAAe,IAARA,EAAaA,E=
AAME,EAIhDl+D,KAAKm+D,aAAel9D,EAAQk9D,WAExBtG,YAAkBsD,KACpBn7D,KAAKm+D,WA=
Aan+D,KAAKm+D,cAAgBl9D,EAAQ4iE,oBAGjD7jE,KAAKi+D,gBAAkBj+D,KAAKi+D,cAE5Bj=
+D,KAAKwhE,WAAY,EAEjBxhE,KAAK8jE,QAAS,EAEd9jE,KAAKu+D,OAAQ,EAEbv+D,KAAK+j=
E,UAAW,CAKhB,IAAIC,GAAW/iE,EAAQgjE,iBAAkB,CACzCjkE,MAAKikE,eAAiBD,EAKtBhk=
E,KAAK++D,gBAAkB99D,EAAQ89D,iBAAmB,OAKlD/+D,KAAKsF,OAAS,EAGdtF,KAAKkkE,SA=
AU,EAGflkE,KAAKmkE,OAAS,EAMdnkE,KAAK0+D,MAAO,EAKZ1+D,KAAKokE,kBAAmB,EAGxB=
pkE,KAAKqkE,QAAU,SAASnI,GACtBmI,EAAQxM,EAAQqE,IAIlBl8D,KAAKskE,QAAU,KAGft=
kE,KAAKukE,SAAW,EAEhBvkE,KAAKuE,UAILvE,KAAKwkE,UAAY,EAIjBxkE,KAAKykE,aAAc=
,EAGnBzkE,KAAK0kE,cAAe,EAGtB,QAASxJ,GAASj6D,GAChB,GAAIk6D,GAAS/7D,EAAoB,G=
AIjC,OAAMY,gBAAgBk7D,IAAel7D,eAAgBm7D,IAGrDn7D,KAAKuhE,eAAiB,GAAIqC,GAAc3=
iE,EAASjB,MAGjDA,KAAKw7D,UAAW,MAEhBV,GAAOn7D,KAAKK,OAPH,GAAIk7D,GAASj6D,G=
AgBxB,QAAS0jE,GAAc9M,EAAQ0H,EAAOt9D,GACpC,GAAIi6D,GAAK,GAAInzD,OAAM,kBAEn=
B8uD,GAAOnX,KAAK,QAASwb,GACrB4B,EAAQuC,SAAS,WACfp+D,EAAGi6D,KASP,QAAS0I,G=
AAW/M,EAAQ0H,EAAO59D,EAAOM,GACxC,GAAI4iE,IAAQ,CACZ,MAAKnF,EAAKr5D,SAAS1E,=
IACd+9D,EAAKxjC,SAASv6B,IACd+9D,EAAKC,kBAAkBh+D,IACvB49D,EAAMpB,YAAY,CACr=
B,GAAIjC,GAAK,GAAIz1D,WAAU,kCACvBoxD,GAAOnX,KAAK,QAASwb,GACrB4B,EAAQuC,SA=
AS,WACfp+D,EAAGi6D,KAEL2I,GAAQ,EAEV,MAAOA,GAmDT,QAASC,GAAYvF,EAAO59D,EAAO=
uE,GAMjC,OALKq5D,EAAMpB,YACPoB,EAAM0E,iBAAkB,GACxBvE,EAAKxjC,SAASv6B,KACh=
BA,EAAQ,GAAI1B,GAAO0B,EAAOuE,IAErBvE,EAMT,QAASojE,GAAclN,EAAQ0H,EAAO59D,E=
AAOuE,EAAUjE,GACrDN,EAAQmjE,EAAYvF,EAAO59D,EAAOuE,GAC9Bw5D,EAAKr5D,SAAS1E=
,KAChBuE,EAAW,SACb,IAAI0B,GAAM23D,EAAMpB,WAAa,EAAIx8D,EAAM2D,MAEvCi6D,GAA=
Mj6D,QAAUsC,CAEhB,IAAImD,GAAMw0D,EAAMj6D,OAASi6D,EAAMtB,aAU/B,OARKlzD,KAC=
Hw0D,EAAMiC,WAAY,GAEhBjC,EAAM2E,SAAW3E,EAAM4E,OACzB5E,EAAMh7D,OAAO3C,KAAK=
,GAAI+hE,GAAShiE,EAAOuE,EAAUjE,IAEhD+iE,EAAQnN,EAAQ0H,GAAO,EAAO33D,EAAKjG=
,EAAOuE,EAAUjE,GAE/C8I,EAGT,QAASi6D,GAAQnN,EAAQ0H,EAAO0F,EAAQr9D,EAAKjG,E=
AAOuE,EAAUjE,GAC5Ds9D,EAAMgF,SAAW38D,EACjB23D,EAAM+E,QAAUriE,EAChBs9D,EAA=
M2E,SAAU,EAChB3E,EAAMb,MAAO,EACTuG,EACFpN,EAAOqN,QAAQvjE,EAAO49D,EAAM8E,S=
AE5BxM,EAAOuB,OAAOz3D,EAAOuE,EAAUq5D,EAAM8E,SACvC9E,EAAMb,MAAO,EAGf,QAASy=
G,GAAatN,EAAQ0H,EAAOb,EAAMxC,EAAIj6D,GACzCy8D,EACFZ,EAAQuC,SAAS,WACfd,EAA=
MiF,YACNviE,EAAGi6D,MAGLqD,EAAMiF,YACNviE,EAAGi6D,IAGLrE,EAAO0J,eAAemD,cA=
Ae,EACrC7M,EAAOnX,KAAK,QAASwb,GAGvB,QAASkJ,GAAmB7F,GAC1BA,EAAM2E,SAAU,EAC=
hB3E,EAAM+E,QAAU,KAChB/E,EAAMj6D,QAAUi6D,EAAMgF,SACtBhF,EAAMgF,SAAW,EAGnB=
,QAASF,GAAQxM,EAAQqE,GACvB,GAAIqD,GAAQ1H,EAAO0J,eACf7C,EAAOa,EAAMb,KACbz8=
D,EAAKs9D,EAAM+E,OAIf,IAFAc,EAAmB7F,GAEfrD,EACFiJ,EAAatN,EAAQ0H,EAAOb,EAA=
MxC,EAAIj6D,OACnC,CAEH,GAAI8hE,GAAWsB,EAAWxN,EAAQ0H,EAE7BwE,IACAxE,EAAM4E=
,QACN5E,EAAM6E,mBACP7E,EAAMh7D,OAAOe,QACfggE,EAAYzN,EAAQ0H,GAGlBb,EACFZ,E=
AAQuC,SAAS,WACfkF,EAAW1N,EAAQ0H,EAAOwE,EAAU9hE,KAGtCsjE,EAAW1N,EAAQ0H,EAA=
OwE,EAAU9hE,IAK1C,QAASsjE,GAAW1N,EAAQ0H,EAAOwE,EAAU9hE,GACtC8hE,GACHyB,EA=
Aa3N,EAAQ0H,GACvBA,EAAMiF,YACNviE,IACAwjE,EAAY5N,EAAQ0H,GAMtB,QAASiG,GAAa=
3N,EAAQ0H,GACP,IAAjBA,EAAMj6D,QAAgBi6D,EAAMiC,YAC9BjC,EAAMiC,WAAY,EAClB3J=
,EAAOnX,KAAK,UAMhB,QAAS4kB,GAAYzN,EAAQ0H,GAG3B,GAFAA,EAAM6E,kBAAmB,EAErBv=
M,EAAOqN,SAAW3F,EAAMh7D,OAAOe,OAAS,EAAG,CAG7C,IAAK,GADDogE,MACK7lE,EAAI,E=
AAGA,EAAI0/D,EAAMh7D,OAAOe,OAAQzF,IACvC6lE,EAAI9jE,KAAK29D,EAAMh7D,OAAO1E=
,GAAGqB,SAI3Bq+D,GAAMiF,YACNQ,EAAQnN,EAAQ0H,GAAO,EAAMA,EAAMj6D,OAAQi6D,EA=
AMh7D,OAAQ,GAAI,SAAS41D,GACpE,IAAK,GAAIn0D,GAAI,EAAGA,EAAI0/D,EAAIpgE,OAA=
QU,IAC9Bu5D,EAAMiF,YACNkB,EAAI1/D,GAAGm0D,KAKXoF,EAAMh7D,cACD,CAEL,IAAK,G=
AAI1E,GAAI,EAAGA,EAAI0/D,EAAMh7D,OAAOe,OAAQzF,IAAK,CAC5C,GAAI8lE,GAAQpG,E=
AAMh7D,OAAO1E,GACrB8B,EAAQgkE,EAAMhkE,MACduE,EAAWy/D,EAAMz/D,SACjBjE,EAAK=
0jE,EAAMzkE,SACX0G,EAAM23D,EAAMpB,WAAa,EAAIx8D,EAAM2D,MAQvC,IANA0/D,EAAQn=
N,EAAQ0H,GAAO,EAAO33D,EAAKjG,EAAOuE,EAAUjE,GAMhDs9D,EAAM2E,QAAS,CACjBrkE,=
GACA,QAIAA,EAAI0/D,EAAMh7D,OAAOe,OACnBi6D,EAAMh7D,OAASg7D,EAAMh7D,OAAOuF,=
MAAMjK,GAElC0/D,EAAMh7D,OAAOe,OAAS,EAG1Bi6D,EAAM6E,kBAAmB,EAqC3B,QAASiB,G=
AAWxN,EAAQ0H,GAC1B,MAAQA,GAAMuE,QACW,IAAjBvE,EAAMj6D,SACLi6D,EAAMwE,WACNx=
E,EAAM2E,QAGjB,QAAS0B,GAAU/N,EAAQ0H,GACpBA,EAAMkF,cACTlF,EAAMkF,aAAc,EACp=
B5M,EAAOnX,KAAK,cAIhB,QAAS+kB,GAAY5N,EAAQ0H,GAC3B,GAAIsG,GAAOR,EAAWxN,EAA=
Q0H,EAS9B,OARIsG,KACsB,IAApBtG,EAAMiF,WACRoB,EAAU/N,EAAQ0H,GAClBA,EAAMwE,=
UAAW,EACjBlM,EAAOnX,KAAK,WAEZklB,EAAU/N,EAAQ0H,IAEfsG,EAGT,QAASC,GAAYjO,E=
AAQ0H,EAAOt9D,GAClCs9D,EAAMuE,QAAS,EACf2B,EAAY5N,EAAQ0H,GAChBt9D,IACEs9D,=
EAAMwE,SACRjG,EAAQuC,SAASp+D,GAEjB41D,EAAOt5B,KAAK,SAAUt8B,IAE1Bs9D,EAAMh=
B,OAAQ,EAlchB/+D,EAAOD,QAAU27D,CAGjB,IAAIj7D,GAASb,EAAoB,GAAGa,MAGpCi7D,G=
AAS0I,cAAgBA,CAIzB,IAAIlE,GAAOtgE,EAAoB,GAC/BsgE,GAAKzE,SAAW77D,EAAoB,GAG=
pC,IAAI07D,GAAS17D,EAAoB,GAEjCsgE,GAAKzE,SAASC,EAAUJ,GAiHxBI,EAASn6D,UAAU=
q5D,KAAO,WACxBp6D,KAAK0gD,KAAK,QAAS,GAAI33C,OAAM,gCAkC/BmyD,EAASn6D,UAAUo=
F,MAAQ,SAASxE,EAAOuE,EAAUjE,GACnD,GAAIs9D,GAAQv/D,KAAKuhE,eACbx2D,GAAM,CA=
sBV,OApBI20D,GAAKv1C,WAAWjkB,KAClBjE,EAAKiE,EACLA,EAAW,MAGTw5D,EAAKr5D,SA=
AS1E,GAChBuE,EAAW,SACHA,IACRA,EAAWq5D,EAAMR,iBAEdW,EAAKv1C,WAAWloB,KACnBA=
,EAAK,cAEHs9D,EAAMhB,MACRoG,EAAc3kE,KAAMu/D,EAAOt9D,GACpB2iE,EAAW5kE,KAAM=
u/D,EAAO59D,EAAOM,KACtCs9D,EAAMiF,YACNz5D,EAAMg6D,EAAc/kE,KAAMu/D,EAAO59D=
,EAAOuE,EAAUjE,IAG7C8I,GAGTmwD,EAASn6D,UAAUglE,KAAO,WACxB,GAAIxG,GAAQv/D,=
KAAKuhE,cAEjBhC,GAAM4E,UAGRjJ,EAASn6D,UAAUilE,OAAS,WAC1B,GAAIzG,GAAQv/D,K=
AAKuhE,cAEbhC,GAAM4E,SACR5E,EAAM4E,SAED5E,EAAM2E,SACN3E,EAAM4E,QACN5E,EAA=
MwE,UACNxE,EAAM6E,mBACP7E,EAAMh7D,OAAOe,QACfggE,EAAYtlE,KAAMu/D,KA4KxBrE,=
EAASn6D,UAAUq4D,OAAS,SAASz3D,EAAOuE,EAAUjE,GACpDA,EAAG,GAAI8G,OAAM,qBAIfm=
yD,EAASn6D,UAAUmkE,QAAU,KAE7BhK,EAASn6D,UAAUgB,IAAM,SAASJ,EAAOuE,EAAUjE,G=
ACjD,GAAIs9D,GAAQv/D,KAAKuhE,cAEb7B,GAAKv1C,WAAWxoB,IAClBM,EAAKN,EACLA,EA=
AQ,KACRuE,EAAW,MACFw5D,EAAKv1C,WAAWjkB,KACzBjE,EAAKiE,EACLA,EAAW,MAGRw5D,=
EAAKC,kBAAkBh+D,IAC1B3B,KAAKmG,MAAMxE,EAAOuE,GAGhBq5D,EAAM4E,SACR5E,EAAM4=
E,OAAS,EACfnkE,KAAKgmE,UAIFzG,EAAMuE,QAAWvE,EAAMwE,UAC1B+B,EAAY9lE,KAAMu/=
D,EAAOt9D,MA2CAtC,KAAKJ,EAASH,EAAoB,MAI1D,SAASI,EAAQD,EAASH,GAkC/B,QAAS6m=
E,GAAe//D,GACtB,GAAIA,IAAaggE,EAAiBhgE,GAChC,KAAM,IAAI6C,OAAM,qBAAuB7C,GA=
8K3C,QAASigE,GAAiB5hE,GACxB,MAAOA,GAAOE,SAASzE,KAAKkG,UAG9B,QAASkgE,GAA0B=
7hE,GACjCvE,KAAKqmE,aAAe9hE,EAAOe,OAAS,EACpCtF,KAAKsmE,WAAatmE,KAAKqmE,aA=
Ae,EAAI,EAG5C,QAASE,GAA2BhiE,GAClCvE,KAAKqmE,aAAe9hE,EAAOe,OAAS,EACpCtF,K=
AAKsmE,WAAatmE,KAAKqmE,aAAe,EAAI,EAtM5C,GAAIpmE,GAASb,EAAoB,GAAGa,OAEhCim=
E,EAAmBjmE,EAAOoN,YACzB,SAASnH,GACP,OAAQA,GAAYA,EAAS8B,eAC3B,IAAK,MAAO,IA=
AK,OAAQ,IAAK,QAAS,IAAK,QAAS,IAAK,SAAU,IAAK,SAAU,IAAK,OAAQ,IAAK,QAAS,IAAK,=
UAAW,IAAK,WAAY,IAAK,MAAO,OAAO,CAClK,SAAS,OAAO,IAmBrBo3D,EAAgB7/D,EAAQ6/D,=
cAAgB,SAASl5D,GAGnD,OAFAlG,KAAKkG,UAAYA,GAAY,QAAQ8B,cAAcoE,QAAQ,OAAQ,IACn=
E65D,EAAe//D,GACPlG,KAAKkG,UACX,IAAK,OAEHlG,KAAKwmE,cAAgB,CACrB,MACF,KAAK=
,OACL,IAAK,UAEHxmE,KAAKwmE,cAAgB,EACrBxmE,KAAKymE,qBAAuBL,CAC5B,MACF,KAAK=
,SAEHpmE,KAAKwmE,cAAgB,EACrBxmE,KAAKymE,qBAAuBF,CAC5B,MACF,SAEE,YADAvmE,K=
AAKmG,MAAQggE,GAMjBnmE,KAAK0mE,WAAa,GAAIzmE,GAAO,GAE7BD,KAAKqmE,aAAe,EAEp=
BrmE,KAAKsmE,WAAa,EAapBlH,GAAcr+D,UAAUoF,MAAQ,SAAS5B,GAGvC,IAFA,GAAIoiE,G=
AAU,GAEP3mE,KAAKsmE,YAAY,CAEtB,GAAIM,GAAariE,EAAOe,QAAUtF,KAAKsmE,WAAatmE=
,KAAKqmE,aACrDrmE,KAAKsmE,WAAatmE,KAAKqmE,aACvB9hE,EAAOe,MAMX,IAHAf,EAAOw=
C,KAAK/G,KAAK0mE,WAAY1mE,KAAKqmE,aAAc,EAAGO,GACnD5mE,KAAKqmE,cAAgBO,EAEjB=
5mE,KAAKqmE,aAAermE,KAAKsmE,WAE3B,MAAO,EAIT/hE,GAASA,EAAOuF,MAAM88D,EAAWr=
iE,EAAOe,QAGxCqhE,EAAU3mE,KAAK0mE,WAAW58D,MAAM,EAAG9J,KAAKsmE,YAAY7hE,SAA=
SzE,KAAKkG,SAGlE,IAAIga,GAAWymD,EAAQj6D,WAAWi6D,EAAQrhE,OAAS,EACnD,MAAI4a=
,GAAY,OAAsB,OAAZA,GAA1B,CAQA,GAHAlgB,KAAKqmE,aAAermE,KAAKsmE,WAAa,EAGhB,I=
AAlB/hE,EAAOe,OACT,MAAOqhE,EAET,OAVE3mE,KAAKsmE,YAActmE,KAAKwmE,cACxBG,EA=
AU,GAad3mE,KAAKymE,qBAAqBliE,EAE1B,IAAIxC,GAAMwC,EAAOe,MACbtF,MAAKsmE,aAE=
P/hE,EAAOwC,KAAK/G,KAAK0mE,WAAY,EAAGniE,EAAOe,OAAStF,KAAKqmE,aAActkE,GACn=
EA,GAAO/B,KAAKqmE,cAGdM,GAAWpiE,EAAOE,SAASzE,KAAKkG,SAAU,EAAGnE,EAE7C,IAA=
IA,GAAM4kE,EAAQrhE,OAAS,EACvB4a,EAAWymD,EAAQj6D,WAAW3K,EAElC,IAAIme,GAAY,=
OAAsB,OAAZA,EAAoB,CAC5C,GAAIpK,GAAO9V,KAAKwmE,aAKhB,OAJAxmE,MAAKsmE,YAAcx=
wD,EACnB9V,KAAKqmE,cAAgBvwD,EACrB9V,KAAK0mE,WAAW3/D,KAAK/G,KAAK0mE,WAAY5w=
D,EAAM,EAAGA,GAC/CvR,EAAOwC,KAAK/G,KAAK0mE,WAAY,EAAG,EAAG5wD,GAC5B6wD,EAA=
QpiC,UAAU,EAAGxiC,GAI9B,MAAO4kE,IAOTvH,EAAcr+D,UAAU0lE,qBAAuB,SAASliE,GAM=
tD,IAJA,GAAIyB,GAAKzB,EAAOe,QAAU,EAAK,EAAIf,EAAOe,OAInCU,EAAI,EAAGA,IAAK,=
CACjB,GAAInG,GAAI0E,EAAOA,EAAOe,OAASU,EAK/B,IAAS,GAALA,GAAUnG,GAAK,GAAK,E=
AAM,CAC5BG,KAAKsmE,WAAa,CAClB,OAIF,GAAS,GAALtgE,GAAUnG,GAAK,GAAK,GAAM,CAC=
5BG,KAAKsmE,WAAa,CAClB,OAIF,GAAS,GAALtgE,GAAUnG,GAAK,GAAK,GAAM,CAC5BG,KAA=
KsmE,WAAa,CAClB,QAGJtmE,KAAKqmE,aAAergE,GAGtBo5D,EAAcr+D,UAAUgB,IAAM,SAAS=
wC,GACrC,GAAI0F,GAAM,EAIV,IAHI1F,GAAUA,EAAOe,SACnB2E,EAAMjK,KAAKmG,MAAM5B=
,IAEfvE,KAAKqmE,aAAc,CACrB,GAAIQ,GAAK7mE,KAAKqmE,aACV1+D,EAAM3H,KAAK0mE,W=
ACXzF,EAAMjhE,KAAKkG,QACf+D,IAAOtC,EAAImC,MAAM,EAAG+8D,GAAIpiE,SAASw8D,GA=
GnC,MAAOh3D,KAoBJ,SAASzK,EAAQD,EAASH,GA8E/B,QAAS0nE,GAAe7lE,EAAS42D,GAC/B=
73D,KAAK+mE,eAAiB,SAAS7K,EAAIh1D,GACjC,MAAO6/D,GAAelP,EAAQqE,EAAIh1D,IAGp=
ClH,KAAKgnE,eAAgB,EACrBhnE,KAAKinE,cAAe,EACpBjnE,KAAKskE,QAAU,KACftkE,KAA=
KknE,WAAa,KAGpB,QAASH,GAAelP,EAAQqE,EAAIh1D,GAClC,GAAIigE,GAAKtP,EAAOuP,e=
AChBD,GAAGF,cAAe,CAElB,IAAIhlE,GAAKklE,EAAG7C,OAEZ,KAAKriE,EACH,MAAO41D,G=
AAOnX,KAAK,QAAS,GAAI33C,OAAM,iCAExCo+D,GAAGD,WAAa,KAChBC,EAAG7C,QAAU,KAER=
5E,EAAKC,kBAAkBz4D,IAC1B2wD,EAAOj2D,KAAKsF,GAEVjF,GACFA,EAAGi6D,EAEL,IAAI=
mL,GAAKxP,EAAOwH,cAChBgI,GAAG5I,SAAU,GACT4I,EAAG1I,cAAgB0I,EAAG/hE,OAAS+h=
E,EAAGpJ,gBACpCpG,EAAOkC,MAAMsN,EAAGpJ,eAKpB,QAAS7C,GAAUn6D,GACjB,KAAMjB,=
eAAgBo7D,IACpB,MAAO,IAAIA,GAAUn6D,EAEvBk6D,GAAOx7D,KAAKK,KAAMiB,GAElBjB,K=
AAKonE,gBAAkB,GAAIN,GAAe7lE,EAASjB,KAGnD,IAAI63D,GAAS73D,IAGbA,MAAKq/D,eA=
AeV,cAAe,EAKnC3+D,KAAKq/D,eAAeX,MAAO,EAE3B1+D,KAAKu+B,KAAK,YAAa,WACjBmhC,=
EAAKv1C,WAAWnqB,KAAKsnE,QACvBtnE,KAAKsnE,OAAO,SAASpL,GACnBqL,EAAK1P,EAAQq=
E,KAGfqL,EAAK1P,KAsDX,QAAS0P,GAAK1P,EAAQqE,GACpB,GAAIA,EACF,MAAOrE,GAAOnX=
,KAAK,QAASwb,EAI9B,IAAIsL,GAAK3P,EAAO0J,eACZ4F,EAAKtP,EAAOuP,eAEhB,IAAII,=
EAAGliE,OACL,KAAM,IAAIyD,OAAM,6CAElB,IAAIo+D,EAAGF,aACL,KAAM,IAAIl+D,OAAM=
,iDAElB,OAAO8uD,GAAOj2D,KAAK,MA/IrBpC,EAAOD,QAAU67D,CAEjB,IAAID,GAAS/7D,E=
AAoB,IAG7BsgE,EAAOtgE,EAAoB,GAC/BsgE,GAAKzE,SAAW77D,EAAoB,IAGpCsgE,EAAKzE=
,SAASG,EAAWD,GAqEzBC,EAAUr6D,UAAUa,KAAO,SAASD,EAAOuE,GAEzC,MADAlG,MAAKonE=
,gBAAgBJ,eAAgB,EAC9B7L,EAAOp6D,UAAUa,KAAKjC,KAAKK,KAAM2B,EAAOuE,IAajDk1D,=
EAAUr6D,UAAU0mE,WAAa,SAAS9lE,EAAOuE,EAAUjE,GACzD,KAAM,IAAI8G,OAAM,oBAGlBq=
yD,EAAUr6D,UAAUq4D,OAAS,SAASz3D,EAAOuE,EAAUjE,GACrD,GAAIklE,GAAKnnE,KAAKo=
nE,eAId,IAHAD,EAAG7C,QAAUriE,EACbklE,EAAGD,WAAavlE,EAChBwlE,EAAGO,cAAgBxh=
E,GACdihE,EAAGF,aAAc,CACpB,GAAII,GAAKrnE,KAAKq/D,gBACV8H,EAAGH,eACHK,EAAG=
1I,cACH0I,EAAG/hE,OAAS+hE,EAAGpJ,gBACjBj+D,KAAK+5D,MAAMsN,EAAGpJ,iBAOpB7C=
,EAAUr6D,UAAUg5D,MAAQ,SAASxtD,GACnC,GAAI46D,GAAKnnE,KAAKonE,eAET1H,GAAK9/=
B,OAAOunC,EAAGD,cAAeC,EAAG7C,SAAY6C,EAAGF,aAMnDE,EAAGH,eAAgB,GALnBG,EAAGF=
,cAAe,EAClBjnE,KAAKynE,WAAWN,EAAGD,WAAYC,EAAGO,cAAeP,EAAGJ,mBA8BnD,SAASvn=
E,EAAQD,EAASH,GAsC/B,QAASi8D,GAAYp6D,GACnB,MAAMjB,gBAAgBq7D,OAGtBD,GAAUz7=
D,KAAKK,KAAMiB,GAFZ,GAAIo6D,GAAYp6D,GAb3BzB,EAAOD,QAAU87D,CAEjB,IAAID,GAA=
Yh8D,EAAoB,IAGhCsgE,EAAOtgE,EAAoB,GAC/BsgE,GAAKzE,SAAW77D,EAAoB,IAGpCsgE,=
EAAKzE,SAASI,EAAaD,GAS3BC,EAAYt6D,UAAU0mE,WAAa,SAAS9lE,EAAOuE,EAAUjE,GAC3=
DA,EAAG,KAAMN,KAMN,SAASnC,EAAQD,EAASH,GAE/BI,EAAOD,QAAUH,EAAoB,KAKhC,SAAS=
I,EAAQD,EAASH,GAE/BI,EAAOD,QAAUH,EAAoB,KAKhC,SAASI,EAAQD,EAASH,GAE/BI,EAA=
OD,QAAUH,EAAoB,KAKhC,SAASI,EAAQD,EAASH,GAE/BI,EAAOD,QAAUH,EAAoB,KAKhC,SAA=
SI,EAAQD,EAASH,IAEH,SAASa,EAAQ0nE,GAC7C,YAGA,SAASC,KACR5nE,KAAK6nE,cACL7n=
E,KAAK8nE,cAuBN,QAASC,GAAY7N,GASpB,MARoC,KAAhCA,EAASrsD,QAAQ85D,KACpBzN,E=
AAWA,EAAS31B,UAAUojC,EAAUriE,SAGX,IAA1B40D,EAASrsD,QAAQ,OACpBqsD,EAAWA,EA=
AS31B,UAAU,IAGxB21B,EA7BR0N,EAAkB7mE,UAAUinE,aAAe,SAAS9N,GACnDA,EAAW6N,EA=
AY7N,EAEvB,IAAI+N,GAAgBjoE,KAAK8nE,WAAW5N,EACpC,OAAI+N,GACI,GAAIhoE,GAAOg=
oE,EAAe,UAG3BjoE,KAAK6nE,WAAW3N,IAGxB0N,EAAkB7mE,UAAUmnE,cAAgB,SAAShO,EAA=
Uz9C,GAC9Dzc,KAAK6nE,WAAWE,EAAY7N,IAAaz9C,GAG1CmrD,EAAkB7mE,UAAUM,OAAS,SA=
AS6F,GAC7ClH,KAAK8nE,WAAa5gE,GAgBnB1H,EAAOD,QAAU,GAAIqoE,KAEQjoE,KAAKJ,EA=
ASH,EAAoB,GAAGa,OAAQ,MAIrE,SAAST,EAAQD,EAASH,IAEH,SAASa,IAOrC,WACE,GAAIy3=
D,GAAWE,CAEfF,GAAY,WAGV,QAASA,MAFT,GAAIyQ,GAAWC,EAAaxmC,EAAKymC,CAqFjC,OA=
jFAzmC,GAAM,SAAS11B,EAAK5G,GAClB,OAAQoJ,MAAMpJ,EAAS,GAAGsI,KAAK,KAAO1B,GA=
AKpC,OAAOxE,IAGpD8iE,EAAc,sBAEdD,GACEp0B,KAAM,MACNC,KAAM,MACNs0B,IAAM,MAC=
NC,KAAM,MACNC,KAAM,MACN10B,KAAM,OACN20B,IAAK,MACLC,IAAK,OAGPL,EAAY,SAASM,=
GACnB,GAAIz7D,GAAGlH,EAAG2M,EAAGknD,EAAIzB,CAEjB,IADAzlD,EAAIg2D,EAAKrjE,=
OACD,EAAJqN,EACF,KAAM,IAAI5J,OAAM,6BAEhB,KAAK/C,EAAI6zD,EAAK,EAAGzB,EAAOz=
lD,EAAI,EAAQylD,EAALyB,EAAW7zD,EAAI6zD,GAAM,EAClD3sD,EAAIy7D,EAAK3iE,GACT=
2iE,EAAK3iE,GAAK2iE,EAAK3iE,EAAI,GACnB2iE,EAAK3iE,EAAI,GAAKkH,CAGlB,OAAOy=
7D,IAGTjR,EAAU+C,QAAU,SAASr0D,GAC3B,GAAIzD,GAAGqD,EAAG4iE,EAAW9xD,EAAO6M,=
EAAK3Y,EAAK/E,EAAQ6H,EAAK+rD,EAAIzB,CACvD,IAAsB,gBAAXhyD,GACT,MAAO,IAAMA,=
CACR,IAAIA,YAAkBwE,QAAQ,CAKnC,IAJA3E,EAASG,EAAOgG,QAAQg8D,EAAa,SAASvoE,GA=
C5C,MAAOsoE,GAAUtoE,KAEnB+oE,GAAY,EACP5iE,EAAI6zD,EAAK,EAAGzB,EAAOnyD,EAA=
OX,OAAa8yD,EAALyB,EAAW7zD,EAAI6zD,GAAM,EAC1D,GAAI5zD,EAAOyG,WAAW1G,GAAK,I=
AAM,CAC/B4iE,GAAY,CACZ,OAMJ,MAHIA,KACF3iE,EAASoiE,EAAU,GAAIpoE,GAAO,SAAWg=
G,EAAQ,YAAYxB,SAAS,WAEjE,IAAMwB,EAAS,IACjB,GAAIhG,EAAOoG,SAASD,GACzB,MAAO=
,IAAMA,EAAO3B,SAAS,OAAS,GACjC,IAAI2B,YAAkBwxD,GAC3B,MAAOxxD,GAAO3B,UACT,I=
AAI2B,YAAkB+/B,MAC3B,MAAO,MAAQvE,EAAIx7B,EAAOyiE,iBAAkB,GAAKjnC,EAAIx7B,E=
AAO0iE,cAAe,GAAKlnC,EAAIx7B,EAAO2iE,aAAc,GAAKnnC,EAAIx7B,EAAO4iE,cAAe,GAA=
KpnC,EAAIx7B,EAAO6iE,gBAAiB,GAAKrnC,EAAIx7B,EAAO8iE,gBAAiB,GAAK,IAC1M,IAA=
Ix6D,MAAMnI,QAAQH,GAUvB,MATA0Q,GAAS,WACP,GAAIqyD,GAAIrP,EAAMT,CAEd,KADAA,=
KACK8P,EAAK,EAAGrP,EAAO1zD,EAAOd,OAAaw0D,EAALqP,EAAWA,IAC5CxmE,EAAIyD,EAA=
O+iE,GACX9P,EAASz3D,KAAK81D,EAAU+C,QAAQ93D,GAElC,OAAO02D,MACHzrD,KAAK,KAC=
J,IAAMkJ,EAAQ,GAChB,IAAiC,uBAA1BrS,SAAS9E,KAAKyG,GAA+B,CACzD4E,GAAO,KACP,=
KAAK2Y,IAAOvd,GACV0H,EAAM1H,EAAOud,GACb3Y,EAAIpJ,KAAK,IAAM+hB,EAAM,IAAM+z=
C,EAAU+C,QAAQ3sD,GAG/C,OADA9C,GAAIpJ,KAAK,MACFoJ,EAAI4C,KAAK,MAEhB,MAAO,G=
AAKxH,GAITsxD,KAITl4D,EAAOD,QAAUm4D,EAEjBE,EAAex4D,EAAoB,MAElCO,KAAKK,QAE=
qBL,KAAKJ,EAASH,EAAoB,GAAGa,SAI7D,SAAST,EAAQD,EAASH,IAEH,SAASa,IAOrC,WACE=
,GAAIy3D,GAAWE,EAAcwR,EAC3BC,EAAS,SAASp4C,EAAIq4C,GAAK,MAAO,YAAY,MAAOr4C,=
GAAGnmB,MAAMw+D,EAAI3jE,YAEpEyjE,GAAOhqE,EAAoB,IAE3Bw4D,EAAe,WACb,QAASA,G=
AAa50D,EAAUvD,EAAIyH,GAClClH,KAAKgD,SAAWA,EAChBhD,KAAKP,GAAKA,EACVO,KAAKk=
H,KAAe,MAARA,EAAeA,KAC3BlH,KAAKupE,SAAWF,EAAOrpE,KAAKupE,SAAUvpE,MACtCA,K=
AAKwpE,IAAM,EACXxpE,KAAKypE,QAAU,KACfzpE,KAAKyb,SAAWzb,KAAKgD,SAASyY,WAAa=
zb,KAAKkH,KAAKwiE,OACrD1pE,KAAK2pE,mBAAqB,EAC1B3pE,KAAKyB,UAqEP,MAlEAm2D,=
GAAa72D,UAAU6oE,YAAc,WASnC,MARA5pE,MAAKkH,KAAKwiE,OAAS,cACnB1pE,KAAKypE,Q=
AAUL,EAAKS,gBACpB7pE,KAAKypE,QAAQ/nE,GAAG,OAAQ,SAAUy3C,GAChC,MAAO,UAASx3C=
,GAEd,MADAw3C,GAAM13C,OAAOG,KAAKD,GACXw3C,EAAMjyC,KAAK4iE,QAAUnoE,EAAM2D,=
SAEnCtF,OACIA,KAAKypE,QAAQ/nE,GAAG,MAAO1B,KAAKupE,WAGrC3R,EAAa72D,UAAUoF,=
MAAQ,SAASxE,GACtC,GAAIooE,EAQJ,OAPK9pE,GAAOoG,SAAS1E,KACnBA,EAAQ,GAAI1B,G=
AAO0B,EAAQ,KAAM,WAEnC3B,KAAK2pE,oBAAsBhoE,EAAM2D,OACC,OAA7BykE,EAAQ/pE,KA=
AKkH,MAAM4iE,SACtBC,EAAMD,OAAS,GAEb9pE,KAAKyb,UACFzb,KAAKypE,SACRzpE,KAAK=
4pE,cAEA5pE,KAAKypE,QAAQtjE,MAAMxE,KAE1B3B,KAAKyB,OAAOG,KAAKD,GACV3B,KAAK=
kH,KAAK4iE,QAAUnoE,EAAM2D,SAIrCsyD,EAAa72D,UAAUgB,IAAM,SAASJ,GAIpC,OAHqB,=
gBAAVA,IAAsB1B,EAAOoG,SAAS1E,KAC/C3B,KAAKmG,MAAMxE,GAET3B,KAAKypE,QACAzpE=
,KAAKypE,QAAQ1nE,MAEb/B,KAAKupE,YAIhB3R,EAAa72D,UAAUwoE,SAAW,WAChC,GAAI5n=
E,GAAOk4D,EAAIC,EAAM1B,CAIrB,IAHAp4D,KAAK2I,OAAS3I,KAAKgD,SAAS01D,QAC5B14=
D,KAAKgD,SAASo2D,OAAO,GAAKp5D,KAAKP,GAAK,IAAMO,KAAKwpE,IAAM,QACrDxpE,KAAK=
gD,SAASo2D,OAAO1B,EAAU+C,QAAQz6D,KAAKkH,OACxClH,KAAKyB,OAAO6D,OAAQ,CAGtB,=
IAFAtF,KAAKgD,SAASo2D,OAAO,UACrBhB,EAAOp4D,KAAKyB,OACPo4D,EAAK,EAAGC,EAAO=
1B,EAAK9yD,OAAaw0D,EAALD,EAAWA,IAC1Cl4D,EAAQy2D,EAAKyB,GACb75D,KAAKgD,SAA=
So2D,OAAOz3D,EAEvB3B,MAAKyB,OAAO6D,OAAS,EACrBtF,KAAKgD,SAASo2D,OAAO,eAGvB=
,MADAp5D,MAAKgD,SAASo2D,OAAO,UACdp5D,KAAKgD,SAASg3D,QAAQh6D,OAG/B43D,EAAa=
72D,UAAU0D,SAAW,WAChC,MAAO,GAAKzE,KAAKP,GAAK,IAAMO,KAAKwpE,IAAM,MAGlC5R,K=
AITp4D,EAAOD,QAAUq4D,EAEjBF,EAAYt4D,EAAoB,MAE/BO,KAAKK,QAEqBL,KAAKJ,EAASH=
,EAAoB,GAAGa,SAI7D,SAAST,EAAQD,EAASH,IAEH,SAASa,EAAQ69D,GAiM7C,QAASkM,GAA=
WC,EAAQ1lE,EAAQrD,GAUlC,QAASsoC,KAEP,IADA,GAAI7nC,GACG,QAAUA,EAAQsoE,EAAO=
n6D,SAC9Bo6D,EAAQtoE,KAAKD,GACbwoE,GAASxoE,EAAM2D,MAEjB2kE,GAAO1rC,KAAK,W=
AAYiL,GAG1B,QAAS4gC,GAAQjQ,GACf8P,EAAO5N,eAAe,MAAOgO,GAC7BJ,EAAO5N,eAAe,W=
AAY7yB,GAClCtoC,EAASi5D,GAGX,QAASkQ,KACP,GAAI1iE,GAAM1H,EAAO4B,OAAOqoE,EA=
ASC,EACjCD,MACAhpE,EAAS,KAAMyG,GACfsiE,EAAOrnE,QA5BT,GAAIsnE,MACAC,EAAQ,C=
AEZF,GAAOvoE,GAAG,QAAS0oE,GACnBH,EAAOvoE,GAAG,MAAO2oE,GAEjBJ,EAAOloE,IAAI=
wC,GACXilC,IAyBF,QAAS8gC,GAAeL,EAAQ1lE,GAG9B,GAFsB,gBAAXA,KACTA,EAAS,GAAI=
tE,GAAOsE,KACjBtE,EAAOoG,SAAS9B,GACnB,KAAM,IAAIkC,WAAU,yBAEtB,IAAI8jE,GAA=
YvH,EAAQwH,QAExB,OAAOP,GAAOQ,cAAclmE,EAAQgmE,GAKtC,QAASG,GAAQC,GACf,MAAM3=
qE,gBAAgB0qE,OACtBE,GAAKjrE,KAAKK,KAAM2qE,EAAM3H,EAAQ6H,SADS,GAAIH,GAAQC,=
GAIrD,QAASG,GAAQH,GACf,MAAM3qE,gBAAgB8qE,OACtBF,GAAKjrE,KAAKK,KAAM2qE,EAA=
M3H,EAAQ+H,SADS,GAAID,GAAQH,GAOrD,QAASK,GAAKL,GACZ,MAAM3qE,gBAAgBgrE,OACt=
BJ,GAAKjrE,KAAKK,KAAM2qE,EAAM3H,EAAQiI,MADM,GAAID,GAAKL,GAI/C,QAASO,GAAOP=
,GACd,MAAM3qE,gBAAgBkrE,OACtBN,GAAKjrE,KAAKK,KAAM2qE,EAAM3H,EAAQmI,QADQ,G=
AAID,GAAOP,GAOnD,QAASS,GAAWT,GAClB,MAAM3qE,gBAAgBorE,OACtBR,GAAKjrE,KAAKK=
,KAAM2qE,EAAM3H,EAAQqI,YADY,GAAID,GAAWT,GAI3D,QAASW,GAAWX,GAClB,MAAM3qE,g=
BAAgBsrE,OACtBV,GAAKjrE,KAAKK,KAAM2qE,EAAM3H,EAAQuI,YADY,GAAID,GAAWX,GAM3=
D,QAASa,GAAMb,GACb,MAAM3qE,gBAAgBwrE,OACtBZ,GAAKjrE,KAAKK,KAAM2qE,EAAM3H,=
EAAQyI,OADO,GAAID,GAAMb,GAUjD,QAASC,GAAKD,EAAMjf,GAMlB,GALA1rD,KAAK0rE,MA=
AQf,EAAOA,MACpB3qE,KAAK2rE,WAAahB,EAAKiB,WAAarsE,EAAQssE,gBAE5CzQ,EAAUz7D=
,KAAKK,KAAM2qE,GAEjBA,EAAKmB,OACHnB,EAAKmB,QAAU9I,EAAQ+I,YACvBpB,EAAKmB,Q=
AAU9I,EAAQgJ,iBACvBrB,EAAKmB,QAAU9I,EAAQiJ,cACvBtB,EAAKmB,QAAU9I,EAAQkJ,c=
ACvBvB,EAAKmB,QAAU9I,EAAQwH,UACvBG,EAAKmB,QAAU9I,EAAQmJ,QACzB,KAAM,IAAIpj=
E,OAAM,uBAAyB4hE,EAAKmB,MAKlD,IAFA9rE,KAAKosE,WAAazB,EAAKmB,OAAS9I,EAAQ+I=
,WAEpCpB,EAAKiB,YACHjB,EAAKiB,UAAYrsE,EAAQ8sE,aACzB1B,EAAKiB,UAAYrsE,EAAQ=
+sE,aAC3B,KAAM,IAAIvjE,OAAM,uBAAyB4hE,EAAKiB,UAIlD,IAAIjB,EAAK4B,aACH5B,E=
AAK4B,WAAahtE,EAAQitE,kBAC1B7B,EAAK4B,WAAahtE,EAAQktE,kBAC5B,KAAM,IAAI1jE=
,OAAM,uBAAyB4hE,EAAK4B,WAIlD,IAAI5B,EAAK+B,QACH/B,EAAK+B,MAAQntE,EAAQotE,=
aACrBhC,EAAK+B,MAAQntE,EAAQqtE,aACvB,KAAM,IAAI7jE,OAAM,8BAAgC4hE,EAAK+B,M=
AIzD,IAAI/B,EAAKkC,WACHlC,EAAKkC,SAAWttE,EAAQutE,gBACxBnC,EAAKkC,SAAWttE,=
EAAQwtE,gBAC1B,KAAM,IAAIhkE,OAAM,qBAAuB4hE,EAAKkC,SAIhD,IAAIlC,EAAKqC,UAC=
HrC,EAAKqC,UAAYztE,EAAQ0tE,YACzBtC,EAAKqC,UAAYztE,EAAQ2tE,gBACzBvC,EAAKqC=
,UAAYztE,EAAQ4tE,OACzBxC,EAAKqC,UAAYztE,EAAQ6tE,SACzBzC,EAAKqC,UAAYztE,EA=
AQ8tE,mBAC3B,KAAM,IAAItkE,OAAM,qBAAuB4hE,EAAKqC,SAIhD,IAAIrC,EAAKnR,aACFv=
5D,EAAOoG,SAASskE,EAAKnR,YACxB,KAAM,IAAIzwD,OAAM,qDAIpB/I,MAAKstE,SAAW,GA=
AItK,GAAQ4H,KAAKlf,EAEjC,IAAInX,GAAOv0C,IACXA,MAAKutE,WAAY,EACjBvtE,KAAKs=
tE,SAASrR,QAAU,SAAS55D,EAASmrE,GAGxCj5B,EAAK+4B,SAAW,KAChB/4B,EAAKg5B,WAA=
Y,CAEjB,IAAI1Q,GAAQ,GAAI9zD,OAAM1G,EACtBw6D,GAAM2Q,MAAQA,EACd3Q,EAAM7qD,K=
AAOzS,EAAQkuE,MAAMD,GAC3Bj5B,EAAKmM,KAAK,QAASmc,GAGrB,IAAI6P,GAAQntE,EAAQ=
muE,qBACM,iBAAf/C,GAAK+B,QAAoBA,EAAQ/B,EAAK+B,MAEjD,IAAIM,GAAWztE,EAAQ8tE=
,kBACM,iBAAlB1C,GAAKqC,WAAuBA,EAAWrC,EAAKqC,UAEvDhtE,KAAKstE,SAASK,KAAKhD=
,EAAK4B,YAAchtE,EAAQquE,qBAC3BlB,EACA/B,EAAKkC,UAAYttE,EAAQsuE,mBACzBb,EA=
CArC,EAAKnR,YAExBx5D,KAAK8tE,QAAU,GAAI7tE,GAAOD,KAAK2rE,YAC/B3rE,KAAK04D,=
QAAU,EACf14D,KAAK+tE,SAAU,EACf/tE,KAAKguE,OAAStB,EACd1sE,KAAKiuE,UAAYjB,E=
AEjBhtE,KAAKu+B,KAAK,MAAOv+B,KAAK4C,OA3WxB,GAAIw4D,GAAYh8D,EAAoB,IAEhC4jE=
,EAAU5jE,EAAoB,IAC9BsgE,EAAOtgE,EAAoB,IAC3B8uE,EAAS9uE,EAAoB,IAAI+uE,EAIr=
CnL,GAAQwJ,iBAAmB,EAC3BxJ,EAAQyJ,iBAAmB,GAC3BzJ,EAAQ4K,qBAAuB,GAK/B5K,EAA=
QqJ,YAAc,GACtBrJ,EAAQsJ,YAAcnkE,EAAAA,EACtB66D,EAAQ6I,gBAAkB,MAE1B7I,EAAQ=
8J,eAAiB,EACzB9J,EAAQ+J,eAAiB,EACzB/J,EAAQ6K,mBAAqB,EAE7B7K,EAAQ2J,YAAc,G=
ACtB3J,EAAQ4J,YAAc,EACtB5J,EAAQoL,gBAAkBpL,EAAQ0K,sBAGlCp5D,OAAO+R,KAAK28=
C,GAAS16B,QAAQ,SAAS6mB,GAChCA,EAAExhD,MAAM,QAAOpO,EAAQ4vD,GAAK6T,EAAQ7T,M=
AI1C5vD,EAAQkuE,OACNY,KAAMrL,EAAQqL,KACdC,aAActL,EAAQsL,aACtBC,YAAavL,EAA=
QuL,YACrBC,QAASxL,EAAQwL,QACjBC,eAAgBzL,EAAQyL,eACxBC,aAAc1L,EAAQ0L,aACtB=
C,YAAa3L,EAAQ2L,YACrBC,YAAa5L,EAAQ4L,YACrBC,gBAAiB7L,EAAQ6L,iBAG3Bv6D,OAA=
O+R,KAAK9mB,EAAQkuE,OAAOnlC,QAAQ,SAAS6mB,GAC1C5vD,EAAQkuE,MAAMluE,EAAQkuE=
,MAAMte,IAAMA,IAGpC5vD,EAAQmrE,QAAUA,EAClBnrE,EAAQurE,QAAUA,EAClBvrE,EAAQ=
yrE,KAAOA,EACfzrE,EAAQ2rE,OAASA,EACjB3rE,EAAQ6rE,WAAaA,EACrB7rE,EAAQ+rE,W=
AAaA,EACrB/rE,EAAQisE,MAAQA,EAEhBjsE,EAAQsqE,cAAgB,SAASrG,GAC/B,MAAO,IAAI=
kH,GAAQlH,IAGrBjkE,EAAQuvE,cAAgB,SAAStL,GAC/B,MAAO,IAAIsH,GAAQtH,IAGrBjkE=
,EAAQwvE,iBAAmB,SAASvL,GAClC,MAAO,IAAI4H,GAAW5H,IAGxBjkE,EAAQyvE,iBAAmB,S=
AASxL,GAClC,MAAO,IAAI8H,GAAW9H,IAGxBjkE,EAAQ0vE,WAAa,SAASzL,GAC5B,MAAO,IA=
AIwH,GAAKxH,IAGlBjkE,EAAQ2vE,aAAe,SAAS1L,GAC9B,MAAO,IAAI0H,GAAO1H,IAGpBjk=
E,EAAQ4vE,YAAc,SAAS3L,GAC7B,MAAO,IAAIgI,GAAMhI,IAMnBjkE,EAAQkqE,QAAU,SAAS=
llE,EAAQomE,EAAMzpE,GAKvC,MAJoB,kBAATypE,KACTzpE,EAAWypE,EACXA,MAEKX,EAAW=
,GAAIU,GAAQC,GAAOpmE,EAAQrD,IAG/C3B,EAAQ6vE,YAAc,SAAS7qE,EAAQomE,GACrC,MA=
AOL,GAAe,GAAII,GAAQC,GAAOpmE,IAG3ChF,EAAQ8vE,KAAO,SAAS9qE,EAAQomE,EAAMzpE=
,GAKpC,MAJoB,kBAATypE,KACTzpE,EAAWypE,EACXA,MAEKX,EAAW,GAAIgB,GAAKL,GAAOp=
mE,EAAQrD,IAG5C3B,EAAQ+vE,SAAW,SAAS/qE,EAAQomE,GAClC,MAAOL,GAAe,GAAIU,GAA=
KL,GAAOpmE,IAGxChF,EAAQgwE,WAAa,SAAShrE,EAAQomE,EAAMzpE,GAK1C,MAJoB,kBAAT=
ypE,KACTzpE,EAAWypE,EACXA,MAEKX,EAAW,GAAIoB,GAAWT,GAAOpmE,EAAQrD,IAGlD3B,=
EAAQiwE,eAAiB,SAASjrE,EAAQomE,GACxC,MAAOL,GAAe,GAAIc,GAAWT,GAAOpmE,IAG9Ch=
F,EAAQu7B,MAAQ,SAASv2B,EAAQomE,EAAMzpE,GAKrC,MAJoB,kBAATypE,KACTzpE,EAAWy=
pE,EACXA,MAEKX,EAAW,GAAIwB,GAAMb,GAAOpmE,EAAQrD,IAG7C3B,EAAQkwE,UAAY,SAAS=
lrE,EAAQomE,GACnC,MAAOL,GAAe,GAAIkB,GAAMb,GAAOpmE,IAGzChF,EAAQmwE,QAAU,SA=
ASnrE,EAAQomE,EAAMzpE,GAKvC,MAJoB,kBAATypE,KACTzpE,EAAWypE,EACXA,MAEKX,EA=
AW,GAAIc,GAAQH,GAAOpmE,EAAQrD,IAG/C3B,EAAQowE,YAAc,SAASprE,EAAQomE,GACrC,=
MAAOL,GAAe,GAAIQ,GAAQH,GAAOpmE,IAG3ChF,EAAQqwE,OAAS,SAASrrE,EAAQomE,EAAMz=
pE,GAKtC,MAJoB,kBAATypE,KACTzpE,EAAWypE,EACXA,MAEKX,EAAW,GAAIkB,GAAOP,GAA=
OpmE,EAAQrD,IAG9C3B,EAAQswE,WAAa,SAAStrE,EAAQomE,GACpC,MAAOL,GAAe,GAAIY,G=
AAOP,GAAOpmE,IAG1ChF,EAAQuwE,WAAa,SAASvrE,EAAQomE,EAAMzpE,GAK1C,MAJoB,kBA=
ATypE,KACTzpE,EAAWypE,EACXA,MAEKX,EAAW,GAAIsB,GAAWX,GAAOpmE,EAAQrD,IAGlD3=
B,EAAQwwE,eAAiB,SAASxrE,EAAQomE,GACxC,MAAOL,GAAe,GAAIgB,GAAWX,GAAOpmE,IAq=
M9Cm7D,EAAKzE,SAAS2P,EAAMxP,GAEpBwP,EAAK7pE,UAAUivE,OAAS,SAAStD,EAAOM,EAA=
U9rE,GAChD,GAAIwrE,EAAQntE,EAAQotE,aAChBD,EAAQntE,EAAQqtE,YAClB,KAAM,IAAI=
plE,YAAW,8BAAgCklE,EAEvD,IAAIM,GAAYztE,EAAQ0tE,YACpBD,GAAYztE,EAAQ2tE,gBA=
CpBF,GAAYztE,EAAQ4tE,OACpBH,GAAYztE,EAAQ6tE,SACpBJ,GAAYztE,EAAQ8tE,mBACtB=
,KAAM,IAAI5mE,WAAU,qBAAuBumE,EAG7C,IAAIhtE,KAAKguE,SAAWtB,GAAS1sE,KAAKiuE=
,YAAcjB,EAAU,CACxD,GAAIz4B,GAAOv0C,IACXA,MAAK8rE,MAAM9I,EAAQiJ,aAAc,WAC/B=
13B,EAAK+4B,SAAS0C,OAAOtD,EAAOM,GACvBz4B,EAAKg5B,YACRh5B,EAAKy5B,OAAStB,E=
ACdn4B,EAAK05B,UAAYjB,EACb9rE,GAAUA,WAIlB48D,GAAQuC,SAASn/D,IAIrB0pE,EAAK=
7pE,UAAUkvE,MAAQ,WACrB,MAAOjwE,MAAKstE,SAAS2C,SAKvBrF,EAAK7pE,UAAUumE,OAA=
S,SAASpmE,GAC/BlB,KAAKynE,WAAW,GAAIxnE,GAAO,GAAI,GAAIiB,IAGrC0pE,EAAK7pE,=
UAAU+qE,MAAQ,SAASoE,EAAMhvE,GACpC,GAAIsmE,GAAKxnE,KAAKuhE,cAOd,KALoB,kBAA=
T2O,IAAiC,SAATA,IAAoBhvE,KACrDA,EAAWgvE,EACXA,EAAOlN,EAAQkJ,cAGb1E,EAAGjJ=
,MACDr9D,GACF48D,EAAQuC,SAASn/D,OACd,IAAIsmE,EAAG1D,OACR5iE,GACFlB,KAAKu+=
B,KAAK,MAAOr9B,OACd,IAAIsmE,EAAGhG,UAAW,CACvB,GAAIjtB,GAAOv0C,IACXA,MAAKu=
+B,KAAK,QAAS,WACjBgW,EAAKu3B,MAAM5qE,SAGblB,MAAKosE,WAAa8D,EAClBlwE,KAAKm=
G,MAAM,GAAIlG,GAAO,GAAI,GAAIiB,IAIlC0pE,EAAK7pE,UAAU6B,MAAQ,SAAS1B,GAI9B,=
GAHIA,GACF48D,EAAQuC,SAASn/D,IAEflB,KAAK+tE,QAAT,CAGA/tE,KAAK+tE,SAAU,EAE=
f/tE,KAAKstE,SAAS1qE,OAEd,IAAI2xC,GAAOv0C,IACX89D,GAAQuC,SAAS,WACf9rB,EAA=
KmM,KAAK,aAIdkqB,EAAK7pE,UAAU0mE,WAAa,SAAS9lE,EAAOuE,EAAUjE,GACpD,GAAIsoE=
,GACA/C,EAAKxnE,KAAKuhE,eACVuC,EAAS0D,EAAG1D,QAAU0D,EAAGjJ,MACzBjyC,EAAOw=
3C,KAAYniE,GAAS6lE,EAAGliE,SAAW3D,EAAM2D,OAEpD,IAAe,QAAV3D,IAAmB1B,EAAOoG=
,SAAS1E,GACtC,MAAOM,GAAG,GAAI8G,OAAM,iBAMlBujB,GACFi+C,EAAYvH,EAAQwH,UAEp=
BD,EAAYvqE,KAAKosE,WAGbzqE,EAAM2D,QAAUkiE,EAAGliE,SACrBtF,KAAKosE,WAAapsE=
,KAAK0rE,MAAMI,OAAS9I,EAAQ+I,YAKlD/rE,MAAKyqE,cAAc9oE,EAAO4oE,EAAWtoE,IAG=
vC2oE,EAAK7pE,UAAU0pE,cAAgB,SAAS9oE,EAAO4oE,EAAWtoE,GAiDxD,QAASf,GAASivE,=
EAAcC,GAC9B,IAAI77B,EAAKg5B,UAAT,CAGA,GAAI8C,GAAOC,EAAiBF,CAG5B,IAFAlC,EA=
AOmC,GAAQ,EAAG,2BAEdA,EAAO,EAAG,CACZ,GAAIrlE,GAAMupC,EAAKu5B,QAAQhkE,MAAM=
yqC,EAAKmkB,QAASnkB,EAAKmkB,QAAU2X,EAC1D97B,GAAKmkB,SAAW2X,EAEZE,EACFh8B,=
EAAK3yC,KAAKoJ,IAEVk/D,EAAQtoE,KAAKoJ,GACbm/D,GAASn/D,EAAI1F,QAWjB,IANsB,=
IAAlB8qE,GAAuB77B,EAAKmkB,SAAWnkB,EAAKo3B,cAC9C2E,EAAiB/7B,EAAKo3B,WACtBp=
3B,EAAKmkB,QAAU,EACfnkB,EAAKu5B,QAAU,GAAI7tE,GAAOs0C,EAAKo3B,aAGX,IAAlByE=
,EAAqB,CAQvB,GAHAI,GAAUC,EAAgBN,EAC1BM,EAAgBN,GAEXI,EACH,OAAO,CAET,IAAIG,=
GAASn8B,EAAK+4B,SAASnnE,MAAMokE,EACA5oE,EACA6uE,EACAC,EACAl8B,EAAKu5B,QAC=
Lv5B,EAAKmkB,QACLnkB,EAAKo3B,WAGtC,OAFA+E,GAAOxvE,SAAWA,OAClBwvE,EAAOnsE,=
OAAS5C,GAIlB,MAAK4uE,OAILtuE,MAHS,GAlGX,GAAIwuE,GAAgB9uE,GAASA,EAAM2D,OAC=
/BgrE,EAAiBtwE,KAAK2rE,WAAa3rE,KAAK04D,QACxC8X,EAAQ,EAERj8B,EAAOv0C,KAEPu=
wE,EAAsB,kBAAPtuE,EAEnB,KAAKsuE,EAAO,CACV,GAGI1T,GAHAqN,KACAC,EAAQ,CAGZnq=
E,MAAK0B,GAAG,QAAS,SAASw6D,GACxBW,EAAQX,GAGV,GACE,IAAIjyD,GAAMjK,KAAKstE,=
SAASqD,UAAUpG,EACA5oE,EACA6uE,EACAC,EACAzwE,KAAK8tE,QACL9tE,KAAK04D,QACL4=
X,UAC1BtwE,KAAKutE,WAAarsE,EAAS+I,EAAI,GAAIA,EAAI,IAEjD,IAAIjK,KAAKutE,UA=
CP,KAAM1Q,EAGR,IAAIl1D,GAAM1H,EAAO4B,OAAOqoE,EAASC,EAGjC,OAFAnqE,MAAK4C,Q=
AEE+E,EAGT,GAAIipE,GAAM5wE,KAAKstE,SAASnnE,MAAMokE,EACA5oE,EACA6uE,EACAC,=
EACAzwE,KAAK8tE,QACL9tE,KAAK04D,QACL4X,EAE9BM,GAAIrsE,OAAS5C,EACbivE,EAAI=
1vE,SAAWA,GA2DjBw+D,EAAKzE,SAASyP,EAASE,GACvBlL,EAAKzE,SAAS6P,EAASF,GACvB=
lL,EAAKzE,SAAS+P,EAAMJ,GACpBlL,EAAKzE,SAASiQ,EAAQN,GACtBlL,EAAKzE,SAASmQ,=
EAAYR,GAC1BlL,EAAKzE,SAASqQ,EAAYV,GAC1BlL,EAAKzE,SAASuQ,EAAOZ,KAEQjrE,KAA=
KJ,EAASH,EAAoB,GAAGa,OAAQb,EAAoB,MAIzF,SAASI,EAAQD,EAASH,IAEH,SAAS0+D,EAA=
S79D,GAuB9C,QAAS2qE,GAAKlf,GACZ,GAAIA,EAAOnsD,EAAQsrE,SAAWnf,EAAOnsD,EAAQ=
ksE,MAC3C,KAAM,IAAIhlE,WAAU,eAEtBzG,MAAK0rD,KAAOA,EACZ1rD,KAAK6wE,WAAY,EA=
CjB7wE,KAAK8wE,mBAAoB,EACzB9wE,KAAK+wE,eAAgB,EACrB/wE,KAAKusE,WAAa,EAClBv=
sE,KAAK0sE,MAAQ,EACb1sE,KAAK6sE,SAAW,EAChB7sE,KAAKgtE,SAAW,EAChBhtE,KAAKw=
5D,WAAa,KA4FpB,QAASwX,GAAU9pE,EAAMyB,GACvB,IAAK,GAAI3C,GAAI,EAAGA,EAAIkB,=
EAAK5B,OAAQU,IAC/BhG,KAAK2I,EAAS3C,GAAKkB,EAAKlB,GAjI2B,GAAIirE,GAAM7xE,E=
AAoB,IACjF8xE,EAAU9xE,EAAoB,IAC9B+xE,EAAe/xE,EAAoB,IACnCgyE,EAAehyE,EAAoB=
,IACnCiyE,EAAYjyE,EAAoB,GAEpC,KAAK,GAAIukB,KAAO0tD,GACd9xE,EAAQokB,GAAO0t=
D,EAAU1tD,EAI3BpkB,GAAQ+xE,KAAO,EACf/xE,EAAQsrE,QAAU,EAClBtrE,EAAQwrE,QAA=
U,EAClBxrE,EAAQ0rE,KAAO,EACf1rE,EAAQ4rE,OAAS,EACjB5rE,EAAQ8rE,WAAa,EACrB9=
rE,EAAQgsE,WAAa,EACrBhsE,EAAQksE,MAAQ,EAoBhBb,EAAK7pE,UAAU4sE,KAAO,SAASpB=
,EAAYG,EAAOG,EAAUG,EAAUxT,GAkBpE,OAjBAx5D,KAAKusE,WAAaA,EAClBvsE,KAAK0sE,=
MAAQA,EACb1sE,KAAK6sE,SAAWA,EAChB7sE,KAAKgtE,SAAWA,GAGZhtE,KAAK0rD,OAASns=
D,EAAQ0rE,MAAQjrE,KAAK0rD,OAASnsD,EAAQ4rE,UACtDnrE,KAAKusE,YAAc,IAEjBvsE,=
KAAK0rD,OAASnsD,EAAQksE,QACxBzrE,KAAKusE,YAAc,KAEjBvsE,KAAK0rD,OAASnsD,EA=
AQ8rE,YAAcrrE,KAAK0rD,OAASnsD,EAAQgsE,cAC5DvrE,KAAKusE,YAAcvsE,KAAKusE,YA=
E1BvsE,KAAKuxE,KAAO,GAAIL,GAERlxE,KAAK0rD,MACX,IAAKnsD,GAAQsrE,QACb,IAAKt=
rE,GAAQ0rE,KACb,IAAK1rE,GAAQ8rE,WACX,GAAImG,GAASL,EAAaM,aACxBzxE,KAAKuxE,=
KACLvxE,KAAK0sE,MACLntE,EAAQmyE,WACR1xE,KAAKusE,WACLvsE,KAAK6sE,SACL7sE,K=
AAKgtE,SAEP,MACF,KAAKztE,GAAQwrE,QACb,IAAKxrE,GAAQ4rE,OACb,IAAK5rE,GAAQgs=
E,WACb,IAAKhsE,GAAQksE,MACX,GAAI+F,GAAUJ,EAAaO,aACzB3xE,KAAKuxE,KACLvxE,K=
AAKusE,WAEP,MACF,SACE,KAAM,IAAIxjE,OAAM,gBAAkB/I,KAAK0rD,MAG3C,MAAI8lB,KA=
AWjyE,EAAQ8uE,SACrBruE,MAAK4xE,OAAOJ,IAIdxxE,KAAK8wE,mBAAoB,OACzB9wE,KAAK=
6wE,WAAY,KAGnBjG,EAAK7pE,UAAUivE,OAAS,WACtB,KAAM,IAAIjnE,OAAM,gCAGlB6hE,E=
AAK7pE,UAAU8wE,YAAc,WAC3B,IAAK7xE,KAAK6wE,UACR,KAAM,IAAI9nE,OAAM,oBAElB,I=
AAI/I,KAAK0rD,OAASnsD,EAAQ+xE,KACxB,KAAM,IAAIvoE,OAAM,oBAElB,IAAI/I,KAAK8=
wE,kBACP,KAAM,IAAI/nE,OAAM,4BAElB,IAAI/I,KAAK+wE,cACP,KAAM,IAAIhoE,OAAM,q=
BAGpB6hE,EAAK7pE,UAAUoF,MAAQ,SAAS2lE,EAAOp0C,EAAOo6C,EAAQC,EAAQ/mE,EAAKgn=
E,EAASC,GAC1EjyE,KAAK6xE,cACL7xE,KAAK8wE,mBAAoB,CAEzB,IAAIv8B,GAAOv0C,IAU=
X,OATA89D,GAAQuC,SAAS,WACf9rB,EAAKu8B,mBAAoB,CACzB,IAAI7mE,GAAMsqC,EAAK6k=
B,OAAO0S,EAAOp0C,EAAOo6C,EAAQC,EAAQ/mE,EAAKgnE,EAASC,EAClE19B,GAAKrzC,SAA=
S+I,EAAI,GAAIA,EAAI,IAEtBsqC,EAAKw8B,eACPx8B,EAAK3xC,UAGF5C,MAUT4qE,EAAK7=
pE,UAAU4vE,UAAY,SAAS7E,EAAOp0C,EAAOo6C,EAAQC,EAAQ/mE,EAAKgnE,EAASC,GAE9E,=
MADAjyE,MAAK6xE,cACE7xE,KAAKo5D,OAAO0S,EAAOp0C,EAAOo6C,EAAQC,EAAQ/mE,EAAK=
gnE,EAASC,IAGjErH,EAAK7pE,UAAUq4D,OAAS,SAAS0S,EAAOp0C,EAAOo6C,EAAQC,EAAQ/=
mE,EAAKgnE,EAASC,GAG3E,GAFAjyE,KAAK8wE,mBAAoB,EAErBhF,IAAUvsE,EAAQwsE,YAC=
lBD,IAAUvsE,EAAQysE,iBAClBF,IAAUvsE,EAAQ0sE,cAClBH,IAAUvsE,EAAQ2sE,cAClBJ=
,IAAUvsE,EAAQirE,UAClBsB,IAAUvsE,EAAQ4sE,QACpB,KAAM,IAAIpjE,OAAM,sBAGL,OA=
AT2uB,IACFA,EAAQ,GAAIz3B,GAAO,GACnB8xE,EAAS,EACTD,EAAS,GAGP9mE,EAAIwG,KAC=
NxG,EAAIoD,IAAMpD,EAAIwG,KAEdxG,EAAIoD,IAAM4iE,CAEZ,IAAIO,GAAOvxE,KAAKuxE=
,IAQhB,QAPAA,EAAKW,SAAWH,EAChBR,EAAK75C,MAAQA,EACb65C,EAAKY,QAAUL,EACfP,E=
AAKa,UAAYH,EACjBV,EAAKh+D,OAASvI,EACdumE,EAAKc,SAAWL,EAERhyE,KAAK0rD,MACX=
,IAAKnsD,GAAQsrE,QACb,IAAKtrE,GAAQ0rE,KACb,IAAK1rE,GAAQ8rE,WACX,GAAImG,GA=
ASL,EAAa1H,QAAQ8H,EAAMzF,EACxC,MACF,KAAKvsE,GAAQksE,MACb,IAAKlsE,GAAQwrE,=
QACb,IAAKxrE,GAAQ4rE,OACb,IAAK5rE,GAAQgsE,WACX,GAAIiG,GAASJ,EAAa1B,QAAQ6B=
,EAAMzF,EACxC,MACF,SACE,KAAM,IAAI/iE,OAAM,gBAAkB/I,KAAK0rD,MAQ3C,MALI8lB,=
KAAWjyE,EAAQ+uE,cAAgBkD,IAAWjyE,EAAQ8uE,MACxDruE,KAAK4xE,OAAOJ,GAGdxxE,KA=
AK8wE,mBAAoB,GACjBS,EAAKW,SAAUX,EAAKa,YAG9BxH,EAAK7pE,UAAU6B,MAAQ,WACrB,M=
AAI5C,MAAK8wE,uBACP9wE,KAAK+wE,eAAgB,IAIvB/wE,KAAK+wE,eAAgB,EAEjB/wE,KAAK=
0rD,OAASnsD,EAAQsrE,SAAW7qE,KAAK0rD,OAASnsD,EAAQ0rE,MAAQjrE,KAAK0rD,OAASn=
sD,EAAQ8rE,WACvF8F,EAAamB,WAAWtyE,KAAKuxE,MAE7BH,EAAamB,WAAWvyE,KAAKuxE,W=
AG/BvxE,KAAK0rD,KAAOnsD,EAAQ+xE,QAGtB1G,EAAK7pE,UAAUkvE,MAAQ,WACrB,OAAQjw=
E,KAAK0rD,MACX,IAAKnsD,GAAQsrE,QACb,IAAKtrE,GAAQ8rE,WACX,GAAImG,GAASL,EAA=
aqB,aAAaxyE,KAAKuxE,KAC5C,MACF,KAAKhyE,GAAQwrE,QACb,IAAKxrE,GAAQgsE,WACX,=
GAAIiG,GAASJ,EAAaqB,aAAazyE,KAAKuxE,MAI5CC,IAAWjyE,EAAQ8uE,MACrBruE,KAAK4=
xE,OAAOJ,IAIhB5G,EAAK7pE,UAAU6wE,OAAS,SAASJ,GAC/BxxE,KAAKi8D,QAAQgV,EAAIO=
,GAAU,KAAOxxE,KAAKuxE,KAAKN,IAAKO,GAEjDxxE,KAAK8wE,mBAAoB,EACrB9wE,KAAK+w=
E,eACP/wE,KAAK4C,SAGTrD,EAAQqrE,KAAOA,IAEcjrE,KAAKJ,EAASH,EAAoB,IAAKA,EAA=
oB,GAAGa,SAItF,SAAST,EAAQD,GAEtB,YAEAC,GAAOD,SACLszC,EAAQ,kBACRD,EAAQ,aAC=
RD,EAAQ,GACR+/B,KAAQ,aACRC,KAAQ,eACRC,KAAQ,aACRC,KAAQ,sBACRC,KAAQ,eACRC,K=
AAQ,yBAML,SAASvzE,EAAQD,GAEtB,YAGA,SAASyzE,KAEPhzE,KAAK03B,MAAQ,KACb13B,K=
AAKmyE,QAAU,EAEfnyE,KAAKkyE,SAAW,EAEhBlyE,KAAKizE,SAAW,EAEhBjzE,KAAKuT,OA=
AS,KACdvT,KAAKqyE,SAAW,EAEhBryE,KAAKoyE,UAAY,EAEjBpyE,KAAKkzE,UAAY,EAEjBl=
zE,KAAKixE,IAAM,GAEXjxE,KAAKu/D,MAAQ,KAEbv/D,KAAKmzE,UAAY,EAEjBnzE,KAAKoz=
E,MAAQ,EAGf5zE,EAAOD,QAAUyzE,GAKZ,SAASxzE,EAAQD,EAASH;AAE/B,YAyGA,SAAS+6D=
,GAAIoX,EAAM8B,GAEjB,MADA9B,GAAKN,IAAMA,EAAIoC,GACRA,EAGT,QAASC,GAAK3/B,G=
ACZ,OAAQ,GAAO,IAAM,EAAM,EAAI,EAAI,GAGrC,QAAS4/B,GAAK5rE,GAA6B,IAAtB,GAAIC=
,GAAMD,EAAIrC,SAAiBsC,GAAO,GAAKD,EAAIC,GAAO,EAS3E,QAAS4rE,GAAcjC,GACrB,GA=
AIv9D,GAAIu9D,EAAKhS,MAGT33D,EAAMoM,EAAEy/D,OACR7rE,GAAM2pE,EAAKa,YACbxqE=
,EAAM2pE,EAAKa,WAED,IAARxqE,IAEJ8rE,EAAMC,SAASpC,EAAKh+D,OAAQS,EAAE4/D,YA=
Aa5/D,EAAE6/D,YAAajsE,EAAK2pE,EAAKc,UACpEd,EAAKc,UAAYzqE,EACjBoM,EAAE6/D,=
aAAejsE,EACjB2pE,EAAK2B,WAAatrE,EAClB2pE,EAAKa,WAAaxqE,EAClBoM,EAAEy/D,SA=
AW7rE,EACK,IAAdoM,EAAEy/D,UACJz/D,EAAE6/D,YAAc,IAKpB,QAASC,GAAkB9/D,EAAGs=
Y,GAC5BynD,EAAMC,gBAAgBhgE,EAAIA,EAAEigE,aAAe,EAAIjgE,EAAEigE,YAAc,GAAKjg=
E,EAAEkgE,SAAWlgE,EAAEigE,YAAa3nD,GAChGtY,EAAEigE,YAAcjgE,EAAEkgE,SAClBV,=
EAAcx/D,EAAEu9D,MAIlB,QAAS4C,GAASngE,EAAGhH,GACnBgH,EAAE4/D,YAAY5/D,EAAEy=
/D,WAAazmE,EAS/B,QAASonE,GAAYpgE,EAAGhH,GAGtBgH,EAAE4/D,YAAY5/D,EAAEy/D,W=
AAczmE,IAAM,EAAK,IACzCgH,EAAE4/D,YAAY5/D,EAAEy/D,WAAiB,IAAJzmE,EAW/B,QAAS=
qnE,GAAS9C,EAAM5pE,EAAKO,EAAO4N,GAClC,GAAIlO,GAAM2pE,EAAKW,QAGf,OADItqE,G=
AAMkO,IAAQlO,EAAMkO,GACZ,IAARlO,EAAoB,GAExB2pE,EAAKW,UAAYtqE,EAEjB8rE,EAA=
MC,SAAShsE,EAAK4pE,EAAK75C,MAAO65C,EAAKY,QAASvqE,EAAKM,GAC3B,IAApBqpE,EAA=
KhS,MAAM5gC,KACb4yC,EAAK6B,MAAQkB,EAAQ/C,EAAK6B,MAAOzrE,EAAKC,EAAKM,GAGhB=
,IAApBqpE,EAAKhS,MAAM5gC,OAClB4yC,EAAK6B,MAAQmB,EAAMhD,EAAK6B,MAAOzrE,EAA=
KC,EAAKM,IAG3CqpE,EAAKY,SAAWvqE,EAChB2pE,EAAK0B,UAAYrrE,EAEVA,GAaT,QAAS4s=
E,GAAcxgE,EAAGygE,GACxB,GAEI9mE,GACA/F,EAHA8sE,EAAe1gE,EAAE2gE,iBACjBC,EA=
AO5gE,EAAEkgE,SAGTW,EAAW7gE,EAAE8gE,YACbC,EAAa/gE,EAAE+gE,WACfrkE,EAASsD,=
EAAEkgE,SAAYlgE,EAAEghE,OAASC,GAClCjhE,EAAEkgE,UAAYlgE,EAAEghE,OAASC,IAAi=
B,EAE1CC,EAAOlhE,EAAEzR,OAET4yE,EAAQnhE,EAAEohE,OACVC,EAAQrhE,EAAEqhE,KAM=
VC,EAASthE,EAAEkgE,SAAWqB,GACtBC,EAAaN,EAAKN,EAAOC,EAAW,GACpCY,EAAaP,EAAK=
N,EAAOC,EAQzB7gE,GAAE8gE,aAAe9gE,EAAE0hE,aACrBhB,IAAiB,GAKfK,EAAa/gE,EAAE=
2hE,YAAaZ,EAAa/gE,EAAE2hE,UAI/C,GAaE,IAXAhoE,EAAQ8mE,EAWJS,EAAKvnE,EAAQkn=
E,KAAkBY,GAC/BP,EAAKvnE,EAAQknE,EAAW,KAAOW,GAC/BN,EAAKvnE,KAA0BunE,EAAKN,=
IACpCM,IAAOvnE,KAAwBunE,EAAKN,EAAO,GAH/C,CAaAA,GAAQ,EACRjnE,GAMA,UAESunE,=
IAAON,KAAUM,IAAOvnE,IAAUunE,IAAON,KAAUM,IAAOvnE,IAC1DunE,IAAON,KAAUM,IAAO=
vnE,IAAUunE,IAAON,KAAUM,IAAOvnE,IAC1DunE,IAAON,KAAUM,IAAOvnE,IAAUunE,IAAO=
N,KAAUM,IAAOvnE,IAC1DunE,IAAON,KAAUM,IAAOvnE,IAAUunE,IAAON,KAAUM,IAAOvnE,=
IACnD2nE,EAAPV,EAOT,IAHAhtE,EAAM2tE,IAAaD,EAASV,GAC5BA,EAAOU,EAASC,GAEZ3t=
E,EAAMitE,EAAU,CAGlB,GAFA7gE,EAAE4hE,YAAcnB,EAChBI,EAAWjtE,EACPA,GAAOmtE,=
EACT,KAEFS,GAAaN,EAAKN,EAAOC,EAAW,GACpCY,EAAaP,EAAKN,EAAOC,WAEnBJ,EAAYY,E=
AAKZ,EAAYU,IAAUzkE,GAA4B,MAAjBgkE,EAE5D,OAAIG,IAAY7gE,EAAE2hE,UACTd,EAEF7=
gE,EAAE2hE,UAcX,QAASE,GAAY7hE,GACnB,GACIlU,GAAGyM,EAAG3M,EAAGk2E,EAAM5pE,=
EADf6pE,EAAU/hE,EAAEghE,MAKhB,GAAG,CAqBD,GApBAc,EAAO9hE,EAAEgiE,YAAchiE,E=
AAE2hE,UAAY3hE,EAAEkgE,SAoBnClgE,EAAEkgE,UAAY6B,GAAWA,EAAUd,IAAgB,CAErDvB=
,EAAMC,SAAS3/D,EAAEzR,OAAQyR,EAAEzR,OAAQwzE,EAASA,EAAS,GACrD/hE,EAAE4hE,a=
AAeG,EACjB/hE,EAAEkgE,UAAY6B,EAEd/hE,EAAEigE,aAAe8B,EASjBxpE,EAAIyH,EAAEi=
iE,UACNn2E,EAAIyM,CACJ,GACE3M,GAAIoU,EAAEo4B,OAAOtsC,GACbkU,EAAEo4B,KAAKt=
sC,GAAMF,GAAKm2E,EAAUn2E,EAAIm2E,EAAU,UACjCxpE,EAEXA,GAAIwpE,EACJj2E,EAAI=
yM,CACJ,GACE3M,GAAIoU,EAAEqhE,OAAOv1E,GACbkU,EAAEqhE,KAAKv1E,GAAMF,GAAKm2=
E,EAAUn2E,EAAIm2E,EAAU,UAIjCxpE,EAEXupE,IAAQC,EAEV,GAAwB,IAApB/hE,EAAEu9D=
,KAAKW,SACT,KAmBF,IAJA3lE,EAAI8nE,EAASrgE,EAAEu9D,KAAMv9D,EAAEzR,OAAQyR,E=
AAEkgE,SAAWlgE,EAAE2hE,UAAWG,GACzD9hE,EAAE2hE,WAAappE,EAGXyH,EAAE2hE,UAAY=
3hE,EAAEkiE,QAAUC,GAS5B,IARAjqE,EAAM8H,EAAEkgE,SAAWlgE,EAAEkiE,OACrBliE,E=
AAEoiE,MAAQpiE,EAAEzR,OAAO2J,GAGnB8H,EAAEoiE,OAAUpiE,EAAEoiE,OAASpiE,EAAE=
qiE,WAAcriE,EAAEzR,OAAO2J,EAAM,IAAM8H,EAAEsiE,UAIvDtiE,EAAEkiE,SAEPliE,EA=
AEoiE,OAAUpiE,EAAEoiE,OAASpiE,EAAEqiE,WAAcriE,EAAEzR,OAAO2J,EAAMiqE,GAAU,=
IAAMniE,EAAEsiE,UAExEtiE,EAAEqhE,KAAKnpE,EAAM8H,EAAEohE,QAAUphE,EAAEo4B,K=
AAKp4B,EAAEoiE,OAClCpiE,EAAEo4B,KAAKp4B,EAAEoiE,OAASlqE,EAClBA,IACA8H,EAA=
EkiE,WACEliE,EAAE2hE,UAAY3hE,EAAEkiE,OAASC,cAS1BniE,EAAE2hE,UAAYV,IAAqC,I=
AApBjhE,EAAEu9D,KAAKW,UAiDjD,QAASqE,GAAeviE,EAAG83D,GAIzB,GAAI0K,GAAiB,KA=
OrB,KALIA,EAAiBxiE,EAAEyiE,iBAAmB,IACxCD,EAAiBxiE,EAAEyiE,iBAAmB,KAI/B,CA=
EP,GAAIziE,EAAE2hE,WAAa,EAAG,CAUpB,GADAE,EAAY7hE,GACQ,IAAhBA,EAAE2hE,WAAm=
B7J,IAAUC,EACjC,MAAO2K,GAGT,IAAoB,IAAhB1iE,EAAE2hE,UACJ,MAOJ3hE,EAAEkgE,U=
AAYlgE,EAAE2hE,UAChB3hE,EAAE2hE,UAAY,CAGd,IAAIgB,GAAY3iE,EAAEigE,YAAcuC,C=
AEhC,KAAmB,IAAfxiE,EAAEkgE,UAAkBlgE,EAAEkgE,UAAYyC,KAEpC3iE,EAAE2hE,UAAY3=
hE,EAAEkgE,SAAWyC,EAC3B3iE,EAAEkgE,SAAWyC,EAEb7C,EAAiB9/D,GAAG,GACK,IAArB=
A,EAAEu9D,KAAKa,WACT,MAAOsE,GASX,IAAI1iE,EAAEkgE,SAAWlgE,EAAEigE,aAAgBjgE=
,EAAEghE,OAASC,KAE5CnB,EAAiB9/D,GAAG,GACK,IAArBA,EAAEu9D,KAAKa,WACT,MAAOs=
E,IAQb,MAFA1iE,GAAEkiE,OAAS,EAEPpK,IAAUtB,GAEZsJ,EAAiB9/D,GAAG,GACK,IAArB=
A,EAAEu9D,KAAKa,UACFwE,GAGFC,IAGL7iE,EAAEkgE,SAAWlgE,EAAEigE,cAEjBH,EAAiB=
9/D,GAAG,GACK,IAArBA,EAAEu9D,KAAKa,WACFsE,GAKJA,GAUT,QAASI,GAAa9iE,EAAG83=
D,GAIvB,IAHA,GAAIiL,GACAC,IAEK,CAMP,GAAIhjE,EAAE2hE,UAAYV,GAAe,CAE/B,GADA=
Y,EAAY7hE,GACRA,EAAE2hE,UAAYV,IAAiBnJ,IAAUC,EAC3C,MAAO2K,GAET,IAAoB,IAAhB=
1iE,EAAE2hE,UACJ,MA2BJ,GApBAoB,EAAY,EACR/iE,EAAE2hE,WAAaQ,KAEjBniE,EAAEoi=
E,OAAUpiE,EAAEoiE,OAASpiE,EAAEqiE,WAAcriE,EAAEzR,OAAOyR,EAAEkgE,SAAWiC,GA=
AY,IAAMniE,EAAEsiE,UACjFS,EAAY/iE,EAAEqhE,KAAKrhE,EAAEkgE,SAAWlgE,EAAEohE=
,QAAUphE,EAAEo4B,KAAKp4B,EAAEoiE,OACrDpiE,EAAEo4B,KAAKp4B,EAAEoiE,OAASpiE=
,EAAEkgE,UAOJ,IAAd6C,GAA4B/iE,EAAEkgE,SAAW6C,GAAe/iE,EAAEghE,OAASC,KAKrEj=
hE,EAAEijE,aAAezC,EAAcxgE,EAAG+iE,IAGhC/iE,EAAEijE,cAAgBd,GAYpB,GAPAa,EAA=
SjD,EAAMmD,UAAUljE,EAAGA,EAAEkgE,SAAWlgE,EAAE4hE,YAAa5hE,EAAEijE,aAAed,IA=
EzEniE,EAAE2hE,WAAa3hE,EAAEijE,aAKbjjE,EAAEijE,cAAgBjjE,EAAEmjE,gBAAuCnjE=
,EAAE2hE,WAAaQ,GAAW,CACvFniE,EAAEijE,cACF,GACEjjE,GAAEkgE,WAEFlgE,EAAEoiE=
,OAAUpiE,EAAEoiE,OAASpiE,EAAEqiE,WAAcriE,EAAEzR,OAAOyR,EAAEkgE,SAAWiC,GAA=
Y,IAAMniE,EAAEsiE,UACjFS,EAAY/iE,EAAEqhE,KAAKrhE,EAAEkgE,SAAWlgE,EAAEohE,=
QAAUphE,EAAEo4B,KAAKp4B,EAAEoiE,OACrDpiE,EAAEo4B,KAAKp4B,EAAEoiE,OAASpiE,=
EAAEkgE,eAKQ,MAAnBlgE,EAAEijE,aACbjjE,GAAEkgE,eAGFlgE,GAAEkgE,UAAYlgE,EAA=
EijE,aAChBjjE,EAAEijE,aAAe,EACjBjjE,EAAEoiE,MAAQpiE,EAAEzR,OAAOyR,EAAEkgE=
,UAErBlgE,EAAEoiE,OAAUpiE,EAAEoiE,OAASpiE,EAAEqiE,WAAcriE,EAAEzR,OAAOyR,E=
AAEkgE,SAAW,IAAMlgE,EAAEsiE,cAavEU,GAASjD,EAAMmD,UAAUljE,EAAG,EAAGA,EAAEz=
R,OAAOyR,EAAEkgE,WAE1ClgE,EAAE2hE,YACF3hE,EAAEkgE,UAEJ,IAAI8C,IAEFlD,EAAi=
B9/D,GAAG,GACK,IAArBA,EAAEu9D,KAAKa,WACT,MAAOsE,IAMb,MADA1iE,GAAEkiE,OAAW=
liE,EAAEkgE,SAAYiC,GAAU,EAAMniE,EAAEkgE,SAAWiC,GAAU,EAC9DrK,IAAUtB,GAEZsJ=
,EAAiB9/D,GAAG,GACK,IAArBA,EAAEu9D,KAAKa,UACFwE,GAGFC,IAEL7iE,EAAEojE,WAE=
JtD,EAAiB9/D,GAAG,GACK,IAArBA,EAAEu9D,KAAKa,WACFsE,GAIJW,GAQT,QAASC,GAAat=
jE,EAAG83D,GAOvB,IANA,GAAIiL,GACAC,EAEAO,IAGK,CAMP,GAAIvjE,EAAE2hE,UAAYV,=
GAAe,CAE/B,GADAY,EAAY7hE,GACRA,EAAE2hE,UAAYV,IAAiBnJ,IAAUC,EAC3C,MAAO2K,G=
AET,IAAoB,IAAhB1iE,EAAE2hE,UAAmB,MA0C3B,GApCAoB,EAAY,EACR/iE,EAAE2hE,WAAa=
Q,KAEjBniE,EAAEoiE,OAAUpiE,EAAEoiE,OAASpiE,EAAEqiE,WAAcriE,EAAEzR,OAAOyR,=
EAAEkgE,SAAWiC,GAAY,IAAMniE,EAAEsiE,UACjFS,EAAY/iE,EAAEqhE,KAAKrhE,EAAEkg=
E,SAAWlgE,EAAEohE,QAAUphE,EAAEo4B,KAAKp4B,EAAEoiE,OACrDpiE,EAAEo4B,KAAKp4=
B,EAAEoiE,OAASpiE,EAAEkgE,UAMtBlgE,EAAE8gE,YAAc9gE,EAAEijE,aAClBjjE,EAAEw=
jE,WAAaxjE,EAAE4hE,YACjB5hE,EAAEijE,aAAed,GAAU,EAET,IAAdY,GAA0B/iE,EAAE8g=
E,YAAc9gE,EAAEmjE,gBAC5CnjE,EAAEkgE,SAAW6C,GAAc/iE,EAAEghE,OAAOC,KAKtCjhE=
,EAAEijE,aAAezC,EAAcxgE,EAAG+iE,GAG9B/iE,EAAEijE,cAAgB,IAClBjjE,EAAEg5D,W=
AAaC,GAAej5D,EAAEijE,eAAiBd,IAAaniE,EAAEkgE,SAAWlgE,EAAE4hE,YAAc,QAK7F5hE=
,EAAEijE,aAAed,GAAU,IAM3BniE,EAAE8gE,aAAeqB,IAAaniE,EAAEijE,cAAgBjjE,EAAE=
8gE,YAAa,CACjEyC,EAAavjE,EAAEkgE,SAAWlgE,EAAE2hE,UAAYQ,GAOxCa,EAASjD,EAAM=
mD,UAAUljE,EAAGA,EAAEkgE,SAAW,EAAGlgE,EAAEwjE,WAAYxjE,EAAE8gE,YAAcqB,IAM1=
EniE,EAAE2hE,WAAa3hE,EAAE8gE,YAAY,EAC7B9gE,EAAE8gE,aAAe,CACjB,KACQ9gE,EAA=
EkgE,UAAYqD,IAElBvjE,EAAEoiE,OAAUpiE,EAAEoiE,OAASpiE,EAAEqiE,WAAcriE,EAAE=
zR,OAAOyR,EAAEkgE,SAAWiC,GAAY,IAAMniE,EAAEsiE,UACjFS,EAAY/iE,EAAEqhE,KAAK=
rhE,EAAEkgE,SAAWlgE,EAAEohE,QAAUphE,EAAEo4B,KAAKp4B,EAAEoiE,OACrDpiE,EAAE=
o4B,KAAKp4B,EAAEoiE,OAASpiE,EAAEkgE,gBAGK,MAAlBlgE,EAAE8gE,YAKb,IAJA9gE,E=
AAEyjE,gBAAkB,EACpBzjE,EAAEijE,aAAed,GAAU,EAC3BniE,EAAEkgE,WAEE8C,IAEFlD,=
EAAiB9/D,GAAG,GACK,IAArBA,EAAEu9D,KAAKa,WACT,MAAOsE,QAKN,IAAI1iE,EAAEyjE,=
iBAgBX,GATAT,EAASjD,EAAMmD,UAAUljE,EAAG,EAAGA,EAAEzR,OAAOyR,EAAEkgE,SAAS,=
IAE/C8C,GAEFlD,EAAiB9/D,GAAG,GAGtBA,EAAEkgE,WACFlgE,EAAE2hE,YACuB,IAArB3h=
E,EAAEu9D,KAAKa,UACT,MAAOsE,QAMT1iE,GAAEyjE,gBAAkB,EACpBzjE,EAAEkgE,WACFl=
gE,EAAE2hE,YAYN,MARI3hE,GAAEyjE,kBAGJT,EAASjD,EAAMmD,UAAUljE,EAAG,EAAGA,E=
AAEzR,OAAOyR,EAAEkgE,SAAS,IAEnDlgE,EAAEyjE,gBAAkB,GAEtBzjE,EAAEkiE,OAASli=
E,EAAEkgE,SAAWiC,GAAU,EAAIniE,EAAEkgE,SAAWiC,GAAU,EACzDrK,IAAUtB,GAEZsJ,E=
AAiB9/D,GAAG,GACK,IAArBA,EAAEu9D,KAAKa,UACFwE,GAGFC,IAEL7iE,EAAEojE,WAEJt=
D,EAAiB9/D,GAAG,GACK,IAArBA,EAAEu9D,KAAKa,WACFsE,GAKJW,GAST,QAASK,GAAY1jE=
,EAAG83D,GAOtB,IANA,GAAIkL,GACA3B,EACAT,EAAMU,EAENJ,EAAOlhE,EAAEzR,SAEJ,C=
AKP,GAAIyR,EAAE2hE,WAAaJ,GAAW,CAE5B,GADAM,EAAY7hE,GACRA,EAAE2hE,WAAaJ,IAA=
azJ,IAAUC,EACxC,MAAO2K,GAET,IAAoB,IAAhB1iE,EAAE2hE,UAAmB,MAK3B,GADA3hE,EA=
AEijE,aAAe,EACbjjE,EAAE2hE,WAAaQ,IAAaniE,EAAEkgE,SAAW,IAC3CU,EAAO5gE,EAAE=
kgE,SAAW,EACpBmB,EAAOH,EAAKN,GACRS,IAASH,IAAON,IAASS,IAASH,IAAON,IAASS,IA=
ASH,IAAON,IAAO,CAC3EU,EAASthE,EAAEkgE,SAAWqB,EACtB,UAESF,IAASH,IAAON,IAAS=
S,IAASH,IAAON,IACzCS,IAASH,IAAON,IAASS,IAASH,IAAON,IACzCS,IAASH,IAAON,IAA=
SS,IAASH,IAAON,IACzCS,IAASH,IAAON,IAASS,IAASH,IAAON,IAClCU,EAAPV,EACT5gE,=
GAAEijE,aAAe1B,IAAaD,EAASV,GACnC5gE,EAAEijE,aAAejjE,EAAE2hE,YACrB3hE,EAAE=
ijE,aAAejjE,EAAE2hE,WAyBzB,GAlBI3hE,EAAEijE,cAAgBd,IAIpBa,EAASjD,EAAMmD,U=
AAUljE,EAAG,EAAGA,EAAEijE,aAAed,IAEhDniE,EAAE2hE,WAAa3hE,EAAEijE,aACjBjjE=
,EAAEkgE,UAAYlgE,EAAEijE,aAChBjjE,EAAEijE,aAAe,IAKjBD,EAASjD,EAAMmD,UAAUl=
jE,EAAG,EAAGA,EAAEzR,OAAOyR,EAAEkgE,WAE1ClgE,EAAE2hE,YACF3hE,EAAEkgE,YAEA=
8C,IAEFlD,EAAiB9/D,GAAG,GACK,IAArBA,EAAEu9D,KAAKa,WACT,MAAOsE,IAMb,MADA1i=
E,GAAEkiE,OAAS,EACPpK,IAAUtB,GAEZsJ,EAAiB9/D,GAAG,GACK,IAArBA,EAAEu9D,KAA=
Ka,UACFwE,GAGFC,IAEL7iE,EAAEojE,WAEJtD,EAAiB9/D,GAAG,GACK,IAArBA,EAAEu9D,=
KAAKa,WACFsE,GAIJW,GAOT,QAASM,GAAa3jE,EAAG83D,GAGvB,IAFA,GAAIkL,KAEK,CAEP=
,GAAoB,IAAhBhjE,EAAE2hE,YACJE,EAAY7hE,GACQ,IAAhBA,EAAE2hE,WAAiB,CACrB,GAA=
I7J,IAAUC,EACZ,MAAO2K,GAET,OAWJ,GANA1iE,EAAEijE,aAAe,EAGjBD,EAASjD,EAAMmD=
,UAAUljE,EAAG,EAAGA,EAAEzR,OAAOyR,EAAEkgE,WAC1ClgE,EAAE2hE,YACF3hE,EAAEkg=
E,WACE8C,IAEFlD,EAAiB9/D,GAAG,GACK,IAArBA,EAAEu9D,KAAKa,WACT,MAAOsE,IAMb,=
MADA1iE,GAAEkiE,OAAS,EACPpK,IAAUtB,GAEZsJ,EAAiB9/D,GAAG,GACK,IAArBA,EAAEu=
9D,KAAKa,UACFwE,GAGFC,IAEL7iE,EAAEojE,WAEJtD,EAAiB9/D,GAAG,GACK,IAArBA,EA=
AEu9D,KAAKa,WACFsE,GAIJW,GAqCT,QAASO,GAAQ5jE,GACfA,EAAEgiE,YAAc,EAAIhiE,E=
AAEghE,OAGtBzB,EAAKv/D,EAAEo4B,MAIPp4B,EAAEmjE,eAAiBU,EAAoB7jE,EAAE04D,OA=
AOoL,SAChD9jE,EAAE0hE,WAAamC,EAAoB7jE,EAAE04D,OAAOqL,YAC5C/jE,EAAE+gE,WAA=
a8C,EAAoB7jE,EAAE04D,OAAOsL,YAC5ChkE,EAAE2gE,iBAAmBkD,EAAoB7jE,EAAE04D,OA=
AOuL,UAElDjkE,EAAEkgE,SAAW,EACblgE,EAAEigE,YAAc,EAChBjgE,EAAE2hE,UAAY,EAC=
d3hE,EAAEkiE,OAAS,EACXliE,EAAEijE,aAAejjE,EAAE8gE,YAAcqB,GAAY,EAC7CniE,EA=
AEyjE,gBAAkB,EACpBzjE,EAAEoiE,MAAQ,EAIZ,QAAS8B,KACPl4E,KAAKuxE,KAAO,KACZv=
xE,KAAKwxE,OAAS,EACdxxE,KAAK4zE,YAAc,KACnB5zE,KAAKy2E,iBAAmB,EACxBz2E,KAA=
K6zE,YAAc,EACnB7zE,KAAKyzE,QAAU,EACfzzE,KAAK2+B,KAAO,EACZ3+B,KAAKm4E,OAAS=
,KACdn4E,KAAKo4E,QAAU,EACfp4E,KAAKgrC,OAAS0mC,EACd1xE,KAAKq4E,WAAa,GAElBr=
4E,KAAKg1E,OAAS,EACdh1E,KAAKs4E,OAAS,EACdt4E,KAAKo1E,OAAS,EAEdp1E,KAAKuC,=
OAAS,KAQdvC,KAAKg2E,YAAc,EAKnBh2E,KAAKq1E,KAAO,KAMZr1E,KAAKosC,KAAO,KAEZp=
sC,KAAKo2E,MAAQ,EACbp2E,KAAKi2E,UAAY,EACjBj2E,KAAKu4E,UAAY,EACjBv4E,KAAKs=
2E,UAAY,EAEjBt2E,KAAKq2E,WAAa,EAOlBr2E,KAAKi0E,YAAc,EAKnBj0E,KAAKi3E,aAAe=
,EACpBj3E,KAAKw3E,WAAa,EAClBx3E,KAAKy3E,gBAAkB,EACvBz3E,KAAKk0E,SAAW,EACh=
Bl0E,KAAK41E,YAAc,EACnB51E,KAAK21E,UAAY,EAEjB31E,KAAK80E,YAAc,EAKnB90E,KA=
AK20E,iBAAmB,EAMxB30E,KAAKm3E,eAAiB,EAYtBn3E,KAAK0sE,MAAQ,EACb1sE,KAAKgtE=
,SAAW,EAEhBhtE,KAAK01E,WAAa,EAGlB11E,KAAK+0E,WAAa,EAYlB/0E,KAAKw4E,UAAa,G=
AAI9E,GAAM+E,MAAkB,EAAZC,IAClC14E,KAAK24E,UAAa,GAAIjF,GAAM+E,MAAsB,GAAf,E=
AAEG,GAAQ,IAC7C54E,KAAK64E,QAAa,GAAInF,GAAM+E,MAAuB,GAAhB,EAAEK,GAAS,IAC9=
CvF,EAAKvzE,KAAKw4E,WACVjF,EAAKvzE,KAAK24E,WACVpF,EAAKvzE,KAAK64E,SAEV74E=
,KAAK+4E,OAAW,KAChB/4E,KAAKg5E,OAAW,KAChBh5E,KAAKi5E,QAAW,KAGhBj5E,KAAKk5=
E,SAAW,GAAIxF,GAAM+E,MAAMU,GAAS,GAIzCn5E,KAAKo5E,KAAO,GAAI1F,GAAM+E,MAAM,=
EAAEY,GAAQ,GACtC9F,EAAKvzE,KAAKo5E,MAEVp5E,KAAKs5E,SAAW,EAChBt5E,KAAKu5E,=
SAAW,EAKhBv5E,KAAKw5E,MAAQ,GAAI9F,GAAM+E,MAAM,EAAEY,GAAQ,GACvC9F,EAAKvzE,=
KAAKw5E,OAIVx5E,KAAKy5E,MAAQ,EAEbz5E,KAAK05E,YAAc,EAoBnB15E,KAAKo3E,SAAW,=
EAEhBp3E,KAAK25E,MAAQ,EAMb35E,KAAK45E,QAAU,EACf55E,KAAK65E,WAAa,EAClB75E,=
KAAK6kC,QAAU,EACf7kC,KAAKk2E,OAAS,EAGdl2E,KAAK85E,OAAS,EAId95E,KAAK+5E,SA=
AW,EAgBlB,QAASC,GAAiBzI,GACxB,GAAIv9D,EAEJ,OAAKu9D,IAASA,EAAKhS,OAInBgS,E=
AAK0B,SAAW1B,EAAK2B,UAAY,EACjC3B,EAAK4B,UAAY8G,EAEjBjmE,EAAIu9D,EAAKhS,MA=
CTvrD,EAAEy/D,QAAU,EACZz/D,EAAE6/D,YAAc,EAEZ7/D,EAAE2qB,KAAO,IACX3qB,EAAE=
2qB,MAAQ3qB,EAAE2qB,MAGd3qB,EAAEw9D,OAAUx9D,EAAE2qB,KAAOu7C,GAAaC,GAClC5I=
,EAAK6B,MAAoB,IAAXp/D,EAAE2qB,KACd,EAEA,EACF3qB,EAAEqkE,WAAatM,EACfgI,EAA=
MqG,SAASpmE,GACRq6D,GArBElU,EAAIoX,EAAM9C,GAyBrB,QAAS+D,GAAajB,GACpB,GAAI=
xmE,GAAMivE,EAAiBzI,EAI3B,OAHIxmE,KAAQsjE,GACVuJ,EAAQrG,EAAKhS,OAERx0D,EA=
IT,QAASsvE,GAAiB9I,EAAMnlC,GAC9B,MAAKmlC,IAASA,EAAKhS,MACK,IAApBgS,EAAKhS=
,MAAM5gC,KAAqB8vC,GACpC8C,EAAKhS,MAAM4Y,OAAS/rC,EACbiiC,GAH4BI,EAOrC,QAAS=
gD,GAAaF,EAAM7E,EAAO1hC,EAAQuhC,EAAYM,EAAUG,GAC/D,IAAKuE,EACH,MAAO9C,EAET=
,IAAI9vC,GAAO,CAiBX,IAfI+tC,IAAUgB,IACZhB,EAAQ,GAGO,EAAbH,GACF5tC,EAAO,EA=
CP4tC,GAAcA,GAGPA,EAAa,KACpB5tC,EAAO,EACP4tC,GAAc,IAID,EAAXM,GAAgBA,EAAWy=
N,GAAiBtvC,IAAW0mC,GAC5C,EAAbnF,GAAkBA,EAAa,IAAc,EAARG,GAAaA,EAAQ,GAC/C,E=
AAXM,GAAgBA,EAAWI,EAC3B,MAAOjT,GAAIoX,EAAM9C,EAIA,KAAflC,IACFA,EAAa,EAIf,=
IAAIv4D,GAAI,GAAIkkE,EAmCZ,OAjCA3G,GAAKhS,MAAQvrD,EACbA,EAAEu9D,KAAOA,EAE=
Tv9D,EAAE2qB,KAAOA,EACT3qB,EAAEmkE,OAAS,KACXnkE,EAAEskE,OAAS/L,EACXv4D,EA=
AEghE,OAAS,GAAKhhE,EAAEskE,OAClBtkE,EAAEohE,OAASphE,EAAEghE,OAAS,EAEtBhhE=
,EAAEukE,UAAY1L,EAAW,EACzB74D,EAAEiiE,UAAY,GAAKjiE,EAAEukE,UACrBvkE,EAAEs=
iE,UAAYtiE,EAAEiiE,UAAY,EAC5BjiE,EAAEqiE,eAAiBriE,EAAEukE,UAAYpC,GAAY,GAA=
KA,IAElDniE,EAAEzR,OAAS,GAAImxE,GAAM6G,KAAgB,EAAXvmE,EAAEghE,QAC5BhhE,EAA=
Eo4B,KAAO,GAAIsnC,GAAM+E,MAAMzkE,EAAEiiE,WAC3BjiE,EAAEqhE,KAAO,GAAI3B,GAA=
M+E,MAAMzkE,EAAEghE,QAK3BhhE,EAAE0lE,YAAc,GAAM7M,EAAW,EAEjC74D,EAAEyiE,iB=
AAmC,EAAhBziE,EAAE0lE,YACvB1lE,EAAE4/D,YAAc,GAAIF,GAAM6G,KAAKvmE,EAAEyiE,=
kBAEjCziE,EAAE2lE,MAAQ3lE,EAAE0lE,aAAe,EAC3B1lE,EAAEylE,MAAQ,EAAUzlE,EAAE=
0lE,YAEtB1lE,EAAE04D,MAAQA,EACV14D,EAAEg5D,SAAWA,EACbh5D,EAAEg3B,OAASA,EA=
EJwnC,EAAajB,GAGtB,QAASiJ,GAAYjJ,EAAM7E,GACzB,MAAO+E,GAAaF,EAAM7E,EAAOgF,=
EAAY+I,EAAWC,EAAerN,GAIzE,QAAS5D,GAAQ8H,EAAMzF,GACrB,GAAI6O,GAAW3mE,EACX4=
mE,EAAK9sE,CAET,KAAKyjE,IAASA,EAAKhS,OACjBuM,EAAQK,GAAmB,EAARL,EACnB,MAAO=
yF,GAAOpX,EAAIoX,EAAM9C,GAAkBA,CAK5C,IAFAz6D,EAAIu9D,EAAKhS,OAEJgS,EAAKh+=
D,SACJg+D,EAAK75C,OAA2B,IAAlB65C,EAAKW,UACpBl+D,EAAEw9D,SAAWqJ,IAAgB/O,IA=
AUtB,EAC1C,MAAOrQ,GAAIoX,EAA0B,IAAnBA,EAAKa,UAAmBxD,EAAcH,EAQ1D,IALAz6D,E=
AAEu9D,KAAOA,EACToJ,EAAY3mE,EAAEqkE,WACdrkE,EAAEqkE,WAAavM,EAGX93D,EAAEw9=
D,SAAW0I,GAEf,GAAe,IAAXlmE,EAAE2qB,KACJ4yC,EAAK6B,MAAQ,EACbe,EAASngE,EAAG=
,IACZmgE,EAASngE,EAAG,KACZmgE,EAASngE,EAAG,GACPA,EAAEmkE,QAaLhE,EAASngE,G=
AAIA,EAAEmkE,OAAOhgE,KAAO,EAAI,IACpBnE,EAAEmkE,OAAO2C,KAAO,EAAI,IACnB9mE,=
EAAEmkE,OAAO4C,MAAY,EAAJ,IACjB/mE,EAAEmkE,OAAO/zE,KAAW,EAAJ,IAChB4P,EAAEm=
kE,OAAO6C,QAAc,GAAJ,IAEjC7G,EAASngE,EAAmB,IAAhBA,EAAEmkE,OAAO8C,MACrB9G,E=
AASngE,EAAIA,EAAEmkE,OAAO8C,MAAQ,EAAK,KACnC9G,EAASngE,EAAIA,EAAEmkE,OAAO8=
C,MAAQ,GAAM,KACpC9G,EAASngE,EAAIA,EAAEmkE,OAAO8C,MAAQ,GAAM,KACpC9G,EAASng=
E,EAAe,IAAZA,EAAE04D,MAAc,EACf14D,EAAEg5D,UAAYE,GAAkBl5D,EAAE04D,MAAQ,EAC=
1C,EAAI,GACjByH,EAASngE,EAAiB,IAAdA,EAAEmkE,OAAO+C,IACjBlnE,EAAEmkE,OAAO4=
C,OAAS/mE,EAAEmkE,OAAO4C,MAAMz1E,SACnC6uE,EAASngE,EAA2B,IAAxBA,EAAEmkE,OA=
AO4C,MAAMz1E,QAC3B6uE,EAASngE,EAAIA,EAAEmkE,OAAO4C,MAAMz1E,QAAU,EAAK,MAEz=
C0O,EAAEmkE,OAAO2C,OACXvJ,EAAK6B,MAAQmB,EAAMhD,EAAK6B,MAAOp/D,EAAE4/D,YAA=
a5/D,EAAEy/D,QAAS,IAE3Dz/D,EAAEokE,QAAU,EACZpkE,EAAEw9D,OAAS2J,KAlCXhH,EA=
ASngE,EAAG,GACZmgE,EAASngE,EAAG,GACZmgE,EAASngE,EAAG,GACZmgE,EAASngE,EAAG=
,GACZmgE,EAASngE,EAAG,GACZmgE,EAASngE,EAAe,IAAZA,EAAE04D,MAAc,EACf14D,EAA=
Eg5D,UAAYE,GAAkBl5D,EAAE04D,MAAQ,EAC1C,EAAI,GACjByH,EAASngE,EAAGonE,IACZp=
nE,EAAEw9D,OAAS2I,QA6Bf,CACE,GAAIt9D,GAAU60D,GAAe19D,EAAEskE,OAAS,GAAM,IA=
AO,EACjD+C,EAAc,EAGhBA,GADErnE,EAAEg5D,UAAYE,GAAkBl5D,EAAE04D,MAAQ,EAC9B,=
EACL14D,EAAE04D,MAAQ,EACL,EACO,IAAZ14D,EAAE04D,MACG,EAEA,EAEhB7vD,GAAWw+D=
,GAAe,EACP,IAAfrnE,EAAEkgE,WAAkBr3D,GAAUy+D,IAClCz+D,GAAU,GAAMA,EAAS,GAEz=
B7I,EAAEw9D,OAAS2I,GACX/F,EAAYpgE,EAAG6I,GAGI,IAAf7I,EAAEkgE,WACJE,EAAYpg=
E,EAAGu9D,EAAK6B,QAAU,IAC9BgB,EAAYpgE,EAAgB,MAAbu9D,EAAK6B,QAEtB7B,EAAK6B=
,MAAQ,EAKjB,GAAIp/D,EAAEw9D,SAAW2J,GACf,GAAInnE,EAAEmkE,OAAO4C,MAAqB,CAGh=
C,IAFAH,EAAM5mE,EAAEy/D,QAEDz/D,EAAEokE,SAAmC,MAAxBpkE,EAAEmkE,OAAO4C,MAA=
Mz1E,UAC7B0O,EAAEy/D,UAAYz/D,EAAEyiE,mBACdziE,EAAEmkE,OAAO2C,MAAQ9mE,EAAE=
y/D,QAAUmH,IAC/BrJ,EAAK6B,MAAQmB,EAAMhD,EAAK6B,MAAOp/D,EAAE4/D,YAAa5/D,EA=
AEy/D,QAAUmH,EAAKA,IAEjEpH,EAAcjC,GACdqJ,EAAM5mE,EAAEy/D,QACJz/D,EAAEy/D,=
UAAYz/D,EAAEyiE,oBAItBtC,EAASngE,EAA+B,IAA5BA,EAAEmkE,OAAO4C,MAAM/mE,EAAE=
okE,UAC7BpkE,EAAEokE,SAEApkE,GAAEmkE,OAAO2C,MAAQ9mE,EAAEy/D,QAAUmH,IAC/Br=
J,EAAK6B,MAAQmB,EAAMhD,EAAK6B,MAAOp/D,EAAE4/D,YAAa5/D,EAAEy/D,QAAUmH,EAAK=
A,IAE7D5mE,EAAEokE,UAAYpkE,EAAEmkE,OAAO4C,MAAMz1E,SAC/B0O,EAAEokE,QAAU,EA=
CZpkE,EAAEw9D,OAAS+J,QAIbvnE,GAAEw9D,OAAS+J,EAGf,IAAIvnE,EAAEw9D,SAAW+J,G=
ACf,GAAIvnE,EAAEmkE,OAAO/zE,KAAoB,CAC/Bw2E,EAAM5mE,EAAEy/D,OAGR,GAAG,CACD=
,GAAIz/D,EAAEy/D,UAAYz/D,EAAEyiE,mBACdziE,EAAEmkE,OAAO2C,MAAQ9mE,EAAEy/D,=
QAAUmH,IAC/BrJ,EAAK6B,MAAQmB,EAAMhD,EAAK6B,MAAOp/D,EAAE4/D,YAAa5/D,EAAEy/=
D,QAAUmH,EAAKA,IAEjEpH,EAAcjC,GACdqJ,EAAM5mE,EAAEy/D,QACJz/D,EAAEy/D,UAAY=
z/D,EAAEyiE,kBAAkB,CACpC3oE,EAAM,CACN,OAKFA,EADEkG,EAAEokE,QAAUpkE,EAAEmk=
E,OAAO/zE,KAAKkB,OACkB,IAAxC0O,EAAEmkE,OAAO/zE,KAAKsI,WAAWsH,EAAEokE,WAE3=
B,EAERjE,EAASngE,EAAGlG,SACG,IAARA,EAELkG,GAAEmkE,OAAO2C,MAAQ9mE,EAAEy/D,=
QAAUmH,IAC/BrJ,EAAK6B,MAAQmB,EAAMhD,EAAK6B,MAAOp/D,EAAE4/D,YAAa5/D,EAAEy/=
D,QAAUmH,EAAKA,IAErD,IAAR9sE,IACFkG,EAAEokE,QAAU,EACZpkE,EAAEw9D,OAASgK,Q=
AIbxnE,GAAEw9D,OAASgK,EAGf,IAAIxnE,EAAEw9D,SAAWgK,GACf,GAAIxnE,EAAEmkE,OA=
AO6C,QAAuB,CAClCJ,EAAM5mE,EAAEy/D,OAGR,GAAG,CACD,GAAIz/D,EAAEy/D,UAAYz/D,=
EAAEyiE,mBACdziE,EAAEmkE,OAAO2C,MAAQ9mE,EAAEy/D,QAAUmH,IAC/BrJ,EAAK6B,MAA=
QmB,EAAMhD,EAAK6B,MAAOp/D,EAAE4/D,YAAa5/D,EAAEy/D,QAAUmH,EAAKA,IAEjEpH,EA=
AcjC,GACdqJ,EAAM5mE,EAAEy/D,QACJz/D,EAAEy/D,UAAYz/D,EAAEyiE,kBAAkB,CACpC3=
oE,EAAM,CACN,OAKFA,EADEkG,EAAEokE,QAAUpkE,EAAEmkE,OAAO6C,QAAQ11E,OACkB,IA=
A3C0O,EAAEmkE,OAAO6C,QAAQtuE,WAAWsH,EAAEokE,WAE9B,EAERjE,EAASngE,EAAGlG,S=
ACG,IAARA,EAELkG,GAAEmkE,OAAO2C,MAAQ9mE,EAAEy/D,QAAUmH,IAC/BrJ,EAAK6B,MAA=
QmB,EAAMhD,EAAK6B,MAAOp/D,EAAE4/D,YAAa5/D,EAAEy/D,QAAUmH,EAAKA,IAErD,IAAR=
9sE,IACFkG,EAAEw9D,OAASiK,QAIbznE,GAAEw9D,OAASiK,EAsBf,IAnBIznE,EAAEw9D,S=
AAWiK,KACXznE,EAAEmkE,OAAO2C,MACP9mE,EAAEy/D,QAAU,EAAIz/D,EAAEyiE,kBACpBj=
D,EAAcjC,GAEZv9D,EAAEy/D,QAAU,GAAKz/D,EAAEyiE,mBACrBtC,EAASngE,EAAgB,IAAb=
u9D,EAAK6B,OACjBe,EAASngE,EAAIu9D,EAAK6B,OAAS,EAAK,KAChC7B,EAAK6B,MAAQ,EA=
Cbp/D,EAAEw9D,OAAS2I,KAIbnmE,EAAEw9D,OAAS2I,IAMG,IAAdnmE,EAAEy/D,SAEJ,GAD=
AD,EAAcjC,GACS,IAAnBA,EAAKa,UAQP,MADAp+D,GAAEqkE,WAAa,GACRhK,MAOJ,IAAsB,I=
AAlBkD,EAAKW,UAAkBoB,EAAKxH,IAAUwH,EAAKqH,IACpD7O,IAAUtB,EACV,MAAOrQ,GAAI=
oX,EAAM3C,EAInB,IAAI56D,EAAEw9D,SAAWqJ,IAAkC,IAAlBtJ,EAAKW,SACpC,MAAO/X,G=
AAIoX,EAAM3C,EAKnB,IAAsB,IAAlB2C,EAAKW,UAAkC,IAAhBl+D,EAAE2hE,WAC1B7J,IAA=
UC,GAAc/3D,EAAEw9D,SAAWqJ,GAAe,CACrD,GAAIa,GAAU1nE,EAAEg5D,WAAaE,EAAkByK,=
EAAa3jE,EAAG83D,GAC5D93D,EAAEg5D,WAAaG,EAAQuK,EAAY1jE,EAAG83D,GACrC+L,EAA=
oB7jE,EAAE04D,OAAO3lD,KAAK/S,EAAG83D,EAKzC,KAHI4P,IAAW9E,IAAqB8E,IAAW7E,M=
AC7C7iE,EAAEw9D,OAASqJ,IAETa,IAAWhF,IAAgBgF,IAAW9E,GAKxC,MAJuB,KAAnBrF,EA=
AKa,YACPp+D,EAAEqkE,WAAa,IAGVhK,CAST,IAAIqN,IAAWrE,KACTvL,IAAUE,EACZ+H,EA=
AM4H,UAAU3nE,GAET83D,IAAUK,IAEjB4H,EAAM6H,iBAAiB5nE,EAAG,EAAG,GAAG,GAI5B8=
3D,IAAUI,IAEZqH,EAAKv/D,EAAEo4B,MAEa,IAAhBp4B,EAAE2hE,YACJ3hE,EAAEkgE,SAA=
W,EACblgE,EAAEigE,YAAc,EAChBjgE,EAAEkiE,OAAS,KAIjB1C,EAAcjC,GACS,IAAnBA,E=
AAKa,WAEP,MADAp+D,GAAEqkE,WAAa,GACRhK,EAOb,MAAIvC,KAAUtB,EAAmB6D,EAC7Br6D=
,EAAE2qB,MAAQ,EAAY2vC,GAGX,IAAXt6D,EAAE2qB,MACJw1C,EAASngE,EAAgB,IAAbu9D,=
EAAK6B,OACjBe,EAASngE,EAAIu9D,EAAK6B,OAAS,EAAK,KAChCe,EAASngE,EAAIu9D,EAA=
K6B,OAAS,GAAM,KACjCe,EAASngE,EAAIu9D,EAAK6B,OAAS,GAAM,KACjCe,EAASngE,EAAm=
B,IAAhBu9D,EAAK0B,UACjBkB,EAASngE,EAAIu9D,EAAK0B,UAAY,EAAK,KACnCkB,EAASng=
E,EAAIu9D,EAAK0B,UAAY,GAAM,KACpCkB,EAASngE,EAAIu9D,EAAK0B,UAAY,GAAM,OAIpC=
mB,EAAYpgE,EAAGu9D,EAAK6B,QAAU,IAC9BgB,EAAYpgE,EAAgB,MAAbu9D,EAAK6B,QAGtB=
I,EAAcjC,GAIVv9D,EAAE2qB,KAAO,IAAK3qB,EAAE2qB,MAAQ3qB,EAAE2qB,MAET,IAAd3q=
B,EAAEy/D,QAAgBpF,EAAOC,GAGlC,QAASgE,GAAWf,GAClB,GAAIC,EAEJ,OAAKD,IAAsBA,=
EAAKhS,OAIhCiS,EAASD,EAAKhS,MAAMiS,OAChBA,IAAW0I,IACb1I,IAAW2J,IACX3J,IAA=
W+J,IACX/J,IAAWgK,IACXhK,IAAWiK,IACXjK,IAAW2I,IACX3I,IAAWqJ,GAEJ1gB,EAAIo=
X,EAAM9C,IAGnB8C,EAAKhS,MAAQ,KAENiS,IAAW2I,GAAahgB,EAAIoX,EAAM7C,GAAgBL,I=
AjBhDI,EAtrDX,GAigCIoJ,GAjgCAnE,EAAUt0E,EAAoB,IAC9B20E,EAAU30E,EAAoB,IAC9=
Bk1E,EAAUl1E,EAAoB,IAC9Bm1E,EAAUn1E,EAAoB,IAC9B6xE,EAAQ7xE,EAAoB,IAO5B2sE=
,EAAkB,EAClBC,EAAkB,EAElBE,EAAkB,EAClB1B,EAAkB,EAClB2B,EAAkB,EAOlBkC,EAAk=
B,EAClBC,EAAkB,EAGlBG,EAAkB,GAClBC,EAAkB,GAElBE,EAAkB,GAQlBlB,EAAwB,GAGxB=
T,EAAwB,EACxBC,EAAwB,EACxBC,EAAwB,EACxBC,EAAwB,EACxBC,EAAwB,EAMxB4M,EAAwB=
,EAIxBvI,EAAc,EAKd4I,EAAgB,EAEhBG,EAAY,GAEZC,EAAgB,EAGhBmB,GAAgB,GAEhBC,G=
AAgB,IAEhBzC,GAAgByC,GAAW,EAAID,GAE/BjD,GAAgB,GAEhBE,GAAgB,GAEhBJ,GAAgB,E=
AAEW,GAAU,EAE5BF,GAAY,GAGZhD,GAAY,EACZZ,GAAY,IACZN,GAAiBM,GAAYY,GAAY,EAEz=
CmF,GAAc,GAEdpB,GAAa,GACbiB,GAAc,GACdI,GAAa,GACbC,GAAgB,GAChBC,GAAa,IACbt=
B,GAAa,IACbU,GAAe,IAEfnE,GAAoB,EACpBW,GAAoB,EACpBT,GAAoB,EACpBC,GAAoB,EAE=
pBuE,GAAU,EAo5BVW,GAAS,SAAUhE,EAAaD,EAAUE,EAAaC,EAAWlxD,GACpE/mB,KAAK+3E,=
YAAcA,EACnB/3E,KAAK83E,SAAWA,EAChB93E,KAAKg4E,YAAcA,EACnBh4E,KAAKi4E,UAAY=
A,EACjBj4E,KAAK+mB,KAAOA,EAKd8wD,IAEE,GAAIkE,IAAO,EAAG,EAAG,EAAG,EAAGxF,G=
ACvB,GAAIwF,IAAO,EAAG,EAAG,EAAG,EAAGjF,GACvB,GAAIiF,IAAO,EAAG,EAAG,GAAI,E=
AAGjF,GACxB,GAAIiF,IAAO,EAAG,EAAG,GAAI,GAAIjF,GAEzB,GAAIiF,IAAO,EAAG,EAAG=
,GAAI,GAAIzE,GACzB,GAAIyE,IAAO,EAAG,GAAI,GAAI,GAAIzE,GAC1B,GAAIyE,IAAO,EA=
AG,GAAI,IAAK,IAAKzE,GAC5B,GAAIyE,IAAO,EAAG,GAAI,IAAK,IAAKzE,GAC5B,GAAIyE,=
IAAO,GAAI,IAAK,IAAK,KAAMzE,GAC/B,GAAIyE,IAAO,GAAI,IAAK,IAAK,KAAMzE,IAksBj=
C/3E,EAAQi7E,YAAcA,EACtBj7E,EAAQkyE,aAAeA,EACvBlyE,EAAQizE,aAAeA,EACvBjzE=
,EAAQy6E,iBAAmBA,EAC3Bz6E,EAAQ86E,iBAAmBA,EAC3B96E,EAAQkqE,QAAUA,EAClBlqE=
,EAAQ+yE,WAAaA,EACrB/yE,EAAQy8E,YAAc,sCAejB,SAASx8E,EAAQD,GAEtB,YAGA,IAAI=
08E,GAAmC,mBAAf33E,aACgB,mBAAhB43E,cACe,mBAAfC,WAGxB58E,GAAQuqC,OAAS,SAAU=
qgB,GAEzB,IADA,GAAI75B,GAAU5hB,MAAM3N,UAAU+I,MAAMnK,KAAKgG,UAAW,GAC7C2qB,=
EAAQhrB,QAAQ,CACrB,GAAIuf,GAASyL,EAAQ0vB,OACrB,IAAKn7B,EAAL,CAEA,GAAsB,gB=
AAXA,GACT,KAAM,IAAIpe,WAAUoe,EAAS,qBAG/B,KAAK,GAAI/kB,KAAK+kB,GACRA,EAAOz=
D,eAAethB,KACxBqqD,EAAIrqD,GAAK+kB,EAAO/kB,KAKtB,MAAOqqD,IAKT5qD,EAAQ68E,=
UAAY,SAAUz0E,EAAKmO,GACjC,MAAInO,GAAIrC,SAAWwQ,EAAenO,EAC9BA,EAAI1C,SAAmB=
0C,EAAI1C,SAAS,EAAG6Q,IAC3CnO,EAAIrC,OAASwQ,EACNnO,GAIT,IAAI00E,IACF1I,SA=
AU,SAAUrY,EAAMj4D,EAAKi5E,EAAU10E,EAAK20E,GAC5C,GAAIl5E,EAAI4B,UAAYq2D,EA=
AKr2D,SAEvB,WADAq2D,GAAKltD,IAAI/K,EAAI4B,SAASq3E,EAAUA,EAAS10E,GAAM20E,E=
AIjD,KAAK,GAAIv2E,GAAE,EAAK4B,EAAF5B,EAAOA,IACnBs1D,EAAKihB,EAAYv2E,GAAK3=
C,EAAIi5E,EAAWt2E,IAIzCw2E,cAAe,SAAS/6E,GACtB,GAAIuE,GAAG2M,EAAG/K,EAAK2F=
,EAAK5L,EAAOL,CAI3B,KADAsG,EAAM,EACD5B,EAAE,EAAG2M,EAAElR,EAAO6D,OAAUqN,E=
AAF3M,EAAKA,IAC9B4B,GAAOnG,EAAOuE,GAAGV,MAMnB,KAFAhE,EAAS,GAAIgD,YAAWsD,G=
ACxB2F,EAAM,EACDvH,EAAE,EAAG2M,EAAElR,EAAO6D,OAAUqN,EAAF3M,EAAKA,IAC9BrE,=
EAAQF,EAAOuE,GACf1E,EAAO8M,IAAIzM,EAAO4L,GAClBA,GAAO5L,EAAM2D,MAGf,OAAOhE=
,KAIPm7E,GACF9I,SAAU,SAAUrY,EAAMj4D,EAAKi5E,EAAU10E,EAAK20E,GAC5C,IAAK,GA=
AIv2E,GAAE,EAAK4B,EAAF5B,EAAOA,IACnBs1D,EAAKihB,EAAYv2E,GAAK3C,EAAIi5E,EA=
AWt2E,IAIzCw2E,cAAe,SAAS/6E,GACtB,SAAUI,OAAOiJ,SAAUrJ,IAO/BlC,GAAQm9E,SAA=
W,SAAUh7E,GACvBA,GACFnC,EAAQg7E,KAAQj2E,WAChB/E,EAAQk5E,MAAQyD,YAChB38E,E=
AAQo9E,MAAQR,WAChB58E,EAAQuqC,OAAOvqC,EAAS88E,KAExB98E,EAAQg7E,KAAQ7rE,MA=
ChBnP,EAAQk5E,MAAQ/pE,MAChBnP,EAAQo9E,MAAQjuE,MAChBnP,EAAQuqC,OAAOvqC,EAA=
Sk9E,KAI5Bl9E,EAAQm9E,SAAST,IAKZ,SAASz8E,EAAQD,EAASH,GAE/B,YAwBA,SAASm0E,=
GAAK5rE,GAA6B,IAAtB,GAAIC,GAAMD,EAAIrC,SAAiBsC,GAAO,GAAKD,EAAIC,GAAO,EAkJ=
3E,QAASg1E,GAAOC,GACd,MAAc,KAAPA,EAAaC,GAAWD,GAAQC,GAAW,KAAOD,IAAS,IAQpE,=
QAASE,GAAW/oE,EAAG+F,GAGrB/F,EAAE4/D,YAAY5/D,EAAEy/D,WAAmB,IAAN,EAC7Bz/D,=
EAAE4/D,YAAY5/D,EAAEy/D,WAAc15D,IAAM,EAAK,IAQ3C,QAASijE,GAAUhpE,EAAG1I,EA=
AOhG,GACvB0O,EAAE+lE,SAAYkD,EAAW33E,GAC3B0O,EAAE8lE,QAAWxuE,GAAS0I,EAAE+l=
E,SAAY,MACpCgD,EAAU/oE,EAAGA,EAAE8lE,QACf9lE,EAAE8lE,OAASxuE,GAAU2xE,EAAW=
jpE,EAAE+lE,SAClC/lE,EAAE+lE,UAAYz0E,EAAS23E,IAEvBjpE,EAAE8lE,QAAWxuE,GAA=
S0I,EAAE+lE,SAAY,MACpC/lE,EAAE+lE,UAAYz0E,GAKlB,QAAS43E,GAAUlpE,EAAGnU,EA=
AGs9E,GACvBH,EAAUhpE,EAAGmpE,EAAO,EAAFt9E,GAAes9E,EAAO,EAAFt9E,EAAM,IAS9C=
,QAASu9E,GAAWprE,EAAMpK,GACxB,GAAIqC,GAAM,CACV,GACEA,IAAc,EAAP+H,EACPA,KA=
AU,EACV/H,IAAQ,UACCrC,EAAM,EACjB,OAAOqC,KAAQ,EAOjB,QAASozE,GAASrpE,GACG,K=
AAfA,EAAE+lE,UACJgD,EAAU/oE,EAAGA,EAAE8lE,QACf9lE,EAAE8lE,OAAS,EACX9lE,EA=
AE+lE,SAAW,GAEJ/lE,EAAE+lE,UAAY,IACvB/lE,EAAE4/D,YAAY5/D,EAAEy/D,WAAwB,IA=
AXz/D,EAAE8lE,OAC/B9lE,EAAE8lE,SAAW,EACb9lE,EAAE+lE,UAAY,GAelB,QAASuD,GAA=
WtpE,EAAGopC,GAIrB,GAOIpjC,GACAzN,EAAG3M,EACH+tD,EACA4vB,EACA5pC,EAXAwpC,=
EAAkB//B,EAAKogC,SACvBC,EAAkBrgC,EAAKqgC,SACvBC,EAAkBtgC,EAAKugC,UAAUC,YA=
CjCC,EAAkBzgC,EAAKugC,UAAUE,UACjC9C,EAAkB39B,EAAKugC,UAAUG,WACjCC,EAAkB3g=
C,EAAKugC,UAAUK,WACjCC,EAAkB7gC,EAAKugC,UAAUM,WAMjCC,EAAW,CAEf,KAAKvwB,EA=
AO,EAAWwrB,GAARxrB,EAAkBA,IAC/B35C,EAAEklE,SAASvrB,GAAQ,CAQrB,KAFAwvB,EAA=
wB,EAAnBnpE,EAAEolE,KAAKplE,EAAEulE,UAAc,GAAa,EAEpCv/D,EAAIhG,EAAEulE,SAA=
S,EAAOb,EAAJ1+D,EAAeA,IACpCzN,EAAIyH,EAAEolE,KAAKp/D,GACX2zC,EAAOwvB,EAA4=
B,EAAvBA,EAAO,EAAF5wE,EAAK,GAAiB,GAAa,EAChDohD,EAAOswB,IACTtwB,EAAOswB,EA=
CPC,KAEFf,EAAO,EAAF5wE,EAAM,GAAaohD,EAGpBphD,EAAIkxE,IAERzpE,EAAEklE,SAAS=
vrB,KACX4vB,EAAQ,EACJhxE,GAAKwxE,IACPR,EAAQxC,EAAMxuE,EAAEwxE,IAElBpqC,EA=
AIwpC,EAAS,EAAJ5wE,GACTyH,EAAE4lE,SAAWjmC,GAAKga,EAAO4vB,GACrBM,IACF7pE,E=
AAE6lE,YAAclmC,GAAK+pC,EAAQ,EAAFnxE,EAAM,GAAagxE,IAGlD,IAAiB,IAAbW,EAAJ,C=
AMA,EAAG,CAED,IADAvwB,EAAOswB,EAAW,EACU,IAArBjqE,EAAEklE,SAASvrB,IAAeA,GA=
CjC35C,GAAEklE,SAASvrB,KACX35C,EAAEklE,SAASvrB,EAAK,IAAM,EACtB35C,EAAEklE=
,SAAS+E,KAIXC,GAAY,QACLA,EAAW,EAOpB,KAAKvwB,EAAOswB,EAAqB,IAATtwB,EAAYA,I=
AElC,IADAphD,EAAIyH,EAAEklE,SAASvrB,GACF,IAANphD,GACL3M,EAAIoU,EAAEolE,OA=
AOp/D,GACTpa,EAAI69E,IACJN,EAAO,EAAFv9E,EAAM,KAAe+tD,IAE5B35C,EAAE4lE,UAA=
YjsB,EAAOwvB,EAAO,EAAFv9E,EAAM,IAAYu9E,EAAO,EAAFv9E,GACjDu9E,EAAO,EAAFv9E=
,EAAM,GAAa+tD,GAE1BphD,MAcN,QAAS4xE,GAAUhB,EAAMM,EAAUvE,GAKjC,GAEIvrB,GAC=
AphD,EAHA6xE,EAAY,GAAI1vE,OAAMyqE,EAAS,GAC/BnnE,EAAO,CAOX,KAAK27C,EAAO,EA=
AWwrB,GAARxrB,EAAkBA,IAC/BywB,EAAUzwB,GAAQ37C,EAAQA,EAAOknE,EAASvrB,EAAK,=
IAAO,CASxD,KAAKphD,EAAI,EAASkxE,GAALlxE,EAAeA,IAAK,CAC/B,GAAI3E,GAAMu1E,E=
AAO,EAAF5wE,EAAM,EACT,KAAR3E,IAEJu1E,EAAO,EAAF5wE,GAAgB6wE,EAAWgB,EAAUx2E=
,KAAQA,KAWtD,QAASy2E,KACP,GAAI9xE,GACAohD,EACAroD,EACA0M,EACA6qE,EACA3D,E=
AAW,GAAIxqE,OAAMyqE,EAAS,EAiBlC,KADA7zE,EAAS,EACJ0M,EAAO,EAAU6pE,EAAa,EAA=
pB7pE,EAAuBA,IAEpC,IADAssE,GAAYtsE,GAAQ1M,EACfiH,EAAI,EAAGA,EAAK,GAAGgyE,=
EAAYvsE,GAAQzF,IACtCiyE,GAAal5E,KAAY0M,CAY7B,KAJAwsE,GAAal5E,EAAO,GAAK0M,=
EAGzB6qE,EAAO,EACF7qE,EAAO,EAAW,GAAPA,EAAWA,IAEzB,IADAysE,GAAUzsE,GAAQ6qE=
,EACbtwE,EAAI,EAAGA,EAAK,GAAGmyE,GAAY1sE,GAAQzF,IACtCuwE,GAAWD,KAAU7qE,CA=
KzB,KADA6qE,IAAS,EACKjE,EAAP5mE,EAAgBA,IAErB,IADAysE,GAAUzsE,GAAQ6qE,GAAQ=
,EACrBtwE,EAAI,EAAGA,EAAK,GAAImyE,GAAY1sE,GAAM,EAAKzF,IAC1CuwE,GAAW,IAAMD=
,KAAU7qE,CAM/B,KAAK27C,EAAO,EAAWwrB,GAARxrB,EAAkBA,IAC/BurB,EAASvrB,GAAQ,=
CAInB,KADAphD,EAAI,EACQ,KAALA,GACLoyE,GAAe,EAAFpyE,EAAM,GAAa,EAChCA,IACA2=
sE,EAAS,IAEX,MAAY,KAAL3sE,GACLoyE,GAAe,EAAFpyE,EAAM,GAAa,EAChCA,IACA2sE,E=
AAS,IAEX,MAAY,KAAL3sE,GACLoyE,GAAe,EAAFpyE,EAAM,GAAa,EAChCA,IACA2sE,EAAS,=
IAEX,MAAY,KAAL3sE,GACLoyE,GAAe,EAAFpyE,EAAM,GAAa,EAChCA,IACA2sE,EAAS,IASX=
,KAHAiF,EAAUQ,GAActF,EAAQ,EAAGH,GAG9B3sE,EAAI,EAAOqsE,EAAJrsE,EAAaA,IACvB=
qyE,GAAe,EAAFryE,EAAM,GAAa,EAChCqyE,GAAe,EAAFryE,GAAgB6wE,EAAW7wE,EAAG,EA=
I7CsyE,IAAgB,GAAIC,IAAeH,GAAcJ,EAAazC,EAAS,EAAGzC,EAASF,GACnF4F,GAAgB,GAA=
ID,IAAeF,GAAcF,GAAa,EAAY9F,EAASO,GACnF6F,GAAgB,GAAIF,IAAe,GAAIpwE,OAAM,GA=
AIuwE,GAAc,EAAWnG,EAAUoG,GAStF,QAASC,GAAWnrE,GAClB,GAAIzH,EAGJ,KAAKA,EAAI=
,EAAO8sE,EAAJ9sE,EAAcA,IAAOyH,EAAEwkE,UAAY,EAAFjsE,GAAgB,CAC7D,KAAKA,EAAI=
,EAAOqsE,EAAJrsE,EAAcA,IAAOyH,EAAE2kE,UAAY,EAAFpsE,GAAgB,CAC7D,KAAKA,EAAI=
,EAAOusE,EAAJvsE,EAAcA,IAAOyH,EAAE6kE,QAAU,EAAFtsE,GAAgB,CAE3DyH,GAAEwkE,=
UAAoB,EAAV4G,GAAwB,EACpCprE,EAAE4lE,QAAU5lE,EAAE6lE,WAAa,EAC3B7lE,EAAEojE=
,SAAWpjE,EAAE6wB,QAAU,EAO3B,QAASw6C,GAAUrrE,GAEbA,EAAE+lE,SAAW,EACfgD,EAA=
U/oE,EAAGA,EAAE8lE,QACN9lE,EAAE+lE,SAAW,IAEtB/lE,EAAE4/D,YAAY5/D,EAAEy/D,=
WAAaz/D,EAAE8lE,QAEjC9lE,EAAE8lE,OAAS,EACX9lE,EAAE+lE,SAAW,EAOf,QAASuF,GA=
AWtrE,EAAGrM,EAAKC,EAAKiV,GAM/BwiE,EAAUrrE,GAEN6I,IACFkgE,EAAU/oE,EAAGpM,=
GACbm1E,EAAU/oE,GAAIpM,IAKhB8rE,EAAMC,SAAS3/D,EAAE4/D,YAAa5/D,EAAEzR,OAAQ=
oF,EAAKC,EAAKoM,EAAEy/D,SACpDz/D,EAAEy/D,SAAW7rE,EAOf,QAAS23E,GAAQpC,EAAM=
5wE,EAAG3M,EAAG45E,GAC3B,GAAIgG,GAAQ,EAAFjzE,EACNkzE,EAAQ,EAAF7/E,CACV,OA=
AQu9E,GAAKqC,GAAgBrC,EAAKsC,IAC1BtC,EAAKqC,KAAkBrC,EAAKsC,IAAiBjG,EAAMjtE=
,IAAMitE,EAAM55E,GASzE,QAAS8/E,GAAW1rE,EAAGmpE,EAAMhuB,GAO3B,IAFA,GAAI9gD=
,GAAI2F,EAAEolE,KAAKjqB,GACXzjD,EAAIyjD,GAAK,EACNzjD,GAAKsI,EAAEslE,WAER5=
tE,EAAIsI,EAAEslE,UACRiG,EAAQpC,EAAMnpE,EAAEolE,KAAK1tE,EAAE,GAAIsI,EAAEo=
lE,KAAK1tE,GAAIsI,EAAEwlE,QACxC9tE,KAGE6zE,EAAQpC,EAAM9uE,EAAG2F,EAAEolE,=
KAAK1tE,GAAIsI,EAAEwlE,SAGlCxlE,EAAEolE,KAAKjqB,GAAKn7C,EAAEolE,KAAK1tE,G=
ACnByjD,EAAIzjD,EAGJA,IAAM,CAERsI,GAAEolE,KAAKjqB,GAAK9gD,EAUd,QAASsxE,GA=
Ae3rE,EAAG4rE,EAAOC,GAKhC,GAAIhD,GACAiD,EAEA9tE,EACA+oE,EAFAgF,EAAK,CAIT,=
IAAmB,IAAf/rE,EAAEojE,SACJ,EACEyF,GAAQ7oE,EAAE4/D,YAAY5/D,EAAE2lE,MAAW,EA=
AHoG,IAAS,EAAM/rE,EAAE4/D,YAAY5/D,EAAE2lE,MAAW,EAAHoG,EAAO,GAC9ED,EAAK9rE=
,EAAE4/D,YAAY5/D,EAAEylE,MAAQsG,GAC7BA,IAEa,IAATlD,EACFK,EAAUlpE,EAAG8rE,=
EAAIF,IAIjB5tE,EAAOwsE,GAAasB,GACpB5C,EAAUlpE,EAAGhC,EAAK8pE,EAAS,EAAG8D,=
GAC9B7E,EAAQwD,EAAYvsE,GACN,IAAV+oE,IACF+E,GAAMxB,GAAYtsE,GAClBgrE,EAAUhp=
E,EAAG8rE,EAAI/E,IAEnB8B,IACA7qE,EAAO4qE,EAAOC,GAGdK,EAAUlpE,EAAGhC,EAAM6=
tE,GACnB9E,EAAQ2D,GAAY1sE,GACN,IAAV+oE,IACF8B,GAAQ4B,GAAUzsE,GAClBgrE,EAA=
UhpE,EAAG6oE,EAAM9B,WAQhBgF,EAAK/rE,EAAEojE,SAGlB8F,GAAUlpE,EAAGorE,EAAWQ=
,GAY1B,QAASI,GAAWhsE,EAAGopC,GAIrB,GAII7wC,GAAG3M,EAEHyV,EANA8nE,EAAW//B,=
EAAKogC,SAChBE,EAAWtgC,EAAKugC,UAAUC,YAC1BC,EAAYzgC,EAAKugC,UAAUE,UAC3BoC=
,EAAW7iC,EAAKugC,UAAUsC,MAE1BxC,EAAW,EAUf,KAHAzpE,EAAEslE,SAAW,EACbtlE,EA=
AEulE,SAAWb,EAERnsE,EAAI,EAAO0zE,EAAJ1zE,EAAWA,IACQ,IAAzB4wE,EAAS,EAAJ5wE=
,IACPyH,EAAEolE,OAAOplE,EAAEslE,UAAYmE,EAAWlxE,EAClCyH,EAAEwlE,MAAMjtE,GA=
AK,GAGb4wE,EAAO,EAAF5wE,EAAM,GAAa,CAS5B,MAAOyH,EAAEslE,SAAW,GAClBjkE,EAAO=
rB,EAAEolE,OAAOplE,EAAEslE,UAAwB,EAAXmE,IAAiBA,EAAW,EAC3DN,EAAY,EAAP9nE,G=
AAqB,EAC1BrB,EAAEwlE,MAAMnkE,GAAQ,EAChBrB,EAAE4lE,UAEEiE,IACF7pE,EAAE6lE,=
YAAc6D,EAAW,EAALroE,EAAS,GASnC,KALA+nC,EAAKqgC,SAAWA,EAKXlxE,EAAKyH,EAAEs=
lE,UAAY,EAAc/sE,GAAK,EAAGA,IAAOmzE,EAAW1rE,EAAGmpE,EAAM5wE,EAKzE8I,GAAO4q=
E,CACP,GAGE1zE,GAAIyH,EAAEolE,KAAK,GACXplE,EAAEolE,KAAK,GAAiBplE,EAAEolE,=
KAAKplE,EAAEslE,YACjCoG,EAAW1rE,EAAGmpE,EAAM,GAGpBv9E,EAAIoU,EAAEolE,KAAK=
,GAEXplE,EAAEolE,OAAOplE,EAAEulE,UAAYhtE,EACvByH,EAAEolE,OAAOplE,EAAEulE,=
UAAY35E,EAGvBu9E,EAAY,EAAP9nE,GAAqB8nE,EAAS,EAAJ5wE,GAAkB4wE,EAAS,EAAJv9E=
,GACtDoU,EAAEwlE,MAAMnkE,IAASrB,EAAEwlE,MAAMjtE,IAAMyH,EAAEwlE,MAAM55E,GA=
AKoU,EAAEwlE,MAAMjtE,GAAKyH,EAAEwlE,MAAM55E,IAAM,EACvEu9E,EAAO,EAAF5wE,EA=
AM,GAAa4wE,EAAO,EAAFv9E,EAAM,GAAayV,EAGhDrB,EAAEolE,KAAK,GAAiB/jE,IACxBqq=
E,EAAW1rE,EAAGmpE,EAAM,SAEbnpE,EAAEslE,UAAY,EAEvBtlE,GAAEolE,OAAOplE,EAAE=
ulE,UAAYvlE,EAAEolE,KAAK,GAK9BkE,EAAWtpE,EAAGopC,GAGd+gC,EAAUhB,EAAMM,EAA=
UzpE,EAAEklE,UAQ9B,QAASgH,GAAUlsE,EAAGmpE,EAAMM,GAK1B,GAAIlxE,GAEA4zE,EAD=
AC,EAAU,GAGVC,EAAUlD,EAAK,GAEfj2C,EAAQ,EACRo5C,EAAY,EACZC,EAAY,CAQhB,KANg=
B,IAAZF,IACFC,EAAY,IACZC,EAAY,GAEdpD,EAAkB,GAAZM,EAAS,GAAO,GAAa,MAE9BlxE,=
EAAI,EAAQkxE,GAALlxE,EAAeA,IACzB4zE,EAASE,EACTA,EAAUlD,EAAW,GAAL5wE,EAAE,=
GAAO,KAEnB26B,EAAQo5C,GAAaH,IAAWE,IAGnBE,EAARr5C,EACTlzB,EAAE6kE,QAAiB,EA=
ATsH,IAAwBj5C,EAEd,IAAXi5C,GAELA,IAAWC,GAAWpsE,EAAE6kE,QAAiB,EAATsH,KACpC=
nsE,EAAE6kE,QAAgB,EAAR2H,MAEQ,IAATt5C,EACTlzB,EAAE6kE,QAAkB,EAAV4H,KAGVzs=
E,EAAE6kE,QAAoB,EAAZ6H,KAGZx5C,EAAQ,EACRk5C,EAAUD,EAEM,IAAZE,GACFC,EAAY,I=
ACZC,EAAY,GAEHJ,IAAWE,GACpBC,EAAY,EACZC,EAAY,IAGZD,EAAY,EACZC,EAAY,IAUlB,=
QAASI,GAAU3sE,EAAGmpE,EAAMM,GAK1B,GAAIlxE,GAEA4zE,EADAC,EAAU,GAGVC,EAAUlD=
,EAAK,GAEfj2C,EAAQ,EACRo5C,EAAY,EACZC,EAAY,CAQhB,KALgB,IAAZF,IACFC,EAAY,I=
ACZC,EAAY,GAGTh0E,EAAI,EAAQkxE,GAALlxE,EAAeA,IAIzB,GAHA4zE,EAASE,EACTA,EA=
AUlD,EAAW,GAAL5wE,EAAE,GAAO,OAEnB26B,EAAQo5C,GAAaH,IAAWE,GAAtC,CAGO,GAAYE=
,EAARr5C,GACT,EAAKg2C,GAAUlpE,EAAGmsE,EAAQnsE,EAAE6kE,eAA+B,MAAV3xC,OAE7B=
,KAAXi5C,GACLA,IAAWC,IACblD,EAAUlpE,EAAGmsE,EAAQnsE,EAAE6kE,SACvB3xC,KAGF=
g2C,EAAUlpE,EAAGwsE,EAASxsE,EAAE6kE,SACxBmE,EAAUhpE,EAAGkzB,EAAM,EAAG,IAE=
J,IAATA,GACTg2C,EAAUlpE,EAAGysE,EAAWzsE,EAAE6kE,SAC1BmE,EAAUhpE,EAAGkzB,E=
AAM,EAAG,KAGtBg2C,EAAUlpE,EAAG0sE,EAAa1sE,EAAE6kE,SAC5BmE,EAAUhpE,EAAGkzB=
,EAAM,GAAI,GAGzBA,GAAQ,EACRk5C,EAAUD,EACM,IAAZE,GACFC,EAAY,IACZC,EAAY,GAE=
HJ,IAAWE,GACpBC,EAAY,EACZC,EAAY,IAGZD,EAAY,EACZC,EAAY,IAUlB,QAASK,GAAc5sE=
,GACrB,GAAI6sE,EAgBJ,KAbAX,EAAUlsE,EAAGA,EAAEwkE,UAAWxkE,EAAE+kE,OAAO0E,U=
ACnCyC,EAAUlsE,EAAGA,EAAE2kE,UAAW3kE,EAAEglE,OAAOyE,UAGnCuC,EAAWhsE,EAAGA=
,EAAEilE,SASX4H,EAAc/H,EAAS,EAAG+H,GAAe,GACW,IAAnD7sE,EAAE6kE,QAA8B,EAAtB=
iI,GAASD,GAAiB,GADOA,KAUjD,MAJA7sE,GAAE4lE,SAAW,GAAGiH,EAAY,GAAK,EAAE,EAA=
E,EAI9BA,EAST,QAASE,GAAe/sE,EAAGgtE,EAAQC,EAAQC,GAIzC,GAAI5N,EASJ,KAHA0J,=
EAAUhpE,EAAGgtE,EAAO,IAAK,GACzBhE,EAAUhpE,EAAGitE,EAAO,EAAK,GACzBjE,EAAUh=
pE,EAAGktE,EAAQ,EAAI,GACpB5N,EAAO,EAAU4N,EAAP5N,EAAgBA,IAE7B0J,EAAUhpE,EA=
AGA,EAAE6kE,QAAuB,EAAfiI,GAASxN,GAAU,GAAY,EAIxDqN,GAAU3sE,EAAGA,EAAEwkE,U=
AAWwI,EAAO,GAGjCL,EAAU3sE,EAAGA,EAAE2kE,UAAWsI,EAAO,GAkBnC,QAASE,GAAiBntE=
,GAKxB,GACIzH,GADA60E,EAAa,UAIjB,KAAK70E,EAAI,EAAQ,IAALA,EAASA,IAAK60E,KA=
AgB,EACxC,GAAkB,EAAbA,GAAkD,IAA9BptE,EAAEwkE,UAAY,EAAFjsE,GACnC,MAAO80E,E=
AKX,IAAoC,IAAhCrtE,EAAEwkE,UAAU,KAA0D,IAAjCxkE,EAAEwkE,UAAU,KAChB,IAAjCxk=
E,EAAEwkE,UAAU,IACd,MAAO8I,EAET,KAAK/0E,EAAI,GAAQuvE,EAAJvvE,EAAcA,IACzB,=
GAAoC,IAAhCyH,EAAEwkE,UAAc,EAAJjsE,GACd,MAAO+0E,EAOX,OAAOD,GAST,QAASjH,GA=
ASpmE,GAGXutE,KACHlD,IACAkD,IAAmB,GAGrBvtE,EAAE+kE,OAAU,GAAIyI,IAASxtE,EA=
AEwkE,UAAWqG,IACtC7qE,EAAEglE,OAAU,GAAIwI,IAASxtE,EAAE2kE,UAAWoG,IACtC/qE=
,EAAEilE,QAAU,GAAIuI,IAASxtE,EAAE6kE,QAASmG,IAEpChrE,EAAE8lE,OAAS,EACX9lE=
,EAAE+lE,SAAW,EAGboF,EAAWnrE,GAOb,QAAS4nE,GAAiB5nE,EAAGrM,EAAK85E,EAAYn1D=
,GAM5C0wD,EAAUhpE,GAAI0tE,GAAc,IAAIp1D,EAAO,EAAI,GAAI,GAC/CgzD,EAAWtrE,EA=
AGrM,EAAK85E,GAAY,GAQjC,QAAS9F,GAAU3nE,GACjBgpE,EAAUhpE,EAAG2tE,GAAc,EAAG=
,GAC9BzE,EAAUlpE,EAAGorE,EAAWT,IACxBtB,EAASrpE,GAQX,QAASggE,GAAgBhgE,EAAG=
rM,EAAK85E,EAAYn1D,GAM3C,GAAIs1D,GAAUC,EACVhB,EAAc,CAGd7sE,GAAE04D,MAAQ,G=
AGR14D,EAAEu9D,KAAK4B,YAAc8G,IACvBjmE,EAAEu9D,KAAK4B,UAAYgO,EAAiBntE,IAIt=
CgsE,EAAWhsE,EAAGA,EAAE+kE,QAIhBiH,EAAWhsE,EAAGA,EAAEglE,QAUhB6H,EAAcD,EA=
Ac5sE,GAG5B4tE,EAAY5tE,EAAE4lE,QAAQ,EAAE,IAAO,EAC/BiI,EAAe7tE,EAAE6lE,WAA=
W,EAAE,IAAO,EAMlB+H,GAAfC,IAA2BD,EAAWC,IAI1CD,EAAWC,EAAcJ,EAAa,EAGnBG,GAA=
hBH,EAAW,GAA2B,KAAR95E,EASjCi0E,EAAiB5nE,EAAGrM,EAAK85E,EAAYn1D,GAE5BtY,E=
AAEg5D,WAAaI,GAAWyU,IAAgBD,GAEnD5E,EAAUhpE,GAAI2tE,GAAc,IAAMr1D,EAAO,EAAI=
,GAAI,GACjDqzD,EAAe3rE,EAAG2qE,GAAcC,MAGhC5B,EAAUhpE,GAAI8tE,GAAW,IAAMx1D=
,EAAO,EAAI,GAAI,GAC9Cy0D,EAAe/sE,EAAGA,EAAE+kE,OAAO0E,SAAS,EAAGzpE,EAAEgl=
E,OAAOyE,SAAS,EAAGoD,EAAY,GACxElB,EAAe3rE,EAAGA,EAAEwkE,UAAWxkE,EAAE2kE,Y=
AMnCwG,EAAWnrE,GAEPsY,GACF+yD,EAAUrrE,GAUd,QAASkjE,GAAUljE,EAAG6oE,EAAMiD=
,GAmD1B,MA5CA9rE,GAAE4/D,YAAY5/D,EAAE2lE,MAAqB,EAAb3lE,EAAEojE,UAAqByF,IA=
AS,EAAK,IAC7D7oE,EAAE4/D,YAAY5/D,EAAE2lE,MAAqB,EAAb3lE,EAAEojE,SAAe,GAAY,=
IAAPyF,EAE9C7oE,EAAE4/D,YAAY5/D,EAAEylE,MAAQzlE,EAAEojE,UAAiB,IAAL0I,EACt=
C9rE,EAAEojE,WAEW,IAATyF,EAEF7oE,EAAEwkE,UAAa,EAAHsH,MAEZ9rE,EAAE6wB,UAEF=
g4C,IAKA7oE,EAAEwkE,UAA0C,GAA/BgG,GAAasB,GAAIhE,EAAS,MACvC9nE,EAAE2kE,UAA=
yB,EAAfiE,EAAOC,OA0Bb7oE,EAAEojE,WAAapjE,EAAE0lE,YAAY,EAhqCvC,GAAIhG,GAAQ=
t0E,EAAoB,IAS5BguE,EAAwB,EAIxBiU,EAAwB,EACxBC,EAAwB,EAExBrH,EAAwB,EASxByH=
,EAAe,EACfC,EAAe,EACfG,EAAe,EAGf3L,EAAe,EACfZ,EAAe,IAQfsG,EAAgB,GAGhBC,EA=
AgB,IAGhBzC,EAAgByC,EAAW,EAAID,EAG/BjD,EAAgB,GAGhBE,EAAgB,GAGhBJ,EAAgB,EA=
AEW,EAAU,EAG5BF,EAAgB,GAGhB8D,EAAgB,GAQhBiC,EAAc,EAGdE,EAAc,IAGdoB,EAAc,G=
AGdC,EAAc,GAGdC,EAAc,GAGdnC,GACD,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,=
EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAA=
E,EAAE,EAAE,EAAE,EAAE,EAAE,GAEvDG,IACD,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE=
,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EA=
AE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAEhEO,IACD,EAAE,EAAE,EAAE,EAAE,EAA=
E,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAEnC6=
B,IACD,GAAG,GAAG,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,E=
AAE,GAAG,EAAE,GAAG,EAAE,IAW3CiB,GAAgB,IAGhBpD,GAAgB,GAAIjwE,OAAoB,GAAb2qE=
,EAAQ,GACvC9F,GAAKoL,GAOL,IAAIC,IAAgB,GAAIlwE,OAAgB,EAAVkqE,EAC9BrF,GAAKq=
L,GAKL,IAAI9B,IAAgB,GAAIpuE,OAAMqzE,GAC9BxO,GAAKuJ,GAML,IAAI0B,IAAgB,GAAI=
9vE,OAAM6mE,EAAUY,EAAU,EAClD5C,GAAKiL,GAGL,IAAIF,IAAgB,GAAI5vE,OAAMmtE,EA=
C9BtI,GAAK+K,GAGL,IAAIG,IAAgB,GAAI/vE,OAAMkqE,EAC9BrF,GAAKkL,GAIL,IAaII,I=
ACAE,GACAC,GAfAF,GAAiB,SAAUlB,EAAaE,EAAYE,EAAYiC,EAAOhC,GAEzEj+E,KAAK49E,=
YAAeA,EACpB59E,KAAK89E,WAAeA,EACpB99E,KAAKg+E,WAAeA,EACpBh+E,KAAKigF,MAAe=
A,EACpBjgF,KAAKi+E,WAAeA,EAGpBj+E,KAAK69E,UAAeD,GAAeA,EAAYt4E,QAS7Ck8E,GA=
AW,SAAShE,EAAUG,GAChC39E,KAAKw9E,SAAWA,EAChBx9E,KAAKy9E,SAAW,EAChBz9E,KAA=
K29E,UAAYA,GA8zBf4D,IAAmB,CAuMvBhiF,GAAQ66E,SAAYA,EACpB76E,EAAQq8E,iBAAmB=
A,EAC3Br8E,EAAQy0E,gBAAmBA,EAC3Bz0E,EAAQ23E,UAAYA,EACpB33E,EAAQo8E,UAAYA,=
GAKf,SAASn8E,EAAQD,GAEtB,YAMA,SAAS+0E,GAAQlB,EAAOzrE,EAAKC,EAAK2F,GAKhC,I=
AJA,GAAIy0E,GAAc,MAAR5O,EAAiB,EACvB6O,EAAO7O,IAAU,GAAM,MAAS,EAChC7mE,EAAI=
,EAEO,IAAR3E,GAAW,CAIhB2E,EAAI3E,EAAM,IAAO,IAAOA,EACxBA,GAAO2E,CAEP,GACEy=
1E,GAAMA,EAAKr6E,EAAI4F,KAAS,EACxB00E,EAAMA,EAAKD,EAAK,UACPz1E,EAEXy1E,IA=
AM,MACNC,GAAM,MAGR,MAAQD,GAAMC,GAAM,GAAM,EAI5BziF,EAAOD,QAAU+0E,GAKZ,SAAS=
90E,EAAQD,GAEtB,YAQA,SAAS2iF,KAGP,IAAK,GAFDriF,GAAGyV,KAEE/I,EAAG,EAAO,IA=
AJA,EAASA,IAAK,CAC3B1M,EAAI0M,CACJ,KAAK,GAAI4iD,GAAG,EAAO,EAAJA,EAAOA,IAC=
pBtvD,EAAQ,EAAFA,EAAQ,WAAcA,IAAM,EAAOA,IAAM,CAEjDyV,GAAM/I,GAAK1M,EAGb,MA=
AOyV,GAOT,QAASi/D,GAAM4N,EAAKx6E,EAAKC,EAAK2F,GAC5B,GAAIqmC,GAAIwuC,EACJr=
gF,EAAMwL,EAAM3F,CAEhBu6E,GAAY,GAANA,CAEN,KAAK,GAAIn8E,GAAIuH,EAASxL,EAAJ=
iE,EAASA,IACzBm8E,EAAOA,IAAQ,EAAKvuC,EAAmB,KAAhBuuC,EAAMx6E,EAAI3B,IAGnC,=
OAAc,GAANm8E,EAbV,GAAIC,GAAWF,GAiBf1iF,GAAOD,QAAUg1E,GAKZ,SAAS/0E,EAAQD,E=
AASH,GAE/B,YA8FA,SAASijF,GAAQ19B,GACf,OAAWA,IAAM,GAAM,MACbA,IAAM,EAAK,SAC=
P,MAAJA,IAAe,KACX,IAAJA,IAAa,IAIzB,QAAS29B,KACPtiF,KAAK0rD,KAAO,EACZ1rD,K=
AAKssB,MAAO,EACZtsB,KAAK2+B,KAAO,EACZ3+B,KAAKuiF,UAAW,EAChBviF,KAAKwiF,MA=
AQ,EACbxiF,KAAKyiF,KAAO,EACZziF,KAAK0iF,MAAQ,EACb1iF,KAAKykD,MAAQ,EAEbzkD=
,KAAKosC,KAAO,KAGZpsC,KAAK2iF,MAAQ,EACb3iF,KAAK4iF,MAAQ,EACb5iF,KAAK6iF,M=
AAQ,EACb7iF,KAAK8iF,MAAQ,EACb9iF,KAAKuC,OAAS,KAGdvC,KAAK+iF,KAAO,EACZ/iF,=
KAAK2tD,KAAO,EAGZ3tD,KAAKsF,OAAS,EACdtF,KAAK2I,OAAS,EAGd3I,KAAK+6E,MAAQ,E=
AGb/6E,KAAKgjF,QAAU,KACfhjF,KAAKijF,SAAW,KAChBjjF,KAAKkjF,QAAU,EACfljF,KA=
AKmjF,SAAW,EAGhBnjF,KAAKojF,MAAQ,EACbpjF,KAAKqjF,KAAO,EACZrjF,KAAKsjF,MAA=
Q,EACbtjF,KAAKqwE,KAAO,EACZrwE,KAAKujF,KAAO,KAEZvjF,KAAKwjF,KAAO,GAAI9P,G=
AAM+E,MAAM,KAC5Bz4E,KAAKyjF,KAAO,GAAI/P,GAAM+E,MAAM,KAO5Bz4E,KAAK0jF,OAAS=
,KACd1jF,KAAK2jF,QAAU,KACf3jF,KAAK4jF,KAAO,EACZ5jF,KAAK6jF,KAAO,EACZ7jF,K=
AAK8jF,IAAM,EAGb,QAASC,GAAiBxS,GACxB,GAAIhS,EAEJ,OAAKgS,IAASA,EAAKhS,OACn=
BA,EAAQgS,EAAKhS,MACbgS,EAAK0B,SAAW1B,EAAK2B,UAAY3T,EAAM9a,MAAQ,EAC/C8sB,=
EAAKN,IAAM,GACP1R,EAAM5gC,OACR4yC,EAAK6B,MAAqB,EAAb7T,EAAM5gC,MAErB4gC,EA=
AM7T,KAAOs4B,EACbzkB,EAAMjzC,KAAO,EACbizC,EAAMgjB,SAAW,EACjBhjB,EAAMkjB,K=
AAO,MACbljB,EAAMnzB,KAAO,KACbmzB,EAAMwjB,KAAO,EACbxjB,EAAM5R,KAAO,EAEb4R,=
EAAMyjB,QAAUzjB,EAAMmkB,OAAS,GAAIhQ,GAAMiJ,MAAMsH,IAC/C1kB,EAAM0jB,SAAW1j=
B,EAAMokB,QAAU,GAAIjQ,GAAMiJ,MAAMuH,IAEjD3kB,EAAMqkB,KAAO,EACbrkB,EAAMskB=
,KAAO,GAENxV,GArB4BI,EAwBrC,QAASgE,GAAalB,GACpB,GAAIhS,EAEJ,OAAKgS,IAASA,=
EAAKhS,OACnBA,EAAQgS,EAAKhS,MACbA,EAAMqjB,MAAQ,EACdrjB,EAAMsjB,MAAQ,EACdt=
jB,EAAMujB,MAAQ,EACPiB,EAAiBxS,IALW9C,EASrC,QAAS0V,GAAc5S,EAAMhF,GAC3B,GA=
AI5tC,GACA4gC,CAGJ,OAAKgS,IAASA,EAAKhS,OACnBA,EAAQgS,EAAKhS,MAGI,EAAbgN,G=
ACF5tC,EAAO,EACP4tC,GAAcA,IAGd5tC,GAAQ4tC,GAAc,GAAK,EACV,GAAbA,IACFA,GAAc=
,KAKdA,IAA4B,EAAbA,GAAkBA,EAAa,IACzCkC,GAEY,OAAjBlP,EAAMh9D,QAAmBg9D,EAAM=
ojB,QAAUpW,IAC3ChN,EAAMh9D,OAAS,MAIjBg9D,EAAM5gC,KAAOA,EACb4gC,EAAMojB,MA=
AQpW,EACPkG,EAAalB,KA1Be9C,EA6BrC,QAASkD,GAAaJ,EAAMhF,GAC1B,GAAIxhE,GACAw=
0D,CAEJ,OAAKgS,IAGLhS,EAAQ,GAAI+iB,GAIZ/Q,EAAKhS,MAAQA,EACbA,EAAMh9D,OAAS=
,KACfwI,EAAMo5E,EAAc5S,EAAMhF,GACtBxhE,IAAQsjE,IACVkD,EAAKhS,MAAQ,MAERx0D=
,GAba0jE,EAgBtB,QAAS2V,GAAY7S,GACnB,MAAOI,GAAaJ,EAAM8S,IAkB5B,QAASC,GAAY/=
kB,GAEnB,GAAIglB,GAAQ,CACV,GAAIC,EAOJ,KALAC,EAAS,GAAI/Q,GAAMiJ,MAAM,KACzB=
+H,EAAU,GAAIhR,GAAMiJ,MAAM,IAG1B6H,EAAM,EACO,IAANA,GAAajlB,EAAMikB,KAAKgB=
,KAAS,CACxC,MAAa,IAANA,GAAajlB,EAAMikB,KAAKgB,KAAS,CACxC,MAAa,IAANA,GAAaj=
lB,EAAMikB,KAAKgB,KAAS,CACxC,MAAa,IAANA,GAAajlB,EAAMikB,KAAKgB,KAAS,CAMxC=
,KAJAG,EAAcC,EAAOrlB,EAAMikB,KAAM,EAAG,IAAKiB,EAAU,EAAGllB,EAAMkkB,MAAO91=
B,KAAM,IAGzE62B,EAAM,EACO,GAANA,GAAYjlB,EAAMikB,KAAKgB,KAAS,CAEvCG,GAAcE,=
EAAOtlB,EAAMikB,KAAM,EAAG,GAAMkB,EAAS,EAAGnlB,EAAMkkB,MAAO91B,KAAM,IAGzE4=
2B,IAAS,EAGXhlB,EAAMyjB,QAAUyB,EAChBllB,EAAM2jB,QAAU,EAChB3jB,EAAM0jB,SAA=
WyB,EACjBnlB,EAAM4jB,SAAW,EAkBnB,QAAS2B,GAAavT,EAAMluE,EAAKtB,EAAKgF,GACp=
C,GAAI81E,GACAtd,EAAQgS,EAAKhS,KAqCjB,OAlCqB,QAAjBA,EAAMh9D,SACRg9D,EAAMq=
jB,MAAQ,GAAKrjB,EAAMojB,MACzBpjB,EAAMujB,MAAQ,EACdvjB,EAAMsjB,MAAQ,EAEdtj=
B,EAAMh9D,OAAS,GAAImxE,GAAM6G,KAAKhb,EAAMqjB,QAIlC77E,GAAQw4D,EAAMqjB,OAC=
hBlP,EAAMC,SAASpU,EAAMh9D,OAAOc,EAAKtB,EAAMw9D,EAAMqjB,MAAOrjB,EAAMqjB,MA=
AO,GACjErjB,EAAMujB,MAAQ,EACdvjB,EAAMsjB,MAAQtjB,EAAMqjB,QAGpB/F,EAAOtd,E=
AAMqjB,MAAQrjB,EAAMujB,MACvBjG,EAAO91E,IACT81E,EAAO91E,GAGT2sE,EAAMC,SAAS=
pU,EAAMh9D,OAAOc,EAAKtB,EAAMgF,EAAM81E,EAAMtd,EAAMujB,OACzD/7E,GAAQ81E,EA=
CJ91E,GAEF2sE,EAAMC,SAASpU,EAAMh9D,OAAOc,EAAKtB,EAAMgF,EAAMA,EAAM,GACnDw4=
D,EAAMujB,MAAQ/7E,EACdw4D,EAAMsjB,MAAQtjB,EAAMqjB,QAGpBrjB,EAAMujB,OAASjG=
,EACXtd,EAAMujB,QAAUvjB,EAAMqjB,QAASrjB,EAAMujB,MAAQ,GAC7CvjB,EAAMsjB,MAA=
QtjB,EAAMqjB,QAASrjB,EAAMsjB,OAAShG,KAG7C,EAGT,QAASnN,GAAQ6B,EAAMzF,GACrB=
,GAAIvM,GACA7nC,EAAOnkB,EACPgwE,EACAwB,EACA1U,EAAMjtE,EACN2/E,EACAp1B,EAC=
Aq3B,EAAKC,EACLl+E,EACAm+E,GACAC,GAEAC,GAAWC,GAASC,GAEpBC,GAAWC,GAASC,GAC=
pB79E,GACAmD,GAEA4/D,GAEAp+D,GATAm5E,GAAO,EAMPC,GAAO,GAAIjS,GAAM6G,KAAK,G=
AKtBp7D,IACD,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,=
GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAGjE,KAAKoyD,IAASA,EAAKhS,QAAUgS,EAAKh+D,S=
AC5Bg+D,EAAK75C,OAA2B,IAAlB65C,EAAKW,SACvB,MAAOzD,EAGTlP,GAAQgS,EAAKhS,MA=
CTA,EAAM7T,OAASk6B,IAAQrmB,EAAM7T,KAAOm6B,GAIxCd,EAAMxT,EAAKc,SACX9+D,EAA=
Sg+D,EAAKh+D,OACdnQ,EAAOmuE,EAAKa,UACZmR,EAAOhS,EAAKY,QACZz6C,EAAQ65C,EAA=
K75C,MACb24C,EAAOkB,EAAKW,SACZ6Q,EAAOxjB,EAAMwjB,KACbp1B,EAAO4R,EAAM5R,KA=
Gbq3B,EAAM3U,EACN4U,EAAO7hF,EACP2H,GAAMsjE,CAENyX,GACA,OACE,OAAQvmB,EAAM7=
T,MACd,IAAKs4B,GACH,GAAmB,IAAfzkB,EAAM5gC,KAAY,CACpB4gC,EAAM7T,KAAOm6B,CA=
Cb,OAGF,KAAc,GAAPl4B,GAAW,CAChB,GAAa,IAAT0iB,EAAc,KAAMyV,EACxBzV,KACA0S,G=
AAQrrD,EAAM6rD,MAAW51B,EACzBA,GAAQ,EAGV,GAAkB,EAAb4R,EAAM5gC,MAAsB,QAATok=
D,EAAiB,CACvCxjB,EAAMmjB,MAAQ,EAEdiD,GAAK,GAAY,IAAP5C,EACV4C,GAAK,GAAM5C,=
IAAS,EAAK,IACzBxjB,EAAMmjB,MAAQnO,EAAMhV,EAAMmjB,MAAOiD,GAAM,EAAG,GAI1C5C=
,EAAO,EACPp1B,EAAO,EAEP4R,EAAM7T,KAAOq6B,CACb,OAMF,GAJAxmB,EAAMijB,MAAQ,E=
ACVjjB,EAAMnzB,OACRmzB,EAAMnzB,KAAKm7B,MAAO,KAED,EAAbhI,EAAM5gC,UACA,IAAP=
okD,IAA2B,IAAMA,GAAQ,IAAM,GAAI,CACtDxR,EAAKN,IAAM,yBACX1R,EAAM7T,KAAOs6B,=
EACb,OAEF,IAAY,GAAPjD,KAA4BrR,EAAY,CAC3CH,EAAKN,IAAM,6BACX1R,EAAM7T,KAAOs=
6B,EACb,OAOF,GAJAjD,KAAU,EACVp1B,GAAQ,EAER/lD,IAAc,GAAPm7E,GAA0B,EACb,IAA=
hBxjB,EAAMojB,MACRpjB,EAAMojB,MAAQ/6E,OAEX,IAAIA,GAAM23D,EAAMojB,MAAO,CAC=
1BpR,EAAKN,IAAM,sBACX1R,EAAM7T,KAAOs6B,EACb,OAEFzmB,EAAMkjB,KAAO,GAAK76E,=
GAElB2pE,EAAK6B,MAAQ7T,EAAMmjB,MAAQ,EAC3BnjB,EAAM7T,KAAc,IAAPq3B,EAAekD,E=
AASL,EAErC7C,EAAO,EACPp1B,EAAO,CAEP,MACF,KAAKo4B,GAEH,KAAc,GAAPp4B,GAAW,C=
AChB,GAAa,IAAT0iB,EAAc,KAAMyV,EACxBzV,KACA0S,GAAQrrD,EAAM6rD,MAAW51B,EACz=
BA,GAAQ,EAIV,GADA4R,EAAMijB,MAAQO,GACK,IAAdxjB,EAAMijB,SAAkB9Q,EAAY,CACvC=
H,EAAKN,IAAM,6BACX1R,EAAM7T,KAAOs6B,EACb,OAEF,GAAkB,MAAdzmB,EAAMijB,MAAgB=
,CACxBjR,EAAKN,IAAM,2BACX1R,EAAM7T,KAAOs6B,EACb,OAEEzmB,EAAMnzB,OACRmzB,E=
AAMnzB,KAAKj0B,KAAS4qE,GAAQ,EAAK,GAEjB,IAAdxjB,EAAMijB,QAERmD,GAAK,GAAY,I=
AAP5C,EACV4C,GAAK,GAAM5C,IAAS,EAAK,IACzBxjB,EAAMmjB,MAAQnO,EAAMhV,EAAMmjB=
,MAAOiD,GAAM,EAAG,IAI5C5C,EAAO,EACPp1B,EAAO,EAEP4R,EAAM7T,KAAOw6B,CAEf,KA=
AKA,GAEH,KAAc,GAAPv4B,GAAW,CAChB,GAAa,IAAT0iB,EAAc,KAAMyV,EACxBzV,KACA0S,=
GAAQrrD,EAAM6rD,MAAW51B,EACzBA,GAAQ,EAGN4R,EAAMnzB,OACRmzB,EAAMnzB,KAAK6u=
C,KAAO8H,GAEF,IAAdxjB,EAAMijB,QAERmD,GAAK,GAAY,IAAP5C,EACV4C,GAAK,GAAM5C,=
IAAS,EAAK,IACzB4C,GAAK,GAAM5C,IAAS,GAAM,IAC1B4C,GAAK,GAAM5C,IAAS,GAAM,IAC=
1BxjB,EAAMmjB,MAAQnO,EAAMhV,EAAMmjB,MAAOiD,GAAM,EAAG,IAI5C5C,EAAO,EACPp1B=
,EAAO,EAEP4R,EAAM7T,KAAOy6B,CAEf,KAAKA,GAEH,KAAc,GAAPx4B,GAAW,CAChB,GAAa,=
IAAT0iB,EAAc,KAAMyV,EACxBzV,KACA0S,GAAQrrD,EAAM6rD,MAAW51B,EACzBA,GAAQ,EA=
GN4R,EAAMnzB,OACRmzB,EAAMnzB,KAAKg6C,OAAiB,IAAPrD,EACrBxjB,EAAMnzB,KAAK8u=
C,GAAM6H,GAAQ,GAET,IAAdxjB,EAAMijB,QAERmD,GAAK,GAAY,IAAP5C,EACV4C,GAAK,GA=
AM5C,IAAS,EAAK,IACzBxjB,EAAMmjB,MAAQnO,EAAMhV,EAAMmjB,MAAOiD,GAAM,EAAG,IA=
I5C5C,EAAO,EACPp1B,EAAO,EAEP4R,EAAM7T,KAAO26B,CAEf,KAAKA,GACH,GAAkB,KAAd9=
mB,EAAMijB,MAAgB,CAExB,KAAc,GAAP70B,GAAW,CAChB,GAAa,IAAT0iB,EAAc,KAAMyV,E=
ACxBzV,KACA0S,GAAQrrD,EAAM6rD,MAAW51B,EACzBA,GAAQ,EAGV4R,EAAMj6D,OAASy9E,=
EACXxjB,EAAMnzB,OACRmzB,EAAMnzB,KAAKk6C,UAAYvD,GAEP,IAAdxjB,EAAMijB,QAERm=
D,GAAK,GAAY,IAAP5C,EACV4C,GAAK,GAAM5C,IAAS,EAAK,IACzBxjB,EAAMmjB,MAAQnO,E=
AAMhV,EAAMmjB,MAAOiD,GAAM,EAAG,IAI5C5C,EAAO,EACPp1B,EAAO,MAGA4R,GAAMnzB,O=
ACbmzB,EAAMnzB,KAAK2uC,MAAQ,KAErBxb,GAAM7T,KAAO66B,CAEf,KAAKA,GACH,GAAkB,=
KAAdhnB,EAAMijB,QACRz7E,EAAOw4D,EAAMj6D,OACTyB,EAAOspE,IAAQtpE,EAAOspE,GA=
CtBtpE,IACEw4D,EAAMnzB,OACRxkC,GAAM23D,EAAMnzB,KAAKk6C,UAAY/mB,EAAMj6D,OA=
C9Bi6D,EAAMnzB,KAAK2uC,QAEdxb,EAAMnzB,KAAK2uC,MAAQ,GAAIrsE,OAAM6wD,EAAMnz=
B,KAAKk6C,YAE1C5S,EAAMC,SACJpU,EAAMnzB,KAAK2uC,MACXrjD,EACA6rD,EAGAx8E,EA=
EAa,KAMc,IAAd23D,EAAMijB,QACRjjB,EAAMmjB,MAAQnO,EAAMhV,EAAMmjB,MAAOhrD,EA=
AO3wB,EAAMw8E,IAEhDlT,GAAQtpE,EACRw8E,GAAQx8E,EACRw4D,EAAMj6D,QAAUyB,GAEd=
w4D,EAAMj6D,QAAU,KAAMwgF,EAE5BvmB,GAAMj6D,OAAS,EACfi6D,EAAM7T,KAAO86B,CAE=
f,KAAKA,GACH,GAAkB,KAAdjnB,EAAMijB,MAAgB,CACxB,GAAa,IAATnS,EAAc,KAAMyV,EA=
CxB/+E,GAAO,CACP,GAEEa,IAAM8vB,EAAM6rD,EAAOx8E,KAEfw4D,EAAMnzB,MAAQxkC,IA=
Cb23D,EAAMj6D,OAAS,QAClBi6D,EAAMnzB,KAAKhoC,MAAQwG,OAAOC,aAAajD,WAElCA,IA=
AcyoE,EAAPtpE,EAOhB,IALkB,IAAdw4D,EAAMijB,QACRjjB,EAAMmjB,MAAQnO,EAAMhV,E=
AAMmjB,MAAOhrD,EAAO3wB,EAAMw8E,IAEhDlT,GAAQtpE,EACRw8E,GAAQx8E,EACJa,GAAO=
,KAAMk+E,OAEVvmB,GAAMnzB,OACbmzB,EAAMnzB,KAAKhoC,KAAO,KAEpBm7D,GAAMj6D,OA=
AS,EACfi6D,EAAM7T,KAAO+6B,CAEf,KAAKA,GACH,GAAkB,KAAdlnB,EAAMijB,MAAgB,CAC=
xB,GAAa,IAATnS,EAAc,KAAMyV,EACxB/+E,GAAO,CACP,GACEa,IAAM8vB,EAAM6rD,EAAOx=
8E,KAEfw4D,EAAMnzB,MAAQxkC,IACb23D,EAAMj6D,OAAS,QAClBi6D,EAAMnzB,KAAK4uC,=
SAAWpwE,OAAOC,aAAajD,WAErCA,IAAcyoE,EAAPtpE,EAMhB,IALkB,IAAdw4D,EAAMijB,Q=
ACRjjB,EAAMmjB,MAAQnO,EAAMhV,EAAMmjB,MAAOhrD,EAAO3wB,EAAMw8E,IAEhDlT,GAAQ=
tpE,EACRw8E,GAAQx8E,EACJa,GAAO,KAAMk+E,OAEVvmB,GAAMnzB,OACbmzB,EAAMnzB,KA=
AK4uC,QAAU,KAEvBzb,GAAM7T,KAAOg7B,CAEf,KAAKA,GACH,GAAkB,IAAdnnB,EAAMijB,M=
AAgB,CAExB,KAAc,GAAP70B,GAAW,CAChB,GAAa,IAAT0iB,EAAc,KAAMyV,EACxBzV,KACA0=
S,GAAQrrD,EAAM6rD,MAAW51B,EACzBA,GAAQ,EAGV,GAAIo1B,KAAwB,MAAdxjB,EAAMmjB,=
OAAiB,CACnCnR,EAAKN,IAAM,sBACX1R,EAAM7T,KAAOs6B,EACb,OAGFjD,EAAO,EACPp1B,=
EAAO,EAGL4R,EAAMnzB,OACRmzB,EAAMnzB,KAAK0uC,KAASvb,EAAMijB,OAAS,EAAK,EACx=
CjjB,EAAMnzB,KAAKm7B,MAAO,GAEpBgK,EAAK6B,MAAQ7T,EAAMmjB,MAAQ,EAC3BnjB,EAA=
M7T,KAAOk6B,CACb,MACF,KAAKK,GAEH,KAAc,GAAPt4B,GAAW,CAChB,GAAa,IAAT0iB,EAA=
c,KAAMyV,EACxBzV,KACA0S,GAAQrrD,EAAM6rD,MAAW51B,EACzBA,GAAQ,EAGV4jB,EAAK6=
B,MAAQ7T,EAAMmjB,MAAQL,EAAQU,GAEnCA,EAAO,EACPp1B,EAAO,EAEP4R,EAAM7T,KAAOi=
7B,CAEf,KAAKA,GACH,GAAuB,IAAnBpnB,EAAMgjB,SASR,MAPAhR,GAAKc,SAAW0S,EAChBx=
T,EAAKa,UAAYhvE,EACjBmuE,EAAKY,QAAUoR,EACfhS,EAAKW,SAAW7B,EAChB9Q,EAAMwjB=
,KAAOA,EACbxjB,EAAM5R,KAAOA,EAEN4gB,CAETgD,GAAK6B,MAAQ7T,EAAMmjB,MAAQ,EAC=
3BnjB,EAAM7T,KAAOk6B,CAEf,KAAKA,GACH,GAAI9Z,IAAUK,GAAWL,IAAU8a,EAAW,KAAMd=
,EAEtD,KAAKD,GACH,GAAItmB,EAAMjzC,KAAM,CAEdy2D,KAAiB,EAAPp1B,EACVA,GAAe,E=
AAPA,EAER4R,EAAM7T,KAAOm7B,EACb,OAGF,KAAc,EAAPl5B,GAAU,CACf,GAAa,IAAT0iB,=
EAAc,KAAMyV,EACxBzV,KACA0S,GAAQrrD,EAAM6rD,MAAW51B,EACzBA,GAAQ,EASV,OANA4=
R,EAAMjzC,KAAe,EAAPy2D,EAEdA,KAAU,EACVp1B,GAAQ,EAGQ,EAAPo1B,GACT,IAAK,GAG=
HxjB,EAAM7T,KAAOo7B,CACb,MACF,KAAK,GAKH,GAJAxC,EAAY/kB,GAGZA,EAAM7T,KAAOq=
7B,GACTjb,IAAU8a,EAAS,CAErB7D,KAAU,EACVp1B,GAAQ,CAER,MAAMm4B,GAER,KACF,KA=
AK,GAGHvmB,EAAM7T,KAAOs7B,CACb,MACF,KAAK,GACHzV,EAAKN,IAAM,qBACX1R,EAAM7T=
,KAAOs6B,GAGfjD,KAAU,EACVp1B,GAAQ,CAER,MACF,KAAKm5B,GAMH,IAJA/D,KAAiB,EAA=
Pp1B,EACVA,GAAe,EAAPA,EAGM,GAAPA,GAAW,CAChB,GAAa,IAAT0iB,EAAc,KAAMyV,EACx=
BzV,KACA0S,GAAQrrD,EAAM6rD,MAAW51B,EACzBA,GAAQ,EAGV,IAAY,MAAPo1B,MAAqBA,I=
AAS,GAAM,OAAS,CAChDxR,EAAKN,IAAM,+BACX1R,EAAM7T,KAAOs6B,EACb,OAUF,GARAzmB=
,EAAMj6D,OAAgB,MAAPy9E,EAIfA,EAAO,EACPp1B,EAAO,EAEP4R,EAAM7T,KAAOu7B,EACT=
nb,IAAU8a,EAAW,KAAMd,EAEjC,KAAKmB,GACH1nB,EAAM7T,KAAOw7B,CAEf,KAAKA,GAEH,=
GADAngF,EAAOw4D,EAAMj6D,OACH,CAGR,GAFIyB,EAAOspE,IAAQtpE,EAAOspE,GACtBtpE=
,EAAO3D,IAAQ2D,EAAO3D,GACb,IAAT2D,EAAc,KAAM++E,EAExBpS,GAAMC,SAASpgE,EAAQ=
mkB,EAAO6rD,EAAMx8E,EAAMg+E,GAE1C1U,GAAQtpE,EACRw8E,GAAQx8E,EACR3D,GAAQ2D=
,EACRg+E,GAAOh+E,EACPw4D,EAAMj6D,QAAUyB,CAChB,OAGFw4D,EAAM7T,KAAOk6B,CACb=
,MACF,KAAKoB,GAEH,KAAc,GAAPr5B,GAAW,CAChB,GAAa,IAAT0iB,EAAc,KAAMyV,EACxBz=
V,KACA0S,GAAQrrD,EAAM6rD,MAAW51B,EACzBA,GAAQ,EAmBV,GAhBA4R,EAAM8jB,MAAe,G=
AAPN,GAA0B,IAExCA,KAAU,EACVp1B,GAAQ,EAER4R,EAAM+jB,OAAgB,GAAPP,GAA0B,EAEz=
CA,KAAU,EACVp1B,GAAQ,EAER4R,EAAM6jB,OAAgB,GAAPL,GAA0B,EAEzCA,KAAU,EACVp1B=
,GAAQ,EAGJ4R,EAAM8jB,KAAO,KAAO9jB,EAAM+jB,MAAQ,GAAI,CACxC/R,EAAKN,IAAM,sC=
ACX1R,EAAM7T,KAAOs6B,EACb,OAIFzmB,EAAM8Q,KAAO,EACb9Q,EAAM7T,KAAOy7B,CAEf,=
KAAKA,GACH,KAAO5nB,EAAM8Q,KAAO9Q,EAAM6jB,OAAO,CAE/B,KAAc,EAAPz1B,GAAU,CAC=
f,GAAa,IAAT0iB,EAAc,KAAMyV,EACxBzV,KACA0S,GAAQrrD,EAAM6rD,MAAW51B,EACzBA,=
GAAQ,EAGV4R,EAAMikB,KAAKrkE,GAAMogD,EAAM8Q,SAAmB,EAAP0S,EAEnCA,KAAU,EACVp=
1B,GAAQ,EAGV,KAAO4R,EAAM8Q,KAAO,IAClB9Q,EAAMikB,KAAKrkE,GAAMogD,EAAM8Q,SA=
AW,CAapC,IAPA9Q,EAAMyjB,QAAUzjB,EAAMmkB,OACtBnkB,EAAM2jB,QAAU,EAEhBvY,IAA=
Qhd,KAAM4R,EAAM2jB,SACpBn4E,GAAM45E,EAAcyC,EAAO7nB,EAAMikB,KAAM,EAAG,GAAI=
jkB,EAAMyjB,QAAS,EAAGzjB,EAAMkkB,KAAM9Y,IAC5EpL,EAAM2jB,QAAUvY,GAAKhd,KAE=
jB5iD,GAAK,CACPwmE,EAAKN,IAAM,2BACX1R,EAAM7T,KAAOs6B,EACb,OAGFzmB,EAAM8Q,=
KAAO,EACb9Q,EAAM7T,KAAO27B,EAEf,KAAKA,IACH,KAAO9nB,EAAM8Q,KAAO9Q,EAAM8jB,=
KAAO9jB,EAAM+jB,OAAO,CAC5C,KACEoC,GAAOnmB,EAAMyjB,QAAQD,GAAS,GAAKxjB,EAAM=
2jB,SAAW,GACpDkC,GAAYM,KAAS,GACrBL,GAAWK,KAAS,GAAM,IAC1BJ,GAAkB,MAAPI,KAE=
Q/3B,GAAf,KANG,CAQP,GAAa,IAAT0iB,EAAc,KAAMyV,EACxBzV,KACA0S,GAAQrrD,EAAM6=
rD,MAAW51B,EACzBA,GAAQ,EAGV,GAAe,GAAX23B,GAEFvC,KAAUqC,GACVz3B,GAAQy3B,GA=
ER7lB,EAAMikB,KAAKjkB,EAAM8Q,QAAUiV,OAExB,CACH,GAAiB,KAAbA,GAAiB,CAGnB,IA=
DA/4E,GAAI64E,GAAY,EACF74E,GAAPohD,GAAU,CACf,GAAa,IAAT0iB,EAAc,KAAMyV,EAC=
xBzV,KACA0S,GAAQrrD,EAAM6rD,MAAW51B,EACzBA,GAAQ,EAOV,GAHAo1B,KAAUqC,GACVz=
3B,GAAQy3B,GAEW,IAAf7lB,EAAM8Q,KAAY,CACpBkB,EAAKN,IAAM,4BACX1R,EAAM7T,KAA=
Os6B,EACb,OAEFp+E,GAAM23D,EAAMikB,KAAKjkB,EAAM8Q,KAAO,GAC9BtpE,EAAO,GAAY,=
EAAPg8E,GAEZA,KAAU,EACVp1B,GAAQ,MAGL,IAAiB,KAAb23B,GAAiB,CAGxB,IADA/4E,GA=
AI64E,GAAY,EACF74E,GAAPohD,GAAU,CACf,GAAa,IAAT0iB,EAAc,KAAMyV,EACxBzV,KAC=
A0S,GAAQrrD,EAAM6rD,MAAW51B,EACzBA,GAAQ,EAIVo1B,KAAUqC,GACVz3B,GAAQy3B,GA=
ERx9E,GAAM,EACNb,EAAO,GAAY,EAAPg8E,GAEZA,KAAU,EACVp1B,GAAQ,MAGL,CAGH,IADA=
phD,GAAI64E,GAAY,EACF74E,GAAPohD,GAAU,CACf,GAAa,IAAT0iB,EAAc,KAAMyV,EACxB=
zV,KACA0S,GAAQrrD,EAAM6rD,MAAW51B,EACzBA,GAAQ,EAIVo1B,KAAUqC,GACVz3B,GAAQ=
y3B,GAERx9E,GAAM,EACNb,EAAO,IAAa,IAAPg8E,GAEbA,KAAU,EACVp1B,GAAQ,EAGV,GAA=
I4R,EAAM8Q,KAAOtpE,EAAOw4D,EAAM8jB,KAAO9jB,EAAM+jB,MAAO,CAChD/R,EAAKN,IAA=
M,4BACX1R,EAAM7T,KAAOs6B,EACb,OAEF,KAAOj/E,KACLw4D,EAAMikB,KAAKjkB,EAAM8Q=
,QAAUzoE,IAMjC,GAAI23D,EAAM7T,OAASs6B,GAAO,KAG1B,IAAwB,IAApBzmB,EAAMikB,K=
AAK,KAAY,CACzBjS,EAAKN,IAAM,uCACX1R,EAAM7T,KAAOs6B,EACb,OAeF,GATAzmB,EAAM=
2jB,QAAU,EAEhBvY,IAAQhd,KAAM4R,EAAM2jB,SACpBn4E,GAAM45E,EAAcC,EAAMrlB,EAA=
MikB,KAAM,EAAGjkB,EAAM8jB,KAAM9jB,EAAMyjB,QAAS,EAAGzjB,EAAMkkB,KAAM9Y,IAG=
nFpL,EAAM2jB,QAAUvY,GAAKhd,KAGjB5iD,GAAK,CACPwmE,EAAKN,IAAM,8BACX1R,EAAM7=
T,KAAOs6B,EACb,OAcF,GAXAzmB,EAAM4jB,SAAW,EAGjB5jB,EAAM0jB,SAAW1jB,EAAMokB=
,QACvBhZ,IAAQhd,KAAM4R,EAAM4jB,UACpBp4E,GAAM45E,EAAcE,EAAOtlB,EAAMikB,KAA=
MjkB,EAAM8jB,KAAM9jB,EAAM+jB,MAAO/jB,EAAM0jB,SAAU,EAAG1jB,EAAMkkB,KAAM9Y,=
IAG/FpL,EAAM4jB,SAAWxY,GAAKhd,KAGlB5iD,GAAK,CACPwmE,EAAKN,IAAM,wBACX1R,EA=
AM7T,KAAOs6B,EACb,OAIF,GADAzmB,EAAM7T,KAAOq7B,GACTjb,IAAU8a,EAAW,KAAMd,EA=
EjC,KAAKiB,IACHxnB,EAAM7T,KAAO47B,EAEf,KAAKA,IACH,GAAIjX,GAAQ,GAAKjtE,GAA=
Q,IAAK,CAE5BmuE,EAAKc,SAAW0S,EAChBxT,EAAKa,UAAYhvE,EACjBmuE,EAAKY,QAAUoR,=
EACfhS,EAAKW,SAAW7B,EAChB9Q,EAAMwjB,KAAOA,EACbxjB,EAAM5R,KAAOA,EAEb45B,EA=
AahW,EAAM0T,GAEnBF,EAAMxT,EAAKc,SACX9+D,EAASg+D,EAAKh+D,OACdnQ,EAAOmuE,EA=
AKa,UACZmR,EAAOhS,EAAKY,QACZz6C,EAAQ65C,EAAK75C,MACb24C,EAAOkB,EAAKW,SACZ=
6Q,EAAOxjB,EAAMwjB,KACbp1B,EAAO4R,EAAM5R,KAGT4R,EAAM7T,OAASk6B,IACjBrmB,E=
AAMskB,KAAO,GAEf,OAGF,IADAtkB,EAAMskB,KAAO,EAEX6B,GAAOnmB,EAAMyjB,QAAQD,G=
AAS,GAAKxjB,EAAM2jB,SAAU,GACnDkC,GAAYM,KAAS,GACrBL,GAAWK,KAAS,GAAM,IAC1BJ=
,GAAkB,MAAPI,KAEM/3B,GAAby3B,KANG,CAQP,GAAa,IAAT/U,EAAc,KAAMyV,EACxBzV,KA=
CA0S,GAAQrrD,EAAM6rD,MAAW51B,EACzBA,GAAQ,EAGV,GAAI03B,IAAgC,KAAV,IAAVA,IA=
AuB,CAIrC,IAHAE,GAAYH,GACZI,GAAUH,GACVI,GAAWH,GAETI,GAAOnmB,EAAMyjB,QAAQy=
C,KACX1C,GAAS,GAAMwC,GAAYC,IAAW,IAAoCD,KACpFH,GAAYM,KAAS,GACrBL,GAAWK,KAA=
S,GAAM,IAC1BJ,GAAkB,MAAPI,KAEoB/3B,GAA1B43B,GAAYH,KAPV,CASP,GAAa,IAAT/U,E=
AAc,KAAMyV,EACxBzV,KACA0S,GAAQrrD,EAAM6rD,MAAW51B,EACzBA,GAAQ,EAIVo1B,KAA=
UwC,GACV53B,GAAQ43B,GAERhmB,EAAMskB,MAAQ0B,GAQhB,GALAxC,KAAUqC,GACVz3B,GA=
AQy3B,GAER7lB,EAAMskB,MAAQuB,GACd7lB,EAAMj6D,OAASggF,GACC,IAAZD,GAAe,CAIj=
B9lB,EAAM7T,KAAO87B,EACb,OAEF,GAAc,GAAVnC,GAAc,CAEhB9lB,EAAMskB,KAAO,GACb=
tkB,EAAM7T,KAAOk6B,CACb,OAEF,GAAc,GAAVP,GAAc,CAChB9T,EAAKN,IAAM,8BACX1R,E=
AAM7T,KAAOs6B,EACb,OAEFzmB,EAAMwb,MAAkB,GAAVsK,GACd9lB,EAAM7T,KAAO+7B,EAE=
f,KAAKA,IACH,GAAIloB,EAAMwb,MAAO,CAGf,IADAxuE,GAAIgzD,EAAMwb,MACIxuE,GAAP=
ohD,GAAU,CACf,GAAa,IAAT0iB,EAAc,KAAMyV,EACxBzV,KACA0S,GAAQrrD,EAAM6rD,MAA=
W51B,EACzBA,GAAQ,EAGV4R,EAAMj6D,QAAUy9E,GAAS,GAAKxjB,EAAMwb,OAAQ,EAE5CgI,=
KAAUxjB,EAAMwb,MAChBptB,GAAQ4R,EAAMwb,MAEdxb,EAAMskB,MAAQtkB,EAAMwb,MAGtB=
xb,EAAMukB,IAAMvkB,EAAMj6D,OAClBi6D,EAAM7T,KAAOg8B,EAEf,KAAKA,IACH,KACEhC=
,GAAOnmB,EAAM0jB,SAASF,GAAS,GAAKxjB,EAAM4jB,UAAW,GACrDiC,GAAYM,KAAS,GACrB=
L,GAAWK,KAAS,GAAM,IAC1BJ,GAAkB,MAAPI,KAEQ/3B,GAAf,KANG,CAQP,GAAa,IAAT0iB,=
EAAc,KAAMyV,EACxBzV,KACA0S,GAAQrrD,EAAM6rD,MAAW51B,EACzBA,GAAQ,EAGV,GAAyB=
,KAAV,IAAV03B,IAAuB,CAI1B,IAHAE,GAAYH,GACZI,GAAUH,GACVI,GAAWH,GAETI,GAAOn=
mB,EAAM0jB,SAASwC,KACZ1C,GAAS,GAAMwC,GAAYC,IAAW,IAAoCD,KACpFH,GAAYM,KAAS,=
GACrBL,GAAWK,KAAS,GAAM,IAC1BJ,GAAkB,MAAPI,KAEoB/3B,GAA1B43B,GAAYH,KAPV,CA=
SP,GAAa,IAAT/U,EAAc,KAAMyV,EACxBzV,KACA0S,GAAQrrD,EAAM6rD,MAAW51B,EACzBA,=
GAAQ,EAIVo1B,KAAUwC,GACV53B,GAAQ43B,GAERhmB,EAAMskB,MAAQ0B,GAOhB,GAJAxC,K=
AAUqC,GACVz3B,GAAQy3B,GAER7lB,EAAMskB,MAAQuB,GACA,GAAVC,GAAc,CAChB9T,EAAK=
N,IAAM,wBACX1R,EAAM7T,KAAOs6B,EACb,OAEFzmB,EAAM52D,OAAS28E,GACf/lB,EAAMwb=
,MAAoB,GAAZ,GACdxb,EAAM7T,KAAOi8B,EAEf,KAAKA,IACH,GAAIpoB,EAAMwb,MAAO,CAG=
f,IADAxuE,GAAIgzD,EAAMwb,MACIxuE,GAAPohD,GAAU,CACf,GAAa,IAAT0iB,EAAc,KAAM=
yV,EACxBzV,KACA0S,GAAQrrD,EAAM6rD,MAAW51B,EACzBA,GAAQ,EAGV4R,EAAM52D,QAAU=
o6E,GAAS,GAAKxjB,EAAMwb,OAAQ,EAE5CgI,KAAUxjB,EAAMwb,MAChBptB,GAAQ4R,EAAMw=
b,MAEdxb,EAAMskB,MAAQtkB,EAAMwb,MAGtB,GAAIxb,EAAM52D,OAAS42D,EAAMkjB,KAAM=
,CAC7BlR,EAAKN,IAAM,gCACX1R,EAAM7T,KAAOs6B,EACb,OAIFzmB,EAAM7T,KAAOk8B,EA=
Ef,KAAKA,IACH,GAAa,IAATxkF,EAAc,KAAM0iF,EAExB,IADA/+E,EAAOk+E,EAAO7hF,EAC=
Vm8D,EAAM52D,OAAS5B,EAAM,CAEvB,GADAA,EAAOw4D,EAAM52D,OAAS5B,EAClBA,EAAOw4=
D,EAAMsjB,OACXtjB,EAAMqkB,KAAM,CACdrS,EAAKN,IAAM,gCACX1R,EAAM7T,KAAOs6B,E=
ACb,OAkBAj/E,EAAOw4D,EAAMujB,OACf/7E,GAAQw4D,EAAMujB,MACdoC,GAAO3lB,EAAMq=
jB,MAAQ77E,GAGrBm+E,GAAO3lB,EAAMujB,MAAQ/7E,EAEnBA,EAAOw4D,EAAMj6D,SAAUyB=
,EAAOw4D,EAAMj6D,QACxC6/E,GAAc5lB,EAAMh9D,WAGpB4iF,IAAc5xE,EACd2xE,GAAOH,=
EAAMxlB,EAAM52D,OACnB5B,EAAOw4D,EAAMj6D,MAEXyB,GAAO3D,IAAQ2D,EAAO3D,GAC1B=
A,GAAQ2D,EACRw4D,EAAMj6D,QAAUyB,CAChB,GACEwM,GAAOwxE,KAASI,GAAYD,cACnBn+E=
,EACU,KAAjBw4D,EAAMj6D,SAAgBi6D,EAAM7T,KAAO47B,GACvC,MACF,KAAKE,IACH,GAAa=
,IAATpkF,EAAc,KAAM0iF,EACxBvyE,GAAOwxE,KAASxlB,EAAMj6D,OACtBlC,IACAm8D,EA=
AM7T,KAAO47B,EACb,MACF,KAAKT,IACH,GAAItnB,EAAM5gC,KAAM,CAEd,KAAc,GAAPgvB,=
GAAW,CAChB,GAAa,IAAT0iB,EAAc,KAAMyV,EACxBzV,KAEA0S,GAAQrrD,EAAM6rD,MAAW51=
B,EACzBA,GAAQ,EAcV,GAXAs3B,GAAQ7hF,EACRmuE,EAAK2B,WAAa+R,EAClB1lB,EAAM9a,=
OAASwgC,EACXA,IACF1T,EAAK6B,MAAQ7T,EAAMmjB,MAEdnjB,EAAMijB,MAAQjO,EAAMhV,=
EAAMmjB,MAAOnvE,EAAQ0xE,EAAMF,EAAME,GAAQ3Q,EAAQ/U,EAAMmjB,MAAOnvE,EAAQ0xE=
,EAAMF,EAAME,IAG7GA,EAAO7hF,GAEFm8D,EAAMijB,MAAQO,EAAOV,EAAQU,MAAWxjB,EAA=
MmjB,MAAO,CACxDnR,EAAKN,IAAM,uBACX1R,EAAM7T,KAAOs6B,EACb,OAGFjD,EAAO,EACP=
p1B,EAAO,EAIT4R,EAAM7T,KAAOm8B,EAEf,KAAKA,IACH,GAAItoB,EAAM5gC,MAAQ4gC,EA=
AMijB,MAAO,CAE7B,KAAc,GAAP70B,GAAW,CAChB,GAAa,IAAT0iB,EAAc,KAAMyV,EACxBzV=
,KACA0S,GAAQrrD,EAAM6rD,MAAW51B,EACzBA,GAAQ,EAGV,GAAIo1B,KAAwB,WAAdxjB,EA=
AM9a,OAAqB,CACvC8sB,EAAKN,IAAM,yBACX1R,EAAM7T,KAAOs6B,EACb,OAGFjD,EAAO,EA=
CPp1B,EAAO,EAIT4R,EAAM7T,KAAOo8B,EAEf,KAAKA,IACH/8E,GAAMujE,CACN,MAAMwX,E=
ACR,KAAKE,IACHj7E,GAAM2jE,CACN,MAAMoX,EACR,KAAKiC,IACH,MAAOpZ,EACT,KAAKqZ=
,IAEL,QACE,MAAOvZ,GAsBX,MARA8C,GAAKc,SAAW0S,EAChBxT,EAAKa,UAAYhvE;AACjBmu=
E,EAAKY,QAAUoR,EACfhS,EAAKW,SAAW7B,EAChB9Q,EAAMwjB,KAAOA,EACbxjB,EAAM5R,K=
AAOA,GAGT4R,EAAMqjB,OAAUqC,IAAS1T,EAAKa,WAAa7S,EAAM7T,KAAOs6B,KACvCzmB,EA=
AM7T,KAAOm7B,IAAS/a,IAAUtB,KAC/Csa,EAAavT,EAAMA,EAAKh+D,OAAQg+D,EAAKc,SAA=
U4S,EAAO1T,EAAKa,YAC7D7S,EAAM7T,KAAOq8B,GACNpZ,IAGXqW,GAAOzT,EAAKW,SACZ+S=
,GAAQ1T,EAAKa,UACbb,EAAK0B,UAAY+R,EACjBzT,EAAK2B,WAAa+R,EAClB1lB,EAAM9a,O=
AASwgC,EACX1lB,EAAM5gC,MAAQsmD,IAChB1T,EAAK6B,MAAQ7T,EAAMmjB,MAChBnjB,EAA=
MijB,MAAQjO,EAAMhV,EAAMmjB,MAAOnvE,EAAQ0xE,EAAM1T,EAAKc,SAAW4S,GAAQ3Q,EAA=
Q/U,EAAMmjB,MAAOnvE,EAAQ0xE,EAAM1T,EAAKc,SAAW4S,IAE/H1T,EAAK4B,UAAY5T,EAA=
M5R,MAAQ4R,EAAMjzC,KAAO,GAAK,IAC9BizC,EAAM7T,OAASk6B,EAAO,IAAM,IAC5BrmB,E=
AAM7T,OAASq7B,IAAQxnB,EAAM7T,OAASu7B,EAAQ,IAAM,IACzD,IAARjC,GAAsB,IAATC,G=
AAenZ,IAAUtB,IAAaz/D,KAAQsjE,IAC/DtjE,GAAM6jE,GAED7jE,IAGT,QAASwnE,GAAWhB=
,GAElB,IAAKA,IAASA,EAAKhS,MACjB,MAAOkP,EAGT,IAAIlP,GAAQgS,EAAKhS,KAKjB,OA=
JIA,GAAMh9D,SACRg9D,EAAMh9D,OAAS,MAEjBgvE,EAAKhS,MAAQ,KACN8O,EAGT,QAAS4Z,=
GAAiB1W,EAAMnlC,GAC9B,GAAImzB,EAGJ,OAAKgS,IAASA,EAAKhS,OACnBA,EAAQgS,EAAK=
hS,MACY,KAAP,EAAbA,EAAM5gC,MAA0B8vC,GAGrClP,EAAMnzB,KAAOA,EACbA,EAAKm7B,M=
AAO,EACL8G,IAP4BI,EA77CrC,GA2QIgW,GAAQC,EA3QRhR,EAAQt0E,EAAoB,IAC5Bk1E,EA=
AUl1E,EAAoB,IAC9Bm1E,EAAUn1E,EAAoB,IAC9BmoF,EAAenoF,EAAoB,IACnCulF,EAAgBv=
lF,EAAoB,IAEpCgoF,EAAQ,EACRxC,EAAO,EACPC,EAAQ,EAWRra,EAAkB,EAClB2B,EAAkB,=
EAClBya,EAAkB,EAMlBvY,EAAkB,EAClBC,EAAkB,EAClBC,EAAkB,EAElBE,EAAkB,GAClBC=
,EAAkB,GAClBC,EAAkB,GAClBC,EAAkB,GAIlB8C,EAAc,EAOXsS,EAAO,EACP+B,EAAQ,EAC=
RG,EAAO,EACPC,EAAK,EACLE,EAAQ,EACRE,EAAQ,EACRC,EAAO,EACPC,EAAU,EACVC,EAAO=
,EACPT,EAAS,GACTU,EAAO,GACHf,EAAO,GACPC,EAAS,GACTiB,EAAS,GACTG,EAAQ,GACRC=
,EAAO,GACPF,EAAQ,GACRG,EAAU,GACVE,GAAW,GACPN,GAAO,GACPO,GAAM,GACNG,GAAS,G=
ACTC,GAAO,GACPC,GAAU,GACVC,GAAQ,GACRJ,GAAM,GACdX,GAAQ,GACRgB,GAAS,GACTC,G=
AAO,GACP9B,GAAM,GACN+B,GAAM,GACNC,GAAO,GAMV/D,GAAc,IACdC,GAAe,IAGfzJ,GAAY=
,GAEZ4J,GAAY5J,GAiLZ8J,IAAS,CA+rCbhlF,GAAQkzE,aAAeA,EACvBlzE,EAAQ4kF,cAAg=
BA,EACxB5kF,EAAQwkF,iBAAmBA,EAC3BxkF,EAAQ6kF,YAAcA,EACtB7kF,EAAQoyE,aAAeA=
,EACvBpyE,EAAQmwE,QAAUA,EAClBnwE,EAAQgzE,WAAaA,EACrBhzE,EAAQ0oF,iBAAmBA,E=
AC3B1oF,EAAQ2oF,YAAc,sCAgBjB,SAAS1oF,EAAQD,GAEtB,YAGA,IAAIymF,GAAM,GACNJ,=
EAAO,EAqCXpmF,GAAOD,QAAU,SAAsBgyE,EAAMrpE,GAC3C,GAAIq3D,GACAylB,EACA14D,E=
ACA24D,EACArK,EACA74E,EAEA0gF,EAEAG,EACAC,EACAC,EAEAqF,EACApF,EACAp1B,EAC=
Ay6B,EACAC,EACAC,EACAC,EACA7C,EACA8C,EAEA5gF,EACAi1E,EACAqI,EACAC,EAGAztD=
,EAAOnkB,CAGXgsD,GAAQgS,EAAKhS,MAEbylB,EAAMzT,EAAKY,QACXz6C,EAAQ65C,EAAK7=
5C,MACbpL,EAAO04D,GAAOzT,EAAKW,SAAW,GAC9B+S,EAAO1T,EAAKc,SACZ9+D,EAASg+D,=
EAAKh+D,OACdqnE,EAAMqK,GAAQ/8E,EAAQqpE,EAAKa,WAC3BrwE,EAAMkjF,GAAQ1T,EAAK=
a,UAAY,KAE/BqQ,EAAOljB,EAAMkjB,KAEbG,EAAQrjB,EAAMqjB,MACdC,EAAQtjB,EAAMsj=
B,MACdC,EAAQvjB,EAAMujB,MACdqF,EAAW5oB,EAAMh9D,OACjBwgF,EAAOxjB,EAAMwjB,K=
ACbp1B,EAAO4R,EAAM5R,KACby6B,EAAQ7oB,EAAMyjB,QACdqF,EAAQ9oB,EAAM0jB,SACdq=
F,GAAS,GAAK/oB,EAAM2jB,SAAW,EAC/BqF,GAAS,GAAKhpB,EAAM4jB,UAAY,CAMhCxuE,GA=
CA,EAAG,CACU,GAAPg5C,IACFo1B,GAAQrrD,EAAMstD,MAAUr3B,EACxBA,GAAQ,EACRo1B,=
GAAQrrD,EAAMstD,MAAUr3B,EACxBA,GAAQ,GAGV+3B,EAAO0C,EAAMrF,EAAOuF,EAEpBG,G=
ACA,OAAS,CAKP,GAJAD,EAAK9C,IAAS,GACd3C,KAAUyF,EACV76B,GAAQ66B,EACRA,EAAM9=
C,IAAS,GAAM,IACV,IAAP8C,EAIFj1E,EAAO0xE,KAAiB,MAAPS,MAEd,CAAA,KAAS,GAAL8C=
,GAwKJ,CAAA,GAAkB,KAAR,GAALA,GAAgB,CACxB9C,EAAO0C,GAAc,MAAP1C,IAA8B3C,GAA=
S,GAAKyF,GAAM,GAChE,SAASC,GAEN,GAAS,GAALD,EAAS,CAEhBjpB,EAAM7T,KAAOk6B,CA=
Cb,MAAMjxE,GAGN48D,EAAKN,IAAM,8BACX1R,EAAM7T,KAAOs6B,CACb,MAAMrxE,GAnLN/M=
,EAAa,MAAP89E,EACN8C,GAAM,GACFA,IACSA,EAAP76B,IACFo1B,GAAQrrD,EAAMstD,MAA=
Ur3B,EACxBA,GAAQ,GAEV/lD,GAAOm7E,GAAS,GAAKyF,GAAM,EAC3BzF,KAAUyF,EACV76B,=
GAAQ66B,GAGC,GAAP76B,IACFo1B,GAAQrrD,EAAMstD,MAAUr3B,EACxBA,GAAQ,EACRo1B,=
GAAQrrD,EAAMstD,MAAUr3B,EACxBA,GAAQ,GAEV+3B,EAAO2C,EAAMtF,EAAOwF,EAEpBG,G=
ACA,OAAS,CAMP,GALAF,EAAK9C,IAAS,GACd3C,KAAUyF,EACV76B,GAAQ66B,EACRA,EAAM9=
C,IAAS,GAAM,MAEZ,GAAL8C,GA+HC,CAAA,GAAkB,KAAR,GAALA,GAAgB,CACxB9C,EAAO2C,=
GAAc,MAAP3C,IAA8B3C,GAAS,GAAKyF,GAAM,GAChE,SAASE,GAGTnX,EAAKN,IAAM,wBACX1=
R,EAAM7T,KAAOs6B,CACb,MAAMrxE,GAzHN,GAZAkoE,EAAc,MAAP6I,EACP8C,GAAM,GACKA=
,EAAP76B,IACFo1B,GAAQrrD,EAAMstD,MAAUr3B,EACxBA,GAAQ,EACG66B,EAAP76B,IACF=
o1B,GAAQrrD,EAAMstD,MAAUr3B,EACxBA,GAAQ,IAGZkvB,GAAQkG,GAAS,GAAKyF,GAAM,E=
AExB3L,EAAO4F,EAAM,CACflR,EAAKN,IAAM,gCACX1R,EAAM7T,KAAOs6B,CACb,MAAMrxE,=
GAOR,GAJAouE,KAAUyF,EACV76B,GAAQ66B,EAERA,EAAKvD,EAAOrK,EACRiC,EAAO2L,EAA=
I,CAEb,GADAA,EAAK3L,EAAO2L,EACRA,EAAK3F,GACHtjB,EAAMqkB,KAAM,CACdrS,EAAKN=
,IAAM,gCACX1R,EAAM7T,KAAOs6B,CACb,MAAMrxE,GA2BV,GAFAuwE,EAAO,EACPC,EAAcgD=
,EACA,IAAVrF,GAEF,GADAoC,GAAQtC,EAAQ4F,EACP5gF,EAAL4gF,EAAU,CACZ5gF,GAAO4=
gF,CACP,GACEj1E,GAAO0xE,KAAUkD,EAASjD,aACjBsD,EACXtD,GAAOD,EAAOpI,EACdsI,=
EAAc5xE,OAGb,IAAYi1E,EAAR1F,GAGP,GAFAoC,GAAQtC,EAAQE,EAAQ0F,EACxBA,GAAM1F=
,EACGl7E,EAAL4gF,EAAU,CACZ5gF,GAAO4gF,CACP,GACEj1E,GAAO0xE,KAAUkD,EAASjD,=
aACjBsD,EAEX,IADAtD,EAAO,EACKt9E,EAARk7E,EAAa,CACf0F,EAAK1F,EACLl7E,GAAO4=
gF,CACP,GACEj1E,GAAO0xE,KAAUkD,EAASjD,aACjBsD,EACXtD,GAAOD,EAAOpI,EACdsI,=
EAAc5xE,QAMlB,IADA2xE,GAAQpC,EAAQ0F,EACP5gF,EAAL4gF,EAAU,CACZ5gF,GAAO4gF,=
CACP,GACEj1E,GAAO0xE,KAAUkD,EAASjD,aACjBsD,EACXtD,GAAOD,EAAOpI,EACdsI,EAA=
c5xE,EAGlB,KAAO3L,EAAM,GACX2L,EAAO0xE,KAAUE,EAAYD,KAC7B3xE,EAAO0xE,KAAUE,=
EAAYD,KAC7B3xE,EAAO0xE,KAAUE,EAAYD,KAC7Bt9E,GAAO,CAELA,KACF2L,EAAO0xE,KAA=
UE,EAAYD,KACzBt9E,EAAM,IACR2L,EAAO0xE,KAAUE,EAAYD,WAI9B,CACHA,EAAOD,EAAOp=
I,CACd,GACEtpE,GAAO0xE,KAAU1xE,EAAO2xE,KACxB3xE,EAAO0xE,KAAU1xE,EAAO2xE,K=
ACxB3xE,EAAO0xE,KAAU1xE,EAAO2xE,KACxBt9E,GAAO,QACAA,EAAM,EACXA,KACF2L,EAA=
O0xE,KAAU1xE,EAAO2xE,KACpBt9E,EAAM,IACR2L,EAAO0xE,KAAU1xE,EAAO2xE,OAehC,O=
AkBJ,aAEW54D,EAAN04D,GAAqBjjF,EAAPkjF,EAGvBr9E,GAAM+lD,GAAQ,EACdq3B,GAAOp=
9E,EACP+lD,GAAQ/lD,GAAO,EACfm7E,IAAS,GAAKp1B,GAAQ,EAGtB4jB,EAAKY,QAAU6S,E=
ACfzT,EAAKc,SAAW4S,EAChB1T,EAAKW,SAAkB5lD,EAAN04D,EAAa,GAAK14D,EAAO04D,GA=
AO,GAAKA,EAAM14D,GAC5DilD,EAAKa,UAAoBrwE,EAAPkjF,EAAa,KAAOljF,EAAMkjF,GAA=
Q,KAAOA,EAAOljF,GAClEw9D,EAAMwjB,KAAOA,EACbxjB,EAAM5R,KAAOA,IAOV,SAASnuD,=
EAAQD,EAASH,GAE/B,YAGA,IAAIs0E,GAAQt0E,EAAoB,IAE5BupF,EAAU,GACV1E,EAAc,IA=
CdC,EAAe,IAGfkD,EAAQ,EACRxC,EAAO,EACPC,EAAQ,EAER+D,GACF,EAAG,EAAG,EAAG,EA=
AG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACrD,GAAI,GAAI=
,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAG,GAG3DC,GACF,=
GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAA=
I,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,=
GAAI,IAGtDC,GACF,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,G=
AAI,GAAI,GAAI,IAAK,IACtD,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAC=
lD,KAAM,MAAO,MAAO,MAAO,EAAG,GAG5BC,GACF,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAA=
I,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,=
GAAI,GAAI,GAAI,GAAI,GACpC,GAAI,GAAI,GAAI,GAAI,GAAI,GAGtBvpF,GAAOD,QAAU,SA=
AuB4E,EAAMq/E,EAAMwF,EAAYvb,EAAOn4D,EAAO2zE,EAAaxF,EAAM9Y,GAE/F,GAYIue,GA=
CAz3E,EACA+c,EACAm9B,EACA43B,EAIAxhF,EAMAqjF,EAAWC,EAASC,EA1BpB33B,EAAOgd=
,EAAKhd,KAGZ/lD,EAAM,EACN48E,EAAM,EACNx6E,EAAM,EAAGuB,EAAM,EACf2lB,EAAO,E=
ACPi4D,EAAO,EACPvvD,EAAO,EACPx2B,EAAO,EACPgmF,EAAO,EACPC,EAAO,EAMPtL,EAAO=
,KACPuL,EAAa,EAGbpiD,EAAQ,GAAIwsC,GAAM+E,MAAMkQ,EAAQ,GAChCY,EAAO,GAAI7V,G=
AAM+E,MAAMkQ,EAAQ,GAC/B5N,EAAQ,KACRyO,EAAc,CAoClB,KAAK5hF,EAAM,EAAU+gF,GA=
AP/gF,EAAgBA,IAC5Bs/B,EAAMt/B,GAAO,CAEf,KAAK48E,EAAM,EAAS/W,EAAN+W,EAAaA,=
IACzBt9C,EAAMs8C,EAAKwF,EAAaxE,KAK1B,KADAtzD,EAAOy8B,EACFpiD,EAAMo9E,EAAS=
p9E,GAAO,GACN,IAAf27B,EAAM37B,GADkBA,KAM9B,GAHI2lB,EAAO3lB,IACT2lB,EAAO3l=
B,GAEG,IAARA,EAaF,MATA+J,GAAM2zE,KAAiB,SAMvB3zE,EAAM2zE,KAAiB,SAEvBte,EAA=
Khd,KAAO,EACL,CAET,KAAK3jD,EAAM,EAASuB,EAANvB,GACO,IAAfk9B,EAAMl9B,GADaA,=
KASzB,IANWA,EAAPknB,IACFA,EAAOlnB,GAIT5G,EAAO,EACFwE,EAAM,EAAU+gF,GAAP/gF=
,EAAgBA,IAG5B,GAFAxE,IAAS,EACTA,GAAQ8jC,EAAMt/B,GACH,EAAPxE,EACF,MAAO,EAG=
X,IAAIA,EAAO,IAAMe,IAASijF,GAAiB,IAAR77E,GACjC,MAAO,EAKT,KADAg+E,EAAK,GAA=
K,EACL3hF,EAAM,EAAS+gF,EAAN/gF,EAAeA,IAC3B2hF,EAAK3hF,EAAM,GAAK2hF,EAAK3h=
F,GAAOs/B,EAAMt/B,EAIpC,KAAK48E,EAAM,EAAS/W,EAAN+W,EAAaA,IACM,IAA3BhB,EAA=
KwF,EAAaxE,KACpBf,EAAK8F,EAAK/F,EAAKwF,EAAaxE,OAAWA,EAmE3C,IA7BIrgF,IAASi=
jF,GACXrJ,EAAOhD,EAAQ0I,EACf1hF,EAAM,IAEGoC,IAASygF,GAClB7G,EAAO6K,EACPU,=
GAAc,IACdvO,EAAQ8N,EACRW,GAAe,IACfznF,EAAM,MAGNg8E,EAAO+K,EACP/N,EAAQgO,E=
ACRhnF,EAAM,IAIRsnF,EAAO,EACP7E,EAAM,EACN58E,EAAMoC,EACNu5E,EAAO0F,EACPE,=
EAAOj4D,EACP0I,EAAO,EACPpL,EAAM,GACN46D,EAAO,GAAKl4D,EACZy6B,EAAOy9B,EAAO=
,EAGTjlF,IAASygF,GAAQwE,EAAOnF,GAC1B9/E,IAAS0gF,GAASuE,EAAOlF,EAC1B,MAAO,=
EAKT,KAFA,GAAIl+E,GAAE,IAEG,CACPA,IAEAo/E,EAAYx9E,EAAMgyB,EACd6pD,EAAKe,G=
AAOziF,GACdsjF,EAAU,EACVC,EAAW7B,EAAKe,IAETf,EAAKe,GAAOziF,GACnBsjF,EAAUt=
K,EAAMyO,EAAc/F,EAAKe,IACnCc,EAAWvH,EAAKuL,EAAa7F,EAAKe,MAGlCa,EAAU,GACVC=
,EAAW,GAIb4D,EAAO,GAAMthF,EAAMgyB,EACnBnoB,EAAO,GAAK03E,EACZn/E,EAAMyH,CA=
CN,GACEA,IAAQy3E,EACR5zE,EAAMiuE,GAAQ8F,GAAQzvD,GAAQnoB,GAAS2zE,GAAa,GAAO=
C,GAAW,GAAMC,EAAU,QACtE,IAAT7zE,EAIT,KADAy3E,EAAO,GAAMthF,EAAM,EACZyhF,EA=
AOH,GACZA,IAAS,CAWX,IATa,IAATA,GACFG,GAAQH,EAAO,EACfG,GAAQH,GAERG,EAAO,EA=
IT7E,IACqB,MAAft9C,EAAMt/B,GAAY,CACtB,GAAIA,IAAQ2D,EAAO,KACnB3D,GAAM47E,E=
AAKwF,EAAavF,EAAKe,IAI/B,GAAI58E,EAAMspB,IAASm4D,EAAO19B,KAAUn9B,EAAK,CAY=
vC,IAVa,IAAToL,IACFA,EAAO1I,GAITqyD,GAAQv5E,EAGRm/E,EAAOvhF,EAAMgyB,EACbx=
2B,EAAO,GAAK+lF,EACS59E,EAAd49E,EAAOvvD,IACZx2B,GAAQ8jC,EAAMiiD,EAAOvvD,K=
ACT,GAARx2B,KACJ+lF,IACA/lF,IAAS,CAKX,IADAgmF,GAAQ,GAAKD,EACRhlF,IAASygF,=
GAAQwE,EAAOnF,GAC1B9/E,IAAS0gF,GAASuE,EAAOlF,EAC1B,MAAO,EAIT11D,GAAM66D,E=
AAO19B,EAIbr2C,EAAMkZ,GAAQ0C,GAAQ,GAAOi4D,GAAQ,GAAO5F,EAAO0F,EAAc,GAiBrE,=
MAVa,KAATI,IAIF/zE,EAAMiuE,EAAO8F,GAAUzhF,EAAMgyB,GAAS,GAAO,IAAM,GAAK,GAK=
1D+wC,EAAKhd,KAAOz8B,EACL,IAMJ,SAAS1xB,EAAQD,GAEtBC,EAAOD,SAGLwsE,WAAoB,E=
ACpBC,gBAAoB,EACpBC,aAAoB,EACpBC,aAAoB,EACpB1B,SAAoB,EACpB2B,QAAoB,EACpBy=
a,QAAoB,EAKpBvY,KAAoB,EACpBC,aAAoB,EACpBC,YAAoB,EACpBC,QAAmB,GACnBC,eAAmB=
,GACnBC,aAAmB,GAEnBE,YAAmB,GAInB6a,iBAA0B,EAC1BC,aAA0B,EAC1BC,mBAA0B,EAC1=
Bjc,sBAAyB,GAGzBT,WAA0B,EAC1BC,eAA0B,EAC1BC,MAA0B,EAC1BC,QAA0B,EAC1BC,mBA=
A0B,EAG1BgU,SAA0B,EAC1BC,OAA0B,EAE1BrH,UAA0B,EAG1BvI,WAA0B,IAOvB,SAASlyE,=
EAAQD,EAASH,IAEH,SAASW,EAAQ+9D,GA4H7C,QAASpwD,GAAQy8C,EAAKwgB,GAEpB,GAAIt=
W,IACF5zC,QACAmpE,QAASC,EAkBX,OAfIlkF,WAAUL,QAAU,IAAG+uD,EAAImlB,MAAQ7zE,=
UAAU,IAC7CA,UAAUL,QAAU,IAAG+uD,EAAIy1B,OAASnkF,UAAU,IAC9Cq5B,EAAU2rC,GAEZ=
tW,EAAI01B,WAAapf,EACRA,GAETprE,EAAQyqF,QAAQ31B,EAAKsW,GAGnB5qC,EAAYs0B,E=
AAI01B,cAAa11B,EAAI01B,YAAa,GAC9ChqD,EAAYs0B,EAAImlB,SAAQnlB,EAAImlB,MAAQ=
,GACpCz5C,EAAYs0B,EAAIy1B,UAASz1B,EAAIy1B,QAAS,GACtC/pD,EAAYs0B,EAAI41B,i=
BAAgB51B,EAAI41B,eAAgB,GACpD51B,EAAIy1B,SAAQz1B,EAAIu1B,QAAUM,GACvBC,EAAY=
91B,EAAKlK,EAAKkK,EAAImlB,OAoCnC,QAAS0Q,GAAiBh+E,EAAKk+E,GAC7B,GAAIlnF,GA=
AQwK,EAAQgP,OAAO0tE,EAE3B,OAAIlnF,GACK,KAAYwK,EAAQo8E,OAAO5mF,GAAO,GAAK,I=
AAMgJ,EAC7C,KAAYwB,EAAQo8E,OAAO5mF,GAAO,GAAK,IAEvCgJ,EAKX,QAAS29E,GAAe39E=
,EAAKk+E,GAC3B,MAAOl+E,GAIT,QAASm+E,GAAYrjF,GACnB,GAAIkd,KAMJ,OAJAld,GAAM=
shC,QAAQ,SAASx6B,EAAKw8E,GAC1BpmE,EAAKpW,IAAO,IAGPoW,EAIT,QAASimE,GAAY91B=
,EAAK/oD,EAAOi/E,GAG/B,GAAIl2B,EAAI41B,eACJ3+E,GACA6e,EAAW7e,EAAMoC,UAEjB=
pC,EAAMoC,UAAYnO,EAAQmO,WAExBpC,EAAMtG,aAAesG,EAAMtG,YAAYjE,YAAcuK,GAAQ,C=
ACjE,GAAIP,GAAMO,EAAMoC,QAAQ68E,EAAcl2B,EAItC,OAHKn4B,GAASnxB,KACZA,EAAMo=
/E,EAAY91B,EAAKtpD,EAAKw/E,IAEvBx/E,EAIT,GAAIy/E,GAAYC,EAAgBp2B,EAAK/oD,E=
ACrC,IAAIk/E,EACF,MAAOA,EAIT,IAAInkE,GAAO/R,OAAO+R,KAAK/a,GACnBo/E,EAAcL,=
EAAYhkE,EAQ9B,IANIguC,EAAI01B,aACN1jE,EAAO/R,OAAOumC,oBAAoBvvC,IAKhCg0B,E=
AAQh0B,KACJ+a,EAAKxY,QAAQ,YAAc,GAAKwY,EAAKxY,QAAQ,gBAAkB,GACrE,MAAO88E,GA=
AYr/E,EAIrB,IAAoB,IAAhB+a,EAAK/gB,OAAc,CACrB,GAAI6kB,EAAW7e,GAAQ,CACrB,GA=
AIlH,GAAOkH,EAAMlH,KAAO,KAAOkH,EAAMlH,KAAO,EAC5C,OAAOiwD,GAAIu1B,QAAQ,YAA=
cxlF,EAAO,IAAK,WAE/C,GAAIy7B,EAASv0B,GACX,MAAO+oD,GAAIu1B,QAAQ/mD,OAAO9hC=
,UAAU0D,SAAS9E,KAAK2L,GAAQ,SAE5D,IAAI2zB,EAAO3zB,GACT,MAAO+oD,GAAIu1B,QAA=
QzjD,KAAKplC,UAAU0D,SAAS9E,KAAK2L,GAAQ,OAE1D,IAAIg0B,EAAQh0B,GACV,MAAOq/E=
,GAAYr/E,GAIvB,GAAIyyE,GAAO,GAAI/2E,GAAQ,EAAO4jF,GAAU,IAAK,IAS7C,IANIrkF,=
EAAQ+E,KACVtE,GAAQ,EACR4jF,GAAU,IAAK,MAIbzgE,EAAW7e,GAAQ,CACrB,GAAIiB,GAA=
IjB,EAAMlH,KAAO,KAAOkH,EAAMlH,KAAO,EACzC25E,GAAO,aAAexxE,EAAI,IAkB5B,GAdI=
szB,EAASv0B,KACXyyE,EAAO,IAAMl7C,OAAO9hC,UAAU0D,SAAS9E,KAAK2L,IAI1C2zB,EA=
AO3zB,KACTyyE,EAAO,IAAM53C,KAAKplC,UAAU8pF,YAAYlrF,KAAK2L,IAI3Cg0B,EAAQh0=
B,KACVyyE,EAAO,IAAM4M,EAAYr/E,IAGP,IAAhB+a,EAAK/gB,UAAkB0B,GAAyB,GAAhBsE,=
EAAMhG,QACxC,MAAOslF,GAAO,GAAK7M,EAAO6M,EAAO,EAGnC,IAAmB,EAAfL,EACF,MAAI1=
qD,GAASv0B,GACJ+oD,EAAIu1B,QAAQ/mD,OAAO9hC,UAAU0D,SAAS9E,KAAK2L,GAAQ,UAEn=
D+oD,EAAIu1B,QAAQ,WAAY,UAInCv1B,GAAI5zC,KAAK7e,KAAK0J,EAEd,IAAIiI,EAWJ,OA=
TEA,GADEvM,EACO8jF,EAAYz2B,EAAK/oD,EAAOi/E,EAAcG,EAAarkE,GAEnDA,EAAK8V,IA=
AI,SAASxY,GACzB,MAAOonE,GAAe12B,EAAK/oD,EAAOi/E,EAAcG,EAAa/mE,EAAK3c,KAIt=
EqtD,EAAI5zC,KAAKiL,MAEFs/D,EAAqBz3E,EAAQwqE,EAAM6M,GAI5C,QAASH,GAAgBp2B,=
EAAK/oD,GAC5B,GAAIy0B,EAAYz0B,GACd,MAAO+oD,GAAIu1B,QAAQ,YAAa,YAClC,IAAI1t=
D,EAAS5wB,GAAQ,CACnB,GAAI2/E,GAAS,IAAO7uC,KAAKC,UAAU/wC,GAAOc,QAAQ,SAAU,I=
AClBA,QAAQ,KAAM,OACdA,QAAQ,OAAQ,KAAO,GACjE,OAAOioD,GAAIu1B,QAAQqB,EAAQ,UA=
E7B,MAAIzrD,GAASl0B,GACJ+oD,EAAIu1B,QAAQ,GAAKt+E,EAAO,UAC7B0zB,EAAU1zB,GA=
CL+oD,EAAIu1B,QAAQ,GAAKt+E,EAAO,WAE7Bs0B,EAAOt0B,GACF+oD,EAAIu1B,QAAQ,OAA=
Q,QAD7B,OAKF,QAASe,GAAYr/E,GACnB,MAAO,IAAMvC,MAAMhI,UAAU0D,SAAS9E,KAAK2L,=
GAAS,IAItD,QAASw/E,GAAYz2B,EAAK/oD,EAAOi/E,EAAcG,EAAarkE,GAE1D,IAAK,GADD9=
S,MACKvN,EAAI,EAAG2M,EAAIrH,EAAMhG,OAAYqN,EAAJ3M,IAASA,EACrCob,EAAe9V,EAA=
OV,OAAO5E,IAC/BuN,EAAO3R,KAAKmpF,EAAe12B,EAAK/oD,EAAOi/E,EAAcG,EACjD9/E,O=
AAO5E,IAAI,IAEfuN,EAAO3R,KAAK,GAShB,OANAykB,GAAKiiB,QAAQ,SAAS3kB,GACfA,EA=
AIhW,MAAM,UACb4F,EAAO3R,KAAKmpF,EAAe12B,EAAK/oD,EAAOi/E,EAAcG,EACjD/mE,GA=
AK,MAGNpQ,EAIT,QAASw3E,GAAe12B,EAAK/oD,EAAOi/E,EAAcG,EAAa/mE,EAAK3c,GAClE=
,GAAI5C,GAAM8H,EAAKkxC,CAsCf,IArCAA,EAAO9oC,OAAO42E,yBAAyB5/E,EAAOqY,KAAU=
rY,MAAOA,EAAMqY,IACjEy5B,EAAKlvC,IAELhC,EADEkxC,EAAKhvC,IACDimD,EAAIu1B,Q=
AAQ,kBAAmB,WAE/Bv1B,EAAIu1B,QAAQ,WAAY,WAG5BxsC,EAAKhvC,MACPlC,EAAMmoD,EAA=
Iu1B,QAAQ,WAAY,YAG7BxoE,EAAespE,EAAa/mE,KAC/Bvf,EAAO,IAAMuf,EAAM,KAEhBzX,=
IACCmoD,EAAI5zC,KAAK5S,QAAQuvC,EAAK9xC,OAAS,GAE/BY,EADE0zB,EAAO2qD,GACHJ,=
EAAY91B,EAAKjX,EAAK9xC,MAAO,MAE7B6+E,EAAY91B,EAAKjX,EAAK9xC,MAAOi/E,EAAe,=
GAEhDr+E,EAAI2B,QAAQ,MAAQ,KAEpB3B,EADElF,EACIkF,EAAIoqC,MAAM,MAAMna,IAAI,=
SAAS9kB,GACjC,MAAO,KAAOA,IACbzJ,KAAK,MAAM1E,OAAO,GAEf,KAAOgD,EAAIoqC,MAAM=
,MAAMna,IAAI,SAAS9kB,GACxC,MAAO,MAAQA,IACdzJ,KAAK,QAIZ1B,EAAMmoD,EAAIu1B,=
QAAQ,aAAc,YAGhC7pD,EAAY37B,GAAO,CACrB,GAAI4C,GAAS2c,EAAIhW,MAAM,SACrB,MAA=
OzB,EAET9H,GAAOg4C,KAAKC,UAAU,GAAK14B,GACvBvf,EAAKuJ,MAAM,iCACbvJ,EAAOA,E=
AAK8E,OAAO,EAAG9E,EAAKkB,OAAS,GACpClB,EAAOiwD,EAAIu1B,QAAQxlF,EAAM,UAEzBA=
,EAAOA,EAAKgI,QAAQ,KAAM,OACdA,QAAQ,OAAQ,KAChBA,QAAQ,WAAY,KAChChI,EAAOiwD,=
EAAIu1B,QAAQxlF,EAAM,WAI7B,MAAOA,GAAO,KAAO8H,EAIvB,QAAS8+E,GAAqBz3E,EAAQw=
qE,EAAM6M,GAC1C,GAAIO,GAAc,EACd7lF,EAASiO,EAAOs1B,OAAO,SAASwsC,EAAM+V,GAG=
xC,MAFAD,KACIC,EAAIv9E,QAAQ,OAAS,GAAGs9E,IACrB9V,EAAO+V,EAAIh/E,QAAQ,kBAA=
mB,IAAI9G,OAAS,GACzD,EAEH,OAAIA,GAAS,GACJslF,EAAO,IACG,KAAT7M,EAAc,GAAKA,=
EAAO,OAC3B,IACAxqE,EAAO3F,KAAK,SACZ,IACAg9E,EAAO,GAGTA,EAAO,GAAK7M,EAAO,I=
AAMxqE,EAAO3F,KAAK,MAAQ,IAAMg9E,EAAO,GAMnE,QAASrkF,GAAQ8kF,GACf,MAAO38E,O=
AAMnI,QAAQ8kF,GAIvB,QAASrsD,GAAU35B,GACjB,MAAsB,iBAARA,GAIhB,QAASu6B,GAAO=
v6B,GACd,MAAe,QAARA,EAIT,QAASs6D,GAAkBt6D,GACzB,MAAc,OAAPA,EAIT,QAASm6B,G=
AASn6B,GAChB,MAAsB,gBAARA,GAIhB,QAAS62B,GAAS72B,GAChB,MAAsB,gBAARA,GAIhB,=
QAASg+D,GAASh+D,GAChB,MAAsB,gBAARA,GAIhB,QAAS06B,GAAY16B,GACnB,MAAe,UAARA=
,EAIT,QAASw6B,GAASyjC,GAChB,MAAO/+C,GAAS++C,IAA8B,oBAAvBF,EAAeE,GAIxC,QAA=
S/+C,GAASlf,GAChB,MAAsB,gBAARA,IAA4B,OAARA,EAIpC,QAAS45B,GAAOlrB,GACd,MAA=
OwQ,GAASxQ,IAA4B,kBAAtBqvD,EAAervD,GAIvC,QAASurB,GAAQ38B,GACf,MAAO4hB,GAA=
S5hB,KACW,mBAAtBygE,EAAezgE,IAA2BA,YAAaoG,QAI9D,QAASohB,GAAW9kB,GAClB,MAA=
sB,kBAARA,GAIhB,QAASk+D,GAAYl+D,GACnB,MAAe,QAARA,GACe,iBAARA,IACQ,gBAARA,=
IACQ,gBAARA,IACQ,gBAARA,IACQ,mBAARA,GAMhB,QAAS+9D,GAAeI,GACtB,MAAOlvD,QAA=
OvT,UAAU0D,SAAS9E,KAAK6jE,GAuDxC,QAASpiD,GAAe+oC,EAAKmhC,GAC3B,MAAOh3E,QA=
AOvT,UAAUqgB,eAAezhB,KAAKwqD,EAAKmhC,GAnjBnD,GAAIC,GAAe,UACnBhsF,GAAQisF,=
OAAS,SAAS73C,GACxB,IAAKzX,EAASyX,GAAI,CAEhB,IAAK,GADD83C,MACKzlF,EAAI,EAA=
GA,EAAIL,UAAUL,OAAQU,IACpCylF,EAAQ7pF,KAAK8L,EAAQ/H,UAAUK,IAEjC,OAAOylF,G=
AAQ79E,KAAK,KAsBtB,IAAK,GAnBD5H,GAAI,EACJyiB,EAAO9iB,UACPiC,EAAM6gB,EAAKn=
jB,OACX4G,EAAMtB,OAAO+oC,GAAGvnC,QAAQm/E,EAAc,SAASp+E,GACjD,GAAU,OAANA,EA=
AY,MAAO,GACvB,IAAInH,GAAK4B,EAAK,MAAOuF,EACrB,QAAQA,GACN,IAAK,KAAM,MAAOvC=
,QAAO6d,EAAKziB,KAC9B,KAAK,KAAM,MAAO4C,QAAO6f,EAAKziB,KAC9B,KAAK,KACH,IAC=
E,MAAOo2C,MAAKC,UAAU5zB,EAAKziB,MAC3B,MAAOkV,GACP,MAAO,aAEX,QACE,MAAO/N,M=
AGJA,EAAIsb,EAAKziB,GAAQ4B,EAAJ5B,EAASmH,EAAIsb,IAAOziB,GAEtCkG,GADE0zB,E=
AAOzyB,KAAOoX,EAASpX,GAClB,IAAMA,EAEN,IAAMO,EAAQP,EAGzB,OAAOjB,IAOT3M,EAA=
Qm1C,UAAY,SAASzjB,EAAIggD,GAa/B,QAASya,KACP,IAAKzuB,EAAQ,CACX,GAAIa,EAAQ6=
tB,iBACV,KAAM,IAAI5iF,OAAMkoE,EACPnT,GAAQ8tB,iBAKnB3uB,GAAS,EAEX,MAAOhsC,=
GAAGnmB,MAAM9K,KAAM2F,WAtBxB,GAAIo6B,EAAYhgC,EAAO+9D,SACrB,MAAO,YACL,MAAO=
v+D,GAAQm1C,UAAUzjB,EAAIggD,GAAKnmE,MAAM9K,KAAM2F,WAIlD,IAAIm4D,EAAQ+tB,i=
BAAkB,EAC5B,MAAO56D,EAGT,IAAIgsC,IAAS,CAeb,OAAOyuB,GAIT,IACII,GADAC,IAEJx=
sF,GAAQwhE,SAAW,SAAS3yD,GAI1B,GAHI2xB,EAAY+rD,KACdA,EAAehuB,EAAQ8E,IAAIop=
B,YAAc,IAC3C59E,EAAMA,EAAI4H,eACL+1E,EAAO39E,GACV,GAAI,GAAIy0B,QAAO,MAAQz=
0B,EAAM,MAAO,KAAKsqB,KAAKozD,GAAe,CACjDhuB,EAAQmuB,GAClBF,GAAO39E,GAAO,WA=
CF7O,EAAQisF,OAAO1gF,MAAMvL,EAASoG,gBAI1ComF,GAAO39E,GAAO,YAGlB,OAAO29E,G=
AAO39E,IAoChB7O,EAAQmO,QAAUA,EAIlBA,EAAQo8E,QACNlpF,MAAU,EAAG,IACbsrF,QAA=
Y,EAAG,IACfC,WAAe,EAAG,IAClBC,SAAa,EAAG,IAChBC,OAAW,GAAI,IACfC,MAAU,GAAI,=
IACdC,OAAW,GAAI,IACfC,MAAU,GAAI,IACdC,MAAU,GAAI,IACdC,OAAW,GAAI,IACfC,SAA=
a,GAAI,IACjBC,KAAS,GAAI,IACbC,QAAY,GAAI,KAIlBn/E,EAAQgP,QACNowE,QAAW,OACX=
72D,OAAU,SACV82D,UAAW,SACXvnF,UAAa,OACbwnF,OAAQ,OACR/mF,OAAU,QACVgnF,KAAQ=
,UAERC,OAAU,OAkRZ3tF,EAAQgH,QAAUA,EAKlBhH,EAAQy/B,UAAYA,EAKpBz/B,EAAQqgC,=
OAASA,EAKjBrgC,EAAQogE,kBAAoBA,EAK5BpgE,EAAQigC,SAAWA,EAKnBjgC,EAAQ28B,SA=
AWA,EAKnB38B,EAAQ8jE,SAAWA,EAKnB9jE,EAAQwgC,YAAcA,EAKtBxgC,EAAQsgC,SAAWA,=
EAKnBtgC,EAAQglB,SAAWA,EAKnBhlB,EAAQ0/B,OAASA,EAMjB1/B,EAAQ+/B,QAAUA,EAKl=
B//B,EAAQ4qB,WAAaA,EAUrB5qB,EAAQgkE,YAAcA,EAEtBhkE,EAAQ8G,SAAWjH,EAAoB,GA=
0BvCG,GAAQ6U,IAAM,aAkBd7U,EAAQ07D,SAAW77D,EAAoB,IAEvCG,EAAQyqF,QAAU,SAASh=
xE,EAAQyL,GAEjC,IAAKA,IAAQF,EAASE,GAAM,MAAOzL,EAInC,KAFA,GAAIqN,GAAO/R,OA=
AO+R,KAAK5B,GACnBze,EAAIqgB,EAAK/gB,OACNU,KACLgT,EAAOqN,EAAKrgB,IAAMye,EA=
AI4B,EAAKrgB,GAE7B,OAAOgT,MAOoBrZ,KAAKJ,EAAU,WAAa,MAAOS,SAAYZ,EAAoB,MAI3F=
,SAASI,EAAQD,GAEtBC,EAAOD,QAAU,SAAkB8F,GACjC,MAAOA,IAAsB,gBAARA,IACI,kBAA=
bA,GAAI0B,MACS,kBAAb1B,GAAIoM,MACc,kBAAlBpM,GAAI8I,YAKb,SAAS3O,EAAQD,GAEO=
,kBAAlB+U,QAAO4rB,OAEhB1gC,EAAOD,QAAU,SAAkB04D,EAAMwF,GACvCxF,EAAKyF,OAAS=
D,EACdxF,EAAKl3D,UAAYuT,OAAO4rB,OAAOu9B,EAAU18D,WACvCiE,aACEsG,MAAO2sD,EA=
CP0F,YAAY,EACZnC,UAAU,EACVoC,cAAc,MAMpBp+D,EAAOD,QAAU,SAAkB04D,EAAMwF,GAC=
vCxF,EAAKyF,OAASD,CACd,IAAII,GAAW,YACfA,GAAS98D,UAAY08D,EAAU18D,UAC/Bk3D,=
EAAKl3D,UAAY,GAAI88D,GACrB5F,EAAKl3D,UAAUiE,YAAcizD,IAO5B,SAASz4D,EAAQD,E=
AASH,GAsF/B,QAAS+tF,GAASxpE,EAAKrY,GACrB,MAAIo0D,GAAK3/B,YAAYz0B,GACZ,GAA=
KA,EAEVo0D,EAAKlgC,SAASl0B,KAAWiD,SAASjD,GAC7BA,EAAM7G,WAEXi7D,EAAKv1C,WA=
AW7e,IAAUo0D,EAAK7/B,SAASv0B,GACnCA,EAAM7G,WAER6G,EAGT,QAAS8hF,GAASp5E,EA=
AGzH,GACnB,MAAImzD,GAAKxjC,SAASloB,GACTA,EAAE1O,OAASiH,EAAIyH,EAAIA,EAAEl=
K,MAAM,EAAGyC,GAE9ByH,EAIX,QAASq5E,GAAW94C,GAClB,MAAO64C,GAAShxC,KAAKC,UA=
AU9H,EAAK+4C,OAAQH,GAAW,KAAO,IACvD54C,EAAKg5C,SAAW,IAChBH,EAAShxC,KAAKC,U=
AAU9H,EAAKi5C,SAAUL,GAAW,KAc3D,QAASM,GAAKH,EAAQE,EAAUnrF,EAASkrF,EAAUG,GA=
CjD,KAAM,IAAIxf,GAAOyf,gBACftrF,QAASA,EACTirF,OAAQA,EACRE,SAAUA,EACVD,SAA=
UA,EACVG,mBAAoBA,IAcxB,QAASvf,GAAG7iE,EAAOjJ,GACZiJ,GAAOmiF,EAAKniF,GAAO,=
EAAMjJ,EAAS,KAAM6rE,EAAOC,IA8BtD,QAASyf,GAAWN,EAAQE,GAE1B,GAAIF,IAAWE,EAC=
b,OAAO,CAEF,IAAI9tB,EAAKr5D,SAASinF,IAAW5tB,EAAKr5D,SAASmnF,GAAW,CAC3D,GA=
AIF,EAAOhoF,QAAUkoF,EAASloF,OAAQ,OAAO,CAE7C,KAAK,GAAIU,GAAI,EAAGA,EAAIsnF=
,EAAOhoF,OAAQU,IACjC,GAAIsnF,EAAOtnF,KAAOwnF,EAASxnF,GAAI,OAAO,CAGxC,QAAO=
,EAIF,MAAI05D,GAAKzgC,OAAOquD,IAAW5tB,EAAKzgC,OAAOuuD,GACrCF,EAAOtkD,YAAc=
wkD,EAASxkD,UAK5B02B,EAAK7/B,SAASytD,IAAW5tB,EAAK7/B,SAAS2tD,GACzCF,EAAOz=
oE,SAAW2oE,EAAS3oE,QAC3ByoE,EAAOvtF,SAAWytF,EAASztF,QAC3ButF,EAAOO,YAAcL,=
EAASK,WAC9BP,EAAO/0D,YAAci1D,EAASj1D,WAC9B+0D,EAAOQ,aAAeN,EAASM,WAI5BpuB,=
EAAKn7C,SAAS+oE,IAAY5tB,EAAKn7C,SAASipE,GAU3CO,EAAST,EAAQE,GATjBF,GAAUE,E=
AarB,QAAS5jE,GAAYxjB,GACnB,MAAiD,sBAA1CkO,OAAOvT,UAAU0D,SAAS9E,KAAKyG,GAG=
xC,QAAS2nF,GAAS7gF,EAAGF,GACnB,GAAI0yD,EAAKC,kBAAkBzyD,IAAMwyD,EAAKC,kBAA=
kB3yD,GACtD,OAAO,CAET,IAAIE,EAAEnM,YAAciM,EAAEjM,UAAW,OAAO,CAExC,IAAI2+D,=
EAAK6D,YAAYr2D,IAAMwyD,EAAK6D,YAAYv2D,GAC1C,MAAOE,KAAMF,CAEf,IAAIghF,GAAU=
pkE,EAAY1c,GACtB+gF,EAAUrkE,EAAY5c,EAC1B,IAAKghF,IAAYC,IAAcD,GAAWC,EACxC,=
OAAO,CACT,IAAID,EAGF,MAFA9gF,GAAIghF,EAAOvuF,KAAKuN,GAChBF,EAAIkhF,EAAOvu=
F,KAAKqN,GACT4gF,EAAW1gF,EAAGF,EAEvB,IAEI2W,GAAK3d,EAFLmoF,EAAKzqB,EAAWx2=
D,GAChBkhF,EAAK1qB,EAAW12D,EAIpB,IAAImhF,EAAG7oF,QAAU8oF,EAAG9oF,OAClB,OA=
AO,CAKT,KAHA6oF,EAAGxgE,OACHygE,EAAGzgE,OAEE3nB,EAAImoF,EAAG7oF,OAAS,EAAG=
U,GAAK,EAAGA,IAC9B,GAAImoF,EAAGnoF,IAAMooF,EAAGpoF,GACd,OAAO,CAIX,KAAKA,E=
AAImoF,EAAG7oF,OAAS,EAAGU,GAAK,EAAGA,IAE9B,GADA2d,EAAMwqE,EAAGnoF,IACJ4nF=
,EAAW1gF,EAAEyW,GAAM3W,EAAE2W,IAAO,OAAO,CAE1C,QAAO,EA8BT,QAAS0qE,GAAkBf,E=
AAQE,GACjC,MAAKF,IAAWE,EAIgC,mBAA5Cl5E,OAAOvT,UAAU0D,SAAS9E,KAAK6tF,GAC1B=
A,EAAS90D,KAAK40D,GACZA,YAAkBE,IACpB,EACEA,EAAS7tF,QAAS2tF,MAAY,GAChC,GAG=
F,GAXE,EAcX,QAASgB,GAAQC,EAAan6B,EAAOo5B,EAAUnrF,GAC7C,GAAIirF,EAEA5tB,GA=
AKxjC,SAASsxD,KAChBnrF,EAAUmrF,EACVA,EAAW,KAGb,KACEp5B,IACA,MAAOzxD,GACP2=
qF,EAAS3qF,EAcX,GAXAN,GAAWmrF,GAAYA,EAASppF,KAAO,KAAOopF,EAASppF,KAAO,KAA=
O,MAC1D/B,EAAU,IAAMA,EAAU,KAEjCksF,IAAgBjB,GAClBG,EAAKH,EAAQE,EAAU,6BAA+B=
nrF,IAGnDksF,GAAeF,EAAkBf,EAAQE,IAC5CC,EAAKH,EAAQE,EAAU,yBAA2BnrF,GAG/Cks=
F,GAAejB,GAAUE,IACzBa,EAAkBf,EAAQE,KAAgBe,GAAejB,EAC5D,KAAMA,GAnTV,GAAI5t=
B,GAAOtgE,EAAoB,IAE3B8uF,EAASx/E,MAAM3N,UAAU+I,MACzB0kF,EAASl6E,OAAOvT,UA=
AUqgB,eAM1B8sD,EAAS1uE,EAAOD,QAAU4uE,CAO9BD,GAAOyf,eAAiB,SAAwB1sF,GAC9CjB=
,KAAKoE,KAAO,iBACZpE,KAAKstF,OAASrsF,EAAQqsF,OACtBttF,KAAKwtF,SAAWvsF,EAA=
QusF,SACxBxtF,KAAKutF,SAAWtsF,EAAQssF,SACpBtsF,EAAQoB,SACVrC,KAAKqC,QAAUp=
B,EAAQoB,QACvBrC,KAAKyuF,kBAAmB,IAExBzuF,KAAKqC,QAAUgrF,EAAWrtF,MAC1BA,KA=
AKyuF,kBAAmB,EAE1B,IAAIf,GAAqBzsF,EAAQysF,oBAAsBD,CAEvD,IAAI1kF,MAAM2lF,k=
BACR3lF,MAAM2lF,kBAAkB1uF,KAAM0tF,OAE3B,CAEH,GAAIvzB,GAAM,GAAIpxD,MACd,IA=
AIoxD,EAAI9hB,MAAO,CACb,GAAIrtC,GAAMmvD,EAAI9hB,MAGVs2C,EAAUjB,EAAmBtpF,K=
AC7BkmF,EAAMt/E,EAAI6C,QAAQ,KAAO8gF,EAC7B,IAAIrE,GAAO,EAAG,CAGZ,GAAIsE,GA=
AY5jF,EAAI6C,QAAQ,KAAMy8E,EAAM,EACxCt/E,GAAMA,EAAIu5B,UAAUqqD,EAAY,GAGlC5=
uF,KAAKq4C,MAAQrtC,KAMnB00D,EAAKzE,SAASiT,EAAOyf,eAAgB5kF,OAmDrCmlE,EAAOu=
f,KAAOA,EAYdvf,EAAOC,GAAKA,EAMZD,EAAO2gB,MAAQ,SAAevB,EAAQE,EAAUnrF,GAC1Ci=
rF,GAAUE,GAAUC,EAAKH,EAAQE,EAAUnrF,EAAS,KAAM6rE,EAAO2gB,QAMvE3gB,EAAO4gB,=
SAAW,SAAkBxB,EAAQE,EAAUnrF,GAChDirF,GAAUE,GACZC,EAAKH,EAAQE,EAAUnrF,EAAS,=
KAAM6rE,EAAO4gB,WAOjD5gB,EAAO6gB,UAAY,SAAmBzB,EAAQE,EAAUnrF,GACjDurF,EAAW=
N,EAAQE,IACtBC,EAAKH,EAAQE,EAAUnrF,EAAS,YAAa6rE,EAAO6gB,YAkGxD7gB,EAAO8gB=
,aAAe,SAAsB1B,EAAQE,EAAUnrF,GACxDurF,EAAWN,EAAQE,IACrBC,EAAKH,EAAQE,EAAUn=
rF,EAAS,eAAgB6rE,EAAO8gB,eAO3D9gB,EAAO+gB,YAAc,SAAqB3B,EAAQE,EAAUnrF,GACt=
DirF,IAAWE,GACbC,EAAKH,EAAQE,EAAUnrF,EAAS,MAAO6rE,EAAO+gB,cAOlD/gB,EAAOgh=
B,eAAiB,SAAwB5B,EAAQE,EAAUnrF,GAC5DirF,IAAWE,GACbC,EAAKH,EAAQE,EAAUnrF,EA=
AS,MAAO6rE,EAAOghB,iBAsDlDhhB,EAAAA,UAAgB,SAAS9Z,EAAmByI,EAAmBx6D,GAC7Dis=
F,EAAQxjF,MAAM9K,OAAO,GAAM6B,OAAOqsF,EAAOvuF,KAAKgG,cAIhDuoE,EAAOihB,aAAe=
,SAAS/6B,EAAmB/xD,GAChDisF,EAAQxjF,MAAM9K,OAAO,GAAO6B,OAAOqsF,EAAOvuF,KAA=
KgG,cAGjDuoE,EAAOkhB,QAAU,SAASj1B,GAAO,GAAIA,EAAM,KAAMA,GAEjD,IAAIuJ,GAAa=
pvD,OAAO+R,MAAQ,SAAU8jC,GACxC,GAAI9jC,KACJ,KAAK,GAAI1C,KAAOwmC,GACVqkC,EA=
AO7uF,KAAKwqD,EAAKxmC,IAAM0C,EAAKzkB,KAAK+hB,EAEvC,OAAO0C,KAMJ,SAAS7mB,EA=
AQD,IAStB,WACE,GAAIo4D,EAEJA,GAAU,WAGR,QAASA,GAAQ30D,EAAU/B,GACzB,GAAIouF=
,EACJrvF,MAAKgD,SAAWA,EACD,MAAX/B,IACFA,MAEFjB,KAAK8V,KAAO7U,EAAQ6U,MAAQ,=
SAC5B9V,KAAKgkD,OAAS/iD,EAAQ+iD,QAAU,WACF,gBAAnB/iD,GAAQwT,OACjBzU,KAAKy5=
D,SACH9kD,IAAK1T,EAAQwT,OACbrR,KAAMnC,EAAQwT,OACdG,OAAQ3T,EAAQwT,OAChBC,M=
AAOzT,EAAQwT,QAGjBzU,KAAKy5D,QAAUx4D,EAAQw4D,SAAW61B,EAEpCD,EAAa3gF,MAAMn=
I,QAAQvG,KAAK8V,MAAQ9V,KAAK8V,KAAOy5E,EAAMvvF,KAAK8V,KAAKE,eACpEhW,KAAKiW=
,MAAQo5E,EAA2B,aAAhBrvF,KAAKgkD,OAAwB,EAAI,GACzDhkD,KAAKkW,OAASm5E,EAA2B,=
aAAhBrvF,KAAKgkD,OAAwB,EAAI,GAC1DhkD,KAAKyc,QAAUzc,KAAKgD,SAASia,MAC7Bjd,=
KAAKwvF,UAAYxvF,KAAKgD,SAASia,KAC7BwyE,SAAU,MAAO,OAAQ,SAAU,SAAU,YAE/Cn7E,=
OAAOo7E,iBAAiB1vF,MACtBI,OACE8N,IAAK,SAAUirC,GACb,MAAO,YACL,GAAI4wB,EACJ,=
OAA8C,QAAtCA,EAAQ5wB,EAAMq2C,UAAUtoF,MAAMyoF,KAAe5lB,EAAM4lB,KAAO5lB,EAAM=
4lB,UAEzE3vF,OAEL4vF,UACE1hF,IAAK,SAAUirC,GACb,MAAO,YACL,GAAI4wB,EACJ,OAA=
iD,QAAzCA,EAAQ5wB,EAAMq2C,UAAUtoF,MAAM2oF,QAAkB9lB,EAAM8lB,QAAU9lB,EAAM8l=
B,aAE/E7vF,OAEL8vF,aACE5hF,IAAK,SAAUirC,GACb,MAAO,YACL,GAAI4wB,EACJ,OAAmD=
,QAA3CA,EAAQ5wB,EAAMq2C,UAAUtoF,MAAM6oF,UAAoBhmB,EAAMgmB,UAAYhmB,EAAMgmB,=
eAEnF/vF,OAELgwF,UACE9hF,IAAK,SAAUirC,GACb,MAAO,YACL,GAAI4wB,EACJ,OAAiD,Q=
AAzCA,EAAQ5wB,EAAMq2C,UAAUtoF,MAAM+oF,QAAkBlmB,EAAMkmB,QAAUlmB,EAAMkmB,aA=
E/EjwF,OAELkwF,aACEhiF,IAAK,SAAUirC,GACb,MAAO,YACL,GAAI4wB,EACJ,OAAiD,QAA=
zCA,EAAQ5wB,EAAMqgB,WAAWtyD,MAAMipF,OAAiBpmB,EAAMomB,OAASpmB,EAAMomB,YAE9=
EnwF,SAGPA,KAAKw5D,WAAax5D,KAAKgD,SAASia,KAC9BC,KAAM,OACNkzE,OAAQpwF,KAAK=
gD,SAASqa,MAAMnW,KAAKyxD,MACjC03B,UAAW,EAAG,EAAGrwF,KAAKiW,MAAOjW,KAAKkW,=
QAClCo6E,SAAUtwF,KAAKyc,QACf8zE,UAAWvwF,KAAKwvF,YA1EpB,GAAIF,GAAiBC,CAwJr=
B,OA1EA53B,GAAQ52D,UAAUyvF,KAAO,WACvB,MAAOxwF,MAAKkW,OAASlW,KAAKy5D,QAAQ7=
kD,QAGpC+iD,EAAQ52D,UAAUoF,MAAQ,SAASxE,GACjC,MAAO3B,MAAKyc,QAAQtW,MAAMxE,=
IAG5Bg2D,EAAQ52D,UAAUgB,IAAM,WAGtB,MAFA/B,MAAKw5D,WAAWz3D,MAChB/B,KAAKwvF=
,UAAUztF,MACR/B,KAAKyc,QAAQ1a,OAGtButF,GACE36E,IAAK,GACLvR,KAAM,GACNwR,OA=
AQ,GACRF,MAAO,IAGT66E,GACEkB,OAAQ,QAAS,SACjBC,OAAQ,QAAS,SACjBC,IAAK,QAAS,=
SACdC,IAAK,QAAS,SACdC,IAAK,QAAS,SACdC,IAAK,OAAQ,SACbC,IAAK,OAAQ,QACbC,IAA=
K,OAAQ,QACbC,IAAK,OAAQ,QACbC,IAAK,OAAQ,QACbC,IAAK,MAAQ,QACbC,IAAK,OAAQ,OA=
CbC,KAAM,KAAO,QACbC,IAAK,QAAS,SACdC,IAAK,QAAS,SACdC,IAAK,QAAS,SACdC,IAAK,=
QAAS,SACdC,IAAK,OAAQ,SACbC,IAAK,MAAQ,QACbC,IAAK,OAAQ,OACbC,IAAK,OAAQ,QACb=
C,IAAK,OAAQ,QACbC,IAAK,OAAQ,QACbC,KAAM,MAAO,QACbC,IAAK,QAAS,SACdC,IAAK,QA=
AS,SACdC,IAAK,QAAS,SACdC,IAAK,OAAQ,SACbC,IAAK,OAAQ,QACbC,IAAK,OAAQ,QACbC,=
IAAK,OAAQ,QACbC,IAAK,OAAQ,QACbC,IAAK,OAAQ,QACbC,IAAK,OAAQ,QACbC,KAAM,MAAO=
,QACbC,KAAM,OAAS,SACfC,KAAM,QAAS,QACfC,KAAM,OAAS,SACfC,KAAM,OAAQ,QACdC,KA=
AM,OAAQ,QACdC,MAAO,QAAS,SAChBC,MAAO,QAAS,SAChBC,MAAO,QAAS,SAChBC,MAAO,OAA=
Q,SACfC,MAAO,MAAQ,QACfC,WAAY,OAAQ,KACpBC,OAAQ,IAAQ,KAChBC,OAAQ,IAAQ,MAChB=
C,QAAS,IAAQ,KACjBC,SAAU,IAAQ,OAGb/7B,KAITn4D,EAAOD,QAAUo4D,IAEhBh4D,KAAKK=
,OAKH,SAASR,EAAQD,EAASH,IAG/B,WACE,GAAIu0F,GAAaC,EAAmBC,EAAmBC,EAAa17B,CA=
EpEA,GAAOh5D,EAAoB,IAAKu0F,EAAcv7B,EAAKu7B,YAAaC,EAAoBx7B,EAAKw7B,kBAAmBC=
,EAAoBz7B,EAAKy7B,kBAErIr0F,EAAOD,SACLu5D,UAAW,WAGT,MAFA94D,MAAK+zF,oBACL=
/zF,KAAKg0F,cAAgB,EACdh0F,KAAKi0F,WAAa,GAE3BC,gBAAiB,SAASp8E,GACxB,GAAIq8=
E,GAAKC,CACT,OAAIt8E,aAAiB67E,GACZ77E,GAEY,gBAAVA,KACe,MAApBA,EAAMhF,OAAO=
,IACM,IAAjBgF,EAAMxS,SACRwS,EAAQA,EAAM1L,QAAQ,mCAAoC,kBAE5D+nF,EAAMlrF,SA=
AS6O,EAAMhO,MAAM,GAAI,IAC/BgO,GAASq8E,GAAO,GAAIA,GAAO,EAAI,IAAY,IAANA,IAC=
5BL,EAAYh8E,KACrBA,EAAQg8E,EAAYh8E,KAGpBpJ,MAAMnI,QAAQuR,IACK,IAAjBA,EAAM=
xS,OACRwS,EAAQ,WACN,GAAI+hD,GAAIC,EAAMT,CAEd,KADAA,KACKQ,EAAK,EAAGC,EAAOh=
iD,EAAMxS,OAAaw0D,EAALD,EAAWA,IAC3Cu6B,EAAOt8E,EAAM+hD,GACbR,EAASz3D,KAAK=
wyF,EAAO,IAEvB,OAAO/6B,MAEiB,IAAjBvhD,EAAMxS,SACfwS,EAAQ,WACN,GAAI+hD,GAA=
IC,EAAMT,CAEd,KADAA,KACKQ,EAAK,EAAGC,EAAOhiD,EAAMxS,OAAaw0D,EAALD,EAAWA,I=
AC3Cu6B,EAAOt8E,EAAM+hD,GACbR,EAASz3D,KAAKwyF,EAAO,IAEvB,OAAO/6B,OAGJvhD,=
GAEF,OAETu8E,UAAW,SAASv8E,EAAOgD,GACzB,GAAIw5E,GAAQlwF,EAAMokF,EAAInvE,CA=
EtB,QADAvB,EAAQ9X,KAAKk0F,gBAAgBp8E,KAIzB9X,KAAKu0F,WACPD,EAASt0F,KAAKid,=
KACZC,KAAM,YACNs3E,MAAO,SAETF,EAAOvyF,MACPqC,EAAO,QAAUpE,KAAKg0F,cACtBh0F=
,KAAK2W,KAAKm5E,YAAY1rF,GAAQkwF,EAC9Bt0F,KAAKoY,WAAW,IAAMhU,EAAO,OAC7BpE,=
KAAKu0F,UAAW,GAElB/L,EAAK1tE,EAAS,MAAQ,MAClBhD,YAAiB67E,IACnB3zF,KAAKy0F,=
eAAe,UAAW35E,GAC/BhD,EAAMhN,MAAM09E,KAEZnvE,EAAyB,IAAjBvB,EAAMxS,OAAe,aAA=
e,YAC5CtF,KAAKy0F,eAAep7E,EAAOyB,GAC3BhD,EAAQA,EAAMlK,KAAK,KACnB5N,KAAKoY=
,WAAW,GAAKN,EAAQ,IAAM0wE,KAE9B,IAvBE,GAyBXiM,eAAgB,SAASp7E,EAAOyB,GAC9B,G=
AAI0tE,EAEJ,OADAA,GAAK1tE,EAAS,KAAO,KACd9a,KAAKoY,WAAW,IAAMiB,EAAQ,IAAMmv=
E,IAE7C1kC,UAAW,SAAShsC,EAAOa,GACzB,GAAIvK,EASJ,OARe,OAAXuK,IACFA,EAAU,GA=
EZvK,EAAMpO,KAAKq0F,UAAUv8E,GAAO,GACxB1J,GACFpO,KAAKuZ,YAAYZ,GAEnB3Y,KAAK=
00F,YAAc58E,EAAOa,GACnB3Y,MAET20F,YAAa,SAAS78E,EAAOa,GAC3B,GAAIvK,EAQJ,OA=
Pe,OAAXuK,IACFA,EAAU,GAEZvK,EAAMpO,KAAKq0F,UAAUv8E,GAAO,GACxB1J,GACFpO,KA=
AKwZ,cAAcb,GAEd3Y,MAET2Y,QAAS,SAASA,GAEhB,MADA3Y,MAAK40F,WAAWj8E,EAASA,GA=
ClB3Y,MAETuZ,YAAa,SAASZ,GAEpB,MADA3Y,MAAK40F,WAAWj8E,EAAS,MAClB3Y,MAETwZ,=
cAAe,SAASb,GAEtB,MADA3Y,MAAK40F,WAAW,KAAMj8E,GACf3Y,MAET40F,WAAY,SAASr7E,=
EAAaC,GAChC,GAAIggD,GAAY/5D,EAAIkkB,EAAKvf,EAAMi0D,CAC/B,IAAsB,MAAf9+C,GA=
A0C,MAAjBC,EA6BhC,MA1BmB,OAAfD,IACFA,EAAcxP,KAAKwB,IAAI,EAAGxB,KAAKC,IAAI=
,EAAGuP,KAEnB,MAAjBC,IACFA,EAAgBzP,KAAKwB,IAAI,EAAGxB,KAAKC,IAAI,EAAGwP,K=
AE1CmK,EAAM,GAAKpK,EAAc,IAAMC,EAC3BxZ,KAAK+zF,iBAAiBpwE,IACxB00C,EAAQr4D,=
KAAK+zF,iBAAiBpwE,GAAM61C,EAAanB,EAAM,GAAIj0D,EAAOi0D,EAAM,KAExEmB,GACEt8=
C,KAAM,aAEW,MAAf3D,IACFigD,EAAWq7B,GAAKt7E,GAEG,MAAjBC,IACFggD,EAAWs7B,GA=
AKt7E,GAElBggD,EAAax5D,KAAKid,IAAIu8C,GACtBA,EAAWz3D,MACXtC,IAAOO,KAAKg0F=
,cACZ5vF,EAAO,KAAO3E,EACdO,KAAK+zF,iBAAiBpwE,IAAQ61C,EAAYp1D,IAE5CpE,KAAK=
2W,KAAKm5E,YAAY1rF,GAAQo1D,EACvBx5D,KAAKoY,WAAW,IAAMhU,EAAO,QAEtC2wF,eAAg=
B,SAAS56E,EAAIC,EAAIE,EAAIC,GACnC,MAAO,IAAIq5E,GAAkB5zF,KAAMma,EAAIC,EAAI=
E,EAAIC,IAEjDy6E,eAAgB,SAAS76E,EAAIC,EAAIT,EAAIW,EAAIC,EAAIX,GAC3C,MAAO,I=
AAIi6E,GAAkB7zF,KAAMma,EAAIC,EAAIT,EAAIW,EAAIC,EAAIX,KAI3Dk6E,GACEmB,WAAY=
,IAAK,IAAK,KACtBC,cAAe,IAAK,IAAK,KACzBC,MAAO,EAAG,IAAK,KACfC,YAAa,IAAK,IA=
AK,KACvBC,OAAQ,IAAK,IAAK,KAClBC,OAAQ,IAAK,IAAK,KAClBC,QAAS,IAAK,IAAK,KACn=
BhJ,OAAQ,EAAG,EAAG,GACdiJ,gBAAiB,IAAK,IAAK,KAC3BhJ,MAAO,EAAG,EAAG,KACbiJ,=
YAAa,IAAK,GAAI,KACtBC,OAAQ,IAAK,GAAI,IACjBC,WAAY,IAAK,IAAK,KACtBC,WAAY,GA=
AI,IAAK,KACrBC,YAAa,IAAK,IAAK,GACvBC,WAAY,IAAK,IAAK,IACtBC,OAAQ,IAAK,IAAK=
,IAClBC,gBAAiB,IAAK,IAAK,KAC3BC,UAAW,IAAK,IAAK,KACrBC,SAAU,IAAK,GAAI,IACn=
BzJ,MAAO,EAAG,IAAK,KACf0J,UAAW,EAAG,EAAG,KACjBC,UAAW,EAAG,IAAK,KACnBC,eAA=
gB,IAAK,IAAK,IAC1BC,UAAW,IAAK,IAAK,KACrBC,WAAY,EAAG,IAAK,GACpBC,UAAW,IAAK=
,IAAK,KACrBC,WAAY,IAAK,IAAK,KACtBC,aAAc,IAAK,EAAG,KACtBC,gBAAiB,GAAI,IAAK=
,IAC1BC,YAAa,IAAK,IAAK,GACvBC,YAAa,IAAK,GAAI,KACtBC,SAAU,IAAK,EAAG,GAClBC=
,YAAa,IAAK,IAAK,KACvBC,cAAe,IAAK,IAAK,KACzBC,eAAgB,GAAI,GAAI,KACxBC,eAAgB=
,GAAI,GAAI,IACxBC,eAAgB,GAAI,GAAI,IACxBC,eAAgB,EAAG,IAAK,KACxBC,YAAa,IAAK=
,EAAG,KACrBC,UAAW,IAAK,GAAI,KACpBC,aAAc,EAAG,IAAK,KACtBC,SAAU,IAAK,IAAK,K=
ACpBC,SAAU,IAAK,IAAK,KACpBC,YAAa,GAAI,IAAK,KACtBC,WAAY,IAAK,GAAI,IACrBC,a=
AAc,IAAK,IAAK,KACxBC,aAAc,GAAI,IAAK,IACvBC,SAAU,IAAK,EAAG,KAClBC,WAAY,IAA=
K,IAAK,KACtBC,YAAa,IAAK,IAAK,KACvBC,MAAO,IAAK,IAAK,GACjBC,WAAY,IAAK,IAAK,=
IACtBC,MAAO,IAAK,IAAK,KACjB7L,MAAO,IAAK,IAAK,KACjBI,OAAQ,EAAG,IAAK,GAChB0=
L,aAAc,IAAK,IAAK,IACxBC,UAAW,IAAK,IAAK,KACrBC,SAAU,IAAK,IAAK,KACpBC,WAAY,=
IAAK,GAAI,IACrBC,QAAS,GAAI,EAAG,KAChBC,OAAQ,IAAK,IAAK,KAClBC,OAAQ,IAAK,IA=
AK,KAClBC,UAAW,IAAK,IAAK,KACrBC,eAAgB,IAAK,IAAK,KAC1BC,WAAY,IAAK,IAAK,GAC=
tBC,cAAe,IAAK,IAAK,KACzBC,WAAY,IAAK,IAAK,KACtBC,YAAa,IAAK,IAAK,KACvBC,WAA=
Y,IAAK,IAAK,KACtBC,sBAAuB,IAAK,IAAK,KACjCC,WAAY,IAAK,IAAK,KACtBC,YAAa,IAA=
K,IAAK,KACvBC,WAAY,IAAK,IAAK,KACtBC,WAAY,IAAK,IAAK,KACtBC,aAAc,IAAK,IAAK,=
KACxBC,eAAgB,GAAI,IAAK,KACzBC,cAAe,IAAK,IAAK,KACzBC,gBAAiB,IAAK,IAAK,KAC3=
BC,gBAAiB,IAAK,IAAK,KAC3BC,gBAAiB,IAAK,IAAK,KAC3BC,aAAc,IAAK,IAAK,KACxBC,=
MAAO,EAAG,IAAK,GACfC,WAAY,GAAI,IAAK,IACrBC,OAAQ,IAAK,IAAK,KAClBrN,SAAU,IA=
AK,EAAG,KAClBsN,QAAS,IAAK,EAAG,GACjBC,kBAAmB,IAAK,IAAK,KAC7BC,YAAa,EAAG,E=
AAG,KACnBC,cAAe,IAAK,GAAI,KACxBC,cAAe,IAAK,IAAK,KACzBC,gBAAiB,GAAI,IAAK,K=
AC1BC,iBAAkB,IAAK,IAAK,KAC5BC,mBAAoB,EAAG,IAAK,KAC5BC,iBAAkB,GAAI,IAAK,KA=
C3BC,iBAAkB,IAAK,GAAI,KAC3BC,cAAe,GAAI,GAAI,KACvBC,WAAY,IAAK,IAAK,KACtBC,=
WAAY,IAAK,IAAK,KACtBC,UAAW,IAAK,IAAK,KACrBC,aAAc,IAAK,IAAK,KACxBC,MAAO,EA=
AG,EAAG,KACbC,SAAU,IAAK,IAAK,KACpBC,OAAQ,IAAK,IAAK,GAClBC,WAAY,IAAK,IAAK,=
IACtBC,QAAS,IAAK,IAAK,GACnBC,WAAY,IAAK,GAAI,GACrBC,QAAS,IAAK,IAAK,KACnBC,=
eAAgB,IAAK,IAAK,KAC1BC,WAAY,IAAK,IAAK,KACtBC,eAAgB,IAAK,IAAK,KAC1BC,eAAgB=
,IAAK,IAAK,KAC1BC,YAAa,IAAK,IAAK,KACvBC,WAAY,IAAK,IAAK,KACtBC,MAAO,IAAK,I=
AAK,IACjBC,MAAO,IAAK,IAAK,KACjBC,MAAO,IAAK,IAAK,KACjBC,YAAa,IAAK,IAAK,KAC=
vBC,QAAS,IAAK,EAAG,KACjBrP,KAAM,IAAK,EAAG,GACdsP,WAAY,IAAK,IAAK,KACtBC,WA=
AY,GAAI,IAAK,KACrBC,aAAc,IAAK,GAAI,IACvBC,QAAS,IAAK,IAAK,KACnBC,YAAa,IAAK=
,IAAK,IACvBC,UAAW,GAAI,IAAK,IACpBC,UAAW,IAAK,IAAK,KACrBC,QAAS,IAAK,GAAI,I=
AClBC,QAAS,IAAK,IAAK,KACnBC,SAAU,IAAK,IAAK,KACpBC,WAAY,IAAK,GAAI,KACrBC,W=
AAY,IAAK,IAAK,KACtBC,WAAY,IAAK,IAAK,KACtBC,MAAO,IAAK,IAAK,KACjBC,aAAc,EAA=
G,IAAK,KACtBC,WAAY,GAAI,IAAK,KACrBC,KAAM,IAAK,IAAK,KAChBC,MAAO,EAAG,IAAK,=
KACfC,SAAU,IAAK,IAAK,KACpBC,QAAS,IAAK,GAAI,IAClBC,WAAY,GAAI,IAAK,KACrBC,Q=
AAS,IAAK,IAAK,KACnBC,OAAQ,IAAK,IAAK,KAClBnR,OAAQ,IAAK,IAAK,KAClBoR,YAAa,I=
AAK,IAAK,KACvB5Q,QAAS,IAAK,IAAK,GACnB6Q,aAAc,IAAK,IAAK,OAGzB/9F,KAAKK,OAK=
H,SAASR,EAAQD,IAGtB,WACE,GAAIo0F,GAAaC,EAAmBC,EAClC/7B,KAAe12C,eACf22C,EA=
AY,SAASC,EAAOzyD,GAAiG,QAAS0yD,KAASj4D,KAAKgF,YAAcgzD,EAA5H,IAAK,GAAIr0C,=
KAAOpe,GAAcuyD,EAAUn4D,KAAK4F,EAAQoe,KAAMq0C,EAAMr0C,GAAOpe,EAAOoe,GAA2J,=
OAArGs0C,GAAKl3D,UAAYwE,EAAOxE,UAAWi3D,EAAMj3D,UAAY,GAAIk3D,GAAQD,EAAME,U=
AAY3yD,EAAOxE,UAAkBi3D,EAEzR27B,GAAc,WACZ,QAASA,GAAYpyF,GACnBvB,KAAKuB,IA=
AMA,EACXvB,KAAK29F,SACL39F,KAAK49F,UAAW,EAChB59F,KAAKgY,WAAa,EAAG,EAAG,EA=
AG,EAAG,EAAG,GACjChY,KAAK69F,YAAc,YA8IrB,MA3IAlK,GAAY5yF,UAAU+8F,KAAO,SAA=
SvwF,EAAKuK,EAAOa,GAMhD,MALe,OAAXA,IACFA,EAAU,GAEZA,EAAU5O,KAAKwB,IAAI,EA=
AGxB,KAAKC,IAAI,EAAG2O,IAClC3Y,KAAK29F,MAAM/7F,MAAM2L,EAAKvN,KAAKuB,IAAI2=
yF,gBAAgBp8E,GAAQa,IAChD3Y,MAGT2zF,EAAY5yF,UAAUw5D,MAAQ,WAC5B,GAAIwjC,GAA=
QC,EAAIC,EAAI/qF,EAAQ+d,EAAIitE,EAAMC,EAAMpjE,EAAOu5D,EAAQtuF,EAAGsmB,EAA=
M1sB,EAAGw+F,EAAIC,EAAIC,EAAKC,EAAKC,EAAIC,EAAKC,EAAKC,EAAIC,EAAIC,EAAIz6=
F,EAAMugC,EAAS6qD,EAAWsP,EAAOC,EAAQjB,EAAMH,EAAOtvF,EAAGwrD,EAAIsP,EAAIrP=
,EAAM1B,EAAMC,EAAO2mC,CACvM,KAAIh/F,KAAK49F,UAAkC,IAAtB59F,KAAK29F,MAAMr4=
F,OAAhC,CAWA,IARAtF,KAAK49F,UAAW,EAChBtxE,EAAOtsB,KAAK29F,MAAM39F,KAAK29F=
,MAAMr4F,OAAS,GAClCgnB,EAAK,GAAK,GACZtsB,KAAK29F,MAAM/7F,MAAM,EAAG0qB,EAA=
K,GAAIA,EAAK,KAEpCyxE,KACA7qF,KACAyqF,KACK33F,EAAI6zD,EAAK,EAAGzB,EAAOp4D=
,KAAK29F,MAAMr4F,OAAS,EAAQ8yD,GAAL,EAAiBA,EAALyB,EAAYA,EAAKzB,EAAMpyD,EAA=
SoyD,GAAL,IAAcyB,IAAOA,EACzG3mD,EAAOtR,KAAK,EAAG,GACXoE,EAAI,IAAMhG,KAAK2=
9F,MAAMr4F,QACvBy4F,EAAOn8F,KAAK5B,KAAK29F,MAAM33F,EAAI,GAAG,IAEhCirB,EAA=
KjxB,KAAKuB,IAAI0b,KACZgiF,aAAc,EACdC,QAAS,EAAG,GACZjN,GAAIjyF,KAAK29F,MA=
AM33F,EAAI,GAAG,GACtBksF,GAAIlyF,KAAK29F,MAAM33F,EAAI,GAAG,GACtBoX,EAAG,I=
AELugF,EAAM/7F,KAAKqvB,GACXA,EAAGlvB,KA0CL,IAxCqB,IAAjB47F,EAAMr4F,OACR2r=
B,EAAK0sE,EAAM,IAEX1sE,EAAKjxB,KAAKuB,IAAI0b,KACZgiF,aAAc,EACdC,QAAS,EAAG=
,GACZC,UAAWxB,EACXyB,OAAQrB,EACRsB,OAAQnsF,IAEV+d,EAAGlvB,OAEL/B,KAAKP,GA=
AK,QAAUO,KAAKuB,IAAI0yF,WAC7Br0F,EAAII,KAAKuB,IAAIm4D,KAAK5vD,QAClBs0F,EA=
AKx+F,EAAE,GAAIy+F,EAAKz+F,EAAE,GAAI4+F,EAAK5+F,EAAE,GAAI++F,EAAK/+F,EAAE=
,GAAIg/F,EAAKh/F,EAAE,GAAIi/F,EAAKj/F,EAAE,GAC9Dy4D,EAAQr4D,KAAKgY,UAAWsm=
F,EAAMjmC,EAAM,GAAIkmC,EAAMlmC,EAAM,GAAIomC,EAAMpmC,EAAM,GAAIqmC,EAAMrmC,=
EAAM,GAAI2lC,EAAK3lC,EAAM,GAAI4lC,EAAK5lC,EAAM,GAClHz4D,EAAE,GAAKw+F,EAAK=
E,EAAME,EAAKD,EACvB3+F,EAAE,GAAKy+F,EAAKC,EAAMK,EAAKJ,EACvB3+F,EAAE,GAAKw=
+F,EAAKK,EAAMD,EAAKE,EACvB9+F,EAAE,GAAKy+F,EAAKI,EAAME,EAAKD,EACvB9+F,EAA=
E,GAAKw+F,EAAKJ,EAAKQ,EAAKP,EAAKW,EAC3Bh/F,EAAE,GAAKy+F,EAAKL,EAAKW,EAAKV=
,EAAKY,EAC3BE,EAAS/+F,KAAK++F,OAAO9tE,GACrB8tE,EAAOh9F,MACP4iC,EAAU3kC,KA=
AKuB,IAAI0b,KACjBC,KAAM,UACNoiF,YAAa,EACbC,QAASR,EACTS,OAAQ,WACN,GAAIr2B,=
GAAIrP,EAAMT,CAEd,KADAA,KACK8P,EAAK,EAAGrP,EAAOl6D,EAAE0F,OAAaw0D,EAALqP,=
EAAWA,IACvC96D,EAAIzO,EAAEupE,GACN9P,EAASz3D,MAAMyM,EAAEoxF,QAAQ,GAE3B,OA=
AOpmC,QAGXr5D,KAAKuB,IAAIoV,KAAKq5E,SAAShwF,KAAKP,IAAMklC,EAClCA,EAAQ5iC,=
MACJ/B,KAAK29F,MAAMjhE,KAAK,SAASohE,GAC3B,MAAOA,GAAK,GAAK,IACf,CAIF,IAHAK=
,EAAOn+F,KAAK0/F,kBACZvB,EAAKN,YAAc,aACnBmB,EAAQh/F,KAAK29F,MACRx0B,EAAK,=
EAAGrP,EAAOklC,EAAM15F,OAAaw0D,EAALqP,EAAWA,IAC3C20B,EAAOkB,EAAM71B,GACbg=
1B,EAAKL,KAAKA,EAAK,IAAKA,EAAK,IAE3BK,GAAOA,EAAK5jC,QACZx/B,EAAQ/6B,KAAKu=
B,IAAI0b,KACfC,KAAM,QACNC,EAAG,eACHwiF,GAAI,eAEN5kE,EAAMh5B,MACNytF,EAAYx=
vF,KAAKuB,IAAI0b,KACnBwyE,SAAU,MAAO,OAAQ,SAAU,SAAU,UAC7C8P,SACEK,IAAKzB,E=
AAKj3F,KAAKq4F,WAGnB/P,EAAUztF,MACVm8F,EAAOl+F,KAAKuB,IAAI0b,KACdC,KAAM,U=
ACN2iF,QAAS,OACTC,SAAU,EACVC,MAAO,EAAG,EAAG//F,KAAKuB,IAAIoV,KAAKV,MAAOjW=
,KAAKuB,IAAIoV,KAAKT,QAChD8pF,MAAOjlE,EACPw1D,UAAWf,IAEb0O,EAAKn8F,IAAI,W=
ACT+8F,EAAQ9+F,KAAKuB,IAAI0b,KACfC,KAAM,OACNC,EAAG,aACH8iF,EAAG/B,IAELY,E=
AAM/8F,MACNuyF,EAASt0F,KAAKuB,IAAI0b,KAChBC,KAAM,YACNs3E,MAAOsK,IAET9+F,K=
AAKkgG,aAAelgG,KAAKuB,IAAIyyF,cAC7B5vF,EAAO,KAAOpE,KAAKkgG,WACnBlgG,KAAKu=
B,IAAIoV,KAAKm5E,YAAY1rF,GAAQkwF,EAClCA,EAAOvyF,MAET,MAAO4iC,KAGTgvD,EAAY=
5yF,UAAU+J,MAAQ,SAAS09E,GAKrC,MAJKxoF,MAAK49F,UACR59F,KAAKu6D,QAEPv6D,KAA=
KuB,IAAI6W,WAAW,IAAMpY,KAAKP,GAAK,IAAM+oF,GACtCxoF,KAAKkgG,YACPlgG,KAAKuB=
,IAAI6W,WAAW,MAAQpY,KAAKkgG,WAAa,OACvClgG,KAAKuB,IAAIgzF,UAAW,GAF7B,QAMKZ=
,KAITC,EAAoB,SAAUz7B,GAG5B,QAASy7B,GAAkBryF,EAAK4Y,EAAIC,EAAIE,EAAIC,GAC1=
Cva,KAAKuB,IAAMA,EACXvB,KAAKma,GAAKA,EACVna,KAAKoa,GAAKA,EACVpa,KAAKsa,GA=
AKA,EACVta,KAAKua,GAAKA,EACVq5E,EAAkB17B,UAAUlzD,YAAY8F,MAAM9K,KAAM2F,WAi=
BtD,MAzBAoyD,GAAU67B,EAAmBz7B,GAW7By7B,EAAkB7yF,UAAUg+F,OAAS,SAAS9tE,GAC5=
C,MAAOjxB,MAAKuB,IAAI0b,KACdkjF,YAAa,EACbC,WAAYpgG,KAAK69F,YACjBwC,QAASrg=
G,KAAKma,GAAIna,KAAKoa,GAAIpa,KAAKsa,GAAIta,KAAKua,IACzCspB,SAAU5S,EACVqv=
E,SAAS,GAAM,MAInB1M,EAAkB7yF,UAAU2+F,gBAAkB,WAC5C,MAAO,IAAI9L,GAAkB5zF,KA=
AKuB,IAAKvB,KAAKma,GAAIna,KAAKoa,GAAIpa,KAAKsa,GAAIta,KAAKua,KAGlEq5E,GAE=
ND,GAEHE,EAAoB,SAAU17B,GAG5B,QAAS07B,GAAkBtyF,EAAK4Y,EAAIC,EAAIT,EAAIW,EA=
AIC,EAAIX,GAClD5Z,KAAKuB,IAAMA,EACXvB,KAAKma,GAAKA,EACVna,KAAKoa,GAAKA,EA=
CVpa,KAAK2Z,GAAKA,EACV3Z,KAAKsa,GAAKA,EACVta,KAAKua,GAAKA,EACVva,KAAK4Z,G=
AAKA,EACVi6E,EAAkB37B,UAAUlzD,YAAY8F,MAAM9K,KAAM2F,WAiBtD,MA3BAoyD,GAAU87=
B,EAAmB17B,GAa7B07B,EAAkB9yF,UAAUg+F,OAAS,SAAS9tE,GAC5C,MAAOjxB,MAAKuB,IA=
AI0b,KACdkjF,YAAa,EACbC,WAAYpgG,KAAK69F,YACjBwC,QAASrgG,KAAKma,GAAIna,KAA=
Koa,GAAIpa,KAAK2Z,GAAI3Z,KAAKsa,GAAIta,KAAKua,GAAIva,KAAK4Z,IAC3DiqB,SAAU=
5S,EACVqvE,SAAS,GAAM,MAInBzM,EAAkB9yF,UAAU2+F,gBAAkB,WAC5C,MAAO,IAAI7L,GA=
AkB7zF,KAAKuB,IAAKvB,KAAKma,GAAIna,KAAKoa,GAAIpa,KAAK2Z,GAAI3Z,KAAKsa,GAA=
Ita,KAAKua,GAAIva,KAAK4Z,KAGpFi6E,GAENF,GAEHn0F,EAAOD,SACLo0F,YAAaA,EACbC=
,kBAAmBA,EACnBC,kBAAmBA,KAGpBl0F,KAAKK,OAKH,SAASR,EAAQD,EAASH,IAG/B,WACE,=
GAAImhG,GAAOC,EACTC,KAAa32F,KAEf02F,GAAUphG,EAAoB,IAE9BmhG,EAAQ,IAAQx2F,K=
AAKywC,KAAK,GAAK,GAAO,GAEtCh7C,EAAOD,SACLw5D,WAAY,WAEV,MADA/4D,MAAK05D,MA=
AQ,EAAG,EAAG,EAAG,EAAG,EAAG,GACrB15D,KAAK0gG,cAEd3oF,KAAM,WAEJ,MADA/X,MAA=
K0gG,UAAU9+F,KAAK5B,KAAK05D,KAAK5vD,SACvB9J,KAAKoY,WAAW,MAEzBK,QAAS,WAEP,=
MADAzY,MAAK05D,KAAO15D,KAAK0gG,UAAUh1E,QAAU,EAAG,EAAG,EAAG,EAAG,EAAG,GAC7=
C1rB,KAAKoY,WAAW,MAEzBuC,UAAW,WACT,MAAO3a,MAAKoY,WAAW,MAEzBe,UAAW,SAASY,G=
AClB,MAAO/Z,MAAKoY,WAAW,GAAK2B,EAAI,OAElC4mF,aACEC,KAAM,EACNC,MAAO,EACPC,=
OAAQ,GAEVC,QAAS,SAASlhG,GAIhB,MAHiB,gBAANA,KACTA,EAAIG,KAAK2gG,YAAY9gG,EA=
AEmW,gBAElBhW,KAAKoY,WAAW,GAAKvY,EAAI,OAElCmhG,cACEC,MAAO,EACPJ,MAAO,EACP=
K,MAAO,GAETznF,SAAU,SAAS/N,GAIjB,MAHiB,gBAANA,KACTA,EAAI1L,KAAKghG,aAAat1=
F,EAAEsK,gBAEnBhW,KAAKoY,WAAW,GAAK1M,EAAI,OAElCy1F,WAAY,SAASvhG,GACnB,MAA=
OI,MAAKoY,WAAW,GAAKxY,EAAI,OAElCwZ,KAAM,SAAS9T,EAAQrE,GACrB,GAAImgG,GAAO/=
nF,EAAO++C,CAIlB,OAHe,OAAXn3D,IACFA,MAEY,MAAVqE,EACKtF,MAETqZ,EAAkC,OAAzB=
++C,EAAOn3D,EAAQoY,OAAiB++C,EAAO9yD,EAChD87F,EAAQngG,EAAQmgG,OAAS,EAClBph=
G,KAAKoY,WAAW,IAAM9S,EAAS,IAAM+T,EAAQ,KAAO+nF,EAAQ,QAErE9nF,OAAQ,WACN,MAA=
OtZ,MAAKoY,WAAW,WAEzB8B,OAAQ,SAAS/M,EAAGC,GAClB,MAAOpN,MAAKoY,WAAW,GAAKjL=
,EAAI,IAAMC,EAAI,OAE5CiN,OAAQ,SAASlN,EAAGC,GAClB,MAAOpN,MAAKoY,WAAW,GAAKj=
L,EAAI,IAAMC,EAAI,OAE5Ci0F,cAAe,SAASC,EAAMC,EAAMC,EAAMC,EAAMt0F,EAAGC,GAC=
jD,MAAOpN,MAAKoY,WAAW,GAAKkpF,EAAO,IAAMC,EAAO,IAAMC,EAAO,IAAMC,EAAO,IAAMt=
0F,EAAI,IAAMC,EAAI,OAEhGs0F,iBAAkB,SAASC,EAAK9gC,EAAK1zD,EAAGC,GACtC,MAAO=
pN,MAAKoY,WAAW,GAAKupF,EAAM,IAAM9gC,EAAM,IAAM1zD,EAAI,IAAMC,EAAI,OAEpE6M,=
KAAM,SAAS9M,EAAGC,EAAG2M,EAAGC,GACtB,MAAOha,MAAKoY,WAAW,GAAKjL,EAAI,IAAMC=
,EAAI,IAAM2M,EAAI,IAAMC,EAAI,QAEhEF,YAAa,SAAS3M,EAAGC,EAAG2M,EAAGC,EAAGH,=
GAYhC,MAXS,OAALA,IACFA,EAAI,GAEN7Z,KAAKka,OAAO/M,EAAI0M,EAAGzM,GACnBpN,KA=
AKqa,OAAOlN,EAAI4M,EAAIF,EAAGzM,GACvBpN,KAAK0hG,iBAAiBv0F,EAAI4M,EAAG3M,E=
AAGD,EAAI4M,EAAG3M,EAAIyM,GAC3C7Z,KAAKqa,OAAOlN,EAAI4M,EAAG3M,EAAI4M,EAAI=
H,GAC3B7Z,KAAK0hG,iBAAiBv0F,EAAI4M,EAAG3M,EAAI4M,EAAG7M,EAAI4M,EAAIF,EAAG=
zM,EAAI4M,GACnDha,KAAKqa,OAAOlN,EAAI0M,EAAGzM,EAAI4M,GACvBha,KAAK0hG,iBAA=
iBv0F,EAAGC,EAAI4M,EAAG7M,EAAGC,EAAI4M,EAAIH,GAC3C7Z,KAAKqa,OAAOlN,EAAGC,=
EAAIyM,GACZ7Z,KAAK0hG,iBAAiBv0F,EAAGC,EAAGD,EAAI0M,EAAGzM,IAE5CsM,QAAS,SA=
ASvM,EAAGC,EAAGuM,EAAIC,GAC1B,GAAIgoF,GAAIC,EAAIC,EAAIC,EAAIC,EAAIC,CAiBx=
B,OAhBU,OAANroF,IACFA,EAAKD,GAEPxM,GAAKwM,EACLvM,GAAKwM,EACLgoF,EAAKjoF,E=
AAK4mF,EACVsB,EAAKjoF,EAAK2mF,EACVuB,EAAK30F,EAAS,EAALwM,EACTqoF,EAAK50F,=
EAAS,EAALwM,EACTmoF,EAAK50F,EAAIwM,EACTsoF,EAAK70F,EAAIwM,EACT5Z,KAAKka,O=
AAO/M,EAAG80F,GACfjiG,KAAKqhG,cAAcl0F,EAAG80F,EAAKJ,EAAIE,EAAKH,EAAIx0F,E=
AAG20F,EAAI30F,GAC/CpN,KAAKqhG,cAAcU,EAAKH,EAAIx0F,EAAG00F,EAAIG,EAAKJ,EA=
AIC,EAAIG,GAChDjiG,KAAKqhG,cAAcS,EAAIG,EAAKJ,EAAIE,EAAKH,EAAII,EAAID,EAAI=
C,GACjDhiG,KAAKqhG,cAAcU,EAAKH,EAAII,EAAI70F,EAAG80F,EAAKJ,EAAI10F,EAAG80=
F,GACxCjiG,KAAK2a,aAEdunF,OAAQ,SAAS/0F,EAAGC,EAAGm2C,GACrB,MAAOvjD,MAAK0Z=
,QAAQvM,EAAGC,EAAGm2C,IAE5B4+C,QAAS,WACP,GAAIC,GAAO5nF,EAAQq/C,EAAIC,CAGv=
B,KAFAt/C,EAAS,GAAK7U,UAAUL,OAASm7F,EAAQ9gG,KAAKgG,UAAW,MACzD3F,KAAKka,OA=
AOpP,MAAM9K,KAAMwa,EAAOwlC,SAC1B6Z,EAAK,EAAGC,EAAOt/C,EAAOlV,OAAaw0D,EAAL=
D,EAAWA,IAC5CuoC,EAAQ5nF,EAAOq/C,GACf75D,KAAKqa,OAAOvP,MAAM9K,KAAMoiG,EAE=
1B,OAAOpiG,MAAK2a,aAEd0P,KAAM,SAASA,GAEb,MADAm2E,GAAQ11F,MAAM9K,KAAMqqB,G=
ACbrqB,MAETqiG,aAAc,SAASC,GACrB,MAAI,YAAY5pE,KAAK4pE,GACZ,IAEF,IAET7wF,KA=
AM,SAASqG,EAAOwqF,GAQpB,MAPI,0BAA0B5pE,KAAK5gB,KACjCwqF,EAAOxqF,EACPA,EAA=
Q,MAENA,GACF9X,KAAK8jD,UAAUhsC,GAEV9X,KAAKoY,WAAW,IAAMpY,KAAKqiG,aAAaC,KA=
EjDxnF,OAAQ,SAAShD,GAIf,MAHIA,IACF9X,KAAK20F,YAAY78E,GAEZ9X,KAAKoY,WAAW,M=
AEzByC,cAAe,SAASipC,EAAW6wC,EAAa2N,GAC9C,GAAIC,EAiBJ,OAhBmB,OAAf5N,IACFA,=
EAAc7wC,GAEhBy+C,EAAa,0BACTA,EAAW7pE,KAAKorB,KAClBw+C,EAAOx+C,EACPA,EAAY,=
MAEVy+C,EAAW7pE,KAAKi8D,KAClB2N,EAAO3N,EACPA,EAAc7wC,GAEZA,IACF9jD,KAAK8j=
D,UAAUA,GACf9jD,KAAK20F,YAAYA,IAEZ30F,KAAKoY,WAAW,IAAMpY,KAAKqiG,aAAaC,KA=
EjDE,KAAM,SAASF,GACb,MAAOtiG,MAAKoY,WAAW,IAAMpY,KAAKqiG,aAAaC,GAAQ,OAEzDt=
qF,UAAW,SAASsmF,EAAKC,EAAKE,EAAKC,EAAKV,EAAIC,GAC1C,GAAIr+F,GAAGw+F,EAAIC=
,EAAIG,EAAIG,EAAIC,EAAIC,EAAIxwF,EAAG4V,CAmBlC,OAlBArkB,GAAII,KAAK05D,KAC=
T0kC,EAAKx+F,EAAE,GAAIy+F,EAAKz+F,EAAE,GAAI4+F,EAAK5+F,EAAE,GAAI++F,EAAK/=
+F,EAAE,GAAIg/F,EAAKh/F,EAAE,GAAIi/F,EAAKj/F,EAAE,GAC9DA,EAAE,GAAKw+F,EAA=
KE,EAAME,EAAKD,EACvB3+F,EAAE,GAAKy+F,EAAKC,EAAMK,EAAKJ,EACvB3+F,EAAE,GAAK=
w+F,EAAKK,EAAMD,EAAKE,EACvB9+F,EAAE,GAAKy+F,EAAKI,EAAME,EAAKD,EACvB9+F,EA=
AE,GAAKw+F,EAAKJ,EAAKQ,EAAKP,EAAKW,EAC3Bh/F,EAAE,GAAKy+F,EAAKL,EAAKW,EAAK=
V,EAAKY,EAC3B56E,EAAU,WACR,GAAI41C,GAAIC,EAAM1B,EAAMiB,CAGpB,KAFAjB,GAAQk=
mC,EAAKC,EAAKE,EAAKC,EAAKV,EAAIC,GAChC5kC,KACKQ,EAAK,EAAGC,EAAO1B,EAAK9yD=
,OAAaw0D,EAALD,EAAWA,IAC1CxrD,EAAI+pD,EAAKyB,GACTR,EAASz3D,MAAMyM,EAAEoxF=
,QAAQ,GAE3B,OAAOpmC,MACHzrD,KAAK,KACJ5N,KAAKoY,WAAW,GAAK6L,EAAS,QAEvCw+E,=
UAAW,SAASt1F,EAAGC,GACrB,MAAOpN,MAAKgY,UAAU,EAAG,EAAG,EAAG,EAAG7K,EAAGC,I=
AEvC2L,OAAQ,SAASH,EAAO3X,GACtB,GAAIyhG,GAAKC,EAAKC,EAAKz1F,EAAGgN,EAAI/M,=
EAAGgN,EAAIg+C,CAejC,OAde,OAAXn3D,IACFA,MAEF0hG,EAAM/pF,EAAQ7O,KAAK+O,GAA=
K,IACxB4pF,EAAM34F,KAAK24F,IAAIC,GACfC,EAAM74F,KAAK64F,IAAID,GACfx1F,EAAI=
C,EAAI,EACc,MAAlBnM,EAAQ+X,SACVo/C,EAAOn3D,EAAQ+X,OAAQ7L,EAAIirD,EAAK,GAA=
IhrD,EAAIgrD,EAAK,GAC7Cj+C,EAAKhN,EAAIu1F,EAAMt1F,EAAIw1F,EACnBxoF,EAAKjN=
,EAAIy1F,EAAMx1F,EAAIs1F,EACnBv1F,GAAKgN,EACL/M,GAAKgN,GAEApa,KAAKgY,UAAU=
0qF,EAAKE,GAAMA,EAAKF,EAAKv1F,EAAGC,IAEhDy1F,MAAO,SAASC,EAASC,EAAS9hG,GAC=
hC,GAAIkM,GAAGC,EAAGgrD,CAiBV,OAhBe,OAAX2qC,IACFA,EAAUD,GAEG,MAAX7hG,IACF=
A,MAEuB,IAArB0E,UAAUL,SACZy9F,EAAUD,EACV7hG,EAAU8hG,GAEZ51F,EAAIC,EAAI,EA=
Cc,MAAlBnM,EAAQ+X,SACVo/C,EAAOn3D,EAAQ+X,OAAQ7L,EAAIirD,EAAK,GAAIhrD,EAAI=
grD,EAAK,GAC7CjrD,GAAK21F,EAAU31F,EACfC,GAAK21F,EAAU31F,GAEVpN,KAAKgY,UAA=
U8qF,EAAS,EAAG,EAAGC,EAAS51F,EAAGC,OAIpDzN,KAAKK,OAKH,SAASR,EAAQD,IAGtB,W=
ACE,GAAIihG,EAEJA,GAAU,WAGR,QAASA,MAFT,GAAI11F,GAAOk4F,EAAeC,EAAIC,EAAIC,=
EAAYC,EAAOC,EAAIC,EAAIC,EAASC,EAAiBC,EAAUC,EAAIC,CAkWrG,OA9VAnD,GAAQ11F,M=
AAQ,SAASvJ,EAAK8oB,GAC5B,GAAIu5E,EAEJ,OADAA,GAAWR,EAAM/4E,GACVvf,EAAM84F,=
EAAUriG,IAGzB4hG,GACE9vD,EAAG,EACHnmC,EAAG,EACHqmC,EAAG,EACH1zC,EAAG,EACH=
urD,EAAG,EACHpxC,EAAG,EACHtH,EAAG,EACHC,EAAG,EACHq4C,EAAG,EACHprD,EAAG,EA=
CHsrD,EAAG,EACHvG,EAAG,EACHxnC,EAAG,EACHnJ,EAAG,EACH6vF,EAAG,EACHjwD,EAAG=
,EACHkwD,EAAG,EACHz1F,EAAG,EACH01F,EAAG,EACHC,EAAG,GAGLZ,EAAQ,SAAS/4E,GAC=
f,GAAI5B,GAAM5oB,EAAGokG,EAAKC,EAAQC,EAAcn0B,EAAQjlE,EAAK8uD,EAAIC,CAMzD,=
KALA/uD,KACA0d,KACAy7E,EAAS,GACTC,GAAe,EACfn0B,EAAS,EACJnW,EAAK,EAAGC,EAA=
OzvC,EAAK/kB,OAAaw0D,EAALD,EAAWA,IAE1C,GADAh6D,EAAIwqB,EAAKwvC,GACY,MAAjB=
spC,EAAWtjG,GACbmwE,EAASmzB,EAAWtjG,GAChBokG,IACEC,EAAO5+F,OAAS,IAClBmjB,=
EAAKA,EAAKnjB,SAAW4+F,GAEvBn5F,EAAIA,EAAIzF,SACN2+F,IAAKA,EACLx7E,KAAMA,G=
AERA,KACAy7E,EAAS,GACTC,GAAe,GAEjBF,EAAMpkG,MACD,IAAW,MAANA,GAAmB,MAANA,G=
AAqB,MAANA,GAAaqkG,EAAO5+F,OAAS,GAAmC,MAA9B4+F,EAAOA,EAAO5+F,OAAS,IAAsB,M=
AANzF,GAAaskG,EAAe,CAC3I,GAAsB,IAAlBD,EAAO5+F,OACT,QAEEmjB,GAAKnjB,SAAW0q=
E,GAClBjlE,EAAIA,EAAIzF,SACN2+F,IAAKA,EACLx7E,KAAMA,GAERA,IAASy7E,GACG,MA=
ARD,IACFA,EAAM,KAEI,MAARA,IACFA,EAAM,MAGRx7E,EAAKA,EAAKnjB,SAAW4+F,EAEvBC=
,EAAqB,MAANtkG,EACfqkG,EAAe,MAANrkG,GAAmB,MAANA,EAAYA,EAAI,OAEtCqkG,IAAUr=
kG,EACA,MAANA,IACFskG,GAAe,EAyBrB,OArBID,GAAO5+F,OAAS,IACdmjB,EAAKnjB,SAA=
W0qE,GAClBjlE,EAAIA,EAAIzF,SACN2+F,IAAKA,EACLx7E,KAAMA,GAERA,IAASy7E,GACG=
,MAARD,IACFA,EAAM,KAEI,MAARA,IACFA,EAAM,MAGRx7E,EAAKA,EAAKnjB,SAAW4+F,GAG=
zBn5F,EAAIA,EAAIzF,SACN2+F,IAAKA,EACLx7E,KAAMA,GAED1d,GAGTk4F,EAAKC,EAAKG=
,EAAKC,EAAKI,EAAKC,EAAK,EAE9B74F,EAAQ,SAAS84F,EAAUriG,GACzB,GAAI1B,GAAGmG=
,EAAG6zD,EAAIC,EAAMsqC,CAEpB,KADAnB,EAAKC,EAAKG,EAAKC,EAAKI,EAAKC,EAAK,EA=
CzB39F,EAAI6zD,EAAK,EAAGC,EAAO8pC,EAASt+F,OAAaw0D,EAALD,EAAW7zD,IAAM6zD,E=
ACxDh6D,EAAI+jG,EAAS59F,GACyB,kBAA3Bu9F,GAAQa,EAAQvkG,EAAEokG,MAC3BV,EAAQ=
a,GAAO7iG,EAAK1B,EAAE4oB,KAG1B,OAAOw6E,GAAKC,EAAKG,EAAKC,EAAK,GAG7BC,GACE=
v4C,EAAG,SAASzpD,EAAK2L,GAMf,MALA+1F,GAAK/1F,EAAE,GACPg2F,EAAKh2F,EAAE,GA=
CPm2F,EAAKC,EAAK,KACVI,EAAKT,EACLU,EAAKT,EACE3hG,EAAI2Y,OAAO+oF,EAAIC,IAE=
xBtjG,EAAG,SAAS2B,EAAK2L,GAMf,MALA+1F,IAAM/1F,EAAE,GACRg2F,GAAMh2F,EAAE,G=
ACRm2F,EAAKC,EAAK,KACVI,EAAKT,EACLU,EAAKT,EACE3hG,EAAI2Y,OAAO+oF,EAAIC,IA=
ExB3vD,EAAG,SAAShyC,EAAK2L,GAKf,MAJA+1F,GAAK/1F,EAAE,GACPg2F,EAAKh2F,EAAE=
,GACPm2F,EAAKn2F,EAAE,GACPo2F,EAAKp2F,EAAE,GACA3L,EAAI8/F,cAAcv2F,MAAMvJ,=
EAAK2L,IAEtCrN,EAAG,SAAS0B,EAAK2L,GAKf,MAJA3L,GAAI8/F,cAAcn0F,EAAE,GAAK+1=
F,EAAI/1F,EAAE,GAAKg2F,EAAIh2F,EAAE,GAAK+1F,EAAI/1F,EAAE,GAAKg2F,EAAIh2F,=
EAAE,GAAK+1F,EAAI/1F,EAAE,GAAKg2F,GAChFG,EAAKJ,EAAK/1F,EAAE,GACZo2F,EAAKJ=
,EAAKh2F,EAAE,GACZ+1F,GAAM/1F,EAAE,GACDg2F,GAAMh2F,EAAE,IAEjBiQ,EAAG,SAAS=
5b,EAAK2L,GASf,MARW,QAAPm2F,IACFA,EAAKJ,EACLK,EAAKJ,GAEP3hG,EAAI8/F,cAAc4=
B,GAAMI,EAAKJ,GAAKC,GAAMI,EAAKJ,GAAKh2F,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAIA,=
EAAE,IACtEm2F,EAAKn2F,EAAE,GACPo2F,EAAKp2F,EAAE,GACP+1F,EAAK/1F,EAAE,GACA=
g2F,EAAKh2F,EAAE,IAEhB8G,EAAG,SAASzS,EAAK2L,GASf,MARW,QAAPm2F,IACFA,EAAKJ=
,EACLK,EAAKJ,GAEP3hG,EAAI8/F,cAAc4B,GAAMI,EAAKJ,GAAKC,GAAMI,EAAKJ,GAAKD,E=
AAK/1F,EAAE,GAAIg2F,EAAKh2F,EAAE,GAAI+1F,EAAK/1F,EAAE,GAAIg2F,EAAKh2F,EAA=
E,IAC1Fm2F,EAAKJ,EAAK/1F,EAAE,GACZo2F,EAAKJ,EAAKh2F,EAAE,GACZ+1F,GAAM/1F,=
EAAE,GACDg2F,GAAMh2F,EAAE,IAEjBg+C,EAAG,SAAS3pD,EAAK2L,GAKf,MAJAm2F,GAAKn=
2F,EAAE,GACPo2F,EAAKp2F,EAAE,GACP+1F,EAAK/1F,EAAE,GACPg2F,EAAKh2F,EAAE,GA=
CA3L,EAAImgG,iBAAiBx0F,EAAE,GAAIA,EAAE,GAAI+1F,EAAIC,IAE9Cv+C,EAAG,SAASpj=
D,EAAK2L,GAKf,MAJA3L,GAAImgG,iBAAiBx0F,EAAE,GAAK+1F,EAAI/1F,EAAE,GAAKg2F,=
EAAIh2F,EAAE,GAAK+1F,EAAI/1F,EAAE,GAAKg2F,GAC7DG,EAAKJ,EAAK/1F,EAAE,GACZo=
2F,EAAKJ,EAAKh2F,EAAE,GACZ+1F,GAAM/1F,EAAE,GACDg2F,GAAMh2F,EAAE,IAEjB22F,=
EAAG,SAAStiG,EAAK2L,GAYf,MAXW,QAAPm2F,GACFA,EAAKJ,EACLK,EAAKJ,IAELG,EAAKJ=
,GAAMI,EAAKJ,GAChBK,EAAKJ,GAAMI,EAAKJ,IAElB3hG,EAAImgG,iBAAiB2B,EAAIC,EAA=
Ip2F,EAAE,GAAIA,EAAE,IACrCm2F,EAAKJ,GAAMI,EAAKJ,GAChBK,EAAKJ,GAAMI,EAAKJ,=
GAChBD,EAAK/1F,EAAE,GACAg2F,EAAKh2F,EAAE,IAEhB0mC,EAAG,SAASryC,EAAK2L,GAU=
f,MATW,QAAPm2F,GACFA,EAAKJ,EACLK,EAAKJ,IAELG,EAAKJ,GAAMI,EAAKJ,GAChBK,EAA=
KJ,GAAMI,EAAKJ,IAElB3hG,EAAImgG,iBAAiB2B,EAAIC,EAAIL,EAAK/1F,EAAE,GAAIg2F=
,EAAKh2F,EAAE,IAC/C+1F,GAAM/1F,EAAE,GACDg2F,GAAMh2F,EAAE,IAEjBmmC,EAAG,SA=
AS9xC,EAAK2L,GAGf,MAFAu2F,GAASliG,EAAK0hG,EAAIC,EAAIh2F,GACtB+1F,EAAK/1F,=
EAAE,GACAg2F,EAAKh2F,EAAE,IAEhBA,EAAG,SAAS3L,EAAK2L,GAKf,MAJAA,GAAE,IAAM+=
1F,EACR/1F,EAAE,IAAMg2F,EACRO,EAASliG,EAAK0hG,EAAIC,EAAIh2F,GACtB+1F,EAAK=
/1F,EAAE,GACAg2F,EAAKh2F,EAAE,IAEhBwF,EAAG,SAASnR,EAAK2L,GAIf,MAHA+1F,GAA=
K/1F,EAAE,GACPg2F,EAAKh2F,EAAE,GACPm2F,EAAKC,EAAK,KACH/hG,EAAI8Y,OAAO4oF,=
EAAIC,IAExBvwF,EAAG,SAASpR,EAAK2L,GAIf,MAHA+1F,IAAM/1F,EAAE,GACRg2F,GAAMh=
2F,EAAE,GACRm2F,EAAKC,EAAK,KACH/hG,EAAI8Y,OAAO4oF,EAAIC,IAExB93C,EAAG,SAA=
S7pD,EAAK2L,GAGf,MAFA+1F,GAAK/1F,EAAE,GACPm2F,EAAKC,EAAK,KACH/hG,EAAI8Y,O=
AAO4oF,EAAIC,IAExBlpF,EAAG,SAASzY,EAAK2L,GAGf,MAFA+1F,IAAM/1F,EAAE,GACRm2=
F,EAAKC,EAAK,KACH/hG,EAAI8Y,OAAO4oF,EAAIC;EAExBY,EAAG,SAASviG,EAAK2L,GAGf=
,MAFAg2F,GAAKh2F,EAAE,GACPm2F,EAAKC,EAAK,KACH/hG,EAAI8Y,OAAO4oF,EAAIC,IAE=
xB70F,EAAG,SAAS9M,EAAK2L,GAGf,MAFAg2F,IAAMh2F,EAAE,GACRm2F,EAAKC,EAAK,KAC=
H/hG,EAAI8Y,OAAO4oF,EAAIC,IAExBa,EAAG,SAASxiG,GAGV,MAFAA,GAAIoZ,YACJsoF,E=
AAKS,EACER,EAAKS,GAEdK,EAAG,SAASziG,GAGV,MAFAA,GAAIoZ,YACJsoF,EAAKS,EACER=
,EAAKS,IAIhBF,EAAW,SAASliG,EAAK4L,EAAGC,EAAGi3F,GAC7B,GAAIC,GAAKC,EAAIC,E=
AAIC,EAAOC,EAAKC,EAAIC,EAAIC,EAAKC,EAAMC,EAAOlrC,EAAIC,EAAMT,CAIjE,KAHAsr=
C,EAAKN,EAAO,GAAIO,EAAKP,EAAO,GAAIK,EAAML,EAAO,GAAII,EAAQJ,EAAO,GAAIU,EAA=
QV,EAAO,GAAIE,EAAKF,EAAO,GAAIG,EAAKH,EAAO,GACnHS,EAAO9B,EAAcuB,EAAIC,EAAI=
G,EAAIC,EAAIH,EAAOM,EAAOL,EAAKv3F,EAAGC,GAC3DisD,KACKQ,EAAK,EAAGC,EAAOgrC=
,EAAKx/F,OAAaw0D,EAALD,EAAWA,IAC1CgrC,EAAMC,EAAKjrC,GACXyqC,EAAMd,EAAgB14=
F,MAAM,KAAM+5F,GAClCxrC,EAASz3D,KAAKL,EAAI8/F,cAAcv2F,MAAMvJ,EAAK+iG,GAE7=
C,OAAOjrC,IAGT2pC,EAAgB,SAAS71F,EAAGC,EAAGu3F,EAAIC,EAAIH,EAAOM,EAAOC,EAA=
SpD,EAAIC,GAChE,GAAIoD,GAAKC,EAAKC,EAAKC,EAAKC,EAAQtxF,EAAG/N,EAAGs/F,EAA=
IhkG,EAAQikG,EAAUC,EAASC,EAAYC,EAAQC,EAAIC,EAAKC,EAAKC,EAAKC,EAAKC,EAAQC,=
EAAI9rF,EAAI+rF,EAAI9vC,EAAIh8C,EAAI+rF,EAAItsC,CA2CjJ,KA1CA8rC,EAAKX,GAA=
Wj7F,KAAK+O,GAAK,KAC1B4sF,EAAS37F,KAAK64F,IAAI+C,GAClBN,EAASt7F,KAAK24F,I=
AAIiD,GAClBhB,EAAK56F,KAAKoK,IAAIwwF,GACdC,EAAK76F,KAAKoK,IAAIywF,GACdvB,=
EAAKgC,GAAUzD,EAAKz0F,GAAK,GAAMu4F,GAAU7D,EAAKz0F,GAAK,GACnDk2F,EAAK+B,GA=
AUxD,EAAKz0F,GAAK,GAAMs4F,GAAU9D,EAAKz0F,GAAK,GACnDm4F,EAAMjC,EAAKA,GAAOs=
B,EAAKA,GAAOrB,EAAKA,GAAOsB,EAAKA,GAC3CU,EAAK,IACPA,EAAKv7F,KAAKywC,KAAK8=
qD,GACfX,GAAMW,EACNV,GAAMU,GAERL,EAAMI,EAASV,EACfO,EAAMQ,EAASf,EACfQ,GAAQ=
O,EAAUd,EAClBQ,EAAMC,EAAST,EACfqB,EAAKhB,EAAMrD,EAAKsD,EAAMrD,EACtBzrC,EA=
AK+uC,EAAMvD,EAAKwD,EAAMvD,EACtB1nF,EAAK8qF,EAAM93F,EAAI+3F,EAAM93F,EACrB=
gN,EAAK+qF,EAAMh4F,EAAIi4F,EAAMh4F,EACrB2G,GAAKoG,EAAK8rF,IAAO9rF,EAAK8rF=
,IAAO7rF,EAAKg8C,IAAOh8C,EAAKg8C,GAC9CqvC,EAAa,EAAI1xF,EAAI,IACJ,EAAb0xF,=
IACFA,EAAa,GAEfD,EAAUz7F,KAAKywC,KAAKirD,GAChBV,IAAUN,IACZe,GAAWA,GAEbU,E=
AAK,IAAOD,EAAK9rF,GAAMqrF,GAAWprF,EAAKg8C,GACvC+vC,EAAK,IAAO/vC,EAAKh8C,G=
AAMorF,GAAWrrF,EAAK8rF,GACvCL,EAAM77F,KAAK8O,MAAMu9C,EAAK+vC,EAAIF,EAAKC,=
GAC/BL,EAAM97F,KAAK8O,MAAMuB,EAAK+rF,EAAIhsF,EAAK+rF,GAC/BF,EAASH,EAAMD,E=
ACF,EAATI,GAAwB,IAAVjB,EAChBiB,GAAU,EAAIj8F,KAAK+O,GACVktF,EAAS,GAAe,IAAV=
jB,IACvBiB,GAAU,EAAIj8F,KAAK+O,IAErBysF,EAAWx7F,KAAKy8B,KAAKz8B,KAAKoK,IA=
AI6xF,GAAoB,GAAVj8F,KAAK+O,GAAW,QACxDxX,KACK0E,EAAI6zD,EAAK,EAAQ0rC,GAAL,=
EAAqBA,EAAL1rC,EAAgBA,EAAK0rC,EAAUv/F,EAASu/F,GAAL,IAAkB1rC,IAAOA,EAC3Fis=
C,EAAMF,EAAM5/F,EAAIggG,EAAST,EACzBQ,EAAMH,GAAO5/F,EAAI,GAAKggG,EAAST,EAC=
/BjkG,EAAO0E,IAAMkgG,EAAIC,EAAIL,EAAKC,EAAKpB,EAAIC,EAAIc,EAAQL,EAEjD,OAA=
O/jG,IAGTkiG,EAAkB,SAASP,EAAIC,EAAI0C,EAAKC,EAAKlB,EAAIC,EAAIc,EAAQL,GAC3=
D,GAAIJ,GAAKC,EAAKC,EAAKC,EAAKxxD,EAAGwyD,EAASjsF,EAAIG,EAAI+rF,EAAIjsF,E=
AAIG,EAAI+rF,CAaxD,OAZArB,GAAMI,EAASV,EACfO,GAAOQ,EAASd,EAChBO,EAAMO,EAAS=
f,EACfS,EAAMC,EAAST,EACfwB,EAAU,IAAOP,EAAMD,GACvBhyD,EAAK,EAAI,EAAK7pC,KA=
AK64F,IAAc,GAAVwD,GAAiBr8F,KAAK64F,IAAc,GAAVwD,GAAiBr8F,KAAK64F,IAAIwD,GA=
C3EjsF,EAAK8oF,EAAKl5F,KAAK24F,IAAIkD,GAAOhyD,EAAI7pC,KAAK64F,IAAIgD,GACv=
CxrF,EAAK8oF,EAAKn5F,KAAK64F,IAAIgD,GAAOhyD,EAAI7pC,KAAK24F,IAAIkD,GACvCS=
,EAAKpD,EAAKl5F,KAAK24F,IAAImD,GACnBS,EAAKpD,EAAKn5F,KAAK64F,IAAIiD,GACnB=
vrF,EAAK+rF,EAAKzyD,EAAI7pC,KAAK64F,IAAIiD,GACvBtrF,EAAK+rF,EAAK1yD,EAAI7=
pC,KAAK24F,IAAImD,IACfZ,EAAM9qF,EAAK+qF,EAAM9qF,EAAI+qF,EAAMhrF,EAAKirF,E=
AAMhrF,EAAI6qF,EAAM3qF,EAAK4qF,EAAM3qF,EAAI4qF,EAAM7qF,EAAK8qF,EAAM7qF,EA=
AI0qF,EAAMoB,EAAKnB,EAAMoB,EAAInB,EAAMkB,EAAKjB,EAAMkB,IAG7H9F,KAIThhG,EA=
AOD,QAAUihG,IAEhB7gG,KAAKK,OAKH,SAASR,EAAQD,EAASH,IAG/B,WACE,GAAImnG,EAEJ=
A,GAAUnnG,EAAoB,IAE9BI,EAAOD,SACLy5D,UAAW,WACTh5D,KAAKg2C,iBACLh2C,KAAKwm=
G,WAAa,EAClBxmG,KAAKymG,UAAY,GACjBzmG,KAAKi2C,MAAQ,KACbj2C,KAAK0mG,qBAGPx=
uF,KAAM,SAAS7U,EAAKsjG,EAAQ7wF,GAC1B,GAAI8wF,GAAU1uF,EAAMzY,EAAI24D,CAiBx=
B,OAhBsB,gBAAXuuC,KACT7wF,EAAO6wF,EACPA,EAAS,MAEQ,gBAARtjG,IAAoBrD,KAAK0m=
G,iBAAiBrjG,IACnDujG,EAAWvjG,EACX+0D,EAAOp4D,KAAK0mG,iBAAiBrjG,GAAMA,EAAM=
+0D,EAAK/0D,IAAKsjG,EAASvuC,EAAKuuC,SAEjEC,EAAWD,GAAUtjG,EACG,gBAAbujG,KA=
CTA,EAAW,OAGH,MAAR9wF,GACF9V,KAAKsY,SAASxC,IAEZoC,EAAOlY,KAAKg2C,cAAc4wD,=
KAC5B5mG,KAAKi2C,MAAQ/9B,EACNlY,OAETP,EAAK,OAASO,KAAKwmG,WACnBxmG,KAAKi2C=
,MAAQ,GAAIswD,GAAQvmG,KAAMqD,EAAKsjG,EAAQlnG,IACxCyY,EAAOlY,KAAKg2C,cAAch=
2C,KAAKi2C,MAAM7xC,QACvCpE,KAAKi2C,MAAQ/9B,EACNlY,OAEL4mG,IACF5mG,KAAKg2C=
,cAAc4wD,GAAY5mG,KAAKi2C,OAEtCj2C,KAAKg2C,cAAch2C,KAAKi2C,MAAM7xC,MAAQpE,=
KAAKi2C,MACpCj2C,QAETsY,SAAU,SAASmuF,GAEjB,MADAzmG,MAAKymG,UAAYA,EACVzmG,=
MAET6mG,kBAAmB,SAASC,GAI1B,MAHkB,OAAdA,IACFA,GAAa,GAER9mG,KAAKi2C,MAAM3+B=
,WAAWtX,KAAKymG,UAAWK,IAE/CC,aAAc,SAAS3iG,EAAMf,EAAKsjG,GAKhC,MAJA3mG,MAA=
K0mG,iBAAiBtiG,IACpBf,IAAKA,EACLsjG,OAAQA,GAEH3mG,SAIVL,KAAKK,OAKH,SAASR,=
EAAQD,EAASH,IAEH,SAASa,EAAQ0nE,IAO7C,WACE,GAAIq/B,GAAST,EAASU,EAAQC,EAAS9=
lG,CAEvC8lG,GAAU9nG,EAAoB,IAE9B4nG,EAAU5nG,EAAoB,IAE9B6nG,EAAS7nG,EAAoB,I=
AE7BgC,EAAKhC,EAAoB,IAEzBmnG,EAAU,WAGR,QAASA,GAAQvjG,EAAUK,EAAKsjG,EAAQln=
G,GAGtC,GAFAO,KAAKgD,SAAWA,EAChBhD,KAAKP,GAAKA,EACS,gBAAR4D,GAAkB,CAC3B,G=
AAIA,IAAO8jG,GAIT,MAHAnnG,MAAKonG,OAAQ,EACbpnG,KAAKkY,KAAO,GAAI8uF,GAAQG,=
EAAe9jG,UACvCrD,MAAKqnG,YAAYhkG,EAEZ,IAAI,gBAAgBq1B,KAAKr1B,GAC9BrD,KAAKk=
Y,KAAOgvF,EAAQ9kG,KAAKiB,EAAKsjG,OACzB,CAAA,IAAI,YAAYjuE,KAAKr1B,GAG1B,KA=
AM,IAAI0F,OAAM,oDAFhB/I,MAAKkY,KAAOgvF,EAAQI,UAAUjkG,EAAKsjG,QAIhC,IAAI1m=
G,EAAOoG,SAAShD,GACzBrD,KAAKkY,KAAOgvF,EAAQ5gG,WAAWjD,EAAKsjG,OAC/B,IAAIt=
jG,YAAeiB,YACxBtE,KAAKkY,KAAOgvF,EAAQ5gG,WAAW,GAAIrG,GAAOoD,GAAMsjG,OAC3C=
,CAAA,KAAItjG,YAAeqD,cAGxB,KAAM,IAAIqC,OAAM,oDAFhB/I,MAAKkY,KAAOgvF,EAAQ5=
gG,WAAW,GAAIrG,GAAO,GAAIqE,YAAWjB,IAAOsjG,GAIlE3mG,KAAKunG,OAAS,GAAIN,GAA=
OjnG,KAAKkY,MAC9BlY,KAAKwnG,cA5BP,GAAIL,GAAgBM,CA2QpB,OA5OAN,IACEO,QAAW,W=
ACT,MAAOtmG,GAAG4mE,aAAaL,EAAY,yBAA0B,SAE/DggC,eAAgB,WACd,MAAOvmG,GAAG4mE=
,aAAaL,EAAY,8BAA+B,SAEpEigC,kBAAmB,WACjB,MAAOxmG,GAAG4mE,aAAaL,EAAY,iCAAk=
C,SAEvEkgC,sBAAuB,WACrB,MAAOzmG,GAAG4mE,aAAaL,EAAY,qCAAsC,SAE3EmgC,UAAa,W=
ACX,MAAO1mG,GAAG4mE,aAAaL,EAAY,2BAA4B,SAEjEogC,iBAAkB,WAChB,MAAO3mG,GAAG4=
mE,aAAaL,EAAY,gCAAiC,SAEtEqgC,oBAAqB,WACnB,MAAO5mG,GAAG4mE,aAAaL,EAAY,mCA=
AoC,SAEzEsgC,wBAAyB,WACvB,MAAO7mG,GAAG4mE,aAAaL,EAAY,uCAAwC,SAE7EugC,cAAe=
,WACb,MAAO9mG,GAAG4mE,aAAaL,EAAY,6BAA8B,SAEnEwgC,aAAc,WACZ,MAAO/mG,GAAG4m=
E,aAAaL,EAAY,4BAA6B,SAElEygC,eAAgB,WACd,MAAOhnG,GAAG4mE,aAAaL,EAAY,8BAA+B=
,SAEpE0gC,mBAAoB,WAClB,MAAOjnG,GAAG4mE,aAAaL,EAAY,kCAAmC,SAExE2gC,OAAU,WA=
CR,MAAOlnG,GAAG4mE,aAAaL,EAAY,wBAAyB,SAE9D4gC,aAAgB,WACd,MAAOnnG,GAAG4mE,=
aAAaL,EAAY,8BAA+B,UAItE4+B,EAAQxlG,UAAUy1C,IAAM,SAASgyD,GAC/B,GAAIpwC,EAC=
J,OAA+B,QAAvBA,EAAOp4D,KAAKunG,QAAkBnvC,EAAK5hB,IAAIgyD,GAAc,QAG/DjC,EAAQ=
xlG,UAAUw5D,MAAQ,WACxB,MAAIv6D,MAAK49F,UAAgC,MAAnB59F,KAAKw5D,WAA3B,QAGIx=
5D,KAAKonG,MACPpnG,KAAKyoG,WAELzoG,KAAK0oG,WAEA1oG,KAAK49F,UAAW,IAGzB2I,E=
AAQxlG,UAAUmS,OAAS,SAASiF,GAClC,GAAIigD,EACJ,OAAIp4D,MAAKonG,MACApnG,KAAK=
kY,KAAKywF,WAAWxwF,IAEI,OAAvBigD,EAAOp4D,KAAKunG,QAAkBnvC,EAAKuwC,WAAWxwF=
,GAAQ,SAAWA,GAI9EouF,EAAQxlG,UAAUkc,IAAM,WACtB,MAA0B,OAAnBjd,KAAKw5D,WAAq=
Bx5D,KAAKw5D,WAAax5D,KAAKw5D,WAAax5D,KAAKgD,SAASia,OAGrFspF,EAAQxlG,UAAUy=
mG,YAAc,WAC9B,GAAI7kG,GAAGgK,EAAI6hB,EAAKo6E,EAAKxwC,CA+CrB,IA9CAp4D,KAAK=
oE,KAAOpE,KAAKkY,KAAK9T,KAAK2xC,eAC3B/1C,KAAK6oG,YAAc,IAAS7oG,KAAKkY,KAAK=
k0B,KAAK08D,WAC3C9oG,KAAK+oG,KAAO,WACV,GAAIlvC,GAAIC,EAAM1B,EAAMiB,CAGpB,=
KAFAjB,EAAOp4D,KAAKkY,KAAK6wF,KACjB1vC,KACKQ,EAAK,EAAGC,EAAO1B,EAAK9yD,OA=
Aaw0D,EAALD,EAAWA,IAC1Cl3D,EAAIy1D,EAAKyB,GACTR,EAASz3D,KAAKmI,KAAKmhC,MA=
AMvoC,EAAI3C,KAAK6oG,aAEpC,OAAOxvC,IACN15D,KAAKK,MACRA,KAAKgpG,MAAQ,EACTh=
pG,KAAKkY,KAAK+wF,KAAKC,QACjBN,EAAM5oG,KAAKkY,KAAK+wF,KAAKE,aACrBx8F,EAAK=
i8F,GAAO,GACZp6E,EAAY,IAANo6E,EACFj8F,GAAK,IACPA,KAAa,MAALA,GAAe,IAEzB3M,=
KAAKopG,cAAgB,GAAKz8F,EAAK,IAAM6hB,IAErCxuB,KAAKopG,YAAc,EAErBppG,KAAK41C=
,SAAW7rC,KAAKmhC,MAAMlrC,KAAKkY,KAAK09B,SAAW51C,KAAK6oG,aACrD7oG,KAAK61C,=
SAAW9rC,KAAKmhC,MAAMlrC,KAAKkY,KAAK29B,SAAW71C,KAAK6oG,aACrD7oG,KAAKqpG,Q=
AAUt/F,KAAKmhC,MAAMlrC,KAAKkY,KAAKmxF,QAAUrpG,KAAK6oG,aACnD7oG,KAAKspG,UA=
AatpG,KAAKkY,KAAKqxF,IAAIL,QAAUlpG,KAAKkY,KAAKqxF,IAAID,WAActpG,KAAK41C,S=
AC3E51C,KAAKwpG,QAAWxpG,KAAKkY,KAAKqxF,IAAIL,QAAUlpG,KAAKkY,KAAKqxF,IAAIC=
,SAAY,EAClExpG,KAAKypG,aAAezpG,KAAKkY,KAAKqxF,IAAIL,QAAUlpG,KAAKkY,KAAKqx=
F,IAAIE,aAAe,IAAM,EAC/EzpG,KAAK0pG,QAAwC,KAA7BtxC,EAAOp4D,KAAKypG,cAA+B,I=
AATrxC,GAAuB,IAATA,GAAuB,IAATA,GAAuB,IAATA,GAAuB,IAATA,EAC1Gp4D,KAAK2pG,S=
AAgC,KAArB3pG,KAAKypG,YACrBzpG,KAAKwiF,MAAQ,EACTxiF,KAAKkY,KAAK+wF,KAAKW,=
eACjB5pG,KAAKwiF,OAAS,GAEZxiF,KAAK0pG,UACP1pG,KAAKwiF,OAAS,GAEZxiF,KAAK2p=
G,WACP3pG,KAAKwiF,OAAS,GAES,IAArBxiF,KAAKopG,cACPppG,KAAKwiF,OAAS,IAEhBxi=
F,KAAKwiF,OAAS,IACTxiF,KAAKkY,KAAK2xF,KAAKC,QAClB,KAAM,IAAI/gG,OAAM,6BAIp=
Bw9F,EAAQxlG,UAAU2nG,SAAW,WAC3B,GAAIqB,GAAYF,EAAM73F,EAAM9K,EAAM8iG,EAAYC=
,EAAWC,EAAUC,CA4CnE,OA3CAjjG,GAAOlH,KAAKunG,OAAOr0F,SACnBg3F,EAAWlqG,KAAK=
gD,SAASia,MACzBitF,EAAS/jG,MAAMe,GACfgjG,EAAShjG,KAAKkjG,QAAUF,EAASvgC,mB=
ACjCugC,EAASnoG,MACTioG,EAAahqG,KAAKgD,SAASia,KACzBC,KAAM,iBACNmtF,SAAUrq=
G,KAAKunG,OAAOxxD,eACtBu0D,UAAWJ,EACXK,SAAUvqG,KAAK+oG,KACfyB,MAAOxqG,KAA=
KwiF,MACZioB,MAAOzqG,KAAKgpG,MACZ0B,YAAa1qG,KAAKopG,YAClBuB,OAAQ3qG,KAAK4=
1C,SACbg1D,QAAS5qG,KAAK61C,SACdg1D,UAAW7qG,KAAKspG,UAChBwB,QAAS9qG,KAAKwp=
G,UAEhBQ,EAAWjoG,MACXkoG,GAAa31F,OAAO+R,KAAKrmB,KAAKunG,OAAOsC,MAAM,GAC3C=
E,EAAa,WACX,GAAI3xC,GAAMiB,CACVjB,GAAOp4D,KAAKunG,OAAOsC,KACnBxwC,IACA,KA=
AKrnD,IAAQomD,GACX+xC,EAAQ/xC,EAAKpmD,GACbqnD,EAASz3D,KAAKmI,KAAKmhC,MAAM=
lrC,KAAKkY,KAAK6yF,aAAaZ,IAElD,OAAO9wC,IACN15D,KAAKK,MACR6pG,EAAO7pG,KAAK=
gD,SAASia,MACrB4sF,EAAK9nG,IAAI0lG,EAAcznG,KAAKunG,OAAOA,SACnCvnG,KAAKw5D=
,WAAWtyD,MACdgW,KAAM,OACN8tF,SAAUhrG,KAAKunG,OAAOxxD,eACtB8pD,QAAS,WACToL=
,eAAgBjB,EAChBkB,UAAWjB,EACXkB,SAAUlB,EAAYF,EAAWzkG,OAAS,EAC1C8lG,OAAQrB,=
EACRsB,SAAU,mBACVC,UAAWzB,GAEN7pG,KAAKw5D,WAAWz3D,OAGzB0lG,EAAgB,SAAStrE,=
GACvB,GAAInqB,GAAMy7D,EAAOnoC,EAAOwkE,EAASyB,EAAY1xC,EAAIC,CAMjD,KALAyxC,=
EAAa,6PACb99B,EAAQn5D,OAAO+R,KAAK8V,GAAKxO,KAAK,SAASzgB,EAAGF,GACxC,MAAOE=
,GAAIF,IAEbs4B,KACKu0B,EAAK,EAAGC,EAAO2T,EAAMnoE,OAAaw0D,EAALD,EAAWA,IAC3=
C7nD,EAAOy7D,EAAM5T,GACTv0B,EAAMhgC,QAAU,MAClBimG,GAAc,KAAOjmE,EAAMhgC,OA=
AS,iBAAoBggC,EAAM13B,KAAK,MAAS,cAC5E03B,MAEFwkE,GAAW,OAAS3tE,EAAInqB,GAAM=
vN,SAAS,KAAKqF,MAAM,IAClDkI,IAASA,GAAMvN,SAAS,IACxB6gC,EAAM1jC,KAAK,IAAMo=
Q,EAAO,KAAO83F,EAAU,IAK3C,OAHIxkE,GAAMhgC,SACRimG,GAAc,KAAOjmE,EAAMhgC,OA=
AS,iBAAoBggC,EAAM13B,KAAK,MAAS,iBAEvE29F,GAAc,oEAGvBhF,EAAQxlG,UAAUsmG,YA=
Ac,SAASjjG,GACvC,GAAIg0D,EAEJ,OADAp4D,MAAKoE,KAAOA,EACLg0D,EAAOp4D,KAAKkY=
,KAAMlY,KAAK41C,SAAWwiB,EAAKxiB,SAAU51C,KAAK61C,SAAWuiB,EAAKviB,SAAU71C,K=
AAK+oG,KAAO3wC,EAAK2wC,KAAM/oG,KAAKqpG,QAAUjxC,EAAKixC,QAASjxC,GAG7ImuC,E=
AAQxlG,UAAU0nG,SAAW,WAO3B,MANAzoG,MAAKw5D,WAAWtyD,MACdgW,KAAM,OACN8tF,SAA=
UhrG,KAAKoE,KACfy7F,QAAS,QACTwL,SAAU,mBAELrrG,KAAKw5D,WAAWz3D,OAGzBwkG,EA=
AQxlG,UAAUm1C,cAAgB,SAASjwC,EAAQ6P,GACjD,GAAIoK,GAAUla,EAAG68F,EAAO5sF,EA=
AO4jD,EAAIzB,CAGnC,KAFAnyD,EAAS,GAAKA,EACdgQ,EAAQ,EACHjQ,EAAI6zD,EAAK,EAA=
GzB,EAAOnyD,EAAOX,OAAa8yD,GAAL,EAAiBA,EAALyB,EAAYA,EAAKzB,EAAMpyD,EAASoyD=
,GAAL,IAAcyB,IAAOA,EACjG35C,EAAWja,EAAOyG,WAAW1G,GAC7BiQ,GAASjW,KAAKkY,KA=
AK6yF,aAAa/qG,KAAKkY,KAAKszF,iBAAiBtrF,KAAc,CAG3E,OADA2iF,GAAQ/sF,EAAO,IA=
CRG,EAAQ4sF,GAGjB0D,EAAQxlG,UAAUuW,WAAa,SAASxB,EAAMgxF,GAC5C,GAAIrqD,EAKJ=
,OAJkB,OAAdqqD,IACFA,GAAa,GAEfrqD,EAAMqqD,EAAa9mG,KAAKqpG,QAAU,GAC1BrpG,K=
AAK41C,SAAW6G,EAAMz8C,KAAK61C,UAAY,IAAO//B,GAGjDywF,KAIT/mG,EAAOD,QAAUgnG=
,IAEhB5mG,KAAKK,QAEqBL,KAAKJ,EAASH,EAAoB,GAAGa,OAAQ,MAIrE,SAAST,EAAQD,EAA=
SH,IAG/B,WACE,GAAIqsG,WAAWC,EAAOC,EAAMC,EAAWC,UAAWC,UAAWC,UAAWC,UAAWC,UAA=
WC,UAAWC,UAAWC,SAAUC,UAAWnF,EAAS9lG,CAElJA,GAAKhC,EAAoB,IAEzBusG,EAAOvsG,=
EAAoB,IAE3BssG,EAAQtsG,EAAoB,IAE5BwsG,EAAYxsG,EAAoB,IAEhC+sG,UAAY/sG,EAAo=
B,IAEhC0sG,UAAY1sG,EAAoB,IAEhCqsG,UAAYrsG,EAAoB,IAEhC4sG,UAAY5sG,EAAoB,IA=
EhC2sG,UAAY3sG,EAAoB,IAEhC8sG,UAAY9sG,EAAoB,IAEhCitG,UAAYjtG,EAAoB,IAEhCg=
tG,SAAWhtG,EAAoB,IAE/B6sG,UAAY7sG,EAAoB,IAEhCysG,UAAYzsG,EAAoB,IAEhC8nG,E=
AAU,WA+BR,QAASA,GAAQoF,EAASloG,GACxB,GAAI8C,GAAMlB,EAAGumG,EAAU5jG,EAAQ62=
C,EAAS+L,EAASsO,EAAIsP,EAAIrP,CAGzD,IAFA95D,KAAKssG,QAAUA,EACfplG,EAAOlH,=
KAAKwsG,SAAW,GAAIb,GAAK3rG,KAAKssG,SACV,SAAvBplG,EAAKulG,WAAW,GAAe,CACjC,=
IAAKroG,EACH,KAAM,IAAI2E,OAAM,0CAKlB,KAHAwiD,EAAUrkD,EAAKwlG,UACfH,EAAWrl=
G,EAAKwlG,UAChBltD,KACKx5C,EAAI6zD,EAAK,EAAQ0yC,GAAL,EAAqBA,EAAL1yC,EAAgB=
A,EAAK0yC,EAAUvmG,EAASumG,GAAL,IAAkB1yC,IAAOA,EAC3Fra,EAAQx5C,GAAKkB,EAAK=
wlG,SAEpB,KAAK1mG,EAAImjE,EAAK,EAAGrP,EAAOta,EAAQl6C,OAAaw0D,EAALqP,EAAWn=
jE,IAAMmjE,EAIvD,GAHAxgE,EAAS62C,EAAQx5C,GACjBkB,EAAKqG,IAAM5E,EACX3I,KAA=
KojG,QACDpjG,KAAKoE,KAAK2xC,iBAAmB3xC,EAC/B,MAGJ,MAAM,IAAI2E,OAAM,QAAU3E,=
EAAO,2BAEjC8C,EAAKqG,IAAM,EACXvN,KAAKojG,QAiCT,MAxFA8D,GAAQ9kG,KAAO,SAAS8=
3D,EAAU91D,GAChC,GAAIooG,EAEJ,OADAA,GAAWprG,EAAG4mE,aAAa9N,GACpB,GAAIgtC,=
GAAQsF,EAAUpoG,IAG/B8iG,EAAQI,UAAY,SAASptC,EAAUysC,GACrC,GAAIgG,EAEJ,OADA=
A,GAAQjB,EAAMtpG,KAAK83D,GACZ,GAAIgtC,GAAQyF,EAAMC,aAAajG,KAGxCO,EAAQ5gG,=
WAAa,SAAS/B,EAAQoiG,GACpC,GAAIgG,GAAOhqG,EAAGkqG,CACd,KAEE,GADAA,EAAM,GAA=
I3F,GAAQ3iG,EAAQoiG,KACpBkG,EAAIzgE,KAAK88D,QAAU2D,EAAIzoG,KAAK8kG,QAAU2D=
,EAAIhD,KAAKX,SACnDyD,EAAQ,GAAIjB,GAAMnnG,GAClBsoG,EAAM,GAAI3F,GAAQyF,EAA=
MC,aAAajG,IAC/BkG,EAAIzgE,KAAK88D,QAAU2D,EAAIzoG,KAAK8kG,QAAU2D,EAAIhD,KA=
AKX,SACnD,KAAM,IAAIngG,OAAM,4BAGpB,OAAO8jG,GACP,MAAOj7B,GAEP,KADAjvE,GAAI=
ivE,EACE,GAAI7oE,OAAM,kCAAoCpG,EAAEN,WAiC1D6kG,EAAQnmG,UAAUqiG,MAAQ,WAexB=
,MAdApjG,MAAK8sG,UAAY,GAAIlB,GAAU5rG,KAAKwsG,UACpCxsG,KAAKosC,KAAO,GAAI0/=
D,WAAU9rG,MAC1BA,KAAKoE,KAAO,GAAI+nG,WAAUnsG,MAC1BA,KAAK6pG,KAAO,GAAI4B,W=
AAUzrG,MAC1BA,KAAK+sG,KAAO,GAAIhB,WAAU/rG,MAC1BA,KAAKgtG,KAAO,GAAId,WAAUl=
sG,MAC1BA,KAAKitG,KAAO,GAAIjB,WAAUhsG,MAC1BA,KAAKipG,KAAO,GAAIoD,WAAUrsG,=
MAC1BA,KAAKupG,IAAM,GAAI6C,UAASpsG,MACxBA,KAAKktG,KAAO,GAAIjB,WAAUjsG,MAC=
1BA,KAAKmtG,KAAO,GAAItB,WAAU7rG,MAC1BA,KAAK41C,SAAY51C,KAAKupG,IAAIL,QAAU=
lpG,KAAKupG,IAAI3zD,UAAa51C,KAAK+sG,KAAKn3D,SACpE51C,KAAK61C,SAAY71C,KAAK=
upG,IAAIL,QAAUlpG,KAAKupG,IAAI1zD,UAAa71C,KAAK+sG,KAAKl3D,SACpE71C,KAAKqp=
G,QAAWrpG,KAAKupG,IAAIL,QAAUlpG,KAAKupG,IAAIF,SAAYrpG,KAAK+sG,KAAK1D,QAC3=
DrpG,KAAK+oG,MAAQ/oG,KAAKosC,KAAKghE,KAAMptG,KAAKosC,KAAKihE,KAAMrtG,KAAK=
osC,KAAKkhE,KAAMttG,KAAKosC,KAAKmhE,OAGhFrG,EAAQnmG,UAAUyqG,iBAAmB,SAASgC=
,GAC5C,GAAIp1C,EACJ,QAAsC,OAA7BA,EAAOp4D,KAAK6pG,KAAKC,SAAmB1xC,EAAKq1C,Q=
AAQD,GAAa,SAAW,GAGpFtG,EAAQnmG,UAAUgqG,aAAe,SAASZ,GACxC,GAAItH,EAEJ,OADAA=
,GAAQ,IAAS7iG,KAAKosC,KAAK08D,WACpB9oG,KAAKitG,KAAKS,SAASvD,GAAOwD,QAAU9K=
,GAGtCqE,KAIT1nG,EAAOD,QAAU2nG,IAEhBvnG,KAAKK,OAKH,SAASR,EAAQD,IAGtB,WACE=
,GAAIosG,EAEJA,GAAO,WACL,QAASA,GAAKzkG,GACZlH,KAAKkH,KAAe,MAARA,EAAeA,KAC=
3BlH,KAAKuN,IAAM,EACXvN,KAAKsF,OAAStF,KAAKkH,KAAK5B,OAiL1B,MA9KAqmG,GAAK5=
qG,UAAU6sG,SAAW,WACxB,MAAO5tG,MAAKkH,KAAKlH,KAAKuN,QAGxBo+F,EAAK5qG,UAAU8=
sG,UAAY,SAASC,GAClC,MAAO9tG,MAAKkH,KAAKlH,KAAKuN,OAASugG,GAGjCnC,EAAK5qG,=
UAAUgtG,OAAS,SAAS5vF,GAC/B,MAAOne,MAAKkH,KAAKiX,IAGnBwtF,EAAK5qG,UAAUitG,=
SAAW,WACxB,QAAShuG,KAAK4tG,YAGhBjC,EAAK5qG,UAAUktG,UAAY,SAASngG,GAClC,MAA=
O9N,MAAK6tG,UAAU//F,EAAM,EAAI,IAGlC69F,EAAK5qG,UAAUmtG,WAAa,WAC1B,GAAIC,G=
AAIC,EAAIC,EAAIC,CAKhB,OAJAH,GAAuB,SAAlBnuG,KAAK4tG,WACVQ,EAAKpuG,KAAK4tG=
,YAAc,GACxBS,EAAKruG,KAAK4tG,YAAc,EACxBU,EAAKtuG,KAAK4tG,WACHO,EAAKC,EAAK=
C,EAAKC,GAGxB3C,EAAK5qG,UAAUwtG,YAAc,SAASzgG,GAIpC,MAHA9N,MAAK6tG,UAAW//F=
,IAAQ,GAAM,KAC9B9N,KAAK6tG,UAAW//F,GAAO,GAAM,KAC7B9N,KAAK6tG,UAAW//F,GAAO=
,EAAK,KACrB9N,KAAK6tG,UAAgB,IAAN//F,IAGxB69F,EAAK5qG,UAAUytG,UAAY,WACzB,G=
AAIC,EAEJ,OADAA,GAAMzuG,KAAKkuG,aACPO,GAAO,WACFA,EAAM,WAENA,GAIX9C,EAAK5q=
G,UAAU2tG,WAAa,SAAS5gG,GAInC,MAHU,GAANA,IACFA,GAAO,YAEF9N,KAAKuuG,YAAYzgG=
,IAG1B69F,EAAK5qG,UAAU4tG,WAAa,WAC1B,GAAIR,GAAIC,CAGR,OAFAD,GAAKnuG,KAAK4=
tG,YAAc,EACxBQ,EAAKpuG,KAAK4tG,WACHO,EAAKC,GAGdzC,EAAK5qG,UAAU6tG,YAAc,SA=
AS9gG,GAEpC,MADA9N,MAAK6tG,UAAW//F,GAAO,EAAK,KACrB9N,KAAK6tG,UAAgB,IAAN//=
F,IAGxB69F,EAAK5qG,UAAU8tG,UAAY,WACzB,GAAIJ,EAEJ,OADAA,GAAMzuG,KAAK2uG,aA=
CPF,GAAO,MACFA,EAAM,MAENA,GAIX9C,EAAK5qG,UAAU+tG,WAAa,SAAShhG,GAInC,MAHU,=
GAANA,IACFA,GAAO,OAEF9N,KAAK4uG,YAAY9gG,IAG1B69F,EAAK5qG,UAAU0rG,WAAa,SAA=
SnnG,GACnC,GAAIU,GAAG+E,EAAK8uD,CAEZ,KADA9uD,KACK/E,EAAI6zD,EAAK,EAAQv0D,=
GAAL,EAAmBA,EAALu0D,EAAcA,EAAKv0D,EAAQU,EAASV,GAAL,IAAgBu0D,IAAOA,EACnF9u=
D,EAAI/E,GAAK4E,OAAOC,aAAa7K,KAAK4tG,WAEpC,OAAO7iG,GAAI6C,KAAK,KAGlB+9F,E=
AAK5qG,UAAUguG,YAAc,SAASjhG,GACpC,GAAI9H,GAAG6zD,EAAIzB,EAAMiB,CAEjB,KADA=
A,KACKrzD,EAAI6zD,EAAK,EAAGzB,EAAOtqD,EAAIxI,OAAa8yD,GAAL,EAAiBA,EAALyB,E=
AAYA,EAAKzB,EAAMpyD,EAASoyD,GAAL,IAAcyB,IAAOA,EAC9FR,EAASz3D,KAAK5B,KAAK6=
tG,UAAU//F,EAAIpB,WAAW1G,IAE9C,OAAOqzD,IAGTsyC,EAAK5qG,UAAUiuG,SAAW,SAASz=
hG,EAAKjI,GAEtC,MADAtF,MAAKuN,IAAMA,EACJvN,KAAKysG,WAAWnnG,IAGzBqmG,EAAK5=
qG,UAAUkuG,UAAY,WACzB,MAAOjvG,MAAK6uG,aAGdlD,EAAK5qG,UAAUmuG,WAAa,SAASphG=
,GACnC,MAAO9N,MAAK8uG,WAAWhhG,IAGzB69F,EAAK5qG,UAAUouG,aAAe,WAC5B,GAAIhB,=
GAAIC,EAAIC,EAAIC,EAAIc,EAAIC,EAAIC,EAAIC,CAShC,OARApB,GAAKnuG,KAAK4tG,WA=
CVQ,EAAKpuG,KAAK4tG,WACVS,EAAKruG,KAAK4tG,WACVU,EAAKtuG,KAAK4tG,WACVwB,EA=
AKpvG,KAAK4tG,WACVyB,EAAKrvG,KAAK4tG,WACV0B,EAAKtvG,KAAK4tG,WACV2B,EAAKvv=
G,KAAK4tG,WACD,IAALO,EAC6N,IAAzM,mBAAR,IAALA,GAA+C,iBAAR,IAALC,GAA6C,eAAR=
,IAALC,GAA2C,YAAR,IAALC,GAAyC,UAAR,IAALc,GAAuC,OAAR,IAALC,GAAqC,KAAR,IAAL=
C,IAA2B,IAALC,GAAa,GAEhN,kBAALpB,EAA8B,gBAALC,EAA4B,cAALC,EAA0B,WAALC,EAA=
wB,SAALc,EAAsB,MAALC,EAAoB,IAALC,EAAaC,GAG9I5D,EAAK5qG,UAAUyuG,cAAgB,SAAS=
1hG,GACtC,GAAI2gB,GAAMD,CAUV,OATAC,GAAO1kB,KAAKqG,MAAMtC,EAAM,YACxB0gB,EA=
AY,WAAN1gB,EACN9N,KAAK6tG,UAAWp/E,GAAQ,GAAM,KAC9BzuB,KAAK6tG,UAAWp/E,GAAQ=
,GAAM,KAC9BzuB,KAAK6tG,UAAWp/E,GAAQ,EAAK,KAC7BzuB,KAAK6tG,UAAiB,IAAPp/E,G=
ACfzuB,KAAK6tG,UAAWr/E,GAAO,GAAM,KAC7BxuB,KAAK6tG,UAAWr/E,GAAO,GAAM,KAC7B=
xuB,KAAK6tG,UAAWr/E,GAAO,EAAK,KACrBxuB,KAAK6tG,UAAgB,IAANr/E,IAGxBm9E,EAA=
K5qG,UAAU2rG,QAAU,WACvB,MAAO1sG,MAAKwuG,aAGd7C,EAAK5qG,UAAU0uG,SAAW,SAAS3=
hG,GACjC,MAAO9N,MAAK0uG,WAAW5gG,IAGzB69F,EAAK5qG,UAAU+I,MAAQ,SAAS5B,EAAOn=
G,GACrC,MAAO/B,MAAKkH,KAAK4C,MAAM5B,EAAOnG,IAGhC4pG,EAAK5qG,UAAU+O,KAAO,S=
AAS5E,GAC7B,GAAIvD,GAAK3B,EAAG6zD,CAEZ,KADAlyD,KACK3B,EAAI6zD,EAAK,EAAQ3u=
D,GAAL,EAAkBA,EAAL2uD,EAAaA,EAAK3uD,EAAOlF,EAASkF,GAAL,IAAe2uD,IAAOA,EAC/=
ElyD,EAAI/F,KAAK5B,KAAK4tG,WAEhB,OAAOjmG,IAGTgkG,EAAK5qG,UAAUoF,MAAQ,SAAS=
+E,GAC9B,GAAI4iG,GAAMj0C,EAAIC,EAAMT,CAEpB,KADAA,KACKQ,EAAK,EAAGC,EAAO5uD=
,EAAM5F,OAAaw0D,EAALD,EAAWA,IAC3Ci0C,EAAO5iG,EAAM2uD,GACbR,EAASz3D,KAAK5B=
,KAAK6tG,UAAUC,GAE/B,OAAOz0C,IAGFsyC,KAITnsG,EAAOD,QAAUosG,IAEhBhsG,KAAKK=
,OAKH,SAASR,EAAQD,EAASH,IAG/B,WACE,GAAIssG,GAAOC,EAAMC,EAAWO,UAAW/qG,CAEv=
CA,GAAKhC,EAAoB,IAEzBusG,EAAOvsG,EAAoB,IAE3BwsG,EAAYxsG,EAAoB,IAEhC+sG,UA=
AY/sG,EAAoB,IAEhCssG,EAAQ,WAON,QAASA,GAAMc,GACbxsG,KAAKwsG,SAAW,GAAIb,GAA=
Ka,GACzBxsG,KAAKojG,MAAMpjG,KAAKwsG,UA+ElB,MAvFAd,GAAMtpG,KAAO,SAAS83D,GA=
CpB,GAAIsyC,EAEJ,OADAA,GAAWprG,EAAG4mE,aAAa9N,GACpB,GAAIwxC,GAAMc,IAQnBd,=
EAAM3qG,UAAUqiG,MAAQ,SAASl8F,GAC/B,GAAIwoG,GAAMtB,EAAIC,EAAIC,EAAIqB,EAAY=
C,EAAYC,EAASlqC,EAAOztD,EAAM43F,EAAQ9pG,EAAGvG,EAAIiM,EAAG9D,EAAKtC,EAAQy=
qG,EAAWC,EAAWC,EAAUC,EAAc9rG,EAAM+rG,EAAgBC,EAAStwG,EAAGyN,EAAK8iG,EAAels=
G,EAAMmsG,EAAgBz2C,EAAIsP,CAWjO,KAVAymC,EAAa1oG,EAAKwlG,UAClBsD,EAAY9oG,E=
AAKwlG,UACjBiD,EAAazoG,EAAKwlG,UAClBqD,EAAY7oG,EAAKwlG,UACjB1sG,KAAKm8B,O=
ACLj1B,EAAKqG,IAAMyiG,EAAY,GACvBM,EAAiBppG,EAAK+nG,YAAce,EACpCG,EAAiBjpG,=
EAAK+nG,YAAce,EACpC9oG,EAAKqG,IAAM+iG,EACXL,EAAW/oG,EAAK+nG,YACXjpG,EAAI6=
zD,EAAK,EAASo2C,GAANp2C,EAAgB7zD,EAAI6zD,GAAM,EAAG,CAU5C,IATA11D,EAAO+C,E=
AAKulG,WAAW,GACvByD,EAAehpG,EAAK+nG,YACpBoB,EAAgBnpG,EAAK+nG,YACrBjvG,KAA=
Km8B,IAAIh4B,IACPmJ,QACAijG,UAEFhjG,EAAMrG,EAAKqG,IACXrG,EAAKqG,IAAM+iG,E=
AAiBD,EACvB3kG,EAAIy9D,EAAK,EAAS+mC,GAAN/mC,EAAoBz9D,EAAIy9D,GAAM,EAC7C1p=
E,EAAKyH,EAAK+nG,YACVmB,EAAUlpG,EAAK+nG,YACfS,EAAOxoG,EAAK0mG,WACZQ,EAAKl=
nG,EAAK0mG,YAAc,GACxBS,EAAKnnG,EAAK0mG,YAAc,EACxBU,EAAKpnG,EAAK0mG,WACViC=
,EAAUD,GAAc,EAAIxB,EAAKC,EAAKC,GACtCwB,EAAS5oG,EAAKgnG,aACdvoC,GACElmE,GA=
AIA,EACJ+wG,WAAYd,EACZ/mG,OAAQknG,EACRC,OAAQA,GAEVhwG,EAAIoH,EAAKqG,IACO,=
KAAZ6iG,GAA8CJ,EAAYD,EAAvCI,EAAiBC,GACtClpG,EAAKqG,IAAM4iG,EAAiBC,EAC5Bxo=
G,EAAMV,EAAK0mG,WACXjoC,EAAMvhE,KAAO8C,EAAKulG,WAAW7kG,IACX,SAATzD,IACT+C=
,EAAKqG,IAAMo4D,EAAMh9D,OACjBrD,EAAS4B,EAAKgnG,aACdh2F,KACAA,EAAKs0F,SAAW=
,GAAIb,GAAKzkG,EAAK4C,MAAM5C,EAAKqG,IAAKrG,EAAKqG,IAAMjI,IACzD4S,EAAK40F,=
UAAY,GAAIlB,GAAU1zF,EAAKs0F,UACpCpoG,EAAO,GAAI+nG,WAAUj0F,GACrBytD,EAAMvh=
E,KAAOA,EAAKmxC,SAAS,GAAGqzD,KAEhC1hG,EAAKqG,IAAMzN,EACXE,KAAKm8B,IAAIh4B=
,GAAMmJ,KAAK1L,KAAK+jE,GACrBA,EAAMvhE,OACRpE,KAAKm8B,IAAIh4B,GAAMosG,MAAM=
5qC,EAAMvhE,MAAQuhE,EAGvCz+D,GAAKqG,IAAMA,IAIfm+F,EAAM3qG,UAAU6rG,aAAe,SA=
ASxoG,GACtC,GAAI8C,GAAMy+D,EAAOrgE,EAAQiI,EAAKxC,EAAKqtD,CAInC,IAHAlxD,EA=
AOlH,KAAKwsG,SACZj/F,EAAMrG,EAAKqG,IACXo4D,EAAkC,OAAzBvN,EAAOp4D,KAAKm8B,=
IAAIs0E,MAAgBr4C,EAAKm4C,MAAMnsG,GAAQ,QACvDuhE,EACH,KAAM,IAAI58D,OAAM,QAA=
U3E,EAAO,4BAMnC,OAJA8C,GAAKqG,IAAMo4D,EAAMh9D,OACjBrD,EAAS4B,EAAKgnG,aACd=
njG,EAAM7D,EAAK4C,MAAM5C,EAAKqG,IAAKrG,EAAKqG,IAAMjI,GACtC4B,EAAKqG,IAAMA=
,EACJxC,GAGF2gG,KAITlsG,EAAOD,QAAUmsG,IAEhB/rG,KAAKK,OAKH,SAASR,EAAQD,EAA=
SH,IAEH,SAASa,IACrC,WACE,GAAI0rG,GAAMC,EACRnL,KAAa32F,KAEf6hG,GAAOvsG,EAA=
oB,IAE3BwsG,EAAY,WAGV,QAASA,GAAU1kG,GACjB,GAAIy+D,GAAO3/D,EAAG6zD,EAAIzB,=
CAOlB,KANAp4D,KAAK0wG,WAAaxpG,EAAKwlG,UACvB1sG,KAAK2wG,WAAazpG,EAAK+nG,YA=
CvBjvG,KAAK4wG,YAAc1pG,EAAK+nG,YACxBjvG,KAAK6wG,cAAgB3pG,EAAK+nG,YAC1BjvG=
,KAAK8wG,WAAa5pG,EAAK+nG,YACvBjvG,KAAK+wG,UACA/qG,EAAI6zD,EAAK,EAAGzB,EAA=
Op4D,KAAK2wG,WAAiBv4C,GAAL,EAAiBA,EAALyB,EAAYA,EAAKzB,EAAMpyD,EAASoyD,GAA=
L,IAAcyB,IAAOA,EACnG8L,GACE/9C,IAAK1gB,EAAKulG,WAAW,GACrBuE,SAAU9pG,EAAKw=
lG,UACf/jG,OAAQzB,EAAKwlG,UACbpnG,OAAQ4B,EAAKwlG,WAEf1sG,KAAK+wG,OAAOprC,=
EAAM/9C,KAAO+9C,EAjB7B,GAAIqrC,EA4EJ,OAvDApF,GAAU7qG,UAAUmS,OAAS,SAAS69F,=
GACpC,GAAIE,GAAYnE,EAAWoE,EAAiBL,EAAeM,EAAYC,EAAMzoG,EAAQmoG,EAAYF,EAAa7q=
E,EAAKzwB,EAAOq7F,EAAYU,EAAWzpF,CACjJ+oF,GAAar8F,OAAO+R,KAAK0qF,GAAQzrG,O=
ACjC8rG,EAAOrnG,KAAKqK,IAAI,GAChBw8F,EAAwD,GAA1C7mG,KAAKqG,MAAMrG,KAAKqK,=
IAAIu8F,GAAcS,GAChDP,EAAgB9mG,KAAKqG,MAAMwgG,EAAcQ,GACzCN,EAA0B,GAAbH,EAA=
kBC,EAC/B9D,EAAY,GAAInB,GAChBmB,EAAU2C,SAASzvG,KAAK0wG,YACxB5D,EAAUoC,WAA=
WyB,GACrB7D,EAAUoC,WAAW0B,GACrB9D,EAAUoC,WAAW2B,GACrB/D,EAAUoC,WAAW4B,GAC=
rBI,EAA+B,GAAbP,EAClBhoG,EAASmkG,EAAUv/F,IAAM2jG,EACzBC,EAAa,KACbE,IACA,K=
AAKzpF,IAAOmpF,GAWV,IAVAz7F,EAAQy7F,EAAOnpF,GACfklF,EAAUiC,YAAYnnF,GACtBk=
lF,EAAU2C,SAASuB,EAAS17F,IAC5Bw3F,EAAU2C,SAAS9mG,GACnBmkG,EAAU2C,SAASn6F,=
EAAMhQ,QACzB+rG,EAAYA,EAAUxvG,OAAOyT,GACjB,SAARsS,IACFupF,EAAaxoG,GAEfA,G=
AAU2M,EAAMhQ,OACTqD,EAAS,GACd0oG,EAAUzvG,KAAK,GACf+G,GAQJ,OALAmkG,GAAU3mG=
,MAAMkrG,GAChBtrE,EAAMirE,EAASlE,EAAU5lG,MACzB+pG,EAAa,WAAalrE,EAC1B+mE,E=
AAUv/F,IAAM4jG,EAAa,EAC7BrE,EAAUyB,YAAY0C,GACf,GAAIhxG,GAAO6sG,EAAU5lG,OA=
G9B8pG,EAAW,SAAS9pG,GAClB,GAAIlB,GAAG+/B,EAAKnzB,EAAKinD,EAAIzB,CAErB,KAD=
AlxD,EAAOu5F,EAAQ9gG,KAAKuH,GACbA,EAAK5B,OAAS,GACnB4B,EAAKtF,KAAK,EAIZ,KA=
FAgR,EAAM,GAAI+4F,GAAKzkG,GACf6+B,EAAM,EACD//B,EAAI6zD,EAAK,EAAGzB,EAAOlx=
D,EAAK5B,OAAa8yD,EAALyB,EAAW7zD,EAAI6zD,GAAM,EACxD9zB,GAAOnzB,EAAIs7F,YAE=
b,OAAa,YAANnoE,GAGF6lE,KAITpsG,EAAOD,QAAUqsG,IAEhBjsG,KAAKK,QAEqBL,KAAKJ,=
EAASH,EAAoB,GAAGa,SAI7D,SAAST,EAAQD,EAASH,IAG/B,WACE,GAAIusG,GAAM2F,EAAWn=
F,UAAWoF,EAAO79B,EACrC5b,KAAe12C,eACf22C,EAAY,SAASC,EAAOzyD,GAAiG,QAAS0yD=
,KAASj4D,KAAKgF,YAAcgzD,EAA5H,IAAK,GAAIr0C,KAAOpe,GAAcuyD,EAAUn4D,KAAK4F,=
EAAQoe,KAAMq0C,EAAMr0C,GAAOpe,EAAOoe,GAA2J,OAArGs0C,GAAKl3D,UAAYwE,EAAOxE=
,UAAWi3D,EAAMj3D,UAAY,GAAIk3D,GAAQD,EAAME,UAAY3yD,EAAOxE,UAAkBi3D,EAEzRu5=
C,GAAQnyG,EAAoB,IAE5BusG,EAAOvsG,EAAoB,IAE3Bs0E,EAAQt0E,EAAoB,IAE5B+sG,UA=
AY,SAAUh0C,GAKpB,QAASg0C,aACP,MAAOA,WAAUj0C,UAAUlzD,YAAY8F,MAAM9K,KAAM2F,=
WALrD,GAAI6rG,EA8GJ,OA5GAz5C,GAAUo0C,UAAWh0C,GAMrBg0C,UAAUprG,UAAU6mB,IAA=
M,OAE1BukF,UAAUprG,UAAUqiG,MAAQ,SAASl8F,GACnC,GAAIggC,GAAOuqE,EAAS9rC,EAA=
O6lB,EAAQxlF,EAAG5B,EAAMstG,EAAcC,EAASx5F,EAAM0hD,EAAIsP,EAAIrP,EAAMsqC,C=
AMvF,KALAl9F,EAAKqG,IAAMvN,KAAK2I,OAChB6iF,EAAStkF,EAAK+nG,YACd/nE,EAAQhg=
C,EAAK+nG,YACbyC,EAAexqG,EAAK+nG,YACpBwC,KACKzrG,EAAI6zD,EAAK,EAAQ3yB,GAA=
L,EAAkBA,EAAL2yB,EAAaA,EAAK3yB,EAAOlhC,EAASkhC,GAAL,IAAe2yB,IAAOA,EAC/E43=
C,EAAQ7vG,MACNgwG,WAAY1qG,EAAK+nG,YACjB4C,WAAY3qG,EAAK+nG,YACjB6C,WAAY5qG=
,EAAK+nG,YACjB8C,OAAQ7qG,EAAK+nG,YACb3pG,OAAQ4B,EAAK+nG,YACbtmG,OAAQ3I,KA=
AK2I,OAAS+oG,EAAexqG,EAAK+nG,aAI9C,KADA0C,KACK3rG,EAAImjE,EAAK,EAAGrP,EAA=
O23C,EAAQnsG,OAAaw0D,EAALqP,EAAWnjE,IAAMmjE,EACvDxD,EAAQ8rC,EAAQzrG,GAChB=
kB,EAAKqG,IAAMo4D,EAAMh9D,OACjBwP,EAAOjR,EAAKulG,WAAW9mC,EAAMrgE,QAC7BlB,=
EAAO,GAAIktG,GAAUn5F,EAAMwtD,GACU,MAAjCgsC,EAAQvN,EAAQz+B,EAAMosC,UACxBJ,=
EAAQvN,OAEVuN,EAAQhsC,EAAMosC,QAAQnwG,KAAKwC,EAqB7B,OAnBApE,MAAK2xG,QAAUA=
,EACf3xG,KAAKgyG,UAAYL,EAAQ,GACzB3xG,KAAKm1C,WAAaw8D,EAAQ,GAC1B3xG,KAAKiy=
G,cAAgBN,EAAQ,GAC7B3xG,KAAKkyG,gBAAkBP,EAAQ,GAC/B3xG,KAAKu1C,SAAWo8D,EAAQ=
,GACxB3xG,KAAKurD,QAAUomD,EAAQ,GACvB3xG,KAAK+1C,eAAiB47D,EAAQ,GAAG,GAAG/I=
,IAAIx8F,QAAQ,wBAAyB,IACzEpM,KAAKmyG,UAAYR,EAAQ,GACzB3xG,KAAKoyG,aAAeT,EA=
AQ,GAC5B3xG,KAAKqyG,SAAWV,EAAQ,GACxB3xG,KAAKsyG,YAAcX,EAAQ,IAC3B3xG,KAAKu=
yG,UAAYZ,EAAQ,IACzB3xG,KAAKwyG,YAAcb,EAAQ,IAC3B3xG,KAAKyyG,QAAUd,EAAQ,IAC=
vB3xG,KAAK0yG,WAAaf,EAAQ,IAC1B3xG,KAAK2yG,gBAAkBhB,EAAQ,IAC/B3xG,KAAK4yG,=
mBAAqBjB,EAAQ,IAClC3xG,KAAK6yG,eAAiBlB,EAAQ,IACvB3xG,KAAK8yG,WAAanB,EAAQ,=
KAGnCH,EAAY,SAEZrF,UAAUprG,UAAUmS,OAAS,WAC3B,GAAIzT,GAAI6N,EAAMykG,EAAQgB=
,EAAWh9D,EAAgBi9D,EAAUC,EAAUhtG,EAAQ0rG,EAASr8F,EAAOxH,EAAK+rD,EAAIC,EAAM=
1B,CAC5Gu5C,MACAv5C,EAAOp4D,KAAK2xG,OACZ,KAAKlyG,IAAM24D,GACTtqD,EAAMsqD,=
EAAK34D,GACXkyG,EAAQlyG,GAAMqO,CAEhBioC,GAAiB,GAAIu7D,GAAU,GAAKE,EAAY,IAA=
MxxG,KAAK+1C,gBACzD67D,WAAY,EACZC,WAAY,EACZC,WAAY,IAEdH,EAAQ,IAAM57D,GACd=
y7D,EAAY99B,EAAMw/B,YAAY1B,GAC9BwB,EAAW,CACX,KAAKvzG,IAAMkyG,GACTrkG,EAAO=
qkG,EAAQlyG,GACH,MAAR6N,IACF0lG,GAAY1lG,EAAKhI,OAGrBgQ,GAAQ,GAAIq2F,GACZs=
H,EAAW,GAAItH,GACfr2F,EAAM45F,WAAW,GACjB55F,EAAM45F,WAAW8D,GACjB19F,EAAM4=
5F,WAAW,EAAI,GAAK8D,EAC1B,KAAKjB,IAAUJ,GAEb,GADArkG,EAAOqkG,EAAQI,GACH,MA=
ARzkG,EACF,IAAKusD,EAAK,EAAGC,EAAOxsD,EAAKhI,OAAaw0D,EAALD,EAAWA,IAC1C5zD=
,EAASqH,EAAKusD,GACdvkD,EAAM45F,WAAWjpG,EAAO2rG,YACxBt8F,EAAM45F,WAAWjpG,=
EAAO4rG,YACxBv8F,EAAM45F,WAAWjpG,EAAO6rG,YACxBx8F,EAAM45F,WAAW6C,GACjBz8F=
,EAAM45F,WAAWjpG,EAAOX,QACxBgQ,EAAM45F,WAAW+D,EAAS1lG,KAC1B0lG,EAASlE,YAA=
Y9oG,EAAO2iG,IAIlC,OAAOmK,IACLh9D,eAAgBA,EAAe6yD,IAC/BtzF,MAAOA,EAAMpO,KA=
AKrF,OAAOoxG,EAAS/rG,QAI/BilG,WAENoF,GAEH/xG,EAAOD,QAAU4sG,UAEjBmF,EAAY,W=
ACV,QAASA,GAAU1I,EAAKjjC,GACtB3lE,KAAK4oG,IAAMA,EACX5oG,KAAKsF,OAAStF,KAA=
K4oG,IAAItjG,OACvBtF,KAAK4xG,WAAajsC,EAAMisC,WACxB5xG,KAAK6xG,WAAalsC,EAA=
MksC,WACxB7xG,KAAK8xG,WAAansC,EAAMmsC,WAG1B,MAAOR,QAIR3xG,KAAKK,OAKH,SAAS=
R,EAAQD,IAGtB,WACE,GAAIgyG,EAEJA,GAAQ,WACN,QAASA,GAAM4B,GACb,GAAIz3F,EACJ=
1b,MAAKmzG,KAAOA,EACZz3F,EAAO1b,KAAKmzG,KAAKrG,UAAUiE,OAAO/wG,KAAK4nB,KAC=
vC5nB,KAAKkpG,SAAWxtF,EACZA,IACF1b,KAAK2I,OAAS+S,EAAK/S,OAAQ3I,KAAKsF,OAA=
SoW,EAAKpW,OAC9CtF,KAAKojG,MAAMpjG,KAAKmzG,KAAK3G,WAgBzB,MAZA+E,GAAMxwG,U=
AAUqiG,MAAQ,aAExBmO,EAAMxwG,UAAUmS,OAAS,aAEzBq+F,EAAMxwG,UAAU6nG,IAAM,WAC=
pB,MAAK5oG,MAAKkpG,QAGVlpG,KAAKmzG,KAAK3G,SAASj/F,IAAMvN,KAAK2I,OACvB3I,K=
AAKmzG,KAAK3G,SAAS18F,KAAK9P,KAAKsF,SAH3B,MAMJisG,KAIT/xG,EAAOD,QAAUgyG,I=
AEhB5xG,KAAKK,OAKH,SAASR,EAAQD,IAuBtB,WACEA,EAAQ2zG,YAAc,SAASx7E,GAC7B,GA=
AI07E,GAAOC,EAAUC,EAAOttG,EAAGmY,EAAOo1F,EAAajnF,EAAMhnB,EAAQi+E,EAAMjiF,=
CAKvE,KAJA+xG,EAAW,6BACX/tG,EAAS+tG,EAAS/tG,OAClBhE,EAASo2B,EACT1xB,EAAI0=
xB,EAAMpyB,OACHU,GAAK,GAAG,CAEb,GADAsmB,EAAOoL,EAAM5kB,SAAS9M,GAClBmD,MAA=
MmjB,IAER,GADAnO,EAAQk1F,EAASxlG,QAAQye,EAAKtkB,eAChB,KAAVmW,EACFolE,EAAO=
j3D,EACPgnF,GAAQ,MAQR,IANA/vB,EAAO8vB,EAASvgG,QAAQqL,EAAQ,GAAK7Y,GACrCiuG=
,EAAcjnF,IAASA,EAAKtW,cACxBu9F,IACFhwB,EAAOA,EAAKvtE,eAEds9F,EAAQn1F,EAAQ=
,GAAK7Y,EACjBguG,GAAe,IAANttG,EAAS,CACpBotG,EAAQG,EAAc,IAAM,IAC5BjyG,EAAS=
8xG,EAAQ7vB,EAAOjiF,EAAOwI,MAAM,EACrC,YASJ,IALAy5E,GAAQj3D,EAAO,EACfgnF,E=
AAQ/vB,EAAO,EACX+vB,IACF/vB,EAAO,GAEL+vB,GAAe,IAANttG,EAAS,CACpB1E,EAAS,I=
AAMiiF,EAAOjiF,EAAOwI,MAAM,EACnC,OAIJ,GADAxI,EAASA,EAAOwI,MAAM,EAAG9D,GAA=
Ku9E,EAAOjiF,EAAOwI,MAAM9D,EAAI,IACjDstG,EACH,MAGJ,MAAOhyG,IAGT/B,EAAQ+gC=
,OAAS,SAASl6B,GACxB,GAAIud,GAAK5Y,EAAK+C,CACd/C,KACA,KAAK4Y,IAAOvd,GACV0H=
,EAAM1H,EAAOud,GACb5Y,EAAI+C,GAAO6V,CAEb,OAAO5Y,MAGRpL,KAAKK,OAKH,SAASR,E=
AAQD,EAASH,IAG/B,WACE,GAAIusG,GAAMG,UAAWyF,EACnBz5C,KAAe12C,eACf22C,EAAY,=
SAASC,EAAOzyD,GAAiG,QAAS0yD,KAASj4D,KAAKgF,YAAcgzD,EAA5H,IAAK,GAAIr0C,KAA=
Ope,GAAcuyD,EAAUn4D,KAAK4F,EAAQoe,KAAMq0C,EAAMr0C,GAAOpe,EAAOoe,GAA2J,OAA=
rGs0C,GAAKl3D,UAAYwE,EAAOxE,UAAWi3D,EAAMj3D,UAAY,GAAIk3D,GAAQD,EAAME,UAAY=
3yD,EAAOxE,UAAkBi3D,EAEzRu5C,GAAQnyG,EAAoB,IAE5BusG,EAAOvsG,EAAoB,IAE3B0s=
G,UAAY,SAAU3zC,GAGpB,QAAS2zC,aACP,MAAOA,WAAU5zC,UAAUlzD,YAAY8F,MAAM9K,KAA=
M2F,WAiDrD,MApDAoyD,GAAU+zC,UAAW3zC,GAMrB2zC,UAAU/qG,UAAU6mB,IAAM,OAE1Bkk=
F,UAAU/qG,UAAUqiG,MAAQ,SAASl8F,GAkBnC,MAjBAA,GAAKqG,IAAMvN,KAAK2I,OAChB3I=
,KAAKurD,QAAUrkD,EAAKwlG,UACpB1sG,KAAKwzG,SAAWtsG,EAAKwlG,UACrB1sG,KAAKyz=
G,mBAAqBvsG,EAAKwlG,UAC/B1sG,KAAK0zG,YAAcxsG,EAAKwlG,UACxB1sG,KAAKwiF,MAA=
Qt7E,EAAK+nG,YAClBjvG,KAAK8oG,WAAa5hG,EAAK+nG,YACvBjvG,KAAK2zG,QAAUzsG,EA=
AKioG,eACpBnvG,KAAK4zG,SAAW1sG,EAAKioG,eACrBnvG,KAAKotG,KAAOlmG,EAAK+nG,Y=
ACjBjvG,KAAKqtG,KAAOnmG,EAAK+nG,YACjBjvG,KAAKstG,KAAOpmG,EAAK+nG,YACjBjvG=
,KAAKutG,KAAOrmG,EAAK+nG,YACjBjvG,KAAK6zG,SAAW3sG,EAAK+nG,YACrBjvG,KAAK8z=
G,cAAgB5sG,EAAK+nG,YAC1BjvG,KAAK+zG,kBAAoB7sG,EAAK+nG,YAC9BjvG,KAAKg0G,iB=
AAmB9sG,EAAK+nG,YACtBjvG,KAAKi0G,gBAAkB/sG,EAAK+nG,aAGrCnD,UAAU/qG,UAAUmS=
,OAAS,SAASg6F,GACpC,GAAI53F,EAmBJ,OAlBAA,GAAQ,GAAIq2F,GACZr2F,EAAMm6F,SAA=
SzvG,KAAKurD,SACpBj2C,EAAMm6F,SAASzvG,KAAKwzG,UACpBl+F,EAAMm6F,SAASzvG,KA=
AKyzG,oBACpBn+F,EAAMm6F,SAASzvG,KAAK0zG,aACpBp+F,EAAM45F,WAAWlvG,KAAKwiF,=
OACtBltE,EAAM45F,WAAWlvG,KAAK8oG,YACtBxzF,EAAMk6F,cAAcxvG,KAAK2zG,SACzBr+=
F,EAAMk6F,cAAcxvG,KAAK4zG,UACzBt+F,EAAM45F,WAAWlvG,KAAKotG,MACtB93F,EAAM4=
5F,WAAWlvG,KAAKqtG,MACtB/3F,EAAM45F,WAAWlvG,KAAKstG,MACtBh4F,EAAM45F,WAAW=
lvG,KAAKutG,MACtBj4F,EAAM45F,WAAWlvG,KAAK6zG,UACtBv+F,EAAM45F,WAAWlvG,KAA=
K8zG,eACtBx+F,EAAM45F,WAAWlvG,KAAK+zG,mBACtBz+F,EAAM45F,WAAWhC,EAAK/oG,MA=
CtBmR,EAAM45F,WAAWlvG,KAAKi0G,iBACf3+F,EAAMpO,MAGR4kG,WAENyF,GAEH/xG,EAAO=
D,QAAUusG,YAEhBnsG,KAAKK,OAKH,SAASR,EAAQD,EAASH,IAG/B,WACE,GAAI80G,GAAWzI=
,UAAWE,EAAM4F,EAC9Bz5C,KAAe12C,eACf22C,EAAY,SAASC,EAAOzyD,GAAiG,QAAS0yD,K=
AASj4D,KAAKgF,YAAcgzD,EAA5H,IAAK,GAAIr0C,KAAOpe,GAAcuyD,EAAUn4D,KAAK4F,EA=
AQoe,KAAMq0C,EAAMr0C,GAAOpe,EAAOoe,GAA2J,OAArGs0C,GAAKl3D,UAAYwE,EAAOxE,U=
AAWi3D,EAAMj3D,UAAY,GAAIk3D,GAAQD,EAAME,UAAY3yD,EAAOxE,UAAkBi3D,EAEzRu5C,=
GAAQnyG,EAAoB,IAE5BusG,EAAOvsG,EAAoB,IAE3BqsG,UAAY,SAAUtzC,GAGpB,QAASszC,=
aACP,MAAOA,WAAUvzC,UAAUlzD,YAAY8F,MAAM9K,KAAM2F,WAqCrD,MAxCAoyD,GAAU0zC,U=
AAWtzC,GAMrBszC,UAAU1qG,UAAU6mB,IAAM,OAE1B6jF,UAAU1qG,UAAUqiG,MAAQ,SAASl8=
F,GACnC,GAAIy+D,GAAO3/D,EAAG2qG,EAAY92C,CAM1B,KALA3yD,EAAKqG,IAAMvN,KAAK2=
I,OAChB3I,KAAKurD,QAAUrkD,EAAKynG,aACpBgC,EAAazpG,EAAKynG,aAClB3uG,KAAK+w=
G,UACL/wG,KAAK8pG,QAAU,KACV9jG,EAAI6zD,EAAK,EAAQ82C,GAAL,EAAuBA,EAAL92C,E=
AAkBA,EAAK82C,EAAY3qG,EAAS2qG,GAAL,IAAoB92C,IAAOA,EACnG8L,EAAQ,GAAIuuC,GA=
AUhtG,EAAMlH,KAAK2I,QACjC3I,KAAK+wG,OAAOnvG,KAAK+jE,GACbA,EAAMiD,WACY,MAA=
hB5oE,KAAK8pG,UACP9pG,KAAK8pG,QAAUnkC,EAIrB,QAAO,GAGT8lC,UAAUv4F,OAAS,SAA=
SihG,EAASjuG,GACnC,GAAI5E,GAAQgU,CASZ,OARgB,OAAZpP,IACFA,EAAW,YAEb5E,EAAS=
4yG,EAAUhhG,OAAOihG,EAASjuG,GACnCoP,EAAQ,GAAIq2F,GACZr2F,EAAMs5F,YAAY,GAC=
lBt5F,EAAMs5F,YAAY,GAClBttG,EAAOgU,MAAQA,EAAMpO,KAAKrF,OAAOP,EAAO8yG,UACj=
C9yG,GAGFmqG,WAEN8F,GAEH2C,EAAY,WACV,QAASA,GAAUhtG,EAAMyB,GACvB,GAAIqJ,GA=
AMk1B,EAAOmtE,EAASC,EAASC,EAAUvuG,EAAGwuG,EAASC,EAAet2F,EAAOu2F,EAAYC,EAA=
UC,EAAY1sG,EAAO2sG,EAAWlpE,EAAMkuB,EAAIsP,EAAI2rC,EAAIh7C,CAWrJ,QAVA95D,K=
AAK4xG,WAAa1qG,EAAKynG,aACvB3uG,KAAK6xG,WAAa3qG,EAAK+nG,YACvBjvG,KAAK2I,O=
AASA,EAASzB,EAAKwlG,UAC5BgI,EAAaxtG,EAAKqG,IAClBrG,EAAKqG,IAAMvN,KAAK2I,O=
AChB3I,KAAKwrF,OAAStkF,EAAKynG,aACnB3uG,KAAKsF,OAAS4B,EAAKynG,aACnB3uG,KA=
AK+0G,SAAW7tG,EAAKynG,aACrB3uG,KAAK4oE,UAAiC,IAApB5oE,KAAK4xG,YAAwC,IAApB=
5xG,KAAK6xG,YAAoC,IAAhB7xG,KAAKwrF,QAAqC,IAApBxrF,KAAK4xG,YAAoC,IAAhB5xG,=
KAAKwrF,OACxHxrF,KAAKytG,WACGztG,KAAKwrF,QACX,IAAK,GACH,IAAKxlF,EAAI6zD,E=
AAK,EAAQ,IAALA,EAAU7zD,IAAM6zD,EAC/B75D,KAAKytG,QAAQznG,GAAKkB,EAAK0mG,UA=
EzB,MACF,KAAK,GA8CH,IA7CAgH,EAAa1tG,EAAKynG,aAClBgG,EAAWC,EAAa,EACxB1tG,E=
AAKqG,KAAO,EACZ8mG,EAAU,WACR,GAAIlrC,GAAI9P,CAER,KADAA,KACKrzD,EAAImjE,EA=
AK,EAAQwrC,GAAL,EAAqBA,EAALxrC,EAAgBA,EAAKwrC,EAAU3uG,EAAS2uG,GAAL,IAAkBx=
rC,IAAOA,EAC3F9P,EAASz3D,KAAKsF,EAAKynG,aAErB,OAAOt1C,MAETnyD,EAAKqG,KAAO=
,EACZsnG,EAAY,WACV,GAAI1rC,GAAI9P,CAER,KADAA,KACKrzD,EAAImjE,EAAK,EAAQwrC=
,GAAL,EAAqBA,EAALxrC,EAAgBA,EAAKwrC,EAAU3uG,EAAS2uG,GAAL,IAAkBxrC,IAAOA,E=
AC3F9P,EAASz3D,KAAKsF,EAAKynG,aAErB,OAAOt1C,MAETm7C,EAAU,WACR,GAAIrrC,GAA=
I9P,CAER,KADAA,KACKrzD,EAAImjE,EAAK,EAAQwrC,GAAL,EAAqBA,EAALxrC,EAAgBA,EA=
AKwrC,EAAU3uG,EAAS2uG,GAAL,IAAkBxrC,IAAOA,EAC3F9P,EAASz3D,KAAKsF,EAAKynG,=
aAErB,OAAOt1C,MAETo7C,EAAgB,WACd,GAAItrC,GAAI9P,CAER,KADAA,KACKrzD,EAAImj=
E,EAAK,EAAQwrC,GAAL,EAAqBA,EAALxrC,EAAgBA,EAAKwrC,EAAU3uG,EAAS2uG,GAAL,IA=
AkBxrC,IAAOA,EAC3F9P,EAASz3D,KAAKsF,EAAKynG,aAErB,OAAOt1C,MAETnyB,GAASlnC=
,KAAKsF,OAAS4B,EAAKqG,IAAMvN,KAAK2I,QAAU,EACjD4rG,EAAW,WACT,GAAIprC,GAAI9=
P,CAER,KADAA,KACKrzD,EAAImjE,EAAK,EAAQjiC,GAAL,EAAkBA,EAALiiC,EAAaA,EAAKj=
iC,EAAOlhC,EAASkhC,GAAL,IAAeiiC,IAAOA,EAC/E9P,EAASz3D,KAAKsF,EAAKynG,aAEr=
B,OAAOt1C,MAEJrzD,EAAImjE,EAAK,EAAGrP,EAAOu6C,EAAQ/uG,OAAaw0D,EAALqP,EAAW=
njE,IAAMmjE,EAGvD,IAFAx9B,EAAO0oE,EAAQruG,GACfkC,EAAQ2sG,EAAU7uG,GACbgM,E=
AAO8iG,EAAK5sG,EAAgByjC,GAATzjC,EAAsByjC,GAANmpE,EAAaA,GAAMnpE,EAAM35B,EA=
AgB25B,GAATzjC,IAAkB4sG,IAAOA,EACtE,IAArBL,EAAczuG,GAChBsuG,EAAUtiG,EAAOw=
iG,EAAQxuG,IAEzBmY,EAAQs2F,EAAczuG,GAAK,GAAKgM,EAAO9J,IAAUysG,EAAW3uG,GAC=
5DsuG,EAAUC,EAASp2F,IAAU,EACb,IAAZm2F,IACFA,GAAWE,EAAQxuG,KAGvBhG,KAAKytG=
,QAAQz7F,GAAkB,MAAVsiG,EAI7BptG,EAAKqG,IAAMmnG,EAkJb,MA/IAR,GAAUhhG,OAAS,=
SAASihG,EAASjuG,GACnC,GAAI8uG,GAAShjG,EAAMy7F,EAAShgC,EAAOwnC,EAAOC,EAAQC=
,EAAMd,EAASe,EAAUvE,EAAewE,EAAUrvG,EAAGvG,EAAIutB,EAASV,EAAM6P,EAAKm5E,EA=
AQ3sG,EAAQ4sG,EAAKC,EAAc1E,EAAYxvG,EAAQsvG,EAAa+D,EAAUC,EAAYC,EAAWY,EAAYC=
,EAAYtB,EAAUv6C,EAAIsP,EAAI2rC,EAAIa,EAAI77C,EAAM87C,EAAOC,EAAOC,EAAOC,EA=
AOC,EAAOC,EAAOC,EAAOC,EAAIC,EAAIhS,EAAOiS,EAAIC,EAAIC,CAKpW,QAJAnC,EAAW,G=
AAIzI,GACfl+B,EAAQn5D,OAAO+R,KAAK8tF,GAASxmF,KAAK,SAASzgB,EAAGF,GAC5C,MAA=
OE,GAAIF,IAEL9G,GACN,IAAK,WAcH,IAbAzG,EAAK,EACLutB,EAAU,WACR,GAAI6sC,GAAI=
R,CAER,KADAA,KACKrzD,EAAI6zD,EAAK,EAAQ,IAALA,EAAU7zD,IAAM6zD,EAC/BR,EAASz=
3D,KAAK,EAEhB,OAAOy3D,MAETl9B,GACEwW,EAAG,GAEL86D,KACK5zC,EAAK,EAAGC,EAAO=
2T,EAAMnoE,OAAaw0D,EAALD,EAAWA,IAC3C7nD,EAAOy7D,EAAM5T,GACqB,MAA9B19B,EAA=
IioE,EAAQ+P,EAAQniG,MACtBmqB,EAAIioE,KAAW3kG,GAEjBguG,EAAQz7F,IACNujG,IAA=
KpB,EAAQniG,GACbwkG,MAAOr6E,EAAIg4E,EAAQniG,KAErBgb,EAAQhb,GAAQmqB,EAAIg4=
E,EAAQniG,GAS9B,OAPAoiG,GAASxF,YAAY,GACrBwF,EAASxF,YAAY,GACrBwF,EAAS7F,YA=
AY,IACrB6F,EAASxF,YAAY,GACrBwF,EAASxF,YAAY,KACrBwF,EAASxF,YAAY,GACrBwF,EA=
ASjuG,MAAM6mB,GACR1rB,GACL0zG,QAASvH,EACT2G,SAAUA,EAASltG,KACnBuvG,WAAYh3=
G,EAAK,EAErB,KAAK,UAOH,IANAg2G,KACAL,KACAE,EAAS,EACTn5E,KACA64E,KACA1oF,E=
AAO6oF,EAAO,KACThsC,EAAK,EAAGysC,EAAQnoC,EAAMnoE,OAAaswG,EAALzsC,EAAYA,IA=
C7Cn3D,EAAOy7D,EAAMtE,GACbosC,EAAMpB,EAAQniG,GACE,MAAZmqB,EAAIo5E,KACNp5E=
,EAAIo5E,KAASD,GAEfN,EAAQhjG,IACNujG,IAAKA,EACLiB,MAAOr6E,EAAIo5E,IAEbN,E=
AAQ94E,EAAIo5E,GAAOvjG,GACN,MAARsa,GAAiB2oF,IAAUE,KAC1B7oF,GACF8oF,EAASxz=
G,KAAK0qB,GAEhBmpF,EAAW7zG,KAAKoQ,GAChBmjG,EAAOF,GAET3oF,EAAOta,CAeT,KAbI=
sa,GACF8oF,EAASxzG,KAAK0qB,GAEhB8oF,EAASxzG,KAAK,OACd6zG,EAAW7zG,KAAK,OAC=
hB+yG,EAAWc,EAAWnwG,OACtBsvG,EAAwB,EAAXD,EACb/D,EAAc,EAAI7mG,KAAKuF,IAAIv=
F,KAAKqK,IAAIugG,GAAY5qG,KAAKsK,IAAK,GAC1Dw8F,EAAgB9mG,KAAKqK,IAAIw8F,EAA=
c,GAAK7mG,KAAKsK,IACjDy8F,EAAa,EAAI6D,EAAW/D,EAC5BsE,KACAM,KACAH,KACKrvG,=
EAAI8uG,EAAK,EAAGe,EAAQJ,EAAWnwG,OAAauwG,EAALf,EAAY9uG,IAAM8uG,EAAI,CAGhE=
,GAFAD,EAAYY,EAAWzvG,GACvBquG,EAAUe,EAASpvG,GACD,QAAd6uG,EAAsB,CACxBK,EAA=
OtzG,KAAK,GACZ4zG,EAAa5zG,KAAK,EAClB,OAGF,GADA8zG,EAAaV,EAAQH,GAAW,OAC5BA=
,EAAYa,GAAc,MAG5B,IAFAR,EAAOtzG,KAAK,GACZ4zG,EAAa5zG,KAAK,GAAKyzG,EAAS/vG=
,OAASqvG,EAAW3uG,IAC/CgM,EAAO2jG,EAAKd,EAAwBR,GAAbQ,EAA6BR,GAANsB,EAAgBA,=
GAAMtB,EAASriG,EAAoBqiG,GAAbQ,IAAyBc,IAAOA,EACvHN,EAASzzG,KAAKozG,EAAQhjG=
,GAAM,YAG9BkjG,GAAOtzG,KAAK8zG,EAAab,GACzBW,EAAa5zG,KAAK,GAatB,IAVAwyG,EA=
ASxF,YAAY,GACrBwF,EAASxF,YAAY,GACrBwF,EAAS7F,YAAY,IACrB6F,EAASxF,YAAY,GAC=
rBwF,EAASxF,YAAY,GAAgB,EAAX+F,EAAiC,EAAlBU,EAAS/vG,QAClD8uG,EAASxF,YAAY,G=
ACrBwF,EAASxF,YAAYgG,GACrBR,EAASxF,YAAYgC,GACrBwD,EAASxF,YAAYiC,GACrBuD,E=
AASxF,YAAYkC,GAChBqF,EAAK,EAAGL,EAAQV,EAAS9vG,OAAawwG,EAALK,EAAYA,IAChDnk=
G,EAAOojG,EAASe,GAChB/B,EAASxF,YAAY58F,EAGvB,KADAoiG,EAASxF,YAAY,GAChBwH,=
EAAK,EAAGL,EAAQN,EAAWnwG,OAAaywG,EAALK,EAAYA,IAClDpkG,EAAOyjG,EAAWW,GAClB=
hC,EAASxF,YAAY58F,EAEvB,KAAKqkG,EAAK,EAAGL,EAAQd,EAAO5vG,OAAa0wG,EAALK,EA=
AYA,IAC9CpB,EAAQC,EAAOmB,GACfjC,EAASxF,YAAYqG,EAEvB,KAAKqB,EAAK,EAAGL,EAA=
QT,EAAalwG,OAAa2wG,EAALK,EAAYA,IACpD3tG,EAAS6sG,EAAac,GACtBlC,EAASxF,YAAY=
jmG,EAEvB,KAAK4tG,EAAK,EAAGL,EAAQb,EAAS/vG,OAAa4wG,EAALK,EAAYA,IAChD92G,E=
AAK41G,EAASkB,GACdnC,EAASxF,YAAYnvG,EAEvB,OAAO6B,IACL0zG,QAASA,EACTZ,SAAU=
A,EAASltG,KACnBuvG,WAAYnB,EAAS,KAKtBpB,KAIT10G,EAAOD,QAAUksG,YAEhB9rG,KAA=
KK,OAKH,SAASR,EAAQD,EAASH,IAG/B,WACE,GAAIusG,GAAMK,UAAWuF,EACnBz5C,KAAe12=
C,eACf22C,EAAY,SAASC,EAAOzyD,GAAiG,QAAS0yD,KAASj4D,KAAKgF,YAAcgzD,EAA5H,I=
AAK,GAAIr0C,KAAOpe,GAAcuyD,EAAUn4D,KAAK4F,EAAQoe,KAAMq0C,EAAMr0C,GAAOpe,E=
AAOoe,GAA2J,OAArGs0C,GAAKl3D,UAAYwE,EAAOxE,UAAWi3D,EAAMj3D,UAAY,GAAIk3D,G=
AAQD,EAAME,UAAY3yD,EAAOxE,UAAkBi3D,EAEzRu5C,GAAQnyG,EAAoB,IAE5BusG,EAAOvs=
G,EAAoB,IAE3B4sG,UAAY,SAAU7zC,GAGpB,QAAS6zC,aACP,MAAOA,WAAU9zC,UAAUlzD,YA=
AY8F,MAAM9K,KAAM2F,WAiErD,MApEAoyD,GAAUi0C,UAAW7zC,GAMrB6zC,UAAUjrG,UAAU6=
mB,IAAM,OAE1BokF,UAAUjrG,UAAUqiG,MAAQ,SAASl8F,GACnC,GAAIlB,GAAGsmB,EAAMoq=
F,EAAU92G,EAAGi6D,EAAIsP,EAAI/Q,EAAMiB,CAGxC,KAFAnyD,EAAKqG,IAAMvN,KAAK2I=
,OAChB3I,KAAK22G,WACA3wG,EAAI6zD,EAAK,EAAGzB,EAAOp4D,KAAKmzG,KAAKpG,KAAK6=
J,gBAAsBx+C,GAAL,EAAiBA,EAALyB,EAAYA,EAAKzB,EAAMpyD,EAASoyD,GAAL,IAAcyB,I=
AAOA,EAClH75D,KAAK22G,QAAQ/0G,MACX+rG,QAASzmG,EAAKynG,aACdkI,IAAK3vG,EAAK=
2nG,aAwBd,KArBA6H,EAAW12G,KAAKmzG,KAAKnG,KAAK8J,UAAY92G,KAAKmzG,KAAKpG,KA=
AK6J,gBACrD52G,KAAK+2G,iBAAmB,WACtB,GAAI5tC,GAAI9P,CAER,KADAA,KACKrzD,EAA=
ImjE,EAAK,EAAQutC,GAAL,EAAqBA,EAALvtC,EAAgBA,EAAKutC,EAAU1wG,EAAS0wG,GAAL=
,IAAkBvtC,IAAOA,EAC3F9P,EAASz3D,KAAKsF,EAAK2nG,YAErB,OAAOx1C,MAETr5D,KAAK=
uV,OAAS,WACZ,GAAI4zD,GAAIrP,EAAMzB,EAAOgB,CAGrB,KAFAhB,EAAQr4D,KAAK22G,QA=
Cbt9C,KACK8P,EAAK,EAAGrP,EAAOzB,EAAM/yD,OAAaw0D,EAALqP,EAAWA,IAC3CvpE,EAA=
Iy4D,EAAM8Q,GACV9P,EAASz3D,KAAKhC,EAAE+tG,QAElB,OAAOt0C,IACN15D,KAAKK,MAC=
RssB,EAAOtsB,KAAKuV,OAAOvV,KAAKuV,OAAOjQ,OAAS,GACxC+zD,KACKrzD,EAAImjE,EA=
AK,EAAQutC,GAAL,EAAqBA,EAALvtC,EAAgBA,EAAKutC,EAAU1wG,EAAS0wG,GAAL,IAAkBv=
tC,IAAOA,EAC3F9P,EAASz3D,KAAK5B,KAAKuV,OAAO3T,KAAK0qB,GAEjC,OAAO+sC,IAGT2=
yC,UAAUjrG,UAAU2sG,SAAW,SAASjuG,GACtC,GAAIk3G,EACJ,OAAIl3G,KAAMO,MAAK22G,=
QACN32G,KAAK22G,QAAQl3G,GAEfk3G,GACLhJ,QAAS3tG,KAAK22G,QAAQ32G,KAAK22G,QA=
AQrxG,OAAS,GAAGqoG,QAC/CkJ,IAAK72G,KAAK+2G,iBAAiBt3G,EAAKO,KAAK22G,QAAQrx=
G,UAIjD0mG,UAAUjrG,UAAUmS,OAAS,SAAS8jG,GACpC,GAAIv3G,GAAIw3G,EAAQ3hG,EAAO=
ukD,EAAIC,CAE3B,KADAxkD,EAAQ,GAAIq2F,GACP9xC,EAAK,EAAGC,EAAOk9C,EAAQ1xG,O=
AAaw0D,EAALD,EAAWA,IAC7Cp6D,EAAKu3G,EAAQn9C,GACbo9C,EAASj3G,KAAK0tG,SAASj=
uG,GACvB6V,EAAMs5F,YAAYqI,EAAOtJ,SACzBr4F,EAAMs5F,YAAYqI,EAAOJ,IAE3B,OAAO=
vhG,GAAMpO,MAGR8kG,WAENuF,GAEH/xG,EAAOD,QAAUysG,YAEhBrsG,KAAKK,OAKH,SAASR=
,EAAQD,EAASH,IAG/B,WACE,GAAIusG,GAAMI,UAAWwF,EACnBz5C,KAAe12C,eACf22C,EAA=
Y,SAASC,EAAOzyD,GAAiG,QAAS0yD,KAASj4D,KAAKgF,YAAcgzD,EAA5H,IAAK,GAAIr0C,K=
AAOpe,GAAcuyD,EAAUn4D,KAAK4F,EAAQoe,KAAMq0C,EAAMr0C,GAAOpe,EAAOoe,GAA2J,O=
AArGs0C,GAAKl3D,UAAYwE,EAAOxE,UAAWi3D,EAAMj3D,UAAY,GAAIk3D,GAAQD,EAAME,UA=
AY3yD,EAAOxE,UAAkBi3D,EAEzRu5C,GAAQnyG,EAAoB,IAE5BusG,EAAOvsG,EAAoB,IAE3B=
2sG,UAAY,SAAU5zC,GAGpB,QAAS4zC,aACP,MAAOA,WAAU7zC,UAAUlzD,YAAY8F,MAAM9K,K=
AAM2F,WA6CrD,MAhDAoyD,GAAUg0C,UAAW5zC,GAMrB4zC,UAAUhrG,UAAU6mB,IAAM,OAE1B=
mkF,UAAUhrG,UAAUqiG,MAAQ,SAASl8F,GAenC,MAdAA,GAAKqG,IAAMvN,KAAK2I,OAChB3I=
,KAAKurD,QAAUrkD,EAAKwlG,UACpB1sG,KAAK41C,SAAW1uC,EAAK+nG,YACrBjvG,KAAK61=
C,SAAW3uC,EAAK+nG,YACrBjvG,KAAKqpG,QAAUniG,EAAK+nG,YACpBjvG,KAAKk3G,gBAAk=
BhwG,EAAK+nG,YAC5BjvG,KAAKm3G,mBAAqBjwG,EAAK+nG,YAC/BjvG,KAAKo3G,oBAAsBlw=
G,EAAK+nG,YAChCjvG,KAAKq3G,WAAanwG,EAAK+nG,YACvBjvG,KAAKs3G,eAAiBpwG,EAAK=
+nG,YAC3BjvG,KAAKu3G,cAAgBrwG,EAAK+nG,YAC1BjvG,KAAKw3G,YAActwG,EAAK+nG,YA=
CxB/nG,EAAKqG,KAAO,EACZvN,KAAKy3G,iBAAmBvwG,EAAK+nG,YACtBjvG,KAAK42G,gBAA=
kB1vG,EAAKynG,cAGrC5C,UAAUhrG,UAAUmS,OAAS,SAASwkG,GACpC,GAAI1xG,GAAGsP,EA=
AOukD,EAAIzB,CAalB,KAZA9iD,EAAQ,GAAIq2F,GACZr2F,EAAMm6F,SAASzvG,KAAKurD,S=
ACpBj2C,EAAM45F,WAAWlvG,KAAK41C,UACtBtgC,EAAM45F,WAAWlvG,KAAK61C,UACtBvgC=
,EAAM45F,WAAWlvG,KAAKqpG,SACtB/zF,EAAM45F,WAAWlvG,KAAKk3G,iBACtB5hG,EAAM4=
5F,WAAWlvG,KAAKm3G,oBACtB7hG,EAAM45F,WAAWlvG,KAAKo3G,qBACtB9hG,EAAM45F,WA=
AWlvG,KAAKq3G,YACtB/hG,EAAM45F,WAAWlvG,KAAKs3G,gBACtBhiG,EAAM45F,WAAWlvG,=
KAAKu3G,eACtBjiG,EAAM45F,WAAWlvG,KAAKw3G,aACjBxxG,EAAI6zD,EAAK,EAAGzB,EAA=
O,EAAYA,GAAL,EAAiBA,EAALyB,EAAYA,EAAKzB,EAAMpyD,EAASoyD,GAAL,IAAcyB,IAAOA=
,EACzFvkD,EAAMu4F,UAAU,EAIlB,OAFAv4F,GAAM45F,WAAWlvG,KAAKy3G,kBACtBniG,EA=
AMs5F,YAAY8I,EAAIpyG,QACfgQ,EAAMpO,MAGR6kG,WAENwF,GAEH/xG,EAAOD,QAAUwsG,Y=
AEhBpsG,KAAKK,OAKH,SAASR,EAAQD,EAASH,IAG/B,WACE,GAAIusG,GAAMO,UAAWqF,EACn=
Bz5C,KAAe12C,eACf22C,EAAY,SAASC,EAAOzyD,GAAiG,QAAS0yD,KAASj4D,KAAKgF,YAAc=
gzD,EAA5H,IAAK,GAAIr0C,KAAOpe,GAAcuyD,EAAUn4D,KAAK4F,EAAQoe,KAAMq0C,EAAMr=
0C,GAAOpe,EAAOoe,GAA2J,OAArGs0C,GAAKl3D,UAAYwE,EAAOxE,UAAWi3D,EAAMj3D,UAA=
Y,GAAIk3D,GAAQD,EAAME,UAAY3yD,EAAOxE,UAAkBi3D,EAEzRu5C,GAAQnyG,EAAoB,IAE5=
BusG,EAAOvsG,EAAoB,IAE3B8sG,UAAY,SAAU/zC,GAGpB,QAAS+zC,aACP,MAAOA,WAAUh0C=
,UAAUlzD,YAAY8F,MAAM9K,KAAM2F,WA6CrD,MAhDAoyD,GAAUm0C,UAAW/zC,GAMrB+zC,UA=
AUnrG,UAAU6mB,IAAM,OAE1BskF,UAAUnrG,UAAUqiG,MAAQ,SAASl8F,GAgBnC,MAfAA,GAA=
KqG,IAAMvN,KAAK2I,OAChB3I,KAAKurD,QAAUrkD,EAAKwlG,UACpB1sG,KAAK82G,UAAY5v=
G,EAAKynG,aACtB3uG,KAAK23G,UAAYzwG,EAAKynG,aACtB3uG,KAAK43G,YAAc1wG,EAAKy=
nG,aACxB3uG,KAAK63G,mBAAqB3wG,EAAKynG,aAC/B3uG,KAAK83G,qBAAuB5wG,EAAKynG,=
aACjC3uG,KAAK+3G,SAAW7wG,EAAKynG,aACrB3uG,KAAKg4G,kBAAoB9wG,EAAKynG,aAC9B=
3uG,KAAKi4G,WAAa/wG,EAAKynG,aACvB3uG,KAAKk4G,gBAAkBhxG,EAAKynG,aAC5B3uG,K=
AAKm4G,mBAAqBjxG,EAAKynG,aAC/B3uG,KAAKo4G,iBAAmBlxG,EAAKynG,aAC7B3uG,KAAK=
q4G,sBAAwBnxG,EAAKynG,aAClC3uG,KAAKs4G,qBAAuBpxG,EAAKynG,aAC1B3uG,KAAKu4G=
,kBAAoBrxG,EAAKynG,cAGvCzC,UAAUnrG,UAAUmS,OAAS,SAASwkG,GACpC,GAAIpiG,EAiB=
J,OAhBAA,GAAQ,GAAIq2F,GACZr2F,EAAMm6F,SAASzvG,KAAKurD,SACpBj2C,EAAMs5F,YA=
AY8I,EAAIpyG,QACtBgQ,EAAMs5F,YAAY5uG,KAAK23G,WACvBriG,EAAMs5F,YAAY5uG,KAA=
K43G,aACvBtiG,EAAMs5F,YAAY5uG,KAAK63G,oBACvBviG,EAAMs5F,YAAY5uG,KAAK83G,s=
BACvBxiG,EAAMs5F,YAAY5uG,KAAK+3G,UACvBziG,EAAMs5F,YAAY5uG,KAAKg4G,mBACvB1=
iG,EAAMs5F,YAAY5uG,KAAKi4G,YACvB3iG,EAAMs5F,YAAY5uG,KAAKk4G,iBACvB5iG,EAA=
Ms5F,YAAY5uG,KAAKm4G,oBACvB7iG,EAAMs5F,YAAY5uG,KAAKo4G,kBACvB9iG,EAAMs5F,=
YAAY5uG,KAAKq4G,uBACvB/iG,EAAMs5F,YAAY5uG,KAAKs4G,sBACvBhjG,EAAMs5F,YAAY5=
uG,KAAKu4G,mBAChBjjG,EAAMpO,MAGRglG,WAENqF,GAEH/xG,EAAOD,QAAU2sG,YAEhBvsG=
,KAAKK,OAKH,SAASR,EAAQD,EAASH,IAG/B,WACE,GAAIusG,GAAMU,UAAWkF,EACnBz5C,KA=
Ae12C,eACf22C,EAAY,SAASC,EAAOzyD,GAAiG,QAAS0yD,KAASj4D,KAAKgF,YAAcgzD,EAA=
5H,IAAK,GAAIr0C,KAAOpe,GAAcuyD,EAAUn4D,KAAK4F,EAAQoe,KAAMq0C,EAAMr0C,GAAO=
pe,EAAOoe,GAA2J,OAArGs0C,GAAKl3D,UAAYwE,EAAOxE,UAAWi3D,EAAMj3D,UAAY,GAAIk=
3D,GAAQD,EAAME,UAAY3yD,EAAOxE,UAAkBi3D,EAEzRu5C,GAAQnyG,EAAoB,IAE5BusG,EA=
AOvsG,EAAoB,IAE3BitG,UAAY,SAAUl0C,GAKpB,QAASk0C,aACP,MAAOA,WAAUn0C,UAAUlz=
D,YAAY8F,MAAM9K,KAAM2F,WALrD,GAAI6yG,EAsHJ,OApHAzgD,GAAUs0C,UAAWl0C,GAMrB=
k0C,UAAUtrG,UAAU6mB,IAAM,OAE1BykF,UAAUtrG,UAAUqiG,MAAQ,SAASl8F,GACnC,GAAI=
lB,GAAGV,EAAQmzG,EAAgB5+C,EAAIR,CAWnC,QAVAnyD,EAAKqG,IAAMvN,KAAK2I,OAChB3=
I,KAAKwrF,OAAStkF,EAAKwlG,UACnB1sG,KAAKopG,YAAcliG,EAAKwlG,UACxB1sG,KAAK0=
4G,kBAAoBxxG,EAAK+nG,YAC9BjvG,KAAK24G,mBAAqBzxG,EAAK+nG,YAC/BjvG,KAAK4pG,=
aAAe1iG,EAAKwlG,UACzB1sG,KAAK44G,aAAe1xG,EAAKwlG,UACzB1sG,KAAK64G,aAAe3xG=
,EAAKwlG,UACzB1sG,KAAK84G,YAAc5xG,EAAKwlG,UACxB1sG,KAAK+4G,YAAc7xG,EAAKwl=
G,UAChB1sG,KAAKwrF,QACX,IAAK,OACH,KACF,KAAK,QAGH,IAFAitB,EAAiBvxG,EAAKynG=
,aACtB3uG,KAAKg5G,kBACAhzG,EAAI6zD,EAAK,EAAQ4+C,GAAL,EAA2BA,EAAL5+C,EAAsB=
A,EAAK4+C,EAAgBzyG,EAASyyG,GAAL,IAAwB5+C,IAAOA,EACnH75D,KAAKg5G,eAAep3G,K=
AAKsF,EAAKynG,aAIhC,KAFA3uG,KAAKstC,SACL+rB,KACOnyD,EAAKqG,IAAMvN,KAAK2I,=
OAAS3I,KAAKsF,QACnCA,EAAS4B,EAAK0mG,WACdv0C,EAASz3D,KAAK5B,KAAKstC,MAAM1r=
C,KAAKsF,EAAKulG,WAAWnnG,IAEhD,OAAO+zD,EAET,KAAK,QAEH,MADAo/C,GAAiBvxG,EA=
AKynG,aACf3uG,KAAKw/C,QAAUt4C,EAAK4I,KAAK2oG,EAClC,KAAK,QACH,KACF,KAAK,QA=
CH,MAAOz4G,MAAKm8B,IAAM,WAChB,GAAIgtC,GAAI/Q,EAAM6gD,CAEd,KADAA,KACKjzG,E=
AAImjE,EAAK,EAAG/Q,EAAOp4D,KAAKmzG,KAAKnG,KAAK8J,UAAgB1+C,GAAL,EAAiBA,EAA=
L+Q,EAAYA,EAAK/Q,EAAMpyD,EAASoyD,GAAL,IAAc+Q,IAAOA,EAC5G8vC,EAAUr3G,KAAKs=
F,EAAKgnG,aAEtB,OAAO+K,IACNt5G,KAAKK,QAIdqsG,UAAUtrG,UAAUm4G,SAAW,SAASlnG=
,GACtC,GAAImM,EACJ,QAAQne,KAAKwrF,QACX,IAAK,OACH,MAAOgtB,GAAkBxmG,IAAS,SA=
CpC,KAAK,QAEH,MADAmM,GAAQne,KAAKg5G,eAAehnG,GACf,KAATmM,EACKq6F,EAAkBr6F,=
GAElBne,KAAKstC,MAAMnvB,EAAQ,MAAQ,SAGtC,KAAK,QACH,MAAOq6F,GAAkBxmG,EAAOhS=
,KAAKw/C,QAAQxtC,KAAU,SACzD,KAAK,QACH,MAAO,SACT,KAAK,QACH,MAAOhS,MAAKm8B,=
IAAInqB,IAAS,QAI/Bq6F,UAAUtrG,UAAUmS,OAAS,SAAS8jG,GACpC,GAAIv3G,GAAI0e,EA=
AO6O,EAAS7pB,EAAU8lG,EAAML,EAAK3iG,EAAQ0rG,EAASr8F,EAAOukD,EAAIsP,EAAI2rC=
,EAAIh7C,EAAM87C,EAAOC,CAC9F,KAAK71G,KAAKkpG,OACR,MAAO,KAGT,IADAN,EAAM5oG=
,KAAK4oG,MACS,SAAhB5oG,KAAKwrF,OACP,MAAOod,EAOT,KALAtzF,EAAQ,GAAIq2F,GAAK=
/C,EAAI9+F,MAAM,EAAG,KAC9BwL,EAAMi5F,YAAY,QAClBj5F,EAAM/H,IAAM,GACZyf,KAC=
A2kF,KACK93C,EAAK,EAAGC,EAAOk9C,EAAQ1xG,OAAaw0D,EAALD,EAAWA,IAC7Cp6D,EAAK=
u3G,EAAQn9C,GACbovC,EAAOjpG,KAAKk5G,SAASz5G,GACrB0D,EAAWq1G,EAAkB3qG,QAAQ=
o7F,GACpB,KAAb9lG,EACF6pB,EAAQprB,KAAKuB,IAEb6pB,EAAQprB,KAAK,IAAM+vG,EAA=
QrsG,QAC3BqsG,EAAQ/vG,KAAKqnG,GAIjB,KADA3zF,EAAMs5F,YAAYt6F,OAAO+R,KAAK2w=
F,GAAS1xG,QAClC6jE,EAAK,EAAGysC,EAAQ5oF,EAAQ1nB,OAAaswG,EAALzsC,EAAYA,IAC=
/ChrD,EAAQ6O,EAAQm8C,GAChB7zD,EAAMs5F,YAAYzwF,EAEpB,KAAK22F,EAAK,EAAGe,EA=
AQlE,EAAQrsG,OAAauwG,EAALf,EAAYA,IAC/C7uG,EAAS0rG,EAAQmD,GACjBx/F,EAAMu4F=
,UAAU5nG,EAAOX,QACvBgQ,EAAMy5F,YAAY9oG,EAEpB,OAAOqP,GAAMpO,MAGfsxG,EAAoB,=
m1DAAm1DliE,MAAM;AAEt2D+1D,WAENkF,GAEH/xG,EAAOD,QAAU8sG,YAEhB1sG,KAAKK,OA=
KH,SAASR,EAAQD,EAASH,IAG/B,WACE,GAAIgtG,UAAUmF,EACZz5C,KAAe12C,eACf22C,EA=
AY,SAASC,EAAOzyD,GAAiG,QAAS0yD,KAASj4D,KAAKgF,YAAcgzD,EAA5H,IAAK,GAAIr0C,=
KAAOpe,GAAcuyD,EAAUn4D,KAAK4F,EAAQoe,KAAMq0C,EAAMr0C,GAAOpe,EAAOoe,GAA2J,=
OAArGs0C,GAAKl3D,UAAYwE,EAAOxE,UAAWi3D,EAAMj3D,UAAY,GAAIk3D,GAAQD,EAAME,U=
AAY3yD,EAAOxE,UAAkBi3D,EAEzRu5C,GAAQnyG,EAAoB,IAE5BgtG,SAAW,SAAUj0C,GAGnB=
,QAASi0C,YACP,MAAOA,UAASl0C,UAAUlzD,YAAY8F,MAAM9K,KAAM2F,WAwEpD,MA3EAoyD,=
GAAUq0C,SAAUj0C,GAMpBi0C,SAASrrG,UAAU6mB,IAAM,OAEzBwkF,SAASrrG,UAAUqiG,MA=
AQ,SAASl8F,GAClC,GAAIlB,EAsCJ,OArCAkB,GAAKqG,IAAMvN,KAAK2I,OAChB3I,KAAKur=
D,QAAUrkD,EAAKynG,aACpB3uG,KAAKm5G,iBAAmBjyG,EAAK+nG,YAC7BjvG,KAAKo5G,YAA=
clyG,EAAKynG,aACxB3uG,KAAKq5G,WAAanyG,EAAKynG,aACvB3uG,KAAKmE,KAAO+C,EAAK=
+nG,YACjBjvG,KAAKs5G,gBAAkBpyG,EAAK+nG,YAC5BjvG,KAAKu5G,gBAAkBryG,EAAK+nG=
,YAC5BjvG,KAAKw5G,kBAAoBtyG,EAAK+nG,YAC9BjvG,KAAKy5G,kBAAoBvyG,EAAK+nG,YA=
C9BjvG,KAAK05G,kBAAoBxyG,EAAK+nG,YAC9BjvG,KAAK25G,kBAAoBzyG,EAAK+nG,YAC9B=
jvG,KAAK45G,oBAAsB1yG,EAAK+nG,YAChCjvG,KAAK65G,oBAAsB3yG,EAAK+nG,YAChCjvG=
,KAAK85G,eAAiB5yG,EAAK+nG,YAC3BjvG,KAAK+5G,mBAAqB7yG,EAAK+nG,YAC/BjvG,KAA=
KypG,YAAcviG,EAAK+nG,YACxBjvG,KAAKg6G,OAAS,WACZ,GAAIngD,GAAIR,CAER,KADAA,=
KACKrzD,EAAI6zD,EAAK,EAAQ,GAALA,EAAS7zD,IAAM6zD,EAC9BR,EAASz3D,KAAKsF,EAA=
K0mG,WAErB,OAAOv0C,MAETr5D,KAAKi6G,UAAY,WACf,GAAIpgD,GAAIR,CAER,KADAA,KAC=
KrzD,EAAI6zD,EAAK,EAAQ,EAALA,EAAQ7zD,IAAM6zD,EAC7BR,EAASz3D,KAAKsF,EAAKwl=
G,UAErB,OAAOrzC,MAETr5D,KAAKk6G,SAAWhzG,EAAKulG,WAAW,GAChCzsG,KAAKm6G,UAA=
YjzG,EAAK+nG,YACtBjvG,KAAKo6G,eAAiBlzG,EAAK+nG,YAC3BjvG,KAAKq6G,cAAgBnzG,=
EAAK+nG,YACtBjvG,KAAKurD,QAAU,IACjBvrD,KAAKs6G,OAASpzG,EAAK+nG,YACnBjvG,K=
AAKu6G,QAAUrzG,EAAK+nG,YACpBjvG,KAAKqpG,QAAUniG,EAAK+nG,YACpBjvG,KAAKw6G,=
UAAYtzG,EAAK+nG,YACtBjvG,KAAKy6G,WAAavzG,EAAK+nG,YACvBjvG,KAAK06G,cAAgB,W=
ACnB,GAAI7gD,GAAIR,CAER,KADAA,KACKrzD,EAAI6zD,EAAK,EAAQ,EAALA,EAAQ7zD,IAA=
M6zD,EAC7BR,EAASz3D,KAAKsF,EAAKwlG,UAErB,OAAOrzC,MAELr5D,KAAKurD,QAAU,IAC=
jBvrD,KAAKwpG,QAAUtiG,EAAK+nG,YACpBjvG,KAAKspG,UAAYpiG,EAAK+nG,YACtBjvG,K=
AAK26G,YAAczzG,EAAK+nG,YACxBjvG,KAAK46G,UAAY1zG,EAAK+nG,YACfjvG,KAAK66G,W=
AAa3zG,EAAK+nG,aAnBlC,QAwBF7C,SAASrrG,UAAUmS,OAAS,WAC1B,MAAOlT,MAAK4oG,OA=
GPwD,UAENmF,GAEH/xG,EAAOD,QAAU6sG,WAEhBzsG,KAAKK,OAKH,SAASR,EAAQD,EAASH,I=
AG/B,WACE,GAAIusG,GAAMM,UAAWsF,EACnBz5C,KAAe12C,eACf22C,EAAY,SAASC,EAAOzy=
D,GAAiG,QAAS0yD,KAASj4D,KAAKgF,YAAcgzD,EAA5H,IAAK,GAAIr0C,KAAOpe,GAAcuyD,=
EAAUn4D,KAAK4F,EAAQoe,KAAMq0C,EAAMr0C,GAAOpe,EAAOoe,GAA2J,OAArGs0C,GAAKl3=
D,UAAYwE,EAAOxE,UAAWi3D,EAAMj3D,UAAY,GAAIk3D,GAAQD,EAAME,UAAY3yD,EAAOxE,U=
AAkBi3D,EAEzRu5C,GAAQnyG,EAAoB,IAE5BusG,EAAOvsG,EAAoB,IAE3B6sG,UAAY,SAAU9=
zC,GAGpB,QAAS8zC,aACP,MAAOA,WAAU/zC,UAAUlzD,YAAY8F,MAAM9K,KAAM2F,WAkErD,M=
ArEAoyD,GAAUk0C,UAAW9zC,GAMrB8zC,UAAUlrG,UAAU6mB,IAAM,OAE1BqkF,UAAUlrG,UA=
AUqiG,MAAQ,SAASl8F,GACnC,GAAIskF,GAAQxlF,CAGZ,OAFAkB,GAAKqG,IAAMvN,KAAK2I=
,OAChB6iF,EAASxrF,KAAKmzG,KAAK/mE,KAAK4nE,iBACT,IAAXxoB,EACKxrF,KAAKw/C,Q=
AAU,WACpB,GAAIqa,GAAIzB,EAAMiB,CAEd,KADAA,KACKrzD,EAAI6zD,EAAK,EAAGzB,EAA=
Op4D,KAAKsF,OAAa8yD,EAALyB,EAAW7zD,EAAI6zD,GAAM,EACxDR,EAASz3D,KAAyB,EAAp=
BsF,EAAKynG,aAErB,OAAOt1C,IACN15D,KAAKK,MAEDA,KAAKw/C,QAAU,WACpB,GAAIqa,G=
AAIzB,EAAMiB,CAEd,KADAA,KACKrzD,EAAI6zD,EAAK,EAAGzB,EAAOp4D,KAAKsF,OAAa8y=
D,EAALyB,EAAW7zD,EAAI6zD,GAAM,EACxDR,EAASz3D,KAAKsF,EAAKgnG,aAErB,OAAO70C=
,IACN15D,KAAKK,OAIZisG,UAAUlrG,UAAU8M,QAAU,SAASpO,GACrC,MAAOO,MAAKw/C,QAA=
Q//C,IAGtBwsG,UAAUlrG,UAAU+5G,SAAW,SAASr7G,GACtC,MAAOO,MAAKw/C,QAAQ//C,EA=
AK,GAAKO,KAAKw/C,QAAQ//C,IAG7CwsG,UAAUlrG,UAAUmS,OAAS,SAASssC,GACpC,GAAIg=
kB,GAAG76D,EAAQoC,EAAKuK,EAAOukD,EAAIsP,EAAI2rC,EAAIh7C,EAAM87C,EAAOC,EAA=
Oz9C,CAE3D,KADA9iD,EAAQ,GAAIq2F,GACP9xC,EAAK,EAAGC,EAAOta,EAAQl6C,OAAaw0D=
,EAALD,EAAWA,IAE7C,GADAlxD,EAAS62C,EAAQqa,GACXlxD,EAAS,MAAf,CAIA,IADAyvD,=
EAAOp4D,KAAKw/C,QACP2pB,EAAK,EAAGysC,EAAQx9C,EAAK9yD,OAAaswG,EAALzsC,EAAY=
A,IAC5C3F,EAAIpL,EAAK+Q,GACT7zD,EAAMi5F,YAAY/qC,EAEpB,OAAOz4D,IACLygF,OAA=
Q,EACRl2E,MAAOA,EAAMpO,MAGjB,IAAK4tG,EAAK,EAAGe,EAAQr2D,EAAQl6C,OAAauwG,E=
AALf,EAAYA,IAC/CtxC,EAAIhkB,EAAQs1D,GACZx/F,EAAMs5F,YAAYprC,EAAI,EAExB,OA=
AOz4D,IACLygF,OAAQ,EACRl2E,MAAOA,EAAMpO,OAIV+kG,WAENsF,GAEH/xG,EAAOD,QAAU=
0sG,YAEhBtsG,KAAKK,OAKH,SAASR,EAAQD,EAASH,IAG/B,WACE,GAAI27G,GAAepP,EAAME=
,UAAWmP,EAAazJ,EAC/Cz5C,KAAe12C,eACf22C,EAAY,SAASC,EAAOzyD,GAAiG,QAAS0yD,=
KAASj4D,KAAKgF,YAAcgzD,EAA5H,IAAK,GAAIr0C,KAAOpe,GAAcuyD,EAAUn4D,KAAK4F,E=
AAQoe,KAAMq0C,EAAMr0C,GAAOpe,EAAOoe,GAA2J,OAArGs0C,GAAKl3D,UAAYwE,EAAOxE,=
UAAWi3D,EAAMj3D,UAAY,GAAIk3D,GAAQD,EAAME,UAAY3yD,EAAOxE,UAAkBi3D,GACvRyoC=
,KAAa32F,KAEfynG,GAAQnyG,EAAoB,IAE5BusG,EAAOvsG,EAAoB,IAE3BysG,UAAY,SAAU1=
zC,GAGpB,QAAS0zC,aACP,MAAOA,WAAU3zC,UAAUlzD,YAAY8F,MAAM9K,KAAM2F,WAuDrD,M=
A1DAoyD,GAAU8zC,UAAW1zC,GAMrB0zC,UAAU9qG,UAAU6mB,IAAM,OAE1BikF,UAAU9qG,UA=
AUqiG,MAAQ,SAASl8F,GACnC,MAAOlH,MAAKskB,UAGdunF,UAAU9qG,UAAUm4G,SAAW,SAAS=
z5G,GACtC,GAAIyH,GAAMiX,EAAO7Y,EAAQ4nG,EAAM+N,EAAkBrS,EAAK0E,EAAMF,EAAMG,=
EAAMF,CACxE,OAAI5tG,KAAMO,MAAKskB,MACNtkB,KAAKskB,MAAM7kB,IAEpBytG,EAAOlt=
G,KAAKmzG,KAAKjG,KACjBhmG,EAAOlH,KAAKmzG,KAAK3G,SACjBruF,EAAQ+uF,EAAKr/F,=
QAAQpO,GACrB6F,EAAS4nG,EAAK4N,SAASr7G,GACR,IAAX6F,EACKtF,KAAKskB,MAAM7kB,=
GAAM,MAE1ByH,EAAKqG,IAAMvN,KAAK2I,OAASwV,EACzByqF,EAAM,GAAI+C,GAAKzkG,EAA=
K4I,KAAKxK,IACzB21G,EAAmBrS,EAAIqG,YACvB7B,EAAOxE,EAAIqG,YACX5B,EAAOzE,EA=
AIqG,YACX3B,EAAO1E,EAAIqG,YACX1B,EAAO3E,EAAIqG,YACc,KAArBgM,EACFj7G,KAAKs=
kB,MAAM7kB,GAAM,GAAIs7G,GAAcnS,EAAKwE,EAAMC,EAAMC,EAAMC,GAE1DvtG,KAAKskB,=
MAAM7kB,GAAM,GAAIu7G,GAAYpS,EAAKqS,EAAkB7N,EAAMC,EAAMC,EAAMC,GAErEvtG,KAA=
KskB,MAAM7kB,MAGpBosG,UAAU9qG,UAAUmS,OAAS,SAASgoG,EAAQlE,EAASmE,GACrD,GAA=
IhR,GAAO1qG,EAAI+/C,EAASlqC,EAAOukD,EAAIC,CAGnC,KAFAxkD,KACAkqC,KACKqa,EA=
AK,EAAGC,EAAOk9C,EAAQ1xG,OAAaw0D,EAALD,EAAWA,IAC7Cp6D,EAAKu3G,EAAQn9C,GAC=
bswC,EAAQ+Q,EAAOz7G,GACf+/C,EAAQ59C,KAAK0T,EAAMhQ,QACf6kG,IACF70F,EAAQA,E=
AAMzT,OAAOsoG,EAAMj3F,OAAOioG,IAItC,OADA37D,GAAQ59C,KAAK0T,EAAMhQ,SAEjBgQ=
,MAAOA,EACPkqC,QAASA,IAINqsD,WAEN0F,GAEHyJ,EAAc,WACZ,QAASA,GAAYpS,EAAKqS,=
EAAkB7N,EAAMC,EAAMC,EAAMC,GAC5DvtG,KAAK4oG,IAAMA,EACX5oG,KAAKi7G,iBAAmBA,=
EACxBj7G,KAAKotG,KAAOA,EACZptG,KAAKqtG,KAAOA,EACZrtG,KAAKstG,KAAOA,EACZtt=
G,KAAKutG,KAAOA,EACZvtG,KAAKo7G,UAAW,EAOlB,MAJAJ,GAAYj6G,UAAUmS,OAAS,WAC7=
B,MAAOlT,MAAK4oG,IAAI1hG,MAGX8zG,KAITD,EAAgB,WAed,QAASA,GAAcnS,EAAKwE,EAA=
MC,EAAMC,EAAMC,GAC5C,GAAIrmG,GAAMs7E,CAUV,KATAxiF,KAAK4oG,IAAMA,EACX5oG,K=
AAKotG,KAAOA,EACZptG,KAAKqtG,KAAOA,EACZrtG,KAAKstG,KAAOA,EACZttG,KAAKutG,=
KAAOA,EACZvtG,KAAKo7G,UAAW,EAChBp7G,KAAKq1G,YACLr1G,KAAKq7G,gBACLn0G,EAAO=
lH,KAAK4oG,MACC,CAIX,GAHApmB,EAAQt7E,EAAK+nG,YACbjvG,KAAKq7G,aAAaz5G,KAAK=
sF,EAAKqG,KAC5BvN,KAAKq1G,SAASzzG,KAAKsF,EAAK+nG,eAClBzsB,EAAQ84B,GACZ,KA=
EE94B,GAAQ+4B,EACVr0G,EAAKqG,KAAO,EAEZrG,EAAKqG,KAAO,EAEVi1E,EAAQg5B,EACV=
t0G,EAAKqG,KAAO,EACHi1E,EAAQi5B,EACjBv0G,EAAKqG,KAAO,EACHi1E,EAAQk5B,IACj=
Bx0G,EAAKqG,KAAO,IA1ClB,GAAIguG,GAAuBD,EAAiBG,EAA0BC,EAAiBF,EAAsBG,CA2D7G=
,OAzDAJ,GAAwB,EAExBG,EAAkB,EAElBJ,EAAkB,GAElBG,EAA2B,GAE3BD,EAAuB,IAEvBG,=
EAAuB,IAmCvBZ,EAAch6G,UAAUmS,OAAS,SAAS8jG,GACxC,GAAIhxG,GAAGvG,EAAI6B,EAA=
Qu4D,EAAIC,EAAM1B,CAG7B,KAFA92D,EAAS,GAAIqqG,GAAKlL,EAAQ9gG,KAAKK,KAAK4oG=
,IAAI1hG,OACxCkxD,EAAOp4D,KAAKq1G,SACPrvG,EAAI6zD,EAAK,EAAGC,EAAO1B,EAAK9=
yD,OAAaw0D,EAALD,EAAW7zD,IAAM6zD,EACpDp6D,EAAK24D,EAAKpyD,GACV1E,EAAOiM,I=
AAMvN,KAAKq7G,aAAar1G,GAC/B1E,EAAO4tG,WAAW8H,EAAQv3G,GAE5B,OAAO6B,GAAO4F,=
MAGT6zG,KAITv7G,EAAOD,QAAUssG,YAEhBlsG,KAAKK,OAKH,SAASR,EAAQD,EAASH,IAG/B=
,WACE,GAAI4nG,GAAS5lG,CAEbA,GAAKhC,EAAoB,IAEzB4nG,EAAU,WAOR,QAASA,GAAQwF,=
GACf,GAAI7pG,GAAGqD,CACPhG,MAAKwsG,SAAWA,EAChBxsG,KAAKwwG,cACLxwG,KAAK47G=
,eACL57G,KAAK67G,iBACL77G,KAAKojG,QACLpjG,KAAK+pG,WAAa,WAChB,GAAIlwC,GAAI=
R,CAER,KADAA,KACKrzD,EAAI6zD,EAAK,EAAS,KAANA,EAAW7zD,IAAM6zD,EAChCR,EAASz=
3D,KAAK5B,KAAK47G,YAAYpT,EAAWxiG,IAE5C,OAAOqzD,IACN15D,KAAKK,MACRA,KAAK+o=
G,KAAO,WACV,GAAIlvC,GAAIC,EAAM1B,EAAMiB,CAGpB,KAFAjB,EAAOp4D,KAAKwwG,WAAq=
B,SAAEl6D,MAAM,OACzC+iB,KACKQ,EAAK,EAAGC,EAAO1B,EAAK9yD,OAAaw0D,EAALD,EAA=
WA,IAC1Cl3D,EAAIy1D,EAAKyB,GACTR,EAASz3D,MAAMe,EAEjB,OAAO02D,IACN15D,KAAK=
K,MACRA,KAAK41C,WAAa51C,KAAKwwG,WAAqB,UAAK,GACjDxwG,KAAK61C,WAAa71C,KAAKw=
wG,WAAsB,WAAK,GAClDxwG,KAAKqpG,QAAWrpG,KAAK+oG,KAAK,GAAK/oG,KAAK+oG,KAAK,=
IAAO/oG,KAAK41C,SAAW51C,KAAK61C,UAjCvE,GAAIimE,GAActT,CA4HlB,OA1HAxB,GAAQ=
5kG,KAAO,SAAS83D,GACtB,MAAO,IAAI8sC,GAAQ5lG,EAAG4mE,aAAa9N,EAAU,UAiC/C8sC=
,EAAQjmG,UAAUqiG,MAAQ,WACxB,GAAIl2F,GAAGyW,EAAKtM,EAAM1J,EAAOvJ,EAAM23G,E=
AASzwG,EAAOuuD,EAAIC,EAAM1B,CAGzD,KAFA2jD,EAAU,GACV3jD,EAAOp4D,KAAKwsG,SA=
ASl2D,MAAM,MACtBujB,EAAK,EAAGC,EAAO1B,EAAK9yD,OAAaw0D,EAALD,EAAWA,IAE1C,G=
ADAxiD,EAAO+gD,EAAKyB,GACRlsD,EAAQ0J,EAAK1J,MAAM,eACrBouG,EAAUpuG,EAAM,OA=
EX,IAAIA,EAAQ0J,EAAK1J,MAAM,aAC5BouG,EAAU,OAGZ,QAAQA,GACN,IAAK,cACHpuG,EA=
AQ0J,EAAK1J,MAAM,iBACnBgW,EAAMhW,EAAM,GACZrC,EAAQqC,EAAM,IACVT,EAAIlN,KAA=
KwwG,WAAW7sF,KACjBjV,MAAMnI,QAAQ2G,KACjBA,EAAIlN,KAAKwwG,WAAW7sF,IAAQzW,I=
AE9BA,EAAEtL,KAAK0J,IAEPtL,KAAKwwG,WAAW7sF,GAAOrY,CAEzB,MACF,KAAK,cACH,IA=
AK,SAASotB,KAAKrhB,GACjB,QAEFjT,GAAOiT,EAAK1J,MAAM,sBAAsB,GACxC3N,KAAK47G=
,YAAYx3G,IAASiT,EAAK1J,MAAM,oBAAoB,KAKjEmuG,GACEE,IAAK,IACLC,KAAM,IACNC,K=
AAM,IACNC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,KAAM,IAC=
NC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,KAAM=
,IACNC,KAAM,IACNC,IAAK,IACLC,KAAM,IACNC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,=
IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,KAGP1W,EAAQjmG,UAAU4nG,W=
AAa,SAASxwF,GACtC,GAAIi+B,GAAMpwC,EAAGC,EAAQ4zD,EAAIzB,CAEzB,KADAnyD,EAAS=
,GACJD,EAAI6zD,EAAK,EAAGzB,EAAOjgD,EAAK7S,OAAa8yD,GAAL,EAAiBA,EAALyB,EAAY=
A,EAAKzB,EAAMpyD,EAASoyD,GAAL,IAAcyB,IAAOA,EAC/FzjB,EAAOj+B,EAAKzL,WAAW1G=
,GACvBowC,EAAO0lE,EAAa1lE,IAASA,EAC7BnwC,GAAU2E,OAAOC,aAAaurC,EAEhC,OAAOn=
wC,IAGT+gG,EAAQjmG,UAAUyqG,iBAAmB,SAASgC,GAC5C,MAAOhF,GAAWsT,EAAatO,IAAcA=
,IAG/CxG,EAAQjmG,UAAUgqG,aAAe,SAASZ,GACxC,MAAOnqG,MAAK47G,YAAYzR,IAG1B3B,=
EAAa,u1GAAu1GlyD,MAAM,OAEn2G0wD,KAITxnG,EAAOD,QAAUynG,IAEhBrnG,KAAKK,OAKH=
,SAASR,EAAQD,EAASH,IAG/B,WACE,GAAIqsG,WAAWxE,EAAQvzB,EACrBiqC,KAAe9vG,SAA=
W,SAASL,GAAQ,IAAK,GAAIxH,GAAI,EAAG2M,EAAI3S,KAAKsF,OAAYqN,EAAJ3M,EAAOA,IA=
AO,GAAIA,IAAKhG,OAAQA,KAAKgG,KAAOwH,EAAM,MAAOxH,EAAK,OAAO,GAElJylG,WAAYrs=
G,EAAoB,IAEhCs0E,EAAQt0E,EAAoB,IAE5B6nG,EAAS,WACP,QAASA,GAAO/uF,GACdlY,KA=
AKkY,KAAOA,EACZlY,KAAKunG,UACLvnG,KAAK49G,YACL59G,KAAKujF,KAAO,GAwId,MArI=
A0jB,GAAOlmG,UAAUy1C,IAAM,SAASg3D,GAC9B,GAAIxnG,GAAG6zD,EAAIzB,CACX,EAAA,=
GAAyB,gBAAdo1C,GAMX,MAAKxtG,MAAK49G,SAASpQ,GAAnB,QACExtG,KAAKunG,OAAOvnG,=
KAAKujF,MAAQiqB,EAClBxtG,KAAK49G,SAASpQ,GAAaxtG,KAAKujF,OAPvC,KAAKv9E,EAA=
I6zD,EAAK,EAAGzB,EAAOo1C,EAAUloG,OAAa8yD,GAAL,EAAiBA,EAALyB,EAAYA,EAAKzB,=
EAAMpyD,EAASoyD,GAAL,IAAcyB,IAAOA,EACpG75D,KAAKw2C,IAAIg3D,EAAU9gG,WAAW1G=
,MAUpCihG,EAAOlmG,UAAU4nG,WAAa,SAASxwF,GACrC,GAAIi+B,GAAMpwC,EAAGC,EAAQ4z=
D,EAAIzB,CAEzB,KADAnyD,EAAS,GACJD,EAAI6zD,EAAK,EAAGzB,EAAOjgD,EAAK7S,OAAa=
8yD,GAAL,EAAiBA,EAALyB,EAAYA,EAAKzB,EAAMpyD,EAASoyD,GAAL,IAAcyB,IAAOA,EAC=
/FzjB,EAAOp2C,KAAK49G,SAASzlG,EAAKzL,WAAW1G,IACrCC,GAAU2E,OAAOC,aAAaurC,E=
AEhC,OAAOnwC,IAGTghG,EAAOlmG,UAAU88G,aAAe,WAC9B,GAAI7G,GAAS8G,EAAOhU,EAAS=
iU,EAAa3lD,CAC1C2lD,GAAc/9G,KAAKkY,KAAK2xF,KAAKkH,OAAO,GAAGtD,QACvCuJ,KAC=
A5+C,EAAOp4D,KAAKunG,MACZ,KAAKuW,IAAS1lD,GACZ0xC,EAAU1xC,EAAK0lD,GACf9G,E=
AAQ8G,GAASC,EAAYjU,EAE/B,OAAOkN,IAGT/P,EAAOlmG,UAAUs0G,SAAW,WAC1B,GAAItqG=
,GAAK+yG,EAAOhU,EAASiU,EAAajwG,EAAKsqD,CAC3C2lD,GAAc/9G,KAAKkY,KAAK2xF,KA=
AKkH,OAAO,GAAGtD,QACvC1iG,GAAO,GACPqtD,EAAOp4D,KAAKunG,MACZ,KAAKuW,IAAS1l=
D,GACZ0xC,EAAU1xC,EAAK0lD,GACfhwG,EAAMiwG,EAAYjU,GACN,MAAPh8F,GAAgB6vG,EA=
AUh+G,KAAKoL,EAAK+C,GAAO,GAC9C/C,EAAInJ,KAAKkM,EAGb,OAAO/C,GAAI4iB,QAGbs5=
E,EAAOlmG,UAAUi9G,UAAY,SAAS3I,GACpC,GAAI4I,GAAe9T,EAAO+Q,EAAQz7G,EAAIo6D,=
EAAIC,EAAM1B,CAEhD,KADA8iD,KACKrhD,EAAK,EAAGC,EAAOu7C,EAAS/vG,OAAaw0D,EAA=
LD,EAAWA,IAC9Cp6D,EAAK41G,EAASx7C,GACdqhD,EAAOz7G,GAAMO,KAAKkY,KAAKi1F,KA=
AK+L,SAASz5G,EAEvCw+G,KACA,KAAKx+G,IAAMy7G,GACT/Q,EAAQ+Q,EAAOz7G,IACF,MAA=
T0qG,EAAgBA,EAAMiR,SAAW,SACnC6C,EAAcr8G,KAAKkJ,MAAMmzG,EAAe9T,EAAMkL,SAGl=
D,IAAI4I,EAAc34G,OAAS,EAAG,CAC5B8yD,EAAOp4D,KAAKg+G,UAAUC,EACtB,KAAKx+G,I=
AAM24D,GACT+xC,EAAQ/xC,EAAK34D,GACby7G,EAAOz7G,GAAM0qG,EAGjB,MAAO+Q,IAGTj=
U,EAAOlmG,UAAUmS,OAAS,WACxB,GAAI22F,GAAM73F,EAAMm7F,EAAM+N,EAAQz7G,EAAIi4=
G,EAAKxK,EAAM9oG,EAAM85G,EAASC,EAAQC,EAAajD,EAASkD,EAAOC,EAAQvN,EAAQ34C,E=
AAMC,CACvHwxC,GAAO4B,UAAUv4F,OAAOlT,KAAK69G,eAAgB,WAC7C3C,EAASl7G,KAAKg+G=
,UAAUh+G,KAAKq1G,YAC7B8F,GACExoE,EAAG,GAELylB,EAAOyxC,EAAKmL,OACZ,KAAKhjG=
,IAAQomD,GACXs/C,EAAMt/C,EAAKpmD,GACXmpG,EAAQzD,EAAInC,KAAOmC,EAAI,MAEzB0=
G,GAAcvU,EAAK4M,UACnB,KAAK4H,IAASnD,GACNmD,IAASlD,KACbA,EAAQkD,GAASD,IAGr=
BF,GAAUxqC,EAAMpzC,OAAO66E,GACvBgD,EAAS7pG,OAAO+R,KAAK63F,GAASvwF,KAAK,SA=
ASzgB,EAAGF,GAC7C,MAAOE,GAAIF,IAEbsxG,EAAS,WACP,GAAIzkD,GAAIC,EAAMT,CAEd,=
KADAA,KACKQ,EAAK,EAAGC,EAAOqkD,EAAO74G,OAAaw0D,EAALD,EAAWA,IAC5Cp6D,EAAK0=
+G,EAAOtkD,GACZR,EAASz3D,KAAKs8G,EAAQz+G,GAExB,OAAO45D,MAET8zC,EAAOntG,KA=
AKkY,KAAKi1F,KAAKj6F,OAAOgoG,EAAQoD,EAAQnD,GAC7CjO,EAAOltG,KAAKkY,KAAKg1F=
,KAAKh6F,OAAOi6F,EAAK3tD,SAClCp7C,EAAOpE,KAAKkY,KAAK9T,KAAK8O,SACtBlT,KAA=
K+1C,eAAiB3xC,EAAK2xC,eAC3B/1C,KAAK6pG,QACLxxC,EAAQwxC,EAAKmL,OACb,KAAKhj=
G,IAAQqmD,GACXq/C,EAAMr/C,EAAMrmD,GACZhS,KAAK6pG,KAAK73F,GAAQ0lG,EAAInC,G=
AgBxB,OAdAxE,IACElH,KAAMA,EAAKv0F,MACX63F,KAAMA,EAAK73F,MACX43F,KAAMA,EAA=
K53F,MACX23F,KAAMjtG,KAAKkY,KAAK+0F,KAAK/5F,OAAOorG,GAC5BvR,KAAM/sG,KAAKk=
Y,KAAK60F,KAAK75F,OAAOorG,GAC5BtR,KAAMhtG,KAAKkY,KAAK80F,KAAK95F,OAAOorG,=
GAC5BrV,KAAMjpG,KAAKkY,KAAK+wF,KAAK/1F,OAAOorG,GAC5Bl6G,KAAMA,EAAKkR,MACX=
82B,KAAMpsC,KAAKkY,KAAKk0B,KAAKl5B,OAAOg6F,IAE1BltG,KAAKkY,KAAKqxF,IAAIL,=
SAChB6H,EAAO,QAAU/wG,KAAKkY,KAAKqxF,IAAIX,OAE1B5oG,KAAKkY,KAAK40F,UAAU55F=
,OAAO69F,IAG7B9J,KAITznG,EAAOD,QAAU0nG,IAEhBtnG,KAAKK,OAKH,SAASR,EAAQD,EA=
ASH,IAG/B,WACE,GAAIm/G,EAEJA,GAAcn/G,EAAoB,IAElCI,EAAOD,SACL05D,SAAU,WAGR=
,MAFAj5D,MAAKmN,EAAI,EACTnN,KAAKoN,EAAI,EACFpN,KAAKw+G,SAAW,GAEzBnV,QAAS,=
SAASmV,GAEhB,MADAx+G,MAAKw+G,SAAWA,EACTx+G,MAETk7C,SAAU,SAASujE,GAKjB,MAJ=
a,OAATA,IACFA,EAAQ,GAEVz+G,KAAKoN,GAAKpN,KAAK6mG,mBAAkB,GAAQ4X,EAAQz+G,KA=
AKw+G,SAC/Cx+G,MAET0+G,OAAQ,SAASD,GAKf,MAJa,OAATA,IACFA,EAAQ,GAEVz+G,KAAK=
oN,GAAKpN,KAAK6mG,mBAAkB,GAAQ4X,EAAQz+G,KAAKw+G,SAC/Cx+G,MAET2+G,MAAO,SAA=
SxmG,EAAMhL,EAAGC,EAAGnM,EAAS29G,GACnC,GAAIvnG,GAAM2Z,EAAS6oC,EAAIC,EAAM1=
B,CAM7B,IALAn3D,EAAUjB,KAAK6+G,aAAa1xG,EAAGC,EAAGnM,GAClCkX,EAAO,GAAKA,EA=
CRlX,EAAQ69G,cACV3mG,EAAOA,EAAK/L,QAAQ,UAAW,MAE7BnL,EAAQgV,MACV+a,EAAUhxB=
,KAAK++G,SACV/tF,IACHA,EAAU,GAAIutF,GAAYv+G,KAAMiB,GAChC+vB,EAAQtvB,GAAG,=
OAAQk9G,IAErB5+G,KAAK++G,SAAW99G,EAAQ+9G,UAAYhuF,EAAU,KAC9ChxB,KAAKi/G,aA=
Aeh+G,EAAQ+9G,UAAY/9G,EAAU,KAClD+vB,EAAQ2N,KAAKxmB,EAAMlX,OAGnB,KADAm3D,E=
AAOjgD,EAAKm+B,MAAM,MACbujB,EAAK,EAAGC,EAAO1B,EAAK9yD,OAAaw0D,EAALD,EAAWA=
,IAC1CxiD,EAAO+gD,EAAKyB,GACZ+kD,EAAavnG,EAAMpW,EAGvB,OAAOjB,OAETmY,KAAM,=
SAASA,EAAMhL,EAAGC,EAAGnM,GACzB,MAAOjB,MAAK2+G,MAAMxmG,EAAMhL,EAAGC,EAAGn=
M,EAASjB,KAAKk/G,MAAMj2E,KAAKjpC,QAEzDk2C,cAAe,SAASjwC,EAAQhF,GAI9B,MAHe,=
OAAXA,IACFA,MAEKjB,KAAKi2C,MAAMC,cAAcjwC,EAAQjG,KAAKymG,YAAcxlG,EAAQk+G,k=
BAAoB,IAAMl5G,EAAOX,OAAS,IAE/G85G,eAAgB,SAASjnG,EAAMlX,GAC7B,GAAIiV,GAAQm=
zF,EAASl8F,EAAGC,CAgBxB,OAfe,OAAXnM,IACFA,MAEFkM,EAAInN,KAAKmN,EAAGC,EAAI=
pN,KAAKoN,EACrBnM,EAAUjB,KAAK6+G,aAAa59G,GAC5BA,EAAQiV,OAAS/N,EAAAA,EACjB=
khG,EAAUpoG,EAAQooG,SAAWrpG,KAAKw+G,UAAY,EAC9Cx+G,KAAK2+G,MAAMxmG,EAAMnY,=
KAAKmN,EAAGnN,KAAKoN,EAAGnM,EAAS,SAAUk4C,GAClD,MAAO,UAAS9hC,EAAMpW,GACpB,=
MAAOk4C,GAAM/rC,GAAK+rC,EAAM0tD,mBAAkB,GAAQwC,IAEnDrpG,OACHkW,EAASlW,KAAK=
oN,EAAIA,EAClBpN,KAAKmN,EAAIA,EACTnN,KAAKoN,EAAIA,EACF8I,GAET5I,KAAM,SAAS=
A,EAAMH,EAAGC,EAAGnM,EAAS+vB,GAClC,GAAIiJ,GAASj0B,EAAGq5G,EAAQC,EAAYxoG,E=
AAO41D,EAAO6yC,EAAQ1lG,CA2D1D,OA1DA5Y,GAAUjB,KAAK6+G,aAAa1xG,EAAGC,EAAGnM=
,GAClC4Y,EAAI9P,KAAKmhC,MAAOlrC,KAAKi2C,MAAML,SAAW,IAAO51C,KAAKymG,UAAa,G=
AC/D4Y,EAASp+G,EAAQu+G,YAAkB,EAAJ3lG,EAC/BylG,EAAar+G,EAAQw+G,cAAoB,EAAJ5=
lG,EACrC6yD,EAAQ,EACR51D,KACAyoG,KACAtlF,EAAU,SAAS3sB,GACjB,GAAItH,GAAGwH=
,EAAMqsD,EAAIC,EAAMT,CAEvB,KADAA,KACKrzD,EAAI6zD,EAAK,EAAGC,EAAOxsD,EAAKh=
I,OAAaw0D,EAALD,EAAW7zD,IAAM6zD,EACpDrsD,EAAOF,EAAKtH,GACR0I,MAAMnI,QAAQi=
H,IAChBk/D,IACAzyC,EAAQzsB,GACR6rD,EAASz3D,KAAK8qE,OAEd51D,EAAMlV,KAAK4L,=
GACX6rD,EAASz3D,KAAK29G,EAAO39G,KAAK8qE,IAG9B,OAAOrT,IAETp/B,EAAQ3sB,GACR=
0jB,EAAU,GAAIutF,GAAYv+G,KAAMiB,GAChC+vB,EAAQtvB,GAAG,OAAQ1B,KAAKk/G,MAAM=
j2E,KAAKjpC,OACnC0sE,EAAQ,EACR1mE,EAAI,EACJgrB,EAAQtvB,GAAG,YAAa,SAAUy3C,=
GAChC,MAAO,YACL,GAAIg8D,GAAMxiG,CAQV,QAPKA,EAAI4sG,EAAOv5G,QAAU0mE,IACxBy=
oC,EAAOmK,GAAc3sG,EAAI+5D,GACzBvzB,EAAMhsC,GAAKgoG,EACXnkF,EAAQ7X,WAAag8F=
,EACrBzoC,EAAQ/5D,GAEVwmC,EAAM+oD,OAAO/oD,EAAMhsC,EAAIkyG,EAASxlG,EAAGs/B=
,EAAM/rC,EAAIyM,EAAKA,EAAI,EAAIA,GACnDs/B,EAAM1nC,SAEdzR,OACHgxB,EAAQtvB,=
GAAG,eAAgB,SAAUy3C,GACnC,MAAO,YACL,GAAI5rC,EAGJ,OAFAA,GAAM8xG,EAASC,GAAc5=
yC,EAAQ,GACrCvzB,EAAMhsC,GAAKI,EACJyjB,EAAQ7X,WAAa5L,IAE7BvN,OACHgxB,EAAQ=
tvB,GAAG,aAAc,SAAUy3C,GACjC,MAAO,YACL,GAAI5rC,EAGJ,OAFAA,GAAM8xG,EAASC,GA=
Ac5yC,EAAQ,GACrCvzB,EAAMhsC,GAAKI,EACJyjB,EAAQ7X,WAAa5L,IAE7BvN,OACHgxB,E=
AAQ2N,KAAK7nB,EAAMlJ,KAAK,MAAO3M,GACxBjB,MAET6+G,aAAc,SAAS1xG,EAAGC,EAAGn=
M,GAC3B,GAAI0iB,GAAK81C,EAAS3rD,EAAKsqD,CAoBvB,IAnBS,MAALjrD,IACFA,MAEa,M=
AAXlM,IACFA,MAEe,gBAANkM,KACTlM,EAAUkM,EACVA,EAAI,MAENlM,EAAU,WACR,GAAIku=
D,GAAGwb,EAAMt8D,CACbs8D,KACA,KAAKxb,IAAKluD,GACRoN,EAAIpN,EAAQkuD,GACZwb=
,EAAKxb,GAAK9gD,CAEZ,OAAOs8D,MAEL3qE,KAAKi/G,aAAc,CACrB7mD,EAAOp4D,KAAKi/=
G,YACZ,KAAKt7F,IAAOy0C,GACVtqD,EAAMsqD,EAAKz0C,GACC,cAARA,GACkB,MAAhB1iB,=
EAAQ0iB,KACV1iB,EAAQ0iB,GAAO7V,GAqBvB,MAhBS,OAALX,IACFnN,KAAKmN,EAAIA,GAE=
F,MAALC,IACFpN,KAAKoN,EAAIA,GAEPnM,EAAQy+G,aAAc,IACxBjmD,EAAUz5D,KAAK2W,K=
AAK8iD,QACC,MAAjBx4D,EAAQgV,QACVhV,EAAQgV,MAAQjW,KAAK2W,KAAKV,MAAQjW,KAAK=
mN,EAAIssD,EAAQ/kD,QAGvDzT,EAAQu6C,UAAYv6C,EAAQu6C,QAAU,GACb,MAArBv6C,EAA=
Q0+G,YACV1+G,EAAQ0+G,UAAY,IAEf1+G,GAETi+G,MAAO,SAAS/mG,EAAMlX,EAAS+vB,GAC=
7B,GAAIq4E,EAMJ,OALe,OAAXpoG,IACFA,MAEFjB,KAAK4/G,UAAUznG,EAAMnY,KAAKmN,E=
AAGnN,KAAKoN,EAAGnM,GACrCooG,EAAUpoG,EAAQooG,SAAWrpG,KAAKw+G,UAAY,EACzCxt=
F,EAGIhxB,KAAKoN,GAAKpN,KAAK6mG,mBAAkB,GAAQwC,EAFzCrpG,KAAKmN,GAAKnN,KAAK=
k2C,cAAc/9B,IAKxCynG,UAAW,SAASznG,EAAMhL,EAAGC,EAAGnM,GAC9B,GAAI4+G,GAAOV=
,EAAkBvb,EAAU7vF,EAAGkE,EAASjS,EAAGmT,EAAW2mG,EAAOp0D,EAAMq0D,EAAeC,EAAYC=
,EAAWv1E,EAAMo0E,EAAaxtF,EAAOy4C,EAAOlQ,EAAIC,EAAMsqC,CAE/J,IADAjsF,EAAO,=
GAAKA,EACQ,IAAhBA,EAAK7S,OAAT,CAMA,GAHAu6G,EAAQ5+G,EAAQ4+G,OAAS,OACzBf,EA=
Ac79G,EAAQ69G,aAAe,EACrCK,EAAmBl+G,EAAQk+G,kBAAoB,EAC3Cl+G,EAAQgV,MACV,OA=
AQ4pG,GACN,IAAK,QACHI,EAAYjgH,KAAKk2C,cAAc/9B,EAAK/L,QAAQ,OAAQ,IAAKnL,GAC=
zDkM,GAAKlM,EAAQkY,UAAY8mG,CACzB,MACF,KAAK,SACH9yG,GAAKlM,EAAQkY,UAAY,EAA=
IlY,EAAQg/G,UAAY,CACjD,MACF,KAAK,UACH3uF,EAAQnZ,EAAK7L,OAAOgqC,MAAM,OAC1B=
2pE,EAAYjgH,KAAKk2C,cAAc/9B,EAAK/L,QAAQ,OAAQ,IAAKnL,GACzD++G,EAAahgH,KAAK=
k2C,cAAc,KAAOipE,EACvCL,EAAc/0G,KAAKwB,IAAI,GAAItK,EAAQkY,UAAY8mG,GAAal2G=
,KAAKwB,IAAI,EAAG+lB,EAAMhsB,OAAS,GAAK06G,GAyClG,GAtCAD,EAAgB9+G,EAAQg/G,=
UAAanB,GAAe79G,EAAQi/G,UAAY,GAAOf,GAAoBhnG,EAAK7S,OAAS,GAC7GrE,EAAQuX,MAC=
VxY,KAAKwY,KAAKrL,EAAGC,EAAG2yG,EAAe//G,KAAK6mG,oBAAqB5lG,EAAQuX,OAE/DvX,=
EAAQkrF,WAAalrF,EAAQk/G,UAC/BngH,KAAK+X,OACA9W,EAAQ6Z,QACX9a,KAAK20F,YAAY=
7pF,MAAM9K,KAAMA,KAAK00F,YAEpCv7E,EAAYnZ,KAAKymG,UAAY,GAAK,GAAM18F,KAAKqG=
,MAAMpQ,KAAKymG,UAAY,IACpEzmG,KAAKmZ,UAAUA,GACfpF,EAAI9S,EAAQkrF,UAAY,EAA=
I,EAC5B2zB,EAAQ1yG,EAAIpN,KAAK6mG,oBAAsB9yF,EACnC9S,EAAQkrF,YACV2zB,GAAS3=
mG,GAEXnZ,KAAKka,OAAO/M,EAAG2yG,GACf9/G,KAAKqa,OAAOlN,EAAI4yG,EAAeD,GAC/B=
9/G,KAAK8a,SACL9a,KAAKyY,WAEPzY,KAAK+X,OACL/X,KAAKgY,UAAU,EAAG,EAAG,EAAG,=
GAAI,EAAGhY,KAAK2W,KAAKT,QACzC9I,EAAIpN,KAAK2W,KAAKT,OAAS9I,EAAKpN,KAAKi2=
C,MAAML,SAAW,IAAO51C,KAAKymG,UACN,OAAnD18B,EAAQ/pE,KAAK2W,KAAKvW,OAAOgkG,=
EAAQpkG,KAAKi2C,MAAMx2C,MAC/CsqE,EAAMq6B,GAASpkG,KAAKi2C,MAAMh5B,OAE5Bjd,=
KAAKi2C,MAAMO,IAAIr+B,GACfnY,KAAKoY,WAAW,MAChBpY,KAAKoY,WAAW,GAAKjL,EAAI,=
IAAMC,EAAI,OACnCpN,KAAKoY,WAAW,IAAMpY,KAAKi2C,MAAMx2C,GAAK,IAAMO,KAAKymG,=
UAAY,OAC7D/6C,EAAOzqD,EAAQwQ,MAAQxQ,EAAQ6Z,OAAS,EAAI7Z,EAAQ6Z,OAAS,EAAI,E=
AC7D4wC,GACF1rD,KAAKoY,WAAW,GAAKszC,EAAO,OAE1ByzD,GACFn/G,KAAKoY,WAAW,GAA=
K+mG,EAAmB,OAEtCL,EAAa,CAKf,IAJAxtF,EAAQnZ,EAAK7L,OAAOgqC,MAAM,OAC1BwoE,G=
AAe9+G,KAAKk2C,cAAc,KAAOipE,EACzCL,GAAe,IAAO9+G,KAAKymG,UAC3B7C,KACK/pC,E=
AAK,EAAGC,EAAOxoC,EAAMhsB,OAAaw0D,EAALD,EAAWA,IAC3CnvB,EAAOpZ,EAAMuoC,GAC=
b5hD,EAAUjY,KAAKi2C,MAAM/iC,OAAOw3B,GAC5BzyB,EAAW,WACT,GAAIkxD,GAAI/Q,EAA=
MiB,CAEd,KADAA,KACKrzD,EAAImjE,EAAK,EAAG/Q,EAAOngD,EAAQ3S,OAAa8yD,EAAL+Q,=
EAAWnjE,EAAImjE,GAAM,EAC3D9P,EAASz3D,KAAKqW,EAAQvL,WAAW1G,GAAGvB,SAAS,IAE=
/C,OAAO40D,MACHzrD,KAAK,IACXg2F,EAAShiG,KAAK,IAAMqW,EAAU,MAAS6mG,EAEzC9+G=
,MAAKoY,WAAW,IAAOwrF,EAASh2F,KAAK,KAAQ,YAE7CqK,GAAUjY,KAAKi2C,MAAM/iC,OAA=
OiF,GAC5BF,EAAW,WACT,GAAIkxD,GAAI/Q,EAAMiB,CAEd,KADAA,KACKrzD,EAAImjE,EAA=
K,EAAG/Q,EAAOngD,EAAQ3S,OAAa8yD,EAAL+Q,EAAWnjE,EAAImjE,GAAM,EAC3D9P,EAASz=
3D,KAAKqW,EAAQvL,WAAW1G,GAAGvB,SAAS,IAE/C,OAAO40D,MACHzrD,KAAK,IACX5N,KAA=
KoY,WAAW,IAAMH,EAAU,OAGlC,OADAjY,MAAKoY,WAAW,MACTpY,KAAKyY,eAIf9Y,KAAKK,O=
AKH,SAASR,EAAQD,EAASH,IAG/B,WACE,GAAI47D,GAAcolD,EAAa7B,EAC7BzmD,KAAe12C,=
eACf22C,EAAY,SAASC,EAAOzyD,GAAiG,QAAS0yD,KAASj4D,KAAKgF,YAAcgzD,EAA5H,IAA=
K,GAAIr0C,KAAOpe,GAAcuyD,EAAUn4D,KAAK4F,EAAQoe,KAAMq0C,EAAMr0C,GAAOpe,EAA=
Ooe,GAA2J,OAArGs0C,GAAKl3D,UAAYwE,EAAOxE,UAAWi3D,EAAMj3D,UAAY,GAAIk3D,GAA=
QD,EAAME,UAAY3yD,EAAOxE,UAAkBi3D,EAEzRgD,GAAe57D,EAAoB,IAAI47D,aAEvColD,E=
AAchhH,EAAoB,IAElCm/G,EAAc,SAAUpmD,GAGtB,QAASomD,GAAYv7G,EAAU/B,GAC7B,GAA=
Im3D,EACJp4D,MAAKgD,SAAWA,EAChBhD,KAAKq/G,OAASp+G,EAAQo+G,QAAU,EAChCr/G,K=
AAKm/G,iBAAmBl+G,EAAQk+G,kBAAoB,EACpDn/G,KAAK8+G,YAAsC,IAAxB79G,EAAQ69G,Y=
AC3B9+G,KAAKw7C,QAAUv6C,EAAQu6C,SAAW,EAClCx7C,KAAK2/G,UAA0C,OAA7BvnD,EAAO=
n3D,EAAQ0+G,WAAqBvnD,EAAO,GAC7Dp4D,KAAKmZ,WAAalY,EAAQgV,MAASjW,KAAK2/G,WA=
Aa3/G,KAAKw7C,QAAU,IAAOx7C,KAAKw7C,QAChFx7C,KAAKqgH,UAAYrgH,KAAKmZ,UACtBn=
Z,KAAKsgH,OAAStgH,KAAKgD,SAASmK,EAC5BnN,KAAKugH,OAASvgH,KAAKgD,SAASoK,EAC=
5BpN,KAAKy9C,OAAS,EACdz9C,KAAKwgH,SAAWv/G,EAAQu/G,SACxBxgH,KAAKygH,WAAa,E=
ACI,MAAlBx/G,EAAQiV,QACVlW,KAAKkW,OAASjV,EAAQiV,OACtBlW,KAAKwwF,KAAOxwF,K=
AAKugH,OAASt/G,EAAQiV,QAElClW,KAAKwwF,KAAOxwF,KAAKgD,SAAS2T,KAAK65E,OAEjC=
xwF,KAAK0B,GAAG,YAAa,SAAUy3C,GAC7B,MAAO,UAASl4C,GACd,GAAIo+G,EAIJ,OAHAA,G=
AASlmE,EAAMsnE,YAActnE,EAAMkmE,OACnClmE,EAAMn2C,SAASmK,GAAKkyG,EACpBlmE,E=
AAMhgC,WAAakmG,EACZlmE,EAAM5a,KAAK,OAAQ,WAMxB,MALA4a,GAAMn2C,SAASmK,GAAKk=
yG,EACpBlmE,EAAMhgC,WAAakmG,EACfp+G,EAAQ+9G,YAAc7lE,EAAMsnE,aAC9BtnE,EAAM=
snE,WAAatnE,EAAMkmE,QAEtBp+G,EAAQ+9G,UAAb,OACS7lE,EAAMsnE,WAAa,MAI/BzgH,O=
ACHA,KAAK0B,GAAG,WAAY,SAAUy3C,GAC5B,MAAO,UAASl4C,GACd,GAAI4+G,EAMJ,OALAA,=
GAAQ5+G,EAAQ4+G,MACF,YAAVA,IACF5+G,EAAQ4+G,MAAQ,QAElB1mE,EAAMunE,UAAW,EAC=
VvnE,EAAM5a,KAAK,OAAQ,WAGxB,MAFA4a,GAAMn2C,SAASoK,GAAKnM,EAAQ0/G,cAAgB,EA=
C5C1/G,EAAQ4+G,MAAQA,EACT1mE,EAAMunE,UAAW,MAG3B1gH,OAmLL,MA1OA+3D,GAAUwmD=
,EAAapmD,GA0DvBomD,EAAYx9G,UAAU6/G,UAAY,SAASl2E,GACzC,MAAO1qC,MAAKgD,SAAS=
kzC,cAAcxL,EAAM1qC,MAAQA,KAAKm/G,iBAAmBn/G,KAAK8+G,aAGhFP,EAAYx9G,UAAU8/G=
,SAAW,SAAS1oG,EAAM8Y,GAC9C,GAAI6vF,GAAIC,EAASC,EAAKruG,EAAG2Z,EAAM20F,EAA=
KC,EAAgBnnG,EAAG2wB,EAAMy2E,CAI7D,KAHAJ,EAAU,GAAIX,GAAYjoG,GAC1BmU,EAAO,K=
ACP60F,KACOL,EAAKC,EAAQK,aAAa,CAG/B,GAFA12E,EAAOvyB,EAAKrO,OAAe,MAARwiB,E=
AAeA,EAAKnpB,SAAW,SAAW,EAAG29G,EAAG39G,UACnE4W,EAAwB,MAApBonG,EAAWz2E,GAA=
gBy2E,EAAWz2E,GAAQy2E,EAAWz2E,GAAQ1qC,KAAK4gH,UAAUl2E,GAChF3wB,EAAI/Z,KAA=
KmZ,UAAYnZ,KAAKygH,WAG5B,IAFAQ,EAAM30F,EACN00F,KACOt2E,EAAKplC,QAAQ,CAElB=
,IADAqN,EAAI+3B,EAAKplC,OACFyU,EAAI/Z,KAAKqgH,WACdtmG,EAAI/Z,KAAK4gH,UAAU=
l2E,EAAK5gC,MAAM,IAAK6I,GASrC,IAPAquG,EAAIK,SAAW1uG,EAAI+3B,EAAKplC,OACxB=
47G,EAAiBjwF,EAAGyZ,EAAK5gC,MAAM,EAAG6I,GAAIoH,EAAGinG,EAAKC,GAC9CA,GACEI=
,UAAU,GAEZ32E,EAAOA,EAAK5gC,MAAM6I,GAClBoH,EAAI/Z,KAAK4gH,UAAUl2E,GACfw2E=
,KAAmB,EACrB,UAIJA,GAAiBjwF,EAAGyZ,EAAM3wB,EAAG+mG,EAAIx0F,EAEnC,IAAI40F,=
KAAmB,EACrB,KAEF50F,GAAOw0F,IAIXvC,EAAYx9G,UAAU49B,KAAO,SAASxmB,EAAMlX,GA=
C1C,GAAIsD,GAAQ+8G,EAAUxhC,EAAIyhC,EAAOtB,EAAWuB,EAAIp0G,CAkGhD,OAjGsB,OA=
AlBnM,EAAQo+G,SACVr/G,KAAKq/G,OAASp+G,EAAQo+G,QAEQ,MAA5Bp+G,EAAQk+G,mBACV=
n/G,KAAKm/G,iBAAmBl+G,EAAQk+G,kBAEP,MAAvBl+G,EAAQ69G,cACV9+G,KAAK8+G,YAAc=
79G,EAAQ69G,aAEL,MAApB79G,EAAQu/G,WACVxgH,KAAKwgH,SAAWv/G,EAAQu/G,UAE1Be,=
EAAQvhH,KAAKgD,SAASoK,EAAIpN,KAAKgD,SAAS6jG,mBAAkB,IACtD7mG,KAAKgD,SAASoK=
,EAAIpN,KAAKwwF,MAAQ+wB,EAAQvhH,KAAKwwF,OAC9CxwF,KAAKyhH,cAEPl9G,EAAS,GAC=
T07G,EAAY,EACZuB,EAAK,EACL1hC,EAAK,EACL1yE,EAAIpN,KAAKgD,SAASoK,EAClBk0G,=
EAAW,SAAUnoE,GACnB,MAAO,YAML,MALAl4C,GAAQg/G,UAAYA,EAAY9mE,EAAM2lE,aAAe0C=
,EAAK,GAC1DvgH,EAAQi/G,UAAYsB,EACpBvgH,EAAQkY,UAAYggC,EAAMhgC,UAC1B/L,EAA=
I+rC,EAAMn2C,SAASoK,EACnB+rC,EAAMuH,KAAK,OAAQn8C,EAAQtD,EAASk4C,GAC7B2mC,=
MAER9/E,MACHA,KAAK0gD,KAAK,eAAgBz/C,EAASjB,MACnCA,KAAK6gH,SAAS1oG,EAAM,SA=
AUghC,GAC5B,MAAO,UAASzO,EAAM3wB,EAAG+mG,EAAIx0F,GAC3B,GAAIo1F,GAAIR,CAUR,=
KATa,MAAR50F,GAAiBA,EAAK+0F,YACzBloE,EAAMuH,KAAK,YAAaz/C,EAASk4C,GACjCA,E=
AAMknE,UAAYlnE,EAAMhgC,WAEtBY,GAAKo/B,EAAMknE,YACb97G,GAAUmmC,EACVu1E,GAA=
almG,EACbynG,KAEEV,EAAGO,UAAYtnG,EAAIo/B,EAAMknE,UAAW,CAKtC,GAJIS,EAAGO,U=
ACLloE,EAAMuH,KAAK,WAAYz/C,EAASk4C,GAElCuoE,EAAKvoE,EAAMn2C,SAAS6jG,mBAAk=
B,GACjB,MAAhB1tD,EAAMjjC,QAAmBijC,EAAMqnE,UAAYrnE,EAAMn2C,SAASoK,EAAS,EAA=
Ls0G,EAASvoE,EAAMq3C,MAAQr3C,EAAMsE,QAAUtE,EAAMqC,QAAS,CAMvH,IALIrC,EAAMq=
nE,YAAa,IACrBrnE,EAAMqnE,SAAW,KAEnBj8G,EAASA,EAAO6H,QAAQ,OAAQ,IAChC6zG,EA=
AY9mE,EAAMynE,UAAUr8G,EAAS40C,EAAMqnE,UACpCP,EAAY9mE,EAAMhgC,WACvB5U,EAAS=
A,EAAOuF,MAAM,EAAG,IAAIsC,QAAQ,OAAQ,IAC7C6zG,EAAY9mE,EAAMynE,UAAUr8G,EAAS=
40C,EAAMqnE,SAE7Cj8G,IAAkB40C,EAAMqnE,SAG1B,MADAc,KACInoE,EAAMn2C,SAASoK,=
EAAIs0G,EAAKvoE,EAAMq3C,OAChC0wB,EAAiB/nE,EAAMsoE,eAClBP,IACHM,EAAK,EACLj=
9G,EAAS,IACF,GAGPu8G,EAAGO,UACDtnG,EAAIo/B,EAAMknE,YACZ97G,EAASmmC,EACTu1=
E,EAAYlmG,EACZynG,EAAK,EACLF,KAEFnoE,EAAMknE,UAAYlnE,EAAMhgC,UACxB5U,EAAS=
,GACT07G,EAAY,EACLuB,EAAK,IAEZroE,EAAMknE,UAAYlnE,EAAMhgC,UAAYY,EACpCxV,E=
AASmmC,EACTu1E,EAAYlmG,EACLynG,EAAK,GAGd,MAAOroE,GAAMknE,WAAatmG,IAG7B/Z,=
OACCwhH,EAAK,IACPxhH,KAAK0gD,KAAK,WAAYz/C,EAASjB,MAC/BshH,KAEFthH,KAAK0gD=
,KAAK,aAAcz/C,EAASjB,MAC7BiB,EAAQ+9G,aAAc,GACpBl/B,EAAK,IACP9/E,KAAKygH,W=
AAa,GAEpBzgH,KAAKygH,YAAcx/G,EAAQg/G,UACpBjgH,KAAKgD,SAASoK,EAAIA,GAElBpN=
,KAAKgD,SAASmK,EAAInN,KAAKsgH,QAIlC/B,EAAYx9G,UAAU0gH,YAAc,SAASxgH,GAC3C,=
GAAIm3D,EAEJ,IADAp4D,KAAK0gD,KAAK,aAAcz/C,EAASjB,QAC3BA,KAAKy9C,OAASz9C,K=
AAKw7C,QAAS,CAChC,GAAmB,MAAfx7C,KAAKkW,OACP,OAAO,CAETlW,MAAKgD,SAAS0T,UAC=
d1W,KAAKy9C,OAAS,EACdz9C,KAAKugH,OAASvgH,KAAKgD,SAAS2T,KAAK8iD,QAAQ9kD,IA=
CzC3U,KAAKwwF,KAAOxwF,KAAKgD,SAAS2T,KAAK65E,OAC/BxwF,KAAKgD,SAASmK,EAAInN=
,KAAKsgH,OACnBtgH,KAAKgD,SAAS0xF,aACft8B,EAAOp4D,KAAKgD,UAAU8gD,UAAUh5C,M=
AAMstD,EAAMp4D,KAAKgD,SAAS0xF,YAE7D10F,KAAK0gD,KAAK,YAAaz/C,EAASjB,UAEhCA=
,MAAKgD,SAASmK,GAAKnN,KAAKmZ,UAAYnZ,KAAK2/G,UACzC3/G,KAAKgD,SAASoK,EAAIpN=
,KAAKugH,OACvBvgH,KAAK0gD,KAAK,cAAez/C,EAASjB,KAGpC,OADAA,MAAK0gD,KAAK,eA=
AgBz/C,EAASjB,OAC5B,GAGFu+G,GAENvjD,GAEHx7D,EAAOD,QAAUg/G,IAEhB5+G,KAAKK,=
OAKH,SAASR,EAAQD,EAASH,IAG/B,WACE,GAAIuiH,GAAIC,EAAIC,EAAIC,EAAIC,EAAIC,E=
AAQC,EAAIC,EAAQC,EAAIC,EAAQC,EAAIC,EAAQC,EAAInC,EAAaoC,EAAIC,EAAIC,EAAQC,=
EAAIC,EAAIC,EAAIC,EAAaC,EAAIC,EAAIC,EAAkBC,EAAWC,EAAW/qD,EAAMC,CAEpLyqD,G=
AAc1jH,EAAoB,IAElC8jH,EAAY,GAAIJ,GAAY1jH,EAAoB,KAEhDg5D,EAAOh5D,EAAoB,IAA=
K0iH,EAAK1pD,EAAK0pD,GAAIK,EAAK/pD,EAAK+pD,GAAII,EAAKnqD,EAAKmqD,GAAIC,EA=
AKpqD,EAAKoqD,GAAIT,EAAK3pD,EAAK2pD,GAAIF,EAAKzpD,EAAKypD,GAAIgB,EAAKzqD,=
EAAKyqD,GAAIE,EAAK3qD,EAAK2qD,GAAIF,EAAKzqD,EAAKyqD,GAAIf,EAAK1pD,EAAK0pD=
,GAAIS,EAAKnqD,EAAKmqD,GAAIC,EAAKpqD,EAAKoqD,GAAIb,EAAKvpD,EAAKupD,GAAIC,=
EAAKxpD,EAAKwpD,GAAIe,EAAKvqD,EAAKuqD,GAAIC,EAAKxqD,EAAKwqD,GAAII,EAAK5qD=
,EAAK4qD,GAAIf,EAAK7pD,EAAK6pD,GAAII,EAAKjqD,EAAKiqD,GAAII,EAAKrqD,EAAKqq=
D,GAAIQ,EAAmB7qD,EAAK6qD,iBAEhV5qD,EAAQj5D,EAAoB,IAAKgjH,EAAS/pD,EAAM+pD,=
OAAQE,EAASjqD,EAAMiqD,OAAQN,EAAS3pD,EAAM2pD,OAAQE,EAAS7pD,EAAM6pD,OAAQQ,E=
AASrqD,EAAMqqD,OAAQS,EAAY9qD,EAAM8qD,UAEtK/C,EAAc,WAGZ,QAASA,GAAYn6G,GACn=
BjG,KAAKiG,OAASA,EACdjG,KAAKuN,IAAM,EACXvN,KAAKojH,QAAU,EACfpjH,KAAKqjH,S=
AAW,KAChBrjH,KAAKsjH,UAAY,KAPnB,GAAIC,GAAOC,EAAUC,CAuIrB,OA7HArD,GAAYr/G,=
UAAU2iH,cAAgB,WACpC,GAAI1xG,GAAMuxE,CAGV,OAFAvxE,GAAOhS,KAAKiG,OAAOyG,WAA=
W1M,KAAKuN,OACnCg2E,EAAOvjF,KAAKiG,OAAOyG,WAAW1M,KAAKuN,KACpByE,GAAV,OAA0=
B,OAARA,GAA8BuxE,GAAV,OAA0B,OAARA,GAC3DvjF,KAAKuN,MACqB,MAAjByE,EAAO,QAAo=
BuxE,EAAO,OAAU,OAEhDvxE,GAGTwxG,EAAW,SAAS3jH,GAClB,OAAQA,GACN,IAAK8hH,GAC=
H,MAAOC,EACT,KAAKe,GACL,IAAKC,GACL,IAAKI,GACH,MAAOpB,EACT,KAAKK,GACH,MAAO=
Q,EACT,SACE,MAAO5iH,KAIb4jH,EAAW,SAAS5jH,GAClB,OAAQA,GACN,IAAK0iH,GACL,IA=
AKC,GACH,MAAOV,EACT,KAAKC,GACH,MAAOF,EACT,KAAKgB,GACH,MAAOE,EACT,SACE,MAA=
OljH,KAIbugH,EAAYr/G,UAAU4iH,cAAgB,SAAS3pF,GAI7C,MAHa,OAATA,IACFA,GAAQ,GA=
EHwpF,EAASN,EAAUh1G,IAAIlO,KAAK0jH,mBAGrCH,EAAQ,WACN,QAASA,GAAMpgH,EAAUk+=
G,GACvBrhH,KAAKmD,SAAWA,EAChBnD,KAAKqhH,SAAuB,MAAZA,EAAmBA,GAAW,EAGhD,MAA=
OkC,MAITnD,EAAYr/G,UAAUqgH,UAAY,WAChC,GAAIh2B,GAAKw4B,EAAWC,CAIpB,KAHqB,M=
AAjB7jH,KAAKqjH,WACPrjH,KAAKqjH,SAAWI,EAASzjH,KAAK2jH,kBAEzB3jH,KAAKuN,IA=
AMvN,KAAKiG,OAAOX,QAAQ,CAIpC,GAHAtF,KAAKojH,QAAUpjH,KAAKuN,IACpBq2G,EAAY5=
jH,KAAKsjH,UACjBtjH,KAAKsjH,UAAYtjH,KAAK2jH,gBAClB3jH,KAAKqjH,WAAavB,GAAO=
9hH,KAAKqjH,WAAalB,GAAMniH,KAAKsjH,YAAcf,EAEtE,MADAviH,MAAKqjH,SAAWI,EAAS=
D,EAASxjH,KAAKsjH,YAChC,GAAIC,GAAMvjH,KAAKojH,SAAS,EAgBjC,IAdAh4B,EAAM,WA=
CJ,OAAQprF,KAAKsjH,WACX,IAAKT,GACH,MAAO7iH,MAAKqjH,QACd,KAAKvB,GACL,IAAKS=
,GACL,IAAKC,GACH,MAAOV,EACT,KAAKK,GACH,MAAOA,EACT,KAAKJ,GACH,MAAOF,KAEVli=
H,KAAKK,MACG,MAAPorF,EAAJ,CAQA,OADAy4B,GAAc,EACNV,EAAUnjH,KAAKqjH,UAAUrjH=
,KAAKsjH,YACpC,IAAKlB,GACHyB,GAAc,CACd,MACF,KAAKvB,GACHuB,EAAcD,IAAcf,CAC=
5B,MACF,KAAKb,GAEH,GADA6B,EAAcD,IAAcf,GACvBgB,EACH,QAEF,MACF,KAAK3B,GACH,=
GAAI0B,IAAcf,EAChB,SAIN,GADA7iH,KAAKqjH,SAAWrjH,KAAKsjH,UACjBO,EACF,MAAO,=
IAAIN,GAAMvjH,KAAKojH,aA1BtB,IADApjH,KAAKqjH,SAAWj4B,EACZprF,KAAKsjH,YAAc=
vB,EACrB,MAAO,IAAIwB,GAAMvjH,KAAKojH,SA4B5B,MAAIpjH,MAAKuN,KAAOvN,KAAKiG,=
OAAOX,OACtBtF,KAAKojH,QAAUpjH,KAAKiG,OAAOX,QAC7BtF,KAAKojH,QAAUpjH,KAAKiG=
,OAAOX,OACpB,GAAIi+G,GAAMvjH,KAAKiG,OAAOX,SAEtB,KALX,QAUK86G,KAIT5gH,EAAO=
D,QAAU6gH,IAEhBzgH,KAAKK,OAKH,SAASR,EAAQD,GAGtB,GAAIujH,GACFriB,KAAa32F,K=
AEfg5G,GAAc,WAmCZ,QAASA,GAAYgB,GACnB,GAAI1rD,GAAMC,CACE,OAARyrD,IACFA,MAE=
F9jH,KAAKkH,KAAO48G,EAAK58G,SACjBlH,KAAK+jH,UAAuC,OAA1B3rD,EAAO0rD,EAAKC,=
WAAqB3rD,EAAO,EAC1Dp4D,KAAKgkH,WAA0C,OAA5B3rD,EAAQyrD,EAAKE,YAAsB3rD,EAAQ=
,GAzChE,GAAI4rD,GAAmBC,EAAkBC,EAAWC,EAAgBC,EAAsBC,EAAoBC,EAAcC,EAAaC,EAAq=
BC,EAAqBC,EAA4BC,EAASC,EAAWC,EAASC,EAAwBC,CA4EpQ,OA1EAJ,GAAU,GAEVE,EAAU,E=
AEVD,EAAYD,EAAUE,EAEtBH,EAA6B,OAAWC,EAExCP,EAAuB,GAAKQ,EAE5BN,EAAeF,EAAuB=
,EAEtCG,EAAc,EAEdP,EAAoB,GAAKa,EAEzBX,EAAYF,EAAoB,EAEhCS,EAAsB,OAAWI,EAEj=
CL,EAAsB,MAASK,EAE/BR,EAAqBI,EAAsBD,EAE3CO,EAAyBV,EAEzBS,EAAyB,GAEzBX,EAA=
iBY,EAAyBD,EAE1Cb,EAAmB,GAAKM,EAYxB1B,EAAY/hH,UAAUmN,IAAM,SAAS/D,GACnC,GA=
AIgU,EACJ,OAAgB,GAAZhU,GAAiBA,EAAY,QACxBnK,KAAKgkH,WAEE,MAAZ75G,GAAuBA,EA=
AY,OAAuB,OAAbA,GAC/CgU,GAASne,KAAKkH,KAAKiD,GAAa26G,IAAYN,IAAgBr6G,EAAYg6=
G,GACjEnkH,KAAKkH,KAAKiX,IAEF,OAAbhU,GACFgU,GAASne,KAAKkH,KAAKw9G,GAAwBv6=
G,EAAY,OAAW26G,KAAaN,IAAgBr6G,EAAYg6G,GACpGnkH,KAAKkH,KAAKiX,IAEfhU,EAAYn=
K,KAAK+jH,WACnB5lG,EAAQne,KAAKkH,KAAMk9G,EAAiBO,GAA+Bx6G,GAAay6G,IAChFzmG=
,EAAQne,KAAKkH,KAAKiX,GAAUhU,GAAa26G,EAAWP,IACpDpmG,GAASA,GAASqmG,IAAgBr6=
G,EAAYg6G,GACvCnkH,KAAKkH,KAAKiX,IAEZne,KAAKkH,KAAKlH,KAAKkH,KAAK5B,OAAS4=
+G,IAGtCpB,EAAY/hH,UAAU0N,OAAS,WAC7B,GAAIxE,EAMJ,OALAA,IACE/C,KAAMu5F,EAA=
Q9gG,KAAKK,KAAKkH,MACxB68G,UAAW/jH,KAAK+jH,UAChBC,WAAYhkH,KAAKgkH,aAKdlB,=
KAITtjH,EAAOD,QAAUujH,GAKZ,SAAStjH,EAAQD,GAEtBC,EAAOD,SACN2H,MACC,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC=
A,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K=
ACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA=
,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KA=
CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,=
KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MAC=
A,MACA,MACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,EACA,EACA,GACA,EACA,GACA,GACA,EACA,EACA,EA=
CA,GACA,EACA,EACA,GACA,EACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,EACA,EACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,EACA,EACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,GACA,EACA,GACA,GACA,EACA,=
EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EAC=
A,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,E=
ACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA=
,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EA=
CA,EACA,EACA,EACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,EAC=
A,GACA,EACA,EACA,EACA,GACA,GACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,GACA,G=
ACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA=
,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,EACA,EA=
CA,EACA,EACA,EACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,E=
ACA,GACA,GACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EAC=
A,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,E=
ACA,EACA,EACA,EACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,EACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,=
EACA,EACA,EACA,EACA,EACA,EACA,EACA,GACA,EACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,EACA,EACA,EACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,EACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,EACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,GACA,EA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,EACA,GACA,GACA,GACA,G=
ACA,EACA,EACA,GACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,=
EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
EACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,EACA,GACA,EACA=
,EACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,EACA,EACA,EACA,EACA,EACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,EACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,EACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,EACA,EACA,=
EACA,EACA,EACA,EACA,GACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EAC=
A,EACA,EACA,EACA,EACA,GACA,EACA,EACA,EACA,EACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,EACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,EACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,EAC=
A,EACA,EACA,GACA,GACA,GACA,EACA,EACA,GACA,GACA,GACA,GACA,EACA,EACA,EACA,E=
ACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,EACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EAC=
A,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,EACA,EACA,EACA,EACA,EACA,=
EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EAC=
A,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,EACA,EACA,EACA,EACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,EACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,GACA,EACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,EACA=
,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,EACA,EACA,GACA,=
GACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GACA,GACA,GACA,GAC=
A,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,EACA,GACA,GACA,EACA,GACA,GACA,=
EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GACA,GACA,EACA,EACA,EAC=
A,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,EACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,EACA,EACA,EACA,EACA,GACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,GACA,EACA,EACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,EA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA=
,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,EACA,EACA,EAC=
A,EACA,EACA,EACA,EACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EA=
CA,EACA,EACA,EACA,EACA,EACA,GACA,GACA,EACA,EACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,EACA,GACA,EACA,GACA,EACA,EACA,EACA,EACA,GACA,EACA,EACA,EACA,EAC=
A,EACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,GACA=
,GACA,EACA,GACA,GACA,GACA,EACA,EACA,GACA,GACA,EACA,GACA,EACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,EACA,GACA,GACA,GACA,EACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,GACA,E=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,EACA,GACA,EACA,GACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,EACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,EACA,GACA,GACA,GACA,EACA,EACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,EACA,EACA,EACA,EACA,EACA,EACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,EACA,EACA,EACA,EACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,EACA,EACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA=
,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GA=
CA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,=
GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAC=
A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G=
ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA;AAED68G,UAAa,O=
ACbC,WAAc,IAKV,SAASxkH,EAAQD,IAGtB,WACE,GAAIoiH,GAAIC,EAAIpwB,EAAIqwB,EAA=
IoD,EAAInD,EAAIC,EAAIE,EAAIiD,EAAIC,EAAIC,EAAIjD,EAAIkD,EAAIC,EAAIC,EAAIC=
,EAAIC,EAAIC,EAAIrD,EAAIsD,EAAIC,EAAIC,EAAIC,EAAIC,EAAIxD,EAAIC,EAAIC,EAA=
IuD,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAI1D,EAAIC,EAAIC,EAAIyD,EAAIvD,EAAIC,=
EAAIuD,CAEhKhnH,GAAQ0mH,GAAKA,EAAK,EAElB1mH,EAAQ2lH,GAAKA,EAAK,EAElB3lH,E=
AAQ6lH,GAAKA,EAAK,EAElB7lH,EAAQ6mH,GAAKA,EAAK,EAElB7mH,EAAQ+lH,GAAKA,EAAK=
,EAElB/lH,EAAQkjH,GAAKA,EAAK,EAElBljH,EAAQ8lH,GAAKA,EAAK,EAElB9lH,EAAQ+mH=
,GAAKA,EAAK,EAElB/mH,EAAQqmH,GAAKA,EAAK,EAElBrmH,EAAQ4mH,GAAKA,EAAK,EAElB=
5mH,EAAQ2mH,GAAKA,EAAK,GAElB3mH,EAAQymH,GAAKA,EAAK,GAElBzmH,EAAQqiH,GAAKA=
,EAAK,GAElBriH,EAAQkmH,GAAKA,EAAK,GAElBlmH,EAAQ8iH,GAAKA,EAAK,GAElB9iH,EA=
AQomH,GAAKA,EAAK,GAElBpmH,EAAQmmH,GAAKA,EAAK,GAElBnmH,EAAQsiH,GAAKA,EAAK,=
GAElBtiH,EAAQ0lH,GAAKA,EAAK,GAElB1lH,EAAQiyF,GAAKA,EAAK,GAElBjyF,EAAQgnH,=
GAAKA,EAAK,GAElBhnH,EAAQ4lH,GAAKA,EAAK,GAElB5lH,EAAQwjH,GAAKA,EAAK,GAElBx=
jH,EAAQgmH,GAAKA,EAAK,GAElBhmH,EAAQimH,GAAKA,EAAK,GAElBjmH,EAAQsmH,GAAKA,=
EAAK,GAElBtmH,EAAQwmH,GAAKA,EAAK,GAElBxmH,EAAQumH,GAAKA,EAAK,GAElBvmH,EAA=
Q8mH,GAAKA,EAAK,GAElB9mH,EAAQoiH,GAAKA,EAAK,GAElBpiH,EAAQuiH,GAAKA,EAAK,G=
AElBviH,EAAQwiH,GAAKA,EAAK,GAElBxiH,EAAQ0iH,GAAKA,EAAK,GAElB1iH,EAAQ4iH,G=
AAKA,EAAK,GAElB5iH,EAAQgjH,GAAKA,EAAK,GAElBhjH,EAAQijH,GAAKA,EAAK,GAElBjj=
H,EAAQojH,GAAKA,EAAK,GAElBpjH,EAAQqjH,GAAKA,EAAK,GAElBrjH,EAAQsjH,GAAKA,E=
AAK,GAElBtjH,EAAQyjH,GAAKA,EAAK,KAEjBrjH,KAAKK,OAKH,SAASR,EAAQD,IAGtB,WAC=
E,GAAIyiH,GAAQE,EAAQE,EAAQE,EAAQI,CAEpCnjH,GAAQ6iH,OAASA,EAAS,EAE1B7iH,EA=
AQ+iH,OAASA,EAAS,EAE1B/iH,EAAQyiH,OAASA,EAAS,EAE1BziH,EAAQ2iH,OAASA,EAAS,=
EAE1B3iH,EAAQmjH,OAASA,EAAS,EAE1BnjH,EAAQ4jH,YAAcT,EAAQA,EAAQA,EAAQA,EAAQ=
A,EAAQA,EAAQA,EAAQA,EAAQA,EAAQA,EAAQA,EAAQA,EAAQA,EAAQA,EAAQA,EAAQA,EAAQA=
,EAAQA,EAAQA,EAAQA,EAAQA,EAAQR,EAAQQ,EAAQA,EAAQA,EAAQA,EAAQA,EAAQA,EAAQA,=
IAAUN,EAAQM,EAAQA,EAAQJ,EAAQA,EAAQI,EAAQA,EAAQA,EAAQA,EAAQJ,EAAQA,EAAQF,E=
AAQA,EAAQA,EAAQA,EAAQA,EAAQE,EAAQA,EAAQF,EAAQA,EAAQM,EAAQV,EAAQU,EAAQN,EA=
AQA,EAAQA,EAAQA,EAAQA,EAAQA,IAAUA,EAAQM,EAAQA,EAAQJ,EAAQA,EAAQI,EAAQA,EAA=
QA,EAAQA,EAAQJ,EAAQA,EAAQA,EAAQA,EAAQA,EAAQF,EAAQA,EAAQE,EAAQA,EAAQF,EAAQ=
A,EAAQM,EAAQV,EAAQU,EAAQN,EAAQA,EAAQA,EAAQA,EAAQA,EAAQA,IAAUM,EAAQA,EAAQA=
,EAAQJ,EAAQA,EAAQA,EAAQI,EAAQA,EAAQA,EAAQJ,EAAQA,EAAQA,EAAQA,EAAQA,EAAQA,=
EAAQA,EAAQA,EAAQA,EAAQA,EAAQA,EAAQI,EAAQV,EAAQU,EAAQJ,EAAQA,EAAQA,EAAQA,E=
AAQA,EAAQA,IAAUA,EAAQI,EAAQA,EAAQJ,EAAQA,EAAQA,EAAQI,EAAQA,EAAQA,EAAQJ,EA=
AQA,EAAQA,EAAQA,EAAQA,EAAQA,EAAQA,EAAQA,EAAQA,EAAQA,EAAQA,EAAQI,EAAQV,EAA=
QU,EAAQJ,EAAQA,EAAQA,EAAQA,EAAQA,EAAQA,IAAUF,EAAQM,EAAQA,EAAQJ,EAAQA,EAAQ=
A,EAAQI,EAAQA,EAAQA,EAAQN,EAAQA,EAAQA,EAAQA,EAAQA,EAAQA,EAAQA,EAAQE,EAAQA=
,EAAQF,EAAQA,EAAQM,EAAQV,EAAQU,EAAQN,EAAQA,EAAQA,EAAQA,EAAQA,EAAQA,IAAUA,=
EAAQM,EAAQA,EAAQJ,EAAQA,EAAQA,EAAQI,EAAQA,EAAQA,EAAQN,EAAQA,EAAQA,EAAQA,E=
AAQA,EAAQA,EAAQA,EAAQE,EAAQA,EAAQF,EAAQA,EAAQM,EAAQV,EAAQU,EAAQN,EAAQA,EA=
AQA,EAAQA,EAAQA,EAAQA,IAAUA,EAAQM,EAAQA,EAAQJ,EAAQA,EAAQA,EAAQI,EAAQA,EAA=
QA,EAAQN,EAAQA,EAAQE,EAAQF,EAAQA,EAAQA,EAAQA,EAAQE,EAAQA,EAAQF,EAAQA,EAAQ=
M,EAAQV,EAAQU,EAAQN,EAAQA,EAAQA,EAAQA,EAAQA,EAAQA,IAAUA,EAAQM,EAAQA,EAAQJ=
,EAAQA,EAAQA,EAAQI,EAAQA,EAAQA,EAAQN,EAAQA,EAAQE,EAAQA,EAAQA,EAAQF,EAAQA,=
EAAQE,EAAQA,EAAQF,EAAQA,EAAQM,EAAQV,EAAQU,EAAQN,EAAQA,EAAQA,EAAQA,EAAQA,E=
AAQA,IAAUE,EAAQI,EAAQA,EAAQJ,EAAQA,EAAQA,EAAQI,EAAQA,EAAQA,EAAQN,EAAQA,EA=
AQE,EAAQA,EAAQA,EAAQA,EAAQF,EAAQE,EAAQA,EAAQF,EAAQA,EAAQM,EAAQV,EAAQU,EAA=
QJ,EAAQA,EAAQA,EAAQA,EAAQA,EAAQF,IAAUE,EAAQI,EAAQA,EAAQJ,EAAQA,EAAQA,EAAQ=
I,EAAQA,EAAQA,EAAQN,EAAQA,EAAQE,EAAQA,EAAQA,EAAQF,EAAQA,EAAQE,EAAQA,EAAQF=
,EAAQA,EAAQM,EAAQV,EAAQU,EAAQN,EAAQA,EAAQA,EAAQA,EAAQA,EAAQA,IAAUE,EAAQI,=
EAAQA,EAAQJ,EAAQA,EAAQA,EAAQI,EAAQA,EAAQA,EAAQJ,EAAQA,EAAQA,EAAQA,EAAQA,E=
AAQF,EAAQE,EAAQA,EAAQA,EAAQF,EAAQA,EAAQM,EAAQV,EAAQU,EAAQN,EAAQA,EAAQA,EA=
AQA,EAAQA,EAAQA,IAAUE,EAAQI,EAAQA,EAAQJ,EAAQA,EAAQA,EAAQI,EAAQA,EAAQA,EAA=
QN,EAAQA,EAAQE,EAAQA,EAAQA,EAAQF,EAAQE,EAAQA,EAAQA,EAAQF,EAAQA,EAAQM,EAAQ=
V,EAAQU,EAAQN,EAAQA,EAAQA,EAAQA,EAAQA,EAAQA,IAAUE,EAAQI,EAAQA,EAAQJ,EAAQA=
,EAAQA,EAAQI,EAAQA,EAAQA,EAAQN,EAAQA,EAAQE,EAAQA,EAAQA,EAAQF,EAAQE,EAAQA,=
EAAQA,EAAQF,EAAQA,EAAQM,EAAQV,EAAQU,EAAQN,EAAQA,EAAQA,EAAQA,EAAQA,EAAQA,I=
AAUA,EAAQM,EAAQA,EAAQJ,EAAQA,EAAQA,EAAQI,EAAQA,EAAQA,EAAQN,EAAQE,EAAQF,EA=
AQA,EAAQA,EAAQA,EAAQE,EAAQA,EAAQA,EAAQF,EAAQA,EAAQM,EAAQV,EAAQU,EAAQN,EAA=
QA,EAAQA,EAAQA,EAAQA,EAAQA,IAAUA,EAAQM,EAAQA,EAAQJ,EAAQA,EAAQA,EAAQI,EAAQ=
A,EAAQA,EAAQN,EAAQA,EAAQA,EAAQA,EAAQA,EAAQA,EAAQE,EAAQA,EAAQA,EAAQF,EAAQA=
,EAAQM,EAAQV,EAAQU,EAAQN,EAAQA,EAAQA,EAAQA,EAAQA,EAAQA,IAAUA,EAAQM,EAAQA,=
EAAQJ,EAAQF,EAAQE,EAAQI,EAAQA,EAAQA,EAAQN,EAAQA,EAAQE,EAAQF,EAAQA,EAAQA,E=
AAQA,EAAQE,EAAQA,EAAQF,EAAQA,EAAQM,EAAQV,EAAQU,EAAQN,EAAQA,EAAQA,EAAQA,EA=
AQA,EAAQA,IAAUA,EAAQM,EAAQA,EAAQJ,EAAQF,EAAQE,EAAQI,EAAQA,EAAQA,EAAQN,EAA=
QA,EAAQA,EAAQA,EAAQA,EAAQA,EAAQA,EAAQE,EAAQA,EAAQF,EAAQA,EAAQM,EAAQV,EAAQ=
U,EAAQN,EAAQA,EAAQA,EAAQA,EAAQA,EAAQA,IAAUE,EAAQI,EAAQA,EAAQJ,EAAQA,EAAQA=
,EAAQI,EAAQA,EAAQA,EAAQJ,EAAQA,EAAQA,EAAQA,EAAQA,EAAQA,EAAQA,EAAQA,EAAQA,=
EAAQA,EAAQA,EAAQI,EAAQV,EAAQU,EAAQJ,EAAQA,EAAQA,EAAQA,EAAQA,EAAQA,IAAUF,E=
AAQM,EAAQA,EAAQJ,EAAQA,EAAQA,EAAQI,EAAQA,EAAQA,EAAQN,EAAQA,EAAQA,EAAQA,EA=
AQA,EAAQA,EAAQA,EAAQE,EAAQA,EAAQF,EAAQM,EAAQA,EAAQV,EAAQU,EAAQN,EAAQA,EAA=
QA,EAAQA,EAAQA,EAAQA,IAAUA,EAAQA,EAAQA,EAAQA,EAAQA,EAAQA,EAAQA,EAAQA,EAAQ=
A,EAAQA,EAAQA,EAAQA,EAAQA,EAAQA,EAAQA,EAAQA,EAAQA,EAAQA,EAAQA,EAAQA,EAAQM=
,EAAQN,EAAQA,EAAQA,EAAQA,EAAQA,EAAQA,EAAQA,EAAQA,IAAUE,EAAQI,EAAQA,EAAQJ,=
EAAQA,EAAQA,EAAQI,EAAQA,EAAQA,EAAQN,EAAQA,EAAQE,EAAQA,EAAQA,EAAQF,EAAQE,E=
AAQA,EAAQA,EAAQF,EAAQA,EAAQM,EAAQV,EAAQU,EAAQN,EAAQA,EAAQA,EAAQA,EAAQA,EA=
AQA,IAAUE,EAAQI,EAAQA,EAAQJ,EAAQA,EAAQA,EAAQI,EAAQA,EAAQA,EAAQJ,EAAQA,EAA=
QA,EAAQA,EAAQA,EAAQA,EAAQA,EAAQA,EAAQA,EAAQA,EAAQA,EAAQI,EAAQV,EAAQU,EAAQ=
J,EAAQA,EAAQA,EAAQA,EAAQA,EAAQA,IAAUF,EAAQM,EAAQA,EAAQJ,EAAQA,EAAQA,EAAQI=
,EAAQA,EAAQA,EAAQN,EAAQE,EAAQF,EAAQA,EAAQA,EAAQA,EAAQE,EAAQA,EAAQA,EAAQF,=
EAAQA,EAAQM,EAAQV,EAAQU,EAAQN,EAAQA,EAAQA,EAAQE,EAAQA,EAAQF,IAAUA,EAAQM,E=
AAQA,EAAQJ,EAAQA,EAAQA,EAAQI,EAAQA,EAAQA,EAAQN,EAAQE,EAAQF,EAAQA,EAAQA,EA=
AQA,EAAQE,EAAQA,EAAQA,EAAQF,EAAQA,EAAQM,EAAQV,EAAQU,EAAQN,EAAQA,EAAQA,EAA=
QA,EAAQE,EAAQF,IAAUA,EAAQM,EAAQA,EAAQJ,EAAQA,EAAQA,EAAQI,EAAQA,EAAQA,EAAQ=
N,EAAQE,EAAQF,EAAQA,EAAQA,EAAQA,EAAQE,EAAQA,EAAQA,EAAQF,EAAQA,EAAQM,EAAQV=
,EAAQU,EAAQJ,EAAQA,EAAQA,EAAQA,EAAQF,EAAQA,IAAUA,EAAQM,EAAQA,EAAQJ,EAAQA,=
EAAQA,EAAQI,EAAQA,EAAQA,EAAQN,EAAQE,EAAQF,EAAQA,EAAQA,EAAQA,EAAQE,EAAQA,E=
AAQA,EAAQF,EAAQA,EAAQM,EAAQV,EAAQU,EAAQN,EAAQA,EAAQA,EAAQE,EAAQA,EAAQF,IA=
AUA,EAAQM,EAAQA,EAAQJ,EAAQA,EAAQA,EAAQI,EAAQA,EAAQA,EAAQN,EAAQE,EAAQF,EAA=
QA,EAAQA,EAAQA,EAAQE,EAAQA,EAAQA,EAAQF,EAAQA,EAAQM,EAAQV,EAAQU,EAAQN,EAAQ=
A,EAAQA,EAAQA,EAAQE,EAAQF,IAAUA,EAAQM,EAAQA,EAAQJ,EAAQA,EAAQA,EAAQI,EAAQA=
,EAAQA,EAAQN,EAAQA,EAAQA,EAAQA,EAAQA,EAAQA,EAAQA,EAAQE,EAAQA,EAAQF,EAAQA,=
EAAQM,EAAQV,EAAQU,EAAQN,EAAQA,EAAQA,EAAQA,EAAQA,EAAQE,MAE7oN3iH,KAAKK,OAK=
H,SAASR,EAAQD,EAASH,IAEH,SAASa,IACrC,WACE,GAAIumH,EAEJA,GAAWpnH,EAAoB,IAE=
/BI,EAAOD,SACL25D,WAAY,WAEV,MADAl5D,MAAKymH,kBACEzmH,KAAK0mH,YAAc,GAE5B3r=
G,MAAO,SAAS1X,EAAK8J,EAAGC,EAAGnM,GACzB,GAAI0lH,GAAIC,EAAIC,EAAI7sG,EAAG8=
sG,EAAI/rG,EAAOgsG,EAAIhtG,EAAGitG,EAAIj9C,EAAOq6B,EAAOhsC,EAAMC,EAAO2mC,=
CAiEpE,OAhEe,OAAX/9F,IACFA,MAEe,gBAANkM,KACTlM,EAAUkM,EACVA,EAAI,MAENA,EA=
A0C,OAArCirD,EAAY,MAALjrD,EAAYA,EAAIlM,EAAQkM,GAAairD,EAAOp4D,KAAKmN,EAC7=
DC,EAA2C,OAAtCirD,EAAa,MAALjrD,EAAYA,EAAInM,EAAQmM,GAAairD,EAAQr4D,KAAKoN=
,EAC1DnN,EAAOoG,SAAShD,KACnB0X,EAAQ/a,KAAKymH,eAAepjH,IAEzB0X,IACHA,EAAQy=
rG,EAASpkH,KAAKiB,EAAK,OAASrD,KAAK0mH,aACzC3rG,EAAMw/C,MAAMv6D,MACPC,EAAO=
oG,SAAShD,KACnBrD,KAAKymH,eAAepjH,GAAO0X,IAG0B,OAApDgvD,EAAQ/pE,KAAK2W,KA=
AKi5E,UAAUwU,EAAQrpF,EAAMynC,SAC7CunB,EAAMq6B,GAASrpF,EAAMovC,KAEvBpwC,EA=
AI9Y,EAAQgV,OAAS8E,EAAM9E,MAC3B+D,EAAI/Y,EAAQiV,QAAU6E,EAAM7E,OACxBjV,EAA=
QgV,QAAUhV,EAAQiV,QAC5B8wG,EAAKjtG,EAAIgB,EAAM9E,MACf8D,EAAIgB,EAAM9E,MAA=
Q+wG,EAClBhtG,EAAIe,EAAM7E,OAAS8wG,GACV/lH,EAAQiV,SAAWjV,EAAQgV,OACpC6wG,=
EAAK9sG,EAAIe,EAAM7E,OACf6D,EAAIgB,EAAM9E,MAAQ6wG,EAClB9sG,EAAIe,EAAM7E,O=
AAS4wG,GACV7lH,EAAQ4hG,OACjB9oF,EAAIgB,EAAM9E,MAAQhV,EAAQ4hG,MAC1B7oF,EAA=
Ie,EAAM7E,OAASjV,EAAQ4hG,OAClB5hG,EAAQyhD,MACjBs8C,EAAQ/9F,EAAQyhD,IAAKmk=
E,EAAK7nB,EAAM,GAAI2nB,EAAK3nB,EAAM,GAC/C4nB,EAAKC,EAAKF,EACVI,EAAKhsG,EA=
AM9E,MAAQ8E,EAAM7E,OACrB6wG,EAAKH,GACP7sG,EAAI8sG,EACJ7sG,EAAI6sG,EAAKE,I=
AET/sG,EAAI2sG,EACJ5sG,EAAI4sG,EAAKI,GAEW,WAAlB9lH,EAAQ4+G,MACV1yG,EAAIA,=
EAAI05G,EAAK,EAAI9sG,EAAI,EACM,UAAlB9Y,EAAQ4+G,QACjB1yG,EAAIA,EAAI05G,EAA=
K9sG,GAEQ,WAAnB9Y,EAAQgmH,OACV75G,EAAIA,EAAIu5G,EAAK,EAAI3sG,EAAI,EACO,WA=
AnB/Y,EAAQgmH,SACjB75G,EAAIA,EAAIu5G,EAAK3sG,IAGbha,KAAKoN,IAAMA,IACbpN,K=
AAKoN,GAAK4M,GAEZha,KAAK+X,OACL/X,KAAKgY,UAAU+B,EAAG,EAAG,GAAIC,EAAG7M,EA=
AGC,EAAI4M,GACnCha,KAAKoY,WAAW,IAAM2C,EAAMynC,MAAQ,OACpCxiD,KAAKyY,UACEzY=
,SAIVL,KAAKK,QAEqBL,KAAKJ,EAASH,EAAoB,GAAGa,SAI7D,SAAST,EAAQD,EAASH,IAEH,=
SAASa,IAOrC,WACE,GAAI0rG,GAAMub,EAAMV,EAAUW,EAAK/lH,CAE/BA,GAAKhC,EAAoB,I=
AEzBusG,EAAOvsG,EAAoB,IAE3B8nH,EAAO9nH,EAAoB,IAE3B+nH,EAAM/nH,EAAoB,IAE1B=
onH,EAAW,WACT,QAASA,MAyBT,MAvBAA,GAASpkH,KAAO,SAASiB,EAAKm/C,GAC5B,GAAIt7=
C,GAAMyG,CACV,IAAI1N,EAAOoG,SAAShD,GAClB6D,EAAO7D,MAEP,IAAIsK,EAAQ,wBAAwB=
2qB,KAAKj1B,GACvC6D,EAAO,GAAIjH,GAAO0N,EAAM,GAAI,cAG5B,IADAzG,EAAO9F,EAAG=
4mE,aAAa3kE,IAClB6D,EACH,MAIN,IAAgB,MAAZA,EAAK,IAA2B,MAAZA,EAAK,GAC3B,MAA=
O,IAAIggH,GAAKhgH,EAAMs7C,EACjB,IAAgB,MAAZt7C,EAAK,IAAgD,QAAjCA,EAAKzC,SA=
AS,QAAS,EAAG,GACvD,MAAO,IAAI0iH,GAAIjgH,EAAMs7C,EAErB,MAAM,IAAIz5C,OAAM,0=
BAIby9G,KAIThnH,EAAOD,QAAUinH,IAEhB7mH,KAAKK,QAEqBL,KAAKJ,EAASH,EAAoB,GAA=
Ga,SAI7D,SAAST,EAAQD,EAASH,IAG/B,WACE,GAAI8nH,GAAM9lH,EACRu8G,KAAe9vG,SAA=
W,SAASL,GAAQ,IAAK,GAAIxH,GAAI,EAAG2M,EAAI3S,KAAKsF,OAAYqN,EAAJ3M,EAAOA,IA=
AO,GAAIA,IAAKhG,OAAQA,KAAKgG,KAAOwH,EAAM,MAAOxH,EAAK,OAAO,GAElJ5E,GAAKhC,=
EAAoB,IAEzB8nH,EAAO,WAKL,QAASA,GAAKhgH,EAAMs7C,GAClB,GAAI4kE,GAAU3oE,EAAQ=
lxC,CAGtB,IAFAvN,KAAKkH,KAAOA,EACZlH,KAAKwiD,MAAQA,EACqB,QAA9BxiD,KAAKkH,=
KAAKgI,aAAa,GACzB,KAAM,uBAGR,KADA3B,EAAM,EACCA,EAAMvN,KAAKkH,KAAK5B,SACrB=
m5C,EAASz+C,KAAKkH,KAAKgI,aAAa3B,GAChCA,GAAO,IACHowG,EAAUh+G,KAAK0nH,EAAS=
5oE,IAAW,KAGvClxC,GAAOvN,KAAKkH,KAAKgI,aAAa3B,EAEhC,IAAIowG,EAAUh+G,KAAK0=
nH,EAAS5oE,GAAU,EACpC,KAAM,eAERlxC,IAAO,EACPvN,KAAK2tD,KAAO3tD,KAAKkH,KAA=
KqG,KACtBvN,KAAKkW,OAASlW,KAAKkH,KAAKgI,aAAa3B,GACrCA,GAAO,EACPvN,KAAKiW,=
MAAQjW,KAAKkH,KAAKgI,aAAa3B,GACpCA,GAAO,EACP65G,EAAWpnH,KAAKkH,KAAKqG,KAC=
rBvN,KAAKsnH,WAAa,WAChB,OAAQF,GACN,IAAK,GACH,MAAO,YACT,KAAK,GACH,MAAO,WAC=
T,KAAK,GACH,MAAO,iBAGbpnH,KAAKmqD,IAAM,KAxCb,GAAIk9D,EA+DJ,OA7DAA,IAAW,MA=
AQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,OAyC3=
HH,EAAKnmH,UAAUw5D,MAAQ,SAASv3D,GAC9B,MAAIhD,MAAKmqD,IAAT,QAGAnqD,KAAKmqD=
,IAAMnnD,EAASia,KAClBC,KAAM,UACN2iF,QAAS,QACT0nB,iBAAkBvnH,KAAK2tD,KACvB6=
5D,MAAOxnH,KAAKiW,MACZwxG,OAAQznH,KAAKkW,OACbkqF,WAAYpgG,KAAKsnH,WACjB59C=
,OAAQ,cAEc,eAApB1pE,KAAKsnH,aACPtnH,KAAKmqD,IAAIjjD,KAAa,QAAK,EAAK,EAAK,E=
AAK,EAAK,EAAK,EAAK,EAAK,IAEhElH,KAAKmqD,IAAIpoD,IAAI/B,KAAKkH,MACXlH,KAAK=
kH,KAAO,OAGdggH,KAIT1nH,EAAOD,QAAU2nH,IAEhBvnH,KAAKK,OAKH,SAASR,EAAQD,EAA=
SH,IAEH,SAASa,IACrC,WACE,GAAIknH,GAAKO,EAAUt+C,CAEnBA,GAAOhqE,EAAoB,IAE3B=
+nH,EAAM/nH,EAAoB,KAE1BsoH,EAAW,WACT,QAASA,GAASxgH,EAAMs7C,GACtBxiD,KAAKw=
iD,MAAQA,EACbxiD,KAAK+a,MAAQ,GAAIosG,GAAIjgH,GACrBlH,KAAKiW,MAAQjW,KAAK+a=
,MAAM9E,MACxBjW,KAAKkW,OAASlW,KAAK+a,MAAM7E,OACzBlW,KAAK2nH,QAAU3nH,KAAK+=
a,MAAM4sG,QAC1B3nH,KAAKmqD,IAAM,KAwIb,MArIAu9D,GAAS3mH,UAAUw5D,MAAQ,SAASv=
3D,GAClC,GAAI2oD,GAAMi8D,EAAS53C,EAAQ63C,EAAK/5G,EAAKX,EAAG0sD,EAAIC,CAE5=
C,IADA95D,KAAKgD,SAAWA,GACZhD,KAAKmqD,IAAT,CA4BA,GAzBAnqD,KAAKmqD,IAAMnnD=
,EAASia,KAClBC,KAAM,UACN2iF,QAAS,QACT0nB,iBAAkBvnH,KAAK+a,MAAM4yC,KAC7B65=
D,MAAOxnH,KAAKiW,MACZwxG,OAAQznH,KAAKkW,OACbwzD,OAAQ,gBAEL1pE,KAAK+a,MAAM=
+sG,kBACd93C,EAAShtE,EAASia,KAChB8qG,UAAW,GACXC,OAAQhoH,KAAK+a,MAAM+uE,OA=
CnBy9B,iBAAkBvnH,KAAK+a,MAAM4yC,KAC7Bs6D,QAASjoH,KAAKiW,QAEhBjW,KAAKmqD,I=
AAIjjD,KAAkB,YAAI8oE,EAC/BA,EAAOjuE,OAEyB,IAA9B/B,KAAK+a,MAAM6sG,QAAQtiH,=
OACrBtF,KAAKmqD,IAAIjjD,KAAiB,WAAIlH,KAAK+a,MAAMusG,YAEzCM,EAAU5kH,EAASia=
,MACnB2qG,EAAQ7lH,IAAI,GAAI9B,GAAOD,KAAK+a,MAAM6sG,UAClC5nH,KAAKmqD,IAAIj=
jD,KAAiB,YAAK,UAAW,YAAclH,KAAK+a,MAAM6sG,QAAQtiH,OAAS,EAAK,EAAGsiH,IAE1F5=
nH,KAAK+a,MAAMmtG,aAAaC,UAE1B,MADAr6G,GAAM9N,KAAK+a,MAAMmtG,aAAaE,UACvBpo=
H,KAAKmqD,IAAIjjD,KAAW,MAAK4G,EAAKA,EAChC,IAAI9N,KAAK+a,MAAMmtG,aAAaL,IAA=
K,CAGtC,IAFAA,EAAM7nH,KAAK+a,MAAMmtG,aAAaL,IAC9Bl8D,KACKkO,EAAK,EAAGC,EAA=
O+tD,EAAIviH,OAAaw0D,EAALD,EAAWA,IACzC1sD,EAAI06G,EAAIhuD,GACRlO,EAAK/pD,=
KAAKuL,EAAGA,EAEf,OAAOnN,MAAKmqD,IAAIjjD,KAAW,KAAIykD,EAC1B,MAAI3rD,MAAK+=
a,MAAMmtG,aAAaG,QAC1BroH,KAAKsoH,0BACHtoH,KAAK+a,MAAM+sG,gBACb9nH,KAAKuoH=
,oBAELvoH,KAAKupE,aAIhBm+C,EAAS3mH,UAAUwoE,SAAW,WAC5B,GAAIu1B,EAiBJ,OAhBI=
9+F,MAAKwoH,eACP1pB,EAAQ9+F,KAAKgD,SAASia,KACpBC,KAAM,UACN2iF,QAAS,QACT4n=
B,OAAQznH,KAAKkW,OACbsxG,MAAOxnH,KAAKiW,MACZsxG,iBAAkB,EAClB79C,OAAQ,cACR=
02B,WAAY,aACZqoB,QAAS,EAAG,KAEd3pB,EAAM/8F,IAAI/B,KAAKwoH,cACfxoH,KAAKmqD=
,IAAIjjD,KAAY,MAAI43F,GAE3B9+F,KAAKmqD,IAAIpoD,IAAI/B,KAAK2nH,SAClB3nH,KA=
AK+a,MAAQ,KACN/a,KAAK2nH,QAAU,MAGxBD,EAAS3mH,UAAUwnH,kBAAoB,WACrC,MAAOvoH=
,MAAK+a,MAAM2tG,aAAa,SAAUvvE,GACvC,MAAO,UAASwvE,GACd,GAAIz7G,GAAGs7G,EAAc=
I,EAAerhD,EAAMvhE,EAAG2hH,EAAS//G,EAAK9H,EAAG+oH,CAO9D,KANAD,EAAgBzvE,EAA=
Mp+B,MAAM+uE,OAAS3wC,EAAMp+B,MAAM4yC,KAAO,EACxDk7D,EAAa1vE,EAAMljC,MAAQkj=
C,EAAMjjC,OACjCyxG,EAAU,GAAI1nH,GAAO4oH,EAAaD,GAClCJ,EAAe,GAAIvoH,GAAO4oH=
,GAC1B7iH,EAAIlG,EAAIoN,EAAI,EACZtF,EAAM+gH,EAAOrjH,OACFsC,EAAJ5B,GACL2hH=
,EAAQ7nH,KAAO6oH,EAAO3iH,KACtB2hH,EAAQ7nH,KAAO6oH,EAAO3iH,KACtB2hH,EAAQ7n=
H,KAAO6oH,EAAO3iH,KACtBwiH,EAAat7G,KAAOy7G,EAAO3iH,IAY7B,OAVAuhE,GAAO,EAC=
P6B,EAAKK,QAAQk+C,EAAS,SAASxtD,EAAKwtD,GAElC,GADAxuE,EAAMwuE,QAAUA,EACZxt=
D,EACF,KAAMA,EAER,OAAe,OAAToN,EACGpuB,EAAMowB,WADf,SAIKH,EAAKK,QAAQ++C,EA=
Ac,SAASruD,EAAKquD,GAE9C,GADArvE,EAAMqvE,aAAeA,EACjBruD,EACF,KAAMA,EAER,O=
AAe,OAAToN,EACGpuB,EAAMowB,WADf,WAKHvpE,QAGL0nH,EAAS3mH,UAAUunH,wBAA0B,SA=
ASr3F,GACpD,GAAIi3F,EAEJ,OADAA,GAAeloH,KAAK+a,MAAMmtG,aAAaG,QAChCroH,KAAK=
+a,MAAM2tG,aAAa,SAAUvvE,GACvC,MAAO,UAASwvE,GACd,GAAIH,GAAcxiH,EAAG0F,EAAG=
muD,EAAIzB,CAG5B,KAFAowD,EAAe,GAAIvoH,GAAOk5C,EAAMljC,MAAQkjC,EAAMjjC,QAC=
9ClQ,EAAI,EACC0F,EAAImuD,EAAK,EAAGzB,EAAOuwD,EAAOrjH,OAAa8yD,EAALyB,EAAWn=
uD,EAAImuD,GAAM,EAC1D2uD,EAAaxiH,KAAOkiH,EAAaS,EAAOj9G,GAE1C,OAAO09D,GAAK=
K,QAAQ++C,EAAc,SAASruD,EAAKquD,GAE9C,GADArvE,EAAMqvE,aAAeA,EACjBruD,EACF,=
KAAMA,EAER,OAAOhhB,GAAMowB,eAGhBvpE,QAGE0nH,KAITloH,EAAOD,QAAUmoH,IAEhB/n=
H,KAAKK,QAEqBL,KAAKJ,EAASH,EAAoB,GAAGa,SAI7D,SAAST,EAAQD,EAASH,IAEH,SAASa=
,IAuBrC,WACE,GAAIknH,GAAK/lH,EAAIgoE,CAEbhoE,GAAKhC,EAAoB,IAEzBgqE,EAAOhq=
E,EAAoB,IAE3BI,EAAOD,QAAU4nH,EAAM,WAkBrB,QAASA,GAAIjgH,GACX,GAAI0kE,GAAWk=
e,EAAQ9jF,EAAGmY,EAAOwF,EAAKo4F,EAAS+M,EAAO3wG,EAAM0hD,EAAIsP,EAAI/Q,CAOp=
E,KANAp4D,KAAKkH,KAAOA,EACZlH,KAAKuN,IAAM,EACXvN,KAAK4nH,WACL5nH,KAAK2nH,=
WACL3nH,KAAKkoH,gBACLloH,KAAKmY,UACQ,CAUX,OATAyzD,EAAY5rE,KAAKkuG,aACjB6N=
,EAAW,WACT,GAAIliD,GAAIR,CAER,KADAA,KACKrzD,EAAI6zD,EAAK,EAAQ,EAALA,EAAQ7=
zD,IAAM6zD,EAC7BR,EAASz3D,KAAKgJ,OAAOC,aAAa7K,KAAKkH,KAAKlH,KAAKuN,QAEnD,=
OAAO8rD,IACN15D,KAAKK,MAAO4N,KAAK,KAElB,IAAK,OACH5N,KAAKiW,MAAQjW,KAAKkuG=
,aAClBluG,KAAKkW,OAASlW,KAAKkuG,aACnBluG,KAAK2tD,KAAO3tD,KAAKkH,KAAKlH,KA=
AKuN,OAC3BvN,KAAK+oH,UAAY/oH,KAAKkH,KAAKlH,KAAKuN,OAChCvN,KAAKgpH,kBAAoBh=
pH,KAAKkH,KAAKlH,KAAKuN,OACxCvN,KAAKipH,aAAejpH,KAAKkH,KAAKlH,KAAKuN,OACn=
CvN,KAAKkpH,gBAAkBlpH,KAAKkH,KAAKlH,KAAKuN,MACtC,MACF,KAAK,OACHvN,KAAK4nH=
,QAAU5nH,KAAK8P,KAAK87D,EACzB,MACF,KAAK,OACH,IAAK5lE,EAAI6zD,EAAK,EAAQ+R,=
EAAL/R,EAAgB7zD,EAAI6zD,GAAM,EACzC75D,KAAK2nH,QAAQ/lH,KAAK5B,KAAKkH,KAAKl=
H,KAAKuN,OAEnC,MACF,KAAK,OAEH,OADAvN,KAAKkoH,gBACGloH,KAAK+oH,WACX,IAAK,G=
AGH,GAFA/oH,KAAKkoH,aAAaG,QAAUroH,KAAK8P,KAAK87D,GACtCk9C,EAAQ,IAAM9oH,KA=
AKkoH,aAAaG,QAAQ/iH,OACpCwjH,EAAQ,EACV,IAAK9iH,EAAImjE,EAAK,EAAQ2/C,GAAL,=
EAAkBA,EAAL3/C,EAAaA,EAAK2/C,EAAO9iH,EAAS8iH,GAAL,IAAe3/C,IAAOA,EAC/EnpE,=
KAAKkoH,aAAaG,QAAQzmH,KAAK,IAGnC,MACF,KAAK,GACH5B,KAAKkoH,aAAaC,UAAYnoH,K=
AAK8P,KAAK87D,GAAW,EACnD,MACF,KAAK,GACH5rE,KAAKkoH,aAAaL,IAAM7nH,KAAK8P,K=
AAK87D,GAEtC,KACF,KAAK,OACHzzD,EAAOnY,KAAK8P,KAAK87D,GACjBztD,EAAQhG,EAAK=
tK,QAAQ,GACrB8V,EAAM/Y,OAAOC,aAAaC,MAAMF,OAAQuN,EAAKrO,MAAM,EAAGqU,IACtDn=
e,KAAKmY,KAAKwL,GAAO/Y,OAAOC,aAAaC,MAAMF,OAAQuN,EAAKrO,MAAMqU,EAAQ,GACtE,=
MACF,KAAK,OAwBH,MAvBAne,MAAK8pF,OAAS,WACZ,OAAQ9pF,KAAK+oH,WACX,IAAK,GACL,=
IAAK,GACL,IAAK,GACH,MAAO,EACT,KAAK,GACL,IAAK,GACH,MAAO,KAEVppH,KAAKK,MACR=
A,KAAK8nH,gBAA8C,KAA3B1vD,EAAOp4D,KAAK+oH,YAA6B,IAAT3wD,EACxD0xB,EAAS9pF,=
KAAK8pF,QAAU9pF,KAAK8nH,gBAAkB,EAAI,GACnD9nH,KAAKmpH,eAAiBnpH,KAAK2tD,KAA=
Om8B,EAClC9pF,KAAKsnH,WAAa,WAChB,OAAQtnH,KAAK8pF,QACX,IAAK,GACH,MAAO,YACT=
,KAAK,GACH,MAAO,cAEVnqF,KAAKK,WACRA,KAAK2nH,QAAU,GAAI1nH,GAAOD,KAAK2nH,SA=
EjC,SACE3nH,KAAKuN,KAAOq+D,EAGhB,GADA5rE,KAAKuN,KAAO,EACRvN,KAAKuN,IAAMvN=
,KAAKkH,KAAK5B,OACvB,KAAM,IAAIyD,OAAM,mCA6KtB,MAxRAo+G,GAAIr1G,OAAS,SAASu=
Y,EAAM4G,GAC1B,MAAO7vB,GAAGgoH,SAAS/+F,EAAM,SAAS8vC,EAAKg5C,GACrC,GAAIkW,=
EAEJ,OADAA,GAAM,GAAIlC,GAAIhU,GACPkW,EAAIv3G,OAAO,SAAS62G,GACzB,MAAO13F,G=
AAG03F,QAKhBxB,EAAImC,KAAO,SAASj/F,GAClB,GAAI8oF,EAEJ,OADAA,GAAO/xG,EAAG4=
mE,aAAa39C,GAChB,GAAI88F,GAAIhU,IAoGjBgU,EAAIpmH,UAAU+O,KAAO,SAAS5E,GAC5B=
,GAAIlF,GAAG6zD,EAAIR,CAEX,KADAA,KACKrzD,EAAI6zD,EAAK,EAAQ3uD,GAAL,EAAkBA=
,EAAL2uD,EAAaA,EAAK3uD,EAAOlF,EAASkF,GAAL,IAAe2uD,IAAOA,EAC/ER,EAASz3D,KA=
AK5B,KAAKkH,KAAKlH,KAAKuN,OAE/B,OAAO8rD,IAGT8tD,EAAIpmH,UAAUmtG,WAAa,WACz=
B,GAAIC,GAAIC,EAAIC,EAAIC,CAKhB,OAJAH,GAAKnuG,KAAKkH,KAAKlH,KAAKuN,QAAU,G=
AC9B6gG,EAAKpuG,KAAKkH,KAAKlH,KAAKuN,QAAU,GAC9B8gG,EAAKruG,KAAKkH,KAAKlH,=
KAAKuN,QAAU,EAC9B+gG,EAAKtuG,KAAKkH,KAAKlH,KAAKuN,OACb4gG,EAAKC,EAAKC,EAA=
KC,GAGxB6Y,EAAIpmH,UAAU4tG,WAAa,WACzB,GAAIR,GAAIC,CAGR,OAFAD,GAAKnuG,KAAK=
kH,KAAKlH,KAAKuN,QAAU,EAC9B6gG,EAAKpuG,KAAKkH,KAAKlH,KAAKuN,OACb4gG,EAAKC=
,GAGd+Y,EAAIpmH,UAAU2nH,aAAe,SAASz3F,GACpC,GAAIkoB,GAAQn5C,IACZ,OAAOopE,G=
AAKsG,QAAQ1vE,KAAK2nH,QAAS,SAASxtD,EAAKjzD,GAC9C,GAAI4mG,GAAMjuG,EAAGmlD,=
EAAKh/C,EAAG5C,EAAMkC,EAAQxF,EAAGypH,EAAIC,EAAOC,EAAIC,EAAIC,EAAYhB,EAAQp=
7G,EAAK+3C,EAAKskE,EAAgB/7E,EAAOg8E,EAAWhwD,EAAIsP,EAAI2rC,EAAIa,EAAIQ,CA=
CzI,IAAIh8C,EACF,KAAMA,EASR,KAPAwvD,EAAaxwE,EAAMgwE,eAAiB,EACpCS,EAAiBD,E=
AAaxwE,EAAMljC,MACpC0yG,EAAS,GAAI1oH,GAAO2pH,EAAiBzwE,EAAMjjC,QAC3C5Q,EAA=
S4B,EAAK5B,OACdggD,EAAM,EACN/3C,EAAM,EACN1N,EAAI,EACSyF,EAANiI,GAAc,CACnB=
,OAAQrG,EAAKqG,MACX,IAAK,GACH,IAAKvH,EAAI6zD,EAAK,EAAQ+vD,EAAL/vD,EAAqB7z=
D,EAAI6zD,GAAM,EAC9C8uD,EAAO9oH,KAAOqH,EAAKqG,IAErB,MACF,KAAK,GACH,IAAKvH=
,EAAImjE,EAAK,EAAQygD,EAALzgD,EAAqBnjE,EAAImjE,GAAM,EAC9C2kC,EAAO5mG,EAAK=
qG,KACZnK,EAAWumH,EAAJ3jH,EAAiB,EAAI2iH,EAAO9oH,EAAI8pH,GACvChB,EAAO9oH,M=
AAQiuG,EAAO1qG,GAAQ,GAEhC,MACF,KAAK,GACH,IAAK4C,EAAI8uG,EAAK,EAAQ8U,EAAL9=
U,EAAqB9uG,EAAI8uG,GAAM,EAC9ChH,EAAO5mG,EAAKqG,KACZy3C,GAAOh/C,EAAKA,EAAI=
2jH,GAAeA,EAC/B97E,EAAQyX,GAAOqjE,GAAQrjE,EAAM,GAAKskE,EAAiB5kE,EAAM2kE,E=
AAc3jH,EAAI2jH,GAC3EhB,EAAO9oH,MAAQguC,EAAQigE,GAAQ,GAEjC,MACF,KAAK,GACH,=
IAAK9nG,EAAI2vG,EAAK,EAAQiU,EAALjU,EAAqB3vG,EAAI2vG,GAAM,EAC9C7H,EAAO5mG,=
EAAKqG,KACZy3C,GAAOh/C,EAAKA,EAAI2jH,GAAeA,EAC/BvmH,EAAWumH,EAAJ3jH,EAAiB=
,EAAI2iH,EAAO9oH,EAAI8pH,GACvC97E,EAAQyX,GAAOqjE,GAAQrjE,EAAM,GAAKskE,EAA=
iB5kE,EAAM2kE,EAAc3jH,EAAI2jH,GAC3EhB,EAAO9oH,MAAQiuG,EAAO/jG,KAAKqG,OAAO=
hN,EAAOyqC,GAAS,IAAM,GAE1D,MACF,KAAK,GACH,IAAK7nC,EAAImwG,EAAK,EAAQyT,EAA=
LzT,EAAqBnwG,EAAImwG,GAAM,EAC9CrI,EAAO5mG,EAAKqG,KACZy3C,GAAOh/C,EAAKA,EA=
AI2jH,GAAeA,EAC/BvmH,EAAWumH,EAAJ3jH,EAAiB,EAAI2iH,EAAO9oH,EAAI8pH,GAC3B,=
IAARrkE,EACFzX,EAAQg8E,EAAY,GAEpBh8E,EAAQ86E,GAAQrjE,EAAM,GAAKskE,EAAiB5k=
E,EAAM2kE,EAAc3jH,EAAI2jH,GACpEE,EAAY7kE,GAAO2jE,GAAQrjE,EAAM,GAAKskE,GAA=
kB5kE,EAAM,GAAK2kE,EAAc3jH,EAAI2jH,IAEvF7pH,EAAIsD,EAAOyqC,EAAQg8E,EACnBN=
,EAAKx/G,KAAKoK,IAAIrU,EAAIsD,GAClBqmH,EAAK1/G,KAAKoK,IAAIrU,EAAI+tC,GACl=
B67E,EAAK3/G,KAAKoK,IAAIrU,EAAI+pH,GAEhBL,EADQC,GAANF,GAAkBG,GAANH,EACNnm=
H,EACOsmH,GAAND,EACD57E,EAEAg8E,EAEVlB,EAAO9oH,MAAQiuG,EAAO0b,GAAS,GAEjC,=
MACF,SACE,KAAM,IAAIzgH,OAAM,6BAA+B7B,EAAKqG,EAAM,IAE9D+3C,IAEF,MAAOr0B,GA=
AG03F,MAIdxB,EAAIpmH,UAAU+oH,cAAgB,WAC5B,GAAIjqH,GAAGmG,EAAGV,EAAQsiH,EAA=
Sr6G,EAAKxC,EAAKm9G,EAAcruD,EAAIzB,EAAMC,CAO7D,KANAuvD,EAAU5nH,KAAK4nH,QA=
CfM,EAAeloH,KAAKkoH,aAAaG,YACjCt9G,EAAM,GAAI9K,GAAOioH,EAAa5iH,OAASsiH,EA=
AQtiH,QAC/CiI,EAAM,EACNjI,EAASsiH,EAAQtiH,OACjBzF,EAAI,EACCmG,EAAI6zD,EAA=
K,EAAGzB,EAAOwvD,EAAQtiH,OAAa8yD,EAALyB,EAAW7zD,EAAI6zD,GAAM,EAC3D9uD,EAA=
IwC,KAASq6G,EAAQ5hH,GACrB+E,EAAIwC,KAASq6G,EAAQ5hH,EAAI,GACzB+E,EAAIwC,KA=
ASq6G,EAAQ5hH,EAAI,GACzB+E,EAAIwC,KAAwC,OAA9B8qD,EAAQ6vD,EAAaroH,MAAgBw4D=
,EAAQ,GAE7D,OAAOttD,IAGTo8G,EAAIpmH,UAAUgpH,gBAAkB,SAASC,EAAWrB,GAClD,GAA=
IsB,GAAOngC,EAAQ5iF,EAAMlB,EAAG0xB,EAAOhsB,EAAGyjD,EAAG7pD,EAAQsiH,EAASv5=
G,EAAG+pD,CAa7D,IAZA0xB,EAAS9pF,KAAK8pF,OACd89B,EAAU,KACVqC,EAAQjqH,KAAK8=
nH,gBACT9nH,KAAK4nH,QAAQtiH,SACfsiH,EAA2C,OAAhCxvD,EAAOp4D,KAAKkqH,iBAA2B=
9xD,EAAOp4D,KAAKkqH,gBAAkBlqH,KAAK8pH,gBACrFhgC,EAAS,EACTmgC,GAAQ,GAEV/iH=
,GAAqB,MAAb8iH,EAAoBA,EAAU9iH,KAAO,SAAW8iH,EACxD1kH,EAAS4B,EAAK5B,OACdoyB=
,EAAQkwF,GAAWe,EACnB3iH,EAAI0F,EAAI,EACO,IAAXo+E,EACF,KAAWxkF,EAAJU,GACLm=
pD,EAAIy4D,EAA0B,EAAhBe,EAAO3iH,EAAI,GAAS0F,EAClC2C,EAAIqpB,EAAMy3B,KACVj=
oD,EAAKlB,KAAOqI,EACZnH,EAAKlB,KAAOqI,EACZnH,EAAKlB,KAAOqI,EACZnH,EAAKlB,=
KAAOikH,EAAQvyF,EAAMy3B,KAAO,IACjCzjD,EAAIyjD,MAGN,MAAW7pD,EAAJU,GACLmpD,=
EAAIy4D,EAA0B,EAAhBe,EAAO3iH,EAAI,GAAS0F,EAClCxE,EAAKlB,KAAO0xB,EAAMy3B,K=
AClBjoD,EAAKlB,KAAO0xB,EAAMy3B,KAClBjoD,EAAKlB,KAAO0xB,EAAMy3B,KAClBjoD,E=
AAKlB,KAAOikH,EAAQvyF,EAAMy3B,KAAO,IACjCzjD,EAAIyjD,GAKVg4D,EAAIpmH,UAAU+=
Q,OAAS,SAASmf,GAC9B,GAAIlmB,GACFouC,EAAQn5C,IAEV,OADA+K,GAAM,GAAI9K,GAAOD=
,KAAKiW,MAAQjW,KAAKkW,OAAS,GACrClW,KAAK0oH,aAAa,SAASC,GAEhC,MADAxvE,GAAM4=
wE,gBAAgBh/G,EAAK49G,GACpB13F,EAAGlmB,MAIPo8G,OAIRxnH,KAAKK,QAEqBL,KAAKJ,=
EAASH,EAAoB,GAAGa,SAI7D,SAAST,EAAQD,IAGtB,WACEC,EAAOD,SACL4qH,SAAU,SAASh9=
G,EAAGC,EAAG2M,EAAGC,EAAG/Y,GAC7B,GAAI0iB,GAAK1G,EAAKnP,CACd7M,GAAQic,KAA=
O,QACfjc,EAAQmpH,KAAOpqH,KAAKqqH,aAAal9G,EAAGC,EAAG2M,EAAGC,GAC1C/Y,EAAQq=
pH,QAAU,EAAG,EAAG,GACA,SAApBrpH,EAAQ4+F,SACO,MAAb5+F,EAAQsyC,IACVtyC,EAAQ=
syC,EAAIvzC,KAAKk0F,gBAAgBjzF,EAAQ6W,QAAU,EAAG,EAAG,WAGtD7W,GAAQ6W,MACa,g=
BAAjB7W,GAAQspH,OACjBtpH,EAAQspH,KAAO,GAAI3/G,QAAO3J,EAAQspH,MAEpC,KAAK5m=
G,IAAO1iB,GACV6M,EAAM7M,EAAQ0iB,GACd1iB,EAAQ0iB,EAAI,GAAG3N,cAAgB2N,EAAI7=
Z,MAAM,IAAMgE,CAKjD,OAHAmP,GAAMjd,KAAKid,IAAIhc,GACfjB,KAAK2W,KAAKu5E,YAA=
YtuF,KAAKqb,GAC3BA,EAAIlb,MACG/B,MAETwqH,KAAM,SAASr9G,EAAGC,EAAG2M,EAAGC,=
EAAGwyF,EAAUvrG,GAUnC,MATe,OAAXA,IACFA,MAEFA,EAAQ4+F,QAAU,OAClB5+F,EAAQqv=
F,SAAW,GAAI1lF,QAAO4hG,GAC9BvrG,EAAQwpH,KAAO,UACM,MAAjBxpH,EAAQ6W,QACV7W,=
EAAQ6W,OAAS,IAAK,IAAK,KAEtB9X,KAAKmqH,SAASh9G,EAAGC,EAAG2M,EAAGC,EAAG/Y,I=
AEnCuX,KAAM,SAASrL,EAAGC,EAAG2M,EAAGC,EAAG0wG,EAAKzpH,GAU9B,MATe,OAAXA,IA=
CFA,MAEFA,EAAQ4+F,QAAU,OAClB5+F,EAAQoyC,EAAIrzC,KAAKid,KACfE,EAAG,MACHwtG=
,IAAK,GAAI//G,QAAO8/G,KAElBzpH,EAAQoyC,EAAEtxC,MACH/B,KAAKmqH,SAASh9G,EAA=
GC,EAAG2M,EAAGC,EAAG/Y,IAEnC2pH,QAAS,SAASz9G,EAAGC,EAAG2M,EAAGC,EAAG/Y,GA=
C5B,GAAIkZ,GAAIG,EAAIF,EAAIG,EAAI69C,CAOpB,OANe,OAAXn3D,IACFA,MAEFm3D,EAA=
Op4D,KAAKqqH,aAAal9G,EAAGC,EAAG2M,EAAGC,GAAIG,EAAKi+C,EAAK,GAAIh+C,EAAKg+=
C,EAAK,GAAI99C,EAAK89C,EAAK,GAAI79C,EAAK69C,EAAK,GAC1Fn3D,EAAQ4pH,YAAc1wG=
,EAAII,EAAID,EAAIC,EAAIJ,EAAIC,EAAIE,EAAIF,GAClDnZ,EAAQqvF,SAAW,GAAI1lF,Q=
AChB5K,KAAKmqH,SAASh9G,EAAGC,EAAG2M,EAAGC,EAAG/Y,IAEnC6pH,UAAW,SAAS39G,EA=
AGC,EAAG2M,EAAGC,EAAG/Y,GAQ9B,MAPe,OAAXA,IACFA,MAEFA,EAAQ4+F,QAAU,YACG,MA=
AjB5+F,EAAQ6W,QACV7W,EAAQ6W,OAAS,IAAK,IAAK,MAEtB9X,KAAK4qH,QAAQz9G,EAAGC,=
EAAG2M,EAAGC,EAAG/Y,IAElCkrF,UAAW,SAASh/E,EAAGC,EAAG2M,EAAGC,EAAG/Y,GAK9B=
,MAJe,OAAXA,IACFA,MAEFA,EAAQ4+F,QAAU,YACX7/F,KAAK4qH,QAAQz9G,EAAGC,EAAG2M=
,EAAGC,EAAG/Y,IAElCk/G,OAAQ,SAAShzG,EAAGC,EAAG2M,EAAGC,EAAG/Y,GAK3B,MAJe,=
OAAXA,IACFA,MAEFA,EAAQ4+F,QAAU,YACX7/F,KAAK4qH,QAAQz9G,EAAGC,EAAG2M,EAAGC=
,EAAG/Y,IAElC8pH,eAAgB,SAAS5wG,EAAIC,EAAIE,EAAIC,EAAItZ,GAOvC,MANe,OAAXA,=
IACFA,MAEFA,EAAQ4+F,QAAU,OAClB5+F,EAAQqvF,SAAW,GAAI1lF,QACvB3J,EAAQyR,GAA=
KyH,EAAIna,KAAK2W,KAAKT,OAASkE,EAAIE,EAAIta,KAAK2W,KAAKT,OAASqE,GACxDva,K=
AAKmqH,SAAShwG,EAAIC,EAAIE,EAAIC,EAAItZ,IAEvC+pH,eAAgB,SAAS79G,EAAGC,EAAG=
2M,EAAGC,EAAG/Y,GAMnC,MALe,OAAXA,IACFA,MAEFA,EAAQ4+F,QAAU,SAClB5+F,EAAQqv=
F,SAAW,GAAI1lF,QAChB5K,KAAKmqH,SAASh9G,EAAGC,EAAG2M,EAAGC,EAAG/Y,IAEnCgqH=
,kBAAmB,SAAS99G,EAAGC,EAAG2M,EAAGC,EAAG/Y,GAMtC,MALe,OAAXA,IACFA,MAEFA,EA=
AQ4+F,QAAU,SAClB5+F,EAAQqvF,SAAW,GAAI1lF,QAChB5K,KAAKmqH,SAASh9G,EAAGC,EA=
AG2M,EAAGC,EAAG/Y,IAEnCiqH,eAAgB,SAAS/9G,EAAGC,EAAG2M,EAAGC,EAAG7B,EAAMlX=
,GAOzC,MANe,OAAXA,IACFA,MAEFA,EAAQ4+F,QAAU,WAClB5+F,EAAQqvF,SAAW,GAAI1lF,=
QAAOuN,GAC9BlX,EAAQkqH,GAAK,GAAIvgH,QACV5K,KAAKmqH,SAASh9G,EAAGC,EAAG2M,E=
AAGC,EAAG/Y,IAEnCopH,aAAc,SAASlwG,EAAIC,EAAIL,EAAGC,GAChC,GAAIokF,GAAIC,E=
AAIG,EAAIG,EAAIC,EAAIC,EAAIvkF,EAAIC,EAAI69C,CASpC,OARA79C,GAAKH,EACLA,GA=
AMJ,EACNM,EAAKH,EAAKJ,EACVq+C,EAAOp4D,KAAK05D,KAAM0kC,EAAKhmC,EAAK,GAAIim=
C,EAAKjmC,EAAK,GAAIomC,EAAKpmC,EAAK,GAAIumC,EAAKvmC,EAAK,GAAIwmC,EAAKxmC,=
EAAK,GAAIymC,EAAKzmC,EAAK,GAClGj+C,EAAKikF,EAAKjkF,EAAKqkF,EAAKpkF,EAAKwk=
F,EACzBxkF,EAAKikF,EAAKlkF,EAAKwkF,EAAKvkF,EAAKykF,EACzBvkF,EAAK8jF,EAAK9=
jF,EAAKkkF,EAAKjkF,EAAKqkF,EACzBrkF,EAAK8jF,EAAK/jF,EAAKqkF,EAAKpkF,EAAKs=
kF,GACjB1kF,EAAIC,EAAIE,EAAIC,OAIvB5a,KAAKK,OAKH,SAASR,EAAQD,GAEtBC,EAAOD=
,SACNkxF,OAAQ,QAAS,SACjBC,OAAQ,QAAS,SACjBC,IAAK,QAAS,SACdC,IAAK,QAAS,SACd=
C,IAAK,QAAS,SACdC,IAAK,OAAQ,SACbC,IAAK,OAAQ,QACbC,IAAK,OAAQ,QACbC,IAAK,OA=
AQ,QACbC,IAAK,OAAQ,QACbC,IAAK,MAAQ,QACbC,IAAK,OAAQ,OACbC,KAAM,KAAO,QACbC,=
IAAK,QAAS,SACdC,IAAK,QAAS,SACdC,IAAK,QAAS,SACdC,IAAK,QAAS,SACdC,IAAK,OAAQ=
,SACbC,IAAK,MAAQ,QACbC,IAAK,OAAQ,OACbC,IAAK,OAAQ,QACbC,IAAK,OAAQ,QACbC,IA=
AK,OAAQ,QACbC,KAAM,MAAO,QACbC,IAAK,QAAS,SACdC,IAAK,QAAS,SACdC,IAAK,QAAS,S=
ACdC,IAAK,OAAQ,SACbC,IAAK,OAAQ,QACbC,IAAK,OAAQ,QACbC,IAAK,OAAQ,QACbC,IAAK=
,OAAQ,QACbC,IAAK,OAAQ,QACbC,IAAK,OAAQ,QACbC,KAAM,MAAO,QACbC,KAAM,OAAS,SAC=
fC,KAAM,QAAS,QACfC,KAAM,OAAS,SACfC,KAAM,OAAQ,QACdC,KAAM,OAAQ,QACdC,MAAO,Q=
AAS,SAChBC,MAAO,QAAS,SAChBC,MAAO,QAAS,SAChBC,MAAO,OAAQ,SACfC,MAAO,MAAQ,QA=
CfC,WAAY,OAAQ,KACpBC,OAAQ,IAAQ,KAChBC,OAAQ,IAAQ,MAChBC,QAAS,IAAQ,KACjBC,S=
AAU,IAAQ,QAMd,SAASl0F,EAAQD,EAASH,IAEH,SAASa,GACrC,YAKA,SAASqb,GAAapC,EAA=
QkyG,GAC7BprH,KAAKkZ,OAASA,EACdlZ,KAAKorH,gBAAkBA,MALxB,GACI5E,IADSpnH,EA=
AoB,IAClBA,EAAoB,IAOnCkc,GAAava,UAAUqhD,aAAe,SAAS/+C,GAe9C,QAASgoH,GAAaho=
H,GACrB,GAAIixD,GAAMzuD,EAAKulH,gBAAgB/nH,EAE/B,KAAKixD,EAAK,MAAOjxD,EAEj=
B,IAAI8a,GAAQm2C,EAAIzmD,QAAQ,UACxB,IAAY,EAARsQ,EACH,KAAM,wEAGP,OAAO,IAAI=
le,GAAOq0D,EAAI/vB,UAAUpmB,EAAQ,GAAI,UAxB7C,GAAIpD,GAAOynC,EACP38C,EAAO7F=
,IAWX,OATKA,MAAKkZ,OAAOutG,eAAepjH,GAM/B0X,EAAQ/a,KAAKkZ,OAAOutG,eAAepjH,=
IALnCm/C,EAAQ,OAASxiD,KAAKkZ,OAAOwtG,YAC7B3rG,EAAQyrG,EAASpkH,KAAKipH,EAA=
ahoH,GAAMm/C,GACzCznC,EAAMw/C,MAAMv6D,KAAKkZ,QACjBlZ,KAAKkZ,OAAOutG,eAAep=
jH,GAAO0X,IAK1B9E,MAAO8E,EAAM9E,MAAOC,OAAQ6E,EAAM7E,SAgB5C1W,EAAOD,QAAU+b=
,IAEY3b,KAAKJ,EAASH,EAAoB,GAAGa,SAI7D,SAAST,EAAQD,GAGtB,YAGA,SAAS+rH,GAAi=
Bj0G,GAEzB,IAAI,GADA04C,MAAaw7D,EAAW,KACpBvlH,EAAI,EAAG2M,EAAI0E,EAAKO,QA=
AQtS,OAAYqN,EAAJ3M,EAAOA,IAAK,CACnD,GAAI6R,GAASR,EAAKO,QAAQ5R,GACtB6gD,EA=
AahvC,EAAOgvC,UACxB,IAAIA,EAAJ,CAIA,GAAI/uC,GAAQD,EAAOivC,iBAAmBjvC,EAAOC=
,OAAS,QAClD5U,EAAQ2U,EAAOkvC,iBAAmB,OACtCF,GAAan4C,MAAMnI,QAAQsgD,GAAcA,G=
AAeA,EACxD,KAAI,GAAIjwC,GAAK,EAAG40G,EAAK3kE,EAAWvhD,OAAakmH,EAAL50G,EAAS=
A,IAAM,CACtD,GAAI60G,GAAO5kE,EAAWjwC,EAClB20G,IAAYE,IAASF,EAAS1kE,YAChC3j=
D,IAAUqoH,EAASxkE,iBAAmBjvC,IAAUyzG,EAASzkE,iBAChD,gBAAT2kE,EAWDF,EAAS3zG=
,QAAQhW,KAAKiW,IATtB0zG,GACCl0G,KAAMA,EACNwvC,WAAY4kE,EACZ3kE,gBAAiBhvC,E=
ACjBivC,gBAAiB7jD,EACjB0U,SAAWC,IAEZk4C,EAAOnuD,KAAK2pH,SAnBbA,GAAW,KA0Bb=
,MAAOx7D,GAGR,QAAS27D,GAAe3wF,EAAO5tB,EAAGC,EAAGiJ,GACpC,QAASs1G,KAER,IAA=
K,GADDpgH,GAAM,EACDvF,EAAI,EAAG2M,EAAIooB,EAAMnjB,QAAQtS,OAAYqN,EAAJ3M,EA=
AOA,IAAK,CACrD,GAAI4lH,GAAM7wF,EAAMnjB,QAAQ5R,EACxBuF,GAAMqgH,EAAItzG,SAA=
W/M,EAAMvF,EAAIuF,EAEhC,MAAOwvB,GAAMnjB,QAAQrM,GAEtB,QAAS0K,KAER,IAAK,GAD=
D8vB,GAAM,EACD//B,EAAI,EAAG2M,EAAIooB,EAAMnjB,QAAQtS,OAAYqN,EAAJ3M,EAAOA,=
IAChD+/B,GAAOhL,EAAMnjB,QAAQ5R,GAAGiQ,KAEzB,OAAO8vB,GAER,GAAI8lF,GAAc9wF,=
EAAMnjB,QAAQ,GAC/Bk0G,EAAeH,IACfI,EAAa91G,IACb+1G,EAAajxF,EAAM1jB,KAAKI,o=
BACxB6iG,EAASwR,EAAa5zG,KAAK09B,SAAW,IAAOk2E,EAAaxzG,SAC1DpC,EAAS41G,EAAa=
51G,OACtBqkG,EAAUrkG,EAASokG,EAEhB2R,EAAK,GAA+D,IAAzDliH,KAAKqG,MAAMrG,KA=
AKwB,IAAIugH,EAAaxzG,SAAW,EAAG,GAAK,EAEnE,QAAQyiB,EAAM8rB,YACb,IAAK,YACJz=
5C,GAAK4+G,EAAuB,IAAVzR,CAClB,MACD,KAAK,WACJntG,GAAK4+G,EAAuB,IAAT1R,CACn=
B,MACD,KAAK,cACJltG,GAAK4+G,EAAuB,IAAT1R,CACnB,MACD,SACC,KAAM,uBAAyBv/E,E=
AAM8rB,WAIvC,GAFAxwC,EAAU0B,OAEmB,WAA1BgjB,EAAMgsB,gBAA8B,CACtC,GAAItK,GA=
AM1yC,KAAKwB,IAAI,GAAQ,EAAH0gH,EACxB51G,GAAWytC,UAAU/oB,EAAM+rB,iBACvB7sC=
,KAAK9M,EAAI0+G,EAAY1+G,EAAGC,EAAE6+G,EAAG,EAAGF,EAAYE,EAAG,GAAGx6G,OAClD=
wI,KAAK9M,EAAI0+G,EAAY1+G,EAAGC,EAAEqvC,EAAIwvE,EAAG,EAAGF,EAAYE,EAAG,GAA=
Gx6G,WACpD,IAA6B,WAA1BspB,EAAMgsB,gBAA8B,CAC7C,GAAImlE,GAAWniH,KAAKy8B,KA=
AKulF,EAAa,KAClCI,EAAMh/G,EAAI0+G,EAAY1+G,CAC1BkJ,GAAU4D,KAAKkyG,EAAK/+G,=
EAAG2+G,EAAYE,GAAIzpB,OACvCnsF,EAAUytC,UAAU/oB,EAAM+rB,gBAC1B,KAAK,GAAI9g=
D,GAAI,EAAOkmH,EAAJlmH,EAAcA,IAC7BqQ,EAAU4D,KAAKkyG,EAAK/+G,EAAE6+G,EAAG,=
EAAG,KAAMA,GAAIx6G,OACtC06G,GAAO,QAEF,IAA6B,WAA1BpxF,EAAMgsB,gBAA8B,CAC7C=
,GAAIqlE,GAASriH,KAAKy8B,KAAKulF,GAAiB,EAAHE,IACjCtnB,EAAKx3F,EAAI0+G,EAA=
Y1+G,CACzBkJ,GAAU4D,KAAK0qF,EAAIv3F,EAAG2+G,EAAYE,GAAIzpB,OACtCnsF,EAAUyt=
C,UAAU/oB,EAAM+rB,gBAC1B,KAAK,GAAIlwC,GAAK,EAAQw1G,EAALx1G,EAAaA,IAC7BP,E=
AAU4D,KAAK0qF,EAAIv3F,EAAE6+G,EAAG,EAAGA,EAAIA,GAAIx6G,OACnCkzF,GAAU,EAAH=
snB,MAEF,IAA6B,SAA1BlxF,EAAMgsB,gBAA4B,CAC3C,GAAIslE,GAAK,GAAKC,EAAK,EACf=
C,EAAUxiH,KAAKy8B,KAAKulF,GAAiB,EAAHM,IAAO,EACzCG,EAAMr/G,EAAI0+G,EAAY1+G=
,EAAI,CAC9BkJ,GAAU4D,KAAK9M,EAAI0+G,EAAY1+G,EAAGC,EAAEk/G,EAAIP,EAAY3+G,E=
AAEk/G,GAAI9pB,OAC1DnsF,EAAU8C,UAAU,KACpB9C,EAAU6D,OAAOsyG,EAAKp/G,EACtB,=
KAAI,GAAIq/G,GAAM,EAASF,EAANE,EAAeA,IAC/Bp2G,EAAagrF,cAAcmrB,EAAIH,EAAIj/=
G,EAAEk/G,EAAIE,EAAO,EAAHH,EAAMj/G,EAAEk/G,EAAIE,EAAO,EAAHH,EAAMj/G,GAC/D=
i0F,cAAcmrB,EAAO,EAAHH,EAAMj/G,EAAEk/G,EAAIE,EAAO,EAAHH,EAAMj/G,EAAEk/G,E=
AAIE,EAAO,EAAHH,EAAMj/G,GAC3Do/G,GAAU,EAAHH,CAETh2G,GAAUyE,OAAOigB,EAAM+r=
B,qBAGvBzwC,GAAWytC,UAAU/oB,EAAM+rB,iBACvB7sC,KAAK9M,EAAI0+G,EAAY1+G,EAAG=
C,EAAE6+G,EAAG,EAAGF,EAAYE,GAC5Cx6G,MAEL4E,GAAUoC,UAGX,QAASC,GAAgBrB,EAAM=
lK,EAAGC,EAAGiJ,GAEpC,IAAK,GADD05C,GAASu7D,EAAiBj0G,GACrBrR,EAAI,EAAG2M,E=
AAIo9C,EAAOzqD,OAAYqN,EAAJ3M,EAAOA,IACzC0lH,EAAe37D,EAAO/pD,GAAImH,EAAGC,=
EAAGiJ,GAIlC,QAASsB,GAAeN,EAAMlK,EAAGC,EAAGiJ,GAEnC,IAAI,GADAH,GAASmB,EAA=
KE,YACVvR,EAAI,EAAG2M,EAAI0E,EAAKO,QAAQtS,OAAYqN,EAAJ3M,EAAOA,IAAK,CACnD,=
GAAI6R,GAASR,EAAKO,QAAQ5R,EACtB6R,GAAO+E,YACTvG,EAAWytC,UAAUjsC,EAAO+E,YA=
CxB3C,KAAK9M,EAAI0K,EAAO1K,EAAGC,EAAGyK,EAAO5B,MAAOC,GACpCzE,QAKRjS,EAAOD=
,SACNoY,eAAgBA,EAChBe,gBAAiBA,IAKb,SAASlZ,EAAQD,EAASH,GAE/B,GAAIstH,GAA8B=
nvG,EAc9B9c,EAASA,GAAW,SAASkiB,GAChC,YAEA,IAAyB,mBAAdgqG,aAA6B,eAAej0F,KA=
AKi0F,UAAUC,WAAtE,CAGA,GACGrrH,GAAMohB,EAAK3f,SAEX6pH,EAAU,WACX,MAAOlqG,G=
AAKmqG,KAAOnqG,EAAKoqG,WAAapqG,GAEpCqqG,EAAYzrH,EAAI0rH,gBAAgB,+BAAgC,KAC=
hEC,EAAoB,YAAcF,GAClCG,EAAQ,SAAS93G,GAClB,GAAIkrC,GAAQ,GAAI6sE,YAAW,QAC3B=
/3G,GAAKg4G,cAAc9sE,IAElB+sE,EAAgB3qG,EAAK4qG,wBACrBC,EAAS7qG,EAAK8qG,mBA=
AqBH,GAAiB3qG,EAAK+qG,qBACzDC,EAAgB,SAASppB,IACzB5hF,EAAKirG,cAAgBjrG,EAA=
KgG,YAAY,WACtC,KAAM47E,IACJ,IAEFspB,EAAsB,2BACtBC,EAAc,EAIdC,EAA2B,IAC3BC=
,EAAS,SAAS7a,GACnB,GAAI8a,GAAU,WACO,gBAAT9a,GACV0Z,IAAUqB,gBAAgB/a,GAE1BA=
,EAAK74E,SAGH3X,GAAKwrG,OACRF,IAEAtlG,WAAWslG,EAASF,IAGpBK,EAAW,SAASC,EAA=
WC,EAAa/tE,GAC7C+tE,KAAiBzsH,OAAOysH,EAExB,KADA,GAAItoH,GAAIsoH,EAAYhpH,O=
ACbU,KAAK,CACX,GAAI+2D,GAAWsxD,EAAU,KAAOC,EAAYtoH,GAC5C,IAAwB,kBAAb+2D,GA=
CV,IACCA,EAASp9D,KAAK0uH,EAAW9tE,GAAS8tE,GACjC,MAAO9pB,GACRopB,EAAcppB,MA=
KhBgqB,EAAW,SAAStqH,GAErB,MAAI,6EAA6Ey0B,KAAKz0B,EAAKE,MACnF,GAAID,OAAM,S=
AAUD,IAAQE,KAAMF,EAAKE,OAExCF,GAENzD,EAAY,SAASyD,EAAMG,EAAMoqH,GAC7BA,IAC=
JvqH,EAAOsqH,EAAStqH,GAGjB,IAIGwqH,GACAC,EA+BA5kH,EAnCAukH,EAAYruH,KACZmE=
,EAAOF,EAAKE,KACZwqH,GAAe,EAGfC,EAAe,WAChBR,EAASC,EAAW,qCAAqC/3E,MAAM,OAG=
9Du4E,EAAW,WAKZ,IAHIF,IAAiBF,KACpBA,EAAa5B,IAAUiC,gBAAgB7qH,IAEpCyqH,EACH=
A,EAAYjsH,SAASC,KAAO+rH,MACtB,CACN,GAAIM,GAAUpsG,EAAKvgB,KAAKqsH,EAAY,SAC=
rBjpH,SAAXupH,GAA0C,mBAAXC,UAElCrsG,EAAKlgB,SAASC,KAAO+rH,GAGvBJ,EAAUY,WA=
AaZ,EAAUvmC,KACjC8mC,IACAZ,EAAOS,IAENS,EAAY,SAASnoG,GACtB,MAAO,YACN,MAAIs=
nG,GAAUY,aAAeZ,EAAUvmC,KAC/B/gE,EAAKjc,MAAM9K,KAAM2F,WADzB,SAKAwpH,GAAuBj=
vF,QAAQ,EAAMkvF,WAAW,EAOnD,OAJAf,GAAUY,WAAaZ,EAAUgB,KAC5BjrH,IACJA,EAAO,Y=
AEJ8oH,GACHuB,EAAa5B,IAAUiC,gBAAgB7qH,GACvC+oH,EAAUtqH,KAAO+rH,EACjBzB,EA=
AUlpH,SAAWM,MACrBukB,YAAW,WACVwkG,EAAMH,GACN4B,IACAZ,EAAOS,GACPJ,EAAUY,WA=
AaZ,EAAUvmC,SAS/BnlE,EAAKwrG,QAAUhqH,GAAQA,IAAS0pH,IACnC/jH,EAAQ7F,EAAK6F=
,OAAS7F,EAAKqrH,YAC3BrrH,EAAO6F,EAAMnK,KAAKsE,EAAM,EAAGA,EAAK6R,KAAM+3G,G=
ACtCc,GAAe,GAKZrB,GAA0B,aAATlpH,IACpBA,GAAQ,cAELD,IAAS0pH,GAAuBP,KACnCoB,=
EAAc/rG,GAEV6qG,GAILM,GAAe7pH,EAAK6R,SACpB03G,GAAO7qG,EAAK4sG,UAAWzB,EAAa=
oB,EAAU,SAAS9tH,GACtDA,EAAG8vB,KAAKs+F,aAAa,QAASL,EAAqBD,EAAU,SAAS3sG,GAC=
rE,GAAIxK,GAAO,WACVwK,EAAIktG,QAAQrrH,EAAM+qH,EAAqBD,EAAU,SAAS/b,GACzDA,E=
AAKuc,aAAaR,EAAU,SAASh2E,GACpCA,EAAOy2E,WAAa,SAASpvE,GAC5BmuE,EAAYjsH,SAA=
SC,KAAOywG,EAAKyc,QACjCvB,EAAUY,WAAaZ,EAAUvmC,KACjCsmC,EAASC,EAAW,WAAY9tE=
,GAChCytE,EAAO7a,IAERj6D,EAAO+iB,QAAU,WAChB,GAAIY,GAAQ3jB,EAAO2jB,KACfA,G=
AAM7qD,OAAS6qD,EAAMgzD,WACxBhB,KAGF,kCAAkCv4E,MAAM,KAAKhO,QAAQ,SAASiY,GAC=
7DrH,EAAO,KAAOqH,GAAS8tE,EAAU,KAAO9tE,KAEzCrH,EAAO/yC,MAAMlC,GACboqH,EAAU=
yB,MAAQ,WACjB52E,EAAO42E,QACPzB,EAAUY,WAAaZ,EAAUvmC,MAElCumC,EAAUY,WAAaZ,=
EAAU0B,UAC9BlB,KACDA,GAELtsG,GAAIktG,QAAQrrH,GAAO87B,QAAQ,GAAQgvF,EAAU,SA=
AS/b,GAErDA,EAAK74E,SACLviB,MACGm3G,EAAU,SAAS3qB,GAClBA,EAAGvyF,OAASuyF,E=
AAGyrB,cAClBj4G,IAEA82G,SAGCA,KACDA,QA7CHA,OA+CAoB,EAAWzvH,EAAUO,UACrBN,E=
AAS,SAASwD,EAAMG,EAAMoqH,GAC/B,MAAO,IAAIhuH,GAAUyD,EAAMG,EAAMoqH,GAInC,OA=
AyB,mBAAd7B,YAA6BA,UAAUuD,iBAC1C,SAASjsH,EAAMG,EAAMoqH,GAI3B,MAHKA,KACJvq=
H,EAAOsqH,EAAStqH,IAEV0oH,UAAUuD,iBAAiBjsH,EAAMG,GAAQ,cAIlD6rH,EAASH,MAAQ=
,WAChB,GAAIzB,GAAYruH,IAChBquH,GAAUY,WAAaZ,EAAUvmC,KACjCsmC,EAASC,EAAW,UA=
ErB4B,EAAShB,WAAagB,EAASZ,KAAO,EACtCY,EAASF,QAAU,EACnBE,EAASnoC,KAAO,EAEh=
BmoC,EAASpzD,MACTozD,EAASE,aACTF,EAASG,WACTH,EAAS5rD,QACT4rD,EAASI,QACTJ,=
EAASh0D,QACTg0D,EAASN,WACR,KAEMlvH,KAEY,mBAAT8zC,OAAwBA,MACb,mBAAXhyC,SAA=
0BA,QACjCvC,KAAKyc,QAMa,oBAAXjd,IAA0BA,EAAOD,QAC1CC,EAAOD,QAAQkB,OAASA,EA=
C6C,OAA7BrB,EAAoB,MAA+C,MAA5BA,EAAoB,OACjGstH,KAAmCnvG,EAAgC,WACnE,MAAO9c=
,IACPqK,MAAMvL,EAASmtH,KAAiElnH,SAAlC+X,IAAgD/d,EAAOD,QAAUge,MAM9G,SAAS/d=
,EAAQD,GAEtBC,EAAOD,QAAU,WAAa,KAAM,IAAIwJ,OAAM,oCAKzC,SAASvJ,EAAQD,IAEM,S=
AAS+wH,GAA0B9wH,EAAOD,QAAU+wH,IAEnD3wH,KAAKJ","file":"pdfmake.min.js","so=
urcesContent":["/******/ (function(modules) { // =
webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar =
installedModules =3D {};\n\n/******/ \t// The require function\n/******/ =
\tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if =
module is in cache\n/******/ =
\t\tif(installedModules[moduleId])\n/******/ \t\t\treturn =
installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new =
module (and put it into the cache)\n/******/ \t\tvar module =3D =
installedModules[moduleId] =3D {\n/******/ \t\t\texports: {},\n/******/ =
\t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ =
\t\t};\n\n/******/ \t\t// Execute the module function\n/******/ =
\t\tmodules[moduleId].call(module.exports, module, module.exports, =
__webpack_require__);\n\n/******/ \t\t// Flag the module as =
loaded\n/******/ \t\tmodule.loaded =3D true;\n\n/******/ \t\t// Return =
the exports of the module\n/******/ \t\treturn module.exports;\n/******/ =
\t}\n\n\n/******/ \t// expose the modules object =
(__webpack_modules__)\n/******/ \t__webpack_require__.m =3D =
modules;\n\n/******/ \t// expose the module cache\n/******/ =
\t__webpack_require__.c =3D installedModules;\n\n/******/ \t// =
__webpack_public_path__\n/******/ \t__webpack_require__.p =3D =
\"\";\n\n/******/ \t// Load entry module and return exports\n/******/ =
\treturn __webpack_require__(0);\n/******/ =
})\n/********************************************************************=
****/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, =
__webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) =
{module.exports =3D global[\"pdfMake\"] =3D =
__webpack_require__(1);\n\t/* WEBPACK VAR INJECTION */}.call(exports, =
(function() { return this; }())))\n\n/***/ },\n/* 1 */\n/***/ =
function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR =
INJECTION */(function(Buffer) {/* jslint node: true */\n\t/* jslint =
browser: true */\n\t/* global BlobBuilder */\n\t'use strict';\n\n\tvar =
PdfPrinter =3D __webpack_require__(6);\n\tvar FileSaver =3D =
__webpack_require__(105);\n\tvar saveAs =3D FileSaver.saveAs;\n\n\tvar =
defaultClientFonts =3D {\n\t\tRoboto: {\n\t\t\tnormal: =
'Roboto-Regular.ttf',\n\t\t\tbold: 'Roboto-Medium.ttf',\n\t\t\titalics: =
'Roboto-Italic.ttf',\n\t\t\tbolditalics: =
'Roboto-Italic.ttf'\n\t\t}\n\t};\n\n\tfunction Document(docDefinition, =
fonts, vfs) {\n\t\tthis.docDefinition =3D docDefinition;\n\t\tthis.fonts =
=3D fonts || defaultClientFonts;\n\t\tthis.vfs =3D =
vfs;\n\t}\n\n\tDocument.prototype._createDoc =3D function(options, =
callback) {\n\t\tvar printer =3D new =
PdfPrinter(this.fonts);\n\t\tprinter.fs.bindFS(this.vfs);\n\n\t\tvar doc =
=3D printer.createPdfKitDocument(this.docDefinition, options);\n\t\tvar =
chunks =3D [];\n\t\tvar result;\n\n\t\tdoc.on('data', function(chunk) =
{\n\t\t\tchunks.push(chunk);\n\t\t});\n\t\tdoc.on('end', function() =
{\n\t\t\tresult =3D Buffer.concat(chunks);\n\t\t\tcallback(result, =
doc._pdfMakePages);\n\t\t});\n\t\tdoc.end();\n\t};\n\n\tDocument.prototyp=
e._getPages =3D function(options, cb){\n\t  if (!cb) throw 'getBuffer is =
an async method and needs a callback argument';\n\t  =
this._createDoc(options, function(ignoreBuffer, pages){\n\t    =
cb(pages);\n\t  });\n\t};\n\n\tDocument.prototype.open =3D =
function(message) {\n\t\t// we have to open the window immediately and =
store the reference\n\t\t// otherwise popup blockers will stop =
us\n\t\tvar win =3D window.open('', '_blank');\n\n\t\ttry =
{\n\t\t\tthis.getDataUrl(function(result) {\n\t\t\t\twin.location.href =
=3D result;\n\t\t\t});\n\t\t} catch(e) =
{\n\t\t\twin.close();\n\t\t\tthrow =
e;\n\t\t}\n\t};\n\n\n\tDocument.prototype.print =3D function() {\n\t  =
this.getDataUrl(function(dataUrl) {\n\t    var iFrame =3D =
document.createElement('iframe');\n\t    iFrame.style.position =3D =
'absolute';\n\t    iFrame.style.left =3D '-99999px';\n\t    iFrame.src =
=3D dataUrl;\n\t    iFrame.onload =3D function() {\n\t      function =
removeIFrame(){\n\t        document.body.removeChild(iFrame);\n\t        =
document.removeEventListener('click', removeIFrame);\n\t      }\n\t      =
document.addEventListener('click', removeIFrame, false);\n\t    };\n\n\t =
   document.body.appendChild(iFrame);\n\t  }, { autoPrint: true =
});\n\t};\n\n\tDocument.prototype.download =3D function(defaultFileName, =
cb) {\n\t   if(typeof defaultFileName =3D=3D=3D \"function\") {\n\t      =
cb =3D defaultFileName;\n\t      defaultFileName =3D null;\n\t   }\n\n\t =
  defaultFileName =3D defaultFileName || 'file.pdf';\n\t   =
this.getBuffer(function (result) {\n\t       var blob;\n\t       try =
{\n\t           blob =3D new Blob([result], { type: 'application/pdf' =
});\n\t       }\n\t       catch (e) {\n\t           // Old browser which =
can't handle it without making it an byte array (ie10) \n\t           if =
(e.name =3D=3D \"InvalidStateError\") {\n\t               var byteArray =
=3D new Uint8Array(result);\n\t               blob =3D new =
Blob([byteArray.buffer], { type: 'application/pdf' });\n\t           =
}\n\t       }\n\t       if (blob) {\n\t           saveAs(blob, =
defaultFileName);\n\t       }\n\t       else {\n\t           throw =
'Could not generate blob';\n\t       }\n\t       if (typeof cb =3D=3D=3D =
\"function\") {\n\t           cb();\n\t       }\n\t   =
});\n\t};\n\n\tDocument.prototype.getBase64 =3D function(cb, options) =
{\n\t\tif (!cb) throw 'getBase64 is an async method and needs a callback =
argument';\n\t\tthis._createDoc(options, function(buffer) =
{\n\t\t\tcb(buffer.toString('base64'));\n\t\t});\n\t};\n\n\tDocument.prot=
otype.getDataUrl =3D function(cb, options) {\n\t\tif (!cb) throw =
'getDataUrl is an async method and needs a callback =
argument';\n\t\tthis._createDoc(options, function(buffer) =
{\n\t\t\tcb('data:application/pdf;base64,' + =
buffer.toString('base64'));\n\t\t});\n\t};\n\n\tDocument.prototype.getBuf=
fer =3D function(cb, options) {\n\t\tif (!cb) throw 'getBuffer is an =
async method and needs a callback =
argument';\n\t\tthis._createDoc(options, function(buffer){\n\t    =
cb(buffer);\n\t  });\n\t};\n\n\tmodule.exports =3D {\n\t\tcreatePdf: =
function(docDefinition) {\n\t\t\treturn new Document(docDefinition, =
window.pdfMake.fonts, window.pdfMake.vfs);\n\t\t}\n\t};\n\n\t/* WEBPACK =
VAR INJECTION */}.call(exports, __webpack_require__(2).Buffer))\n\n/***/ =
},\n/* 2 */\n/***/ function(module, exports, __webpack_require__) =
{\n\n\t/* WEBPACK VAR INJECTION */(function(Buffer, global) {/*!\n\t * =
The buffer module from node.js, for the browser.\n\t *\n\t * @author   =
Feross Aboukhadijeh &lt;feross@feross.org&gt; =
&lt;http://feross.org&gt;\n\t * @license  MIT\n\t */\n\t/* =
eslint-disable no-proto */\n\n\tvar base64 =3D =
__webpack_require__(3)\n\tvar ieee754 =3D __webpack_require__(4)\n\tvar =
isArray =3D __webpack_require__(5)\n\n\texports.Buffer =3D =
Buffer\n\texports.SlowBuffer =3D SlowBuffer\n\texports.INSPECT_MAX_BYTES =
=3D 50\n\tBuffer.poolSize =3D 8192 // not used by this =
implementation\n\n\tvar rootParent =3D {}\n\n\t/**\n\t * If =
`Buffer.TYPED_ARRAY_SUPPORT`:\n\t *   =3D=3D=3D true    Use Uint8Array =
implementation (fastest)\n\t *   =3D=3D=3D false   Use Object =
implementation (most compatible, even IE6)\n\t *\n\t * Browsers that =
support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n\t =
* Opera 11.6+, iOS 4.2+.\n\t *\n\t * Due to various browser bugs, =
sometimes the Object implementation will be used even\n\t * when the =
browser supports typed arrays.\n\t *\n\t * Note:\n\t *\n\t *   - Firefox =
4-29 lacks support for adding new properties to `Uint8Array` =
instances,\n\t *     See: =
https://bugzilla.mozilla.org/show_bug.cgi?id=3D695438.\n\t *\n\t *   - =
Safari 5-7 lacks support for changing the `Object.prototype.constructor` =
property\n\t *     on objects.\n\t *\n\t *   - Chrome 9-10 is missing =
the `TypedArray.prototype.subarray` function.\n\t *\n\t *   - IE10 has a =
broken `TypedArray.prototype.subarray` function which returns arrays =
of\n\t *     incorrect length in some situations.\n\n\t * We detect =
these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so =
they\n\t * get the Object implementation, which is slower but behaves =
correctly.\n\t */\n\tBuffer.TYPED_ARRAY_SUPPORT =3D =
global.TYPED_ARRAY_SUPPORT !=3D=3D undefined\n\t  ? =
global.TYPED_ARRAY_SUPPORT\n\t  : typedArraySupport()\n\n\tfunction =
typedArraySupport () {\n\t  function Bar () {}\n\t  try {\n\t    var arr =
=3D new Uint8Array(1)\n\t    arr.foo =3D function () { return 42 }\n\t   =
 arr.constructor =3D Bar\n\t    return arr.foo() =3D=3D=3D 42 &amp;&amp; =
// typed array instances can be augmented\n\t        arr.constructor =
=3D=3D=3D Bar &amp;&amp; // constructor can be set\n\t        typeof =
arr.subarray =3D=3D=3D 'function' &amp;&amp; // chrome 9-10 lack =
`subarray`\n\t        arr.subarray(1, 1).byteLength =3D=3D=3D 0 // ie10 =
has broken `subarray`\n\t  } catch (e) {\n\t    return false\n\t  =
}\n\t}\n\n\tfunction kMaxLength () {\n\t  return =
Buffer.TYPED_ARRAY_SUPPORT\n\t    ? 0x7fffffff\n\t    : =
0x3fffffff\n\t}\n\n\t/**\n\t * Class: Buffer\n\t * =
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D\n\t *\n\t * The Buffer =
constructor returns instances of `Uint8Array` that are augmented\n\t * =
with function properties for all the node `Buffer` API functions. We =
use\n\t * `Uint8Array` so that square bracket notation works as expected =
-- it returns\n\t * a single octet.\n\t *\n\t * By augmenting the =
instances, we can avoid modifying the `Uint8Array`\n\t * prototype.\n\t =
*/\n\tfunction Buffer (arg) {\n\t  if (!(this instanceof Buffer)) {\n\t  =
  // Avoid going through an ArgumentsAdaptorTrampoline in the common =
case.\n\t    if (arguments.length &gt; 1) return new Buffer(arg, =
arguments[1])\n\t    return new Buffer(arg)\n\t  }\n\n\t  this.length =
=3D 0\n\t  this.parent =3D undefined\n\n\t  // Common case.\n\t  if =
(typeof arg =3D=3D=3D 'number') {\n\t    return fromNumber(this, =
arg)\n\t  }\n\n\t  // Slightly less common case.\n\t  if (typeof arg =
=3D=3D=3D 'string') {\n\t    return fromString(this, arg, =
arguments.length &gt; 1 ? arguments[1] : 'utf8')\n\t  }\n\n\t  // =
Unusual.\n\t  return fromObject(this, arg)\n\t}\n\n\tfunction fromNumber =
(that, length) {\n\t  that =3D allocate(that, length &lt; 0 ? 0 : =
checked(length) | 0)\n\t  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n\t    for =
(var i =3D 0; i &lt; length; i++) {\n\t      that[i] =3D 0\n\t    }\n\t  =
}\n\t  return that\n\t}\n\n\tfunction fromString (that, string, =
encoding) {\n\t  if (typeof encoding !=3D=3D 'string' || encoding =
=3D=3D=3D '') encoding =3D 'utf8'\n\n\t  // Assumption: byteLength() =
return value is always &lt; kMaxLength.\n\t  var length =3D =
byteLength(string, encoding) | 0\n\t  that =3D allocate(that, =
length)\n\n\t  that.write(string, encoding)\n\t  return =
that\n\t}\n\n\tfunction fromObject (that, object) {\n\t  if =
(Buffer.isBuffer(object)) return fromBuffer(that, object)\n\n\t  if =
(isArray(object)) return fromArray(that, object)\n\n\t  if (object =
=3D=3D null) {\n\t    throw new TypeError('must start with number, =
buffer, array or string')\n\t  }\n\n\t  if (typeof ArrayBuffer !=3D=3D =
'undefined') {\n\t    if (object.buffer instanceof ArrayBuffer) {\n\t    =
  return fromTypedArray(that, object)\n\t    }\n\t    if (object =
instanceof ArrayBuffer) {\n\t      return fromArrayBuffer(that, =
object)\n\t    }\n\t  }\n\n\t  if (object.length) return =
fromArrayLike(that, object)\n\n\t  return fromJsonObject(that, =
object)\n\t}\n\n\tfunction fromBuffer (that, buffer) {\n\t  var length =
=3D checked(buffer.length) | 0\n\t  that =3D allocate(that, length)\n\t  =
buffer.copy(that, 0, 0, length)\n\t  return that\n\t}\n\n\tfunction =
fromArray (that, array) {\n\t  var length =3D checked(array.length) | =
0\n\t  that =3D allocate(that, length)\n\t  for (var i =3D 0; i &lt; =
length; i +=3D 1) {\n\t    that[i] =3D array[i] &amp; 255\n\t  }\n\t  =
return that\n\t}\n\n\t// Duplicate of fromArray() to keep fromArray() =
monomorphic.\n\tfunction fromTypedArray (that, array) {\n\t  var length =
=3D checked(array.length) | 0\n\t  that =3D allocate(that, length)\n\t  =
// Truncating the elements is probably not what people expect from =
typed\n\t  // arrays with BYTES_PER_ELEMENT &gt; 1 but it's compatible =
with the behavior\n\t  // of the old Buffer constructor.\n\t  for (var i =
=3D 0; i &lt; length; i +=3D 1) {\n\t    that[i] =3D array[i] &amp; =
255\n\t  }\n\t  return that\n\t}\n\n\tfunction fromArrayBuffer (that, =
array) {\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    // Return an =
augmented `Uint8Array` instance, for best performance\n\t    =
array.byteLength\n\t    that =3D Buffer._augment(new =
Uint8Array(array))\n\t  } else {\n\t    // Fallback: Return an object =
instance of the Buffer class\n\t    that =3D fromTypedArray(that, new =
Uint8Array(array))\n\t  }\n\t  return that\n\t}\n\n\tfunction =
fromArrayLike (that, array) {\n\t  var length =3D checked(array.length) =
| 0\n\t  that =3D allocate(that, length)\n\t  for (var i =3D 0; i &lt; =
length; i +=3D 1) {\n\t    that[i] =3D array[i] &amp; 255\n\t  }\n\t  =
return that\n\t}\n\n\t// Deserialize { type: 'Buffer', data: [1,2,3,...] =
} into a Buffer object.\n\t// Returns a zero-length buffer for inputs =
that don't conform to the spec.\n\tfunction fromJsonObject (that, =
object) {\n\t  var array\n\t  var length =3D 0\n\n\t  if (object.type =
=3D=3D=3D 'Buffer' &amp;&amp; isArray(object.data)) {\n\t    array =3D =
object.data\n\t    length =3D checked(array.length) | 0\n\t  }\n\t  that =
=3D allocate(that, length)\n\n\t  for (var i =3D 0; i &lt; length; i =
+=3D 1) {\n\t    that[i] =3D array[i] &amp; 255\n\t  }\n\t  return =
that\n\t}\n\n\tif (Buffer.TYPED_ARRAY_SUPPORT) {\n\t  =
Buffer.prototype.__proto__ =3D Uint8Array.prototype\n\t  =
Buffer.__proto__ =3D Uint8Array\n\t}\n\n\tfunction allocate (that, =
length) {\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    // Return an =
augmented `Uint8Array` instance, for best performance\n\t    that =3D =
Buffer._augment(new Uint8Array(length))\n\t    that.__proto__ =3D =
Buffer.prototype\n\t  } else {\n\t    // Fallback: Return an object =
instance of the Buffer class\n\t    that.length =3D length\n\t    =
that._isBuffer =3D true\n\t  }\n\n\t  var fromPool =3D length !=3D=3D 0 =
&amp;&amp; length &lt;=3D Buffer.poolSize &gt;&gt;&gt; 1\n\t  if =
(fromPool) that.parent =3D rootParent\n\n\t  return =
that\n\t}\n\n\tfunction checked (length) {\n\t  // Note: cannot use =
`length &lt; kMaxLength` here because that fails when\n\t  // length is =
NaN (which is otherwise coerced to zero.)\n\t  if (length &gt;=3D =
kMaxLength()) {\n\t    throw new RangeError('Attempt to allocate Buffer =
larger than maximum ' +\n\t                         'size: 0x' + =
kMaxLength().toString(16) + ' bytes')\n\t  }\n\t  return length | =
0\n\t}\n\n\tfunction SlowBuffer (subject, encoding) {\n\t  if (!(this =
instanceof SlowBuffer)) return new SlowBuffer(subject, encoding)\n\n\t  =
var buf =3D new Buffer(subject, encoding)\n\t  delete buf.parent\n\t  =
return buf\n\t}\n\n\tBuffer.isBuffer =3D function isBuffer (b) {\n\t  =
return !!(b !=3D null &amp;&amp; b._isBuffer)\n\t}\n\n\tBuffer.compare =
=3D function compare (a, b) {\n\t  if (!Buffer.isBuffer(a) || =
!Buffer.isBuffer(b)) {\n\t    throw new TypeError('Arguments must be =
Buffers')\n\t  }\n\n\t  if (a =3D=3D=3D b) return 0\n\n\t  var x =3D =
a.length\n\t  var y =3D b.length\n\n\t  var i =3D 0\n\t  var len =3D =
Math.min(x, y)\n\t  while (i &lt; len) {\n\t    if (a[i] !=3D=3D b[i]) =
break\n\n\t    ++i\n\t  }\n\n\t  if (i !=3D=3D len) {\n\t    x =3D =
a[i]\n\t    y =3D b[i]\n\t  }\n\n\t  if (x &lt; y) return -1\n\t  if (y =
&lt; x) return 1\n\t  return 0\n\t}\n\n\tBuffer.isEncoding =3D function =
isEncoding (encoding) {\n\t  switch (String(encoding).toLowerCase()) =
{\n\t    case 'hex':\n\t    case 'utf8':\n\t    case 'utf-8':\n\t    =
case 'ascii':\n\t    case 'binary':\n\t    case 'base64':\n\t    case =
'raw':\n\t    case 'ucs2':\n\t    case 'ucs-2':\n\t    case =
'utf16le':\n\t    case 'utf-16le':\n\t      return true\n\t    =
default:\n\t      return false\n\t  }\n\t}\n\n\tBuffer.concat =3D =
function concat (list, length) {\n\t  if (!isArray(list)) throw new =
TypeError('list argument must be an Array of Buffers.')\n\n\t  if =
(list.length =3D=3D=3D 0) {\n\t    return new Buffer(0)\n\t  }\n\n\t  =
var i\n\t  if (length =3D=3D=3D undefined) {\n\t    length =3D 0\n\t    =
for (i =3D 0; i &lt; list.length; i++) {\n\t      length +=3D =
list[i].length\n\t    }\n\t  }\n\n\t  var buf =3D new Buffer(length)\n\t =
 var pos =3D 0\n\t  for (i =3D 0; i &lt; list.length; i++) {\n\t    var =
item =3D list[i]\n\t    item.copy(buf, pos)\n\t    pos +=3D =
item.length\n\t  }\n\t  return buf\n\t}\n\n\tfunction byteLength =
(string, encoding) {\n\t  if (typeof string !=3D=3D 'string') string =3D =
'' + string\n\n\t  var len =3D string.length\n\t  if (len =3D=3D=3D 0) =
return 0\n\n\t  // Use a for loop to avoid recursion\n\t  var =
loweredCase =3D false\n\t  for (;;) {\n\t    switch (encoding) {\n\t     =
 case 'ascii':\n\t      case 'binary':\n\t      // Deprecated\n\t      =
case 'raw':\n\t      case 'raws':\n\t        return len\n\t      case =
'utf8':\n\t      case 'utf-8':\n\t        return =
utf8ToBytes(string).length\n\t      case 'ucs2':\n\t      case =
'ucs-2':\n\t      case 'utf16le':\n\t      case 'utf-16le':\n\t        =
return len * 2\n\t      case 'hex':\n\t        return len &gt;&gt;&gt; =
1\n\t      case 'base64':\n\t        return =
base64ToBytes(string).length\n\t      default:\n\t        if =
(loweredCase) return utf8ToBytes(string).length // assume utf8\n\t       =
 encoding =3D ('' + encoding).toLowerCase()\n\t        loweredCase =3D =
true\n\t    }\n\t  }\n\t}\n\tBuffer.byteLength =3D byteLength\n\n\t// =
pre-set for values that may exist in the =
future\n\tBuffer.prototype.length =3D =
undefined\n\tBuffer.prototype.parent =3D undefined\n\n\tfunction =
slowToString (encoding, start, end) {\n\t  var loweredCase =3D =
false\n\n\t  start =3D start | 0\n\t  end =3D end =3D=3D=3D undefined || =
end =3D=3D=3D Infinity ? this.length : end | 0\n\n\t  if (!encoding) =
encoding =3D 'utf8'\n\t  if (start &lt; 0) start =3D 0\n\t  if (end &gt; =
this.length) end =3D this.length\n\t  if (end &lt;=3D start) return =
''\n\n\t  while (true) {\n\t    switch (encoding) {\n\t      case =
'hex':\n\t        return hexSlice(this, start, end)\n\n\t      case =
'utf8':\n\t      case 'utf-8':\n\t        return utf8Slice(this, start, =
end)\n\n\t      case 'ascii':\n\t        return asciiSlice(this, start, =
end)\n\n\t      case 'binary':\n\t        return binarySlice(this, =
start, end)\n\n\t      case 'base64':\n\t        return =
base64Slice(this, start, end)\n\n\t      case 'ucs2':\n\t      case =
'ucs-2':\n\t      case 'utf16le':\n\t      case 'utf-16le':\n\t        =
return utf16leSlice(this, start, end)\n\n\t      default:\n\t        if =
(loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n\t   =
     encoding =3D (encoding + '').toLowerCase()\n\t        loweredCase =
=3D true\n\t    }\n\t  }\n\t}\n\n\tBuffer.prototype.toString =3D =
function toString () {\n\t  var length =3D this.length | 0\n\t  if =
(length =3D=3D=3D 0) return ''\n\t  if (arguments.length =3D=3D=3D 0) =
return utf8Slice(this, 0, length)\n\t  return slowToString.apply(this, =
arguments)\n\t}\n\n\tBuffer.prototype.equals =3D function equals (b) =
{\n\t  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a =
Buffer')\n\t  if (this =3D=3D=3D b) return true\n\t  return =
Buffer.compare(this, b) =3D=3D=3D 0\n\t}\n\n\tBuffer.prototype.inspect =
=3D function inspect () {\n\t  var str =3D ''\n\t  var max =3D =
exports.INSPECT_MAX_BYTES\n\t  if (this.length &gt; 0) {\n\t    str =3D =
this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n\t    if =
(this.length &gt; max) str +=3D ' ... '\n\t  }\n\t  return '&lt;Buffer ' =
+ str + '&gt;'\n\t}\n\n\tBuffer.prototype.compare =3D function compare =
(b) {\n\t  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must =
be a Buffer')\n\t  if (this =3D=3D=3D b) return 0\n\t  return =
Buffer.compare(this, b)\n\t}\n\n\tBuffer.prototype.indexOf =3D function =
indexOf (val, byteOffset) {\n\t  if (byteOffset &gt; 0x7fffffff) =
byteOffset =3D 0x7fffffff\n\t  else if (byteOffset &lt; -0x80000000) =
byteOffset =3D -0x80000000\n\t  byteOffset &gt;&gt;=3D 0\n\n\t  if =
(this.length =3D=3D=3D 0) return -1\n\t  if (byteOffset &gt;=3D =
this.length) return -1\n\n\t  // Negative offsets start from the end of =
the buffer\n\t  if (byteOffset &lt; 0) byteOffset =3D =
Math.max(this.length + byteOffset, 0)\n\n\t  if (typeof val =3D=3D=3D =
'string') {\n\t    if (val.length =3D=3D=3D 0) return -1 // special =
case: looking for empty string always fails\n\t    return =
String.prototype.indexOf.call(this, val, byteOffset)\n\t  }\n\t  if =
(Buffer.isBuffer(val)) {\n\t    return arrayIndexOf(this, val, =
byteOffset)\n\t  }\n\t  if (typeof val =3D=3D=3D 'number') {\n\t    if =
(Buffer.TYPED_ARRAY_SUPPORT &amp;&amp; Uint8Array.prototype.indexOf =
=3D=3D=3D 'function') {\n\t      return =
Uint8Array.prototype.indexOf.call(this, val, byteOffset)\n\t    }\n\t    =
return arrayIndexOf(this, [ val ], byteOffset)\n\t  }\n\n\t  function =
arrayIndexOf (arr, val, byteOffset) {\n\t    var foundIndex =3D -1\n\t   =
 for (var i =3D 0; byteOffset + i &lt; arr.length; i++) {\n\t      if =
(arr[byteOffset + i] =3D=3D=3D val[foundIndex =3D=3D=3D -1 ? 0 : i - =
foundIndex]) {\n\t        if (foundIndex =3D=3D=3D -1) foundIndex =3D =
i\n\t        if (i - foundIndex + 1 =3D=3D=3D val.length) return =
byteOffset + foundIndex\n\t      } else {\n\t        foundIndex =3D =
-1\n\t      }\n\t    }\n\t    return -1\n\t  }\n\n\t  throw new =
TypeError('val must be string, number or Buffer')\n\t}\n\n\t// `get` is =
deprecated\n\tBuffer.prototype.get =3D function get (offset) {\n\t  =
console.log('.get() is deprecated. Access using array indexes =
instead.')\n\t  return this.readUInt8(offset)\n\t}\n\n\t// `set` is =
deprecated\n\tBuffer.prototype.set =3D function set (v, offset) {\n\t  =
console.log('.set() is deprecated. Access using array indexes =
instead.')\n\t  return this.writeUInt8(v, offset)\n\t}\n\n\tfunction =
hexWrite (buf, string, offset, length) {\n\t  offset =3D Number(offset) =
|| 0\n\t  var remaining =3D buf.length - offset\n\t  if (!length) {\n\t  =
  length =3D remaining\n\t  } else {\n\t    length =3D =
Number(length)\n\t    if (length &gt; remaining) {\n\t      length =3D =
remaining\n\t    }\n\t  }\n\n\t  // must be an even number of digits\n\t =
 var strLen =3D string.length\n\t  if (strLen % 2 !=3D=3D 0) throw new =
Error('Invalid hex string')\n\n\t  if (length &gt; strLen / 2) {\n\t    =
length =3D strLen / 2\n\t  }\n\t  for (var i =3D 0; i &lt; length; i++) =
{\n\t    var parsed =3D parseInt(string.substr(i * 2, 2), 16)\n\t    if =
(isNaN(parsed)) throw new Error('Invalid hex string')\n\t    buf[offset =
+ i] =3D parsed\n\t  }\n\t  return i\n\t}\n\n\tfunction utf8Write (buf, =
string, offset, length) {\n\t  return blitBuffer(utf8ToBytes(string, =
buf.length - offset), buf, offset, length)\n\t}\n\n\tfunction asciiWrite =
(buf, string, offset, length) {\n\t  return =
blitBuffer(asciiToBytes(string), buf, offset, length)\n\t}\n\n\tfunction =
binaryWrite (buf, string, offset, length) {\n\t  return asciiWrite(buf, =
string, offset, length)\n\t}\n\n\tfunction base64Write (buf, string, =
offset, length) {\n\t  return blitBuffer(base64ToBytes(string), buf, =
offset, length)\n\t}\n\n\tfunction ucs2Write (buf, string, offset, =
length) {\n\t  return blitBuffer(utf16leToBytes(string, buf.length - =
offset), buf, offset, length)\n\t}\n\n\tBuffer.prototype.write =3D =
function write (string, offset, length, encoding) {\n\t  // =
Buffer#write(string)\n\t  if (offset =3D=3D=3D undefined) {\n\t    =
encoding =3D 'utf8'\n\t    length =3D this.length\n\t    offset =3D =
0\n\t  // Buffer#write(string, encoding)\n\t  } else if (length =
=3D=3D=3D undefined &amp;&amp; typeof offset =3D=3D=3D 'string') {\n\t   =
 encoding =3D offset\n\t    length =3D this.length\n\t    offset =3D =
0\n\t  // Buffer#write(string, offset[, length][, encoding])\n\t  } else =
if (isFinite(offset)) {\n\t    offset =3D offset | 0\n\t    if =
(isFinite(length)) {\n\t      length =3D length | 0\n\t      if =
(encoding =3D=3D=3D undefined) encoding =3D 'utf8'\n\t    } else {\n\t   =
   encoding =3D length\n\t      length =3D undefined\n\t    }\n\t  // =
legacy write(string, encoding, offset, length) - remove in v0.13\n\t  } =
else {\n\t    var swap =3D encoding\n\t    encoding =3D offset\n\t    =
offset =3D length | 0\n\t    length =3D swap\n\t  }\n\n\t  var remaining =
=3D this.length - offset\n\t  if (length =3D=3D=3D undefined || length =
&gt; remaining) length =3D remaining\n\n\t  if ((string.length &gt; 0 =
&amp;&amp; (length &lt; 0 || offset &lt; 0)) || offset &gt; this.length) =
{\n\t    throw new RangeError('attempt to write outside buffer =
bounds')\n\t  }\n\n\t  if (!encoding) encoding =3D 'utf8'\n\n\t  var =
loweredCase =3D false\n\t  for (;;) {\n\t    switch (encoding) {\n\t     =
 case 'hex':\n\t        return hexWrite(this, string, offset, =
length)\n\n\t      case 'utf8':\n\t      case 'utf-8':\n\t        return =
utf8Write(this, string, offset, length)\n\n\t      case 'ascii':\n\t     =
   return asciiWrite(this, string, offset, length)\n\n\t      case =
'binary':\n\t        return binaryWrite(this, string, offset, =
length)\n\n\t      case 'base64':\n\t        // Warning: maxLength not =
taken into account in base64Write\n\t        return base64Write(this, =
string, offset, length)\n\n\t      case 'ucs2':\n\t      case =
'ucs-2':\n\t      case 'utf16le':\n\t      case 'utf-16le':\n\t        =
return ucs2Write(this, string, offset, length)\n\n\t      default:\n\t   =
     if (loweredCase) throw new TypeError('Unknown encoding: ' + =
encoding)\n\t        encoding =3D ('' + encoding).toLowerCase()\n\t      =
  loweredCase =3D true\n\t    }\n\t  }\n\t}\n\n\tBuffer.prototype.toJSON =
=3D function toJSON () {\n\t  return {\n\t    type: 'Buffer',\n\t    =
data: Array.prototype.slice.call(this._arr || this, 0)\n\t  =
}\n\t}\n\n\tfunction base64Slice (buf, start, end) {\n\t  if (start =
=3D=3D=3D 0 &amp;&amp; end =3D=3D=3D buf.length) {\n\t    return =
base64.fromByteArray(buf)\n\t  } else {\n\t    return =
base64.fromByteArray(buf.slice(start, end))\n\t  }\n\t}\n\n\tfunction =
utf8Slice (buf, start, end) {\n\t  end =3D Math.min(buf.length, end)\n\t =
 var res =3D []\n\n\t  var i =3D start\n\t  while (i &lt; end) {\n\t    =
var firstByte =3D buf[i]\n\t    var codePoint =3D null\n\t    var =
bytesPerSequence =3D (firstByte &gt; 0xEF) ? 4\n\t      : (firstByte =
&gt; 0xDF) ? 3\n\t      : (firstByte &gt; 0xBF) ? 2\n\t      : 1\n\n\t   =
 if (i + bytesPerSequence &lt;=3D end) {\n\t      var secondByte, =
thirdByte, fourthByte, tempCodePoint\n\n\t      switch =
(bytesPerSequence) {\n\t        case 1:\n\t          if (firstByte &lt; =
0x80) {\n\t            codePoint =3D firstByte\n\t          }\n\t        =
  break\n\t        case 2:\n\t          secondByte =3D buf[i + 1]\n\t    =
      if ((secondByte &amp; 0xC0) =3D=3D=3D 0x80) {\n\t            =
tempCodePoint =3D (firstByte &amp; 0x1F) &lt;&lt; 0x6 | (secondByte =
&amp; 0x3F)\n\t            if (tempCodePoint &gt; 0x7F) {\n\t            =
  codePoint =3D tempCodePoint\n\t            }\n\t          }\n\t        =
  break\n\t        case 3:\n\t          secondByte =3D buf[i + 1]\n\t    =
      thirdByte =3D buf[i + 2]\n\t          if ((secondByte &amp; 0xC0) =
=3D=3D=3D 0x80 &amp;&amp; (thirdByte &amp; 0xC0) =3D=3D=3D 0x80) {\n\t   =
         tempCodePoint =3D (firstByte &amp; 0xF) &lt;&lt; 0xC | =
(secondByte &amp; 0x3F) &lt;&lt; 0x6 | (thirdByte &amp; 0x3F)\n\t        =
    if (tempCodePoint &gt; 0x7FF &amp;&amp; (tempCodePoint &lt; 0xD800 =
|| tempCodePoint &gt; 0xDFFF)) {\n\t              codePoint =3D =
tempCodePoint\n\t            }\n\t          }\n\t          break\n\t     =
   case 4:\n\t          secondByte =3D buf[i + 1]\n\t          thirdByte =
=3D buf[i + 2]\n\t          fourthByte =3D buf[i + 3]\n\t          if =
((secondByte &amp; 0xC0) =3D=3D=3D 0x80 &amp;&amp; (thirdByte &amp; =
0xC0) =3D=3D=3D 0x80 &amp;&amp; (fourthByte &amp; 0xC0) =3D=3D=3D 0x80) =
{\n\t            tempCodePoint =3D (firstByte &amp; 0xF) &lt;&lt; 0x12 | =
(secondByte &amp; 0x3F) &lt;&lt; 0xC | (thirdByte &amp; 0x3F) &lt;&lt; =
0x6 | (fourthByte &amp; 0x3F)\n\t            if (tempCodePoint &gt; =
0xFFFF &amp;&amp; tempCodePoint &lt; 0x110000) {\n\t              =
codePoint =3D tempCodePoint\n\t            }\n\t          }\n\t      =
}\n\t    }\n\n\t    if (codePoint =3D=3D=3D null) {\n\t      // we did =
not generate a valid codePoint so insert a\n\t      // replacement char =
(U+FFFD) and advance only 1 byte\n\t      codePoint =3D 0xFFFD\n\t      =
bytesPerSequence =3D 1\n\t    } else if (codePoint &gt; 0xFFFF) {\n\t    =
  // encode to utf16 (surrogate pair dance)\n\t      codePoint -=3D =
0x10000\n\t      res.push(codePoint &gt;&gt;&gt; 10 &amp; 0x3FF | =
0xD800)\n\t      codePoint =3D 0xDC00 | codePoint &amp; 0x3FF\n\t    =
}\n\n\t    res.push(codePoint)\n\t    i +=3D bytesPerSequence\n\t  =
}\n\n\t  return decodeCodePointsArray(res)\n\t}\n\n\t// Based on =
http://stackoverflow.com/a/22747272/680742, the browser with\n\t// the =
lowest limit is Chrome, with 0x10000 args.\n\t// We go 1 magnitude less, =
for safety\n\tvar MAX_ARGUMENTS_LENGTH =3D 0x1000\n\n\tfunction =
decodeCodePointsArray (codePoints) {\n\t  var len =3D =
codePoints.length\n\t  if (len &lt;=3D MAX_ARGUMENTS_LENGTH) {\n\t    =
return String.fromCharCode.apply(String, codePoints) // avoid extra =
slice()\n\t  }\n\n\t  // Decode in chunks to avoid \"call stack size =
exceeded\".\n\t  var res =3D ''\n\t  var i =3D 0\n\t  while (i &lt; len) =
{\n\t    res +=3D String.fromCharCode.apply(\n\t      String,\n\t      =
codePoints.slice(i, i +=3D MAX_ARGUMENTS_LENGTH)\n\t    )\n\t  }\n\t  =
return res\n\t}\n\n\tfunction asciiSlice (buf, start, end) {\n\t  var =
ret =3D ''\n\t  end =3D Math.min(buf.length, end)\n\n\t  for (var i =3D =
start; i &lt; end; i++) {\n\t    ret +=3D String.fromCharCode(buf[i] =
&amp; 0x7F)\n\t  }\n\t  return ret\n\t}\n\n\tfunction binarySlice (buf, =
start, end) {\n\t  var ret =3D ''\n\t  end =3D Math.min(buf.length, =
end)\n\n\t  for (var i =3D start; i &lt; end; i++) {\n\t    ret +=3D =
String.fromCharCode(buf[i])\n\t  }\n\t  return ret\n\t}\n\n\tfunction =
hexSlice (buf, start, end) {\n\t  var len =3D buf.length\n\n\t  if =
(!start || start &lt; 0) start =3D 0\n\t  if (!end || end &lt; 0 || end =
&gt; len) end =3D len\n\n\t  var out =3D ''\n\t  for (var i =3D start; i =
&lt; end; i++) {\n\t    out +=3D toHex(buf[i])\n\t  }\n\t  return =
out\n\t}\n\n\tfunction utf16leSlice (buf, start, end) {\n\t  var bytes =
=3D buf.slice(start, end)\n\t  var res =3D ''\n\t  for (var i =3D 0; i =
&lt; bytes.length; i +=3D 2) {\n\t    res +=3D =
String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n\t  }\n\t  return =
res\n\t}\n\n\tBuffer.prototype.slice =3D function slice (start, end) =
{\n\t  var len =3D this.length\n\t  start =3D ~~start\n\t  end =3D end =
=3D=3D=3D undefined ? len : ~~end\n\n\t  if (start &lt; 0) {\n\t    =
start +=3D len\n\t    if (start &lt; 0) start =3D 0\n\t  } else if =
(start &gt; len) {\n\t    start =3D len\n\t  }\n\n\t  if (end &lt; 0) =
{\n\t    end +=3D len\n\t    if (end &lt; 0) end =3D 0\n\t  } else if =
(end &gt; len) {\n\t    end =3D len\n\t  }\n\n\t  if (end &lt; start) =
end =3D start\n\n\t  var newBuf\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) =
{\n\t    newBuf =3D Buffer._augment(this.subarray(start, end))\n\t  } =
else {\n\t    var sliceLen =3D end - start\n\t    newBuf =3D new =
Buffer(sliceLen, undefined)\n\t    for (var i =3D 0; i &lt; sliceLen; =
i++) {\n\t      newBuf[i] =3D this[i + start]\n\t    }\n\t  }\n\n\t  if =
(newBuf.length) newBuf.parent =3D this.parent || this\n\n\t  return =
newBuf\n\t}\n\n\t/*\n\t * Need to make sure that buffer isn't trying to =
write out of bounds.\n\t */\n\tfunction checkOffset (offset, ext, =
length) {\n\t  if ((offset % 1) !=3D=3D 0 || offset &lt; 0) throw new =
RangeError('offset is not uint')\n\t  if (offset + ext &gt; length) =
throw new RangeError('Trying to access beyond buffer =
length')\n\t}\n\n\tBuffer.prototype.readUIntLE =3D function readUIntLE =
(offset, byteLength, noAssert) {\n\t  offset =3D offset | 0\n\t  =
byteLength =3D byteLength | 0\n\t  if (!noAssert) checkOffset(offset, =
byteLength, this.length)\n\n\t  var val =3D this[offset]\n\t  var mul =
=3D 1\n\t  var i =3D 0\n\t  while (++i &lt; byteLength &amp;&amp; (mul =
*=3D 0x100)) {\n\t    val +=3D this[offset + i] * mul\n\t  }\n\n\t  =
return val\n\t}\n\n\tBuffer.prototype.readUIntBE =3D function readUIntBE =
(offset, byteLength, noAssert) {\n\t  offset =3D offset | 0\n\t  =
byteLength =3D byteLength | 0\n\t  if (!noAssert) {\n\t    =
checkOffset(offset, byteLength, this.length)\n\t  }\n\n\t  var val =3D =
this[offset + --byteLength]\n\t  var mul =3D 1\n\t  while (byteLength =
&gt; 0 &amp;&amp; (mul *=3D 0x100)) {\n\t    val +=3D this[offset + =
--byteLength] * mul\n\t  }\n\n\t  return =
val\n\t}\n\n\tBuffer.prototype.readUInt8 =3D function readUInt8 (offset, =
noAssert) {\n\t  if (!noAssert) checkOffset(offset, 1, this.length)\n\t  =
return this[offset]\n\t}\n\n\tBuffer.prototype.readUInt16LE =3D function =
readUInt16LE (offset, noAssert) {\n\t  if (!noAssert) =
checkOffset(offset, 2, this.length)\n\t  return this[offset] | =
(this[offset + 1] &lt;&lt; 8)\n\t}\n\n\tBuffer.prototype.readUInt16BE =
=3D function readUInt16BE (offset, noAssert) {\n\t  if (!noAssert) =
checkOffset(offset, 2, this.length)\n\t  return (this[offset] &lt;&lt; =
8) | this[offset + 1]\n\t}\n\n\tBuffer.prototype.readUInt32LE =3D =
function readUInt32LE (offset, noAssert) {\n\t  if (!noAssert) =
checkOffset(offset, 4, this.length)\n\n\t  return ((this[offset]) |\n\t  =
    (this[offset + 1] &lt;&lt; 8) |\n\t      (this[offset + 2] &lt;&lt; =
16)) +\n\t      (this[offset + 3] * =
0x1000000)\n\t}\n\n\tBuffer.prototype.readUInt32BE =3D function =
readUInt32BE (offset, noAssert) {\n\t  if (!noAssert) =
checkOffset(offset, 4, this.length)\n\n\t  return (this[offset] * =
0x1000000) +\n\t    ((this[offset + 1] &lt;&lt; 16) |\n\t    =
(this[offset + 2] &lt;&lt; 8) |\n\t    this[offset + =
3])\n\t}\n\n\tBuffer.prototype.readIntLE =3D function readIntLE (offset, =
byteLength, noAssert) {\n\t  offset =3D offset | 0\n\t  byteLength =3D =
byteLength | 0\n\t  if (!noAssert) checkOffset(offset, byteLength, =
this.length)\n\n\t  var val =3D this[offset]\n\t  var mul =3D 1\n\t  var =
i =3D 0\n\t  while (++i &lt; byteLength &amp;&amp; (mul *=3D 0x100)) =
{\n\t    val +=3D this[offset + i] * mul\n\t  }\n\t  mul *=3D 0x80\n\n\t =
 if (val &gt;=3D mul) val -=3D Math.pow(2, 8 * byteLength)\n\n\t  return =
val\n\t}\n\n\tBuffer.prototype.readIntBE =3D function readIntBE (offset, =
byteLength, noAssert) {\n\t  offset =3D offset | 0\n\t  byteLength =3D =
byteLength | 0\n\t  if (!noAssert) checkOffset(offset, byteLength, =
this.length)\n\n\t  var i =3D byteLength\n\t  var mul =3D 1\n\t  var val =
=3D this[offset + --i]\n\t  while (i &gt; 0 &amp;&amp; (mul *=3D 0x100)) =
{\n\t    val +=3D this[offset + --i] * mul\n\t  }\n\t  mul *=3D =
0x80\n\n\t  if (val &gt;=3D mul) val -=3D Math.pow(2, 8 * =
byteLength)\n\n\t  return val\n\t}\n\n\tBuffer.prototype.readInt8 =3D =
function readInt8 (offset, noAssert) {\n\t  if (!noAssert) =
checkOffset(offset, 1, this.length)\n\t  if (!(this[offset] &amp; 0x80)) =
return (this[offset])\n\t  return ((0xff - this[offset] + 1) * =
-1)\n\t}\n\n\tBuffer.prototype.readInt16LE =3D function readInt16LE =
(offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 2, =
this.length)\n\t  var val =3D this[offset] | (this[offset + 1] &lt;&lt; =
8)\n\t  return (val &amp; 0x8000) ? val | 0xFFFF0000 : =
val\n\t}\n\n\tBuffer.prototype.readInt16BE =3D function readInt16BE =
(offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 2, =
this.length)\n\t  var val =3D this[offset + 1] | (this[offset] &lt;&lt; =
8)\n\t  return (val &amp; 0x8000) ? val | 0xFFFF0000 : =
val\n\t}\n\n\tBuffer.prototype.readInt32LE =3D function readInt32LE =
(offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, =
this.length)\n\n\t  return (this[offset]) |\n\t    (this[offset + 1] =
&lt;&lt; 8) |\n\t    (this[offset + 2] &lt;&lt; 16) |\n\t    =
(this[offset + 3] &lt;&lt; 24)\n\t}\n\n\tBuffer.prototype.readInt32BE =
=3D function readInt32BE (offset, noAssert) {\n\t  if (!noAssert) =
checkOffset(offset, 4, this.length)\n\n\t  return (this[offset] &lt;&lt; =
24) |\n\t    (this[offset + 1] &lt;&lt; 16) |\n\t    (this[offset + 2] =
&lt;&lt; 8) |\n\t    (this[offset + =
3])\n\t}\n\n\tBuffer.prototype.readFloatLE =3D function readFloatLE =
(offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, =
this.length)\n\t  return ieee754.read(this, offset, true, 23, =
4)\n\t}\n\n\tBuffer.prototype.readFloatBE =3D function readFloatBE =
(offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, =
this.length)\n\t  return ieee754.read(this, offset, false, 23, =
4)\n\t}\n\n\tBuffer.prototype.readDoubleLE =3D function readDoubleLE =
(offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 8, =
this.length)\n\t  return ieee754.read(this, offset, true, 52, =
8)\n\t}\n\n\tBuffer.prototype.readDoubleBE =3D function readDoubleBE =
(offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 8, =
this.length)\n\t  return ieee754.read(this, offset, false, 52, =
8)\n\t}\n\n\tfunction checkInt (buf, value, offset, ext, max, min) {\n\t =
 if (!Buffer.isBuffer(buf)) throw new TypeError('buffer must be a Buffer =
instance')\n\t  if (value &gt; max || value &lt; min) throw new =
RangeError('value is out of bounds')\n\t  if (offset + ext &gt; =
buf.length) throw new RangeError('index out of =
range')\n\t}\n\n\tBuffer.prototype.writeUIntLE =3D function writeUIntLE =
(value, offset, byteLength, noAssert) {\n\t  value =3D +value\n\t  =
offset =3D offset | 0\n\t  byteLength =3D byteLength | 0\n\t  if =
(!noAssert) checkInt(this, value, offset, byteLength, Math.pow(2, 8 * =
byteLength), 0)\n\n\t  var mul =3D 1\n\t  var i =3D 0\n\t  this[offset] =
=3D value &amp; 0xFF\n\t  while (++i &lt; byteLength &amp;&amp; (mul =
*=3D 0x100)) {\n\t    this[offset + i] =3D (value / mul) &amp; 0xFF\n\t  =
}\n\n\t  return offset + =
byteLength\n\t}\n\n\tBuffer.prototype.writeUIntBE =3D function =
writeUIntBE (value, offset, byteLength, noAssert) {\n\t  value =3D =
+value\n\t  offset =3D offset | 0\n\t  byteLength =3D byteLength | 0\n\t =
 if (!noAssert) checkInt(this, value, offset, byteLength, Math.pow(2, 8 =
* byteLength), 0)\n\n\t  var i =3D byteLength - 1\n\t  var mul =3D 1\n\t =
 this[offset + i] =3D value &amp; 0xFF\n\t  while (--i &gt;=3D 0 =
&amp;&amp; (mul *=3D 0x100)) {\n\t    this[offset + i] =3D (value / mul) =
&amp; 0xFF\n\t  }\n\n\t  return offset + =
byteLength\n\t}\n\n\tBuffer.prototype.writeUInt8 =3D function writeUInt8 =
(value, offset, noAssert) {\n\t  value =3D +value\n\t  offset =3D offset =
| 0\n\t  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n\t  =
if (!Buffer.TYPED_ARRAY_SUPPORT) value =3D Math.floor(value)\n\t  =
this[offset] =3D (value &amp; 0xff)\n\t  return offset + =
1\n\t}\n\n\tfunction objectWriteUInt16 (buf, value, offset, =
littleEndian) {\n\t  if (value &lt; 0) value =3D 0xffff + value + 1\n\t  =
for (var i =3D 0, j =3D Math.min(buf.length - offset, 2); i &lt; j; i++) =
{\n\t    buf[offset + i] =3D (value &amp; (0xff &lt;&lt; (8 * =
(littleEndian ? i : 1 - i)))) &gt;&gt;&gt;\n\t      (littleEndian ? i : =
1 - i) * 8\n\t  }\n\t}\n\n\tBuffer.prototype.writeUInt16LE =3D function =
writeUInt16LE (value, offset, noAssert) {\n\t  value =3D +value\n\t  =
offset =3D offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, =
2, 0xffff, 0)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] =
=3D (value &amp; 0xff)\n\t    this[offset + 1] =3D (value &gt;&gt;&gt; =
8)\n\t  } else {\n\t    objectWriteUInt16(this, value, offset, true)\n\t =
 }\n\t  return offset + 2\n\t}\n\n\tBuffer.prototype.writeUInt16BE =3D =
function writeUInt16BE (value, offset, noAssert) {\n\t  value =3D =
+value\n\t  offset =3D offset | 0\n\t  if (!noAssert) checkInt(this, =
value, offset, 2, 0xffff, 0)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t  =
  this[offset] =3D (value &gt;&gt;&gt; 8)\n\t    this[offset + 1] =3D =
(value &amp; 0xff)\n\t  } else {\n\t    objectWriteUInt16(this, value, =
offset, false)\n\t  }\n\t  return offset + 2\n\t}\n\n\tfunction =
objectWriteUInt32 (buf, value, offset, littleEndian) {\n\t  if (value =
&lt; 0) value =3D 0xffffffff + value + 1\n\t  for (var i =3D 0, j =3D =
Math.min(buf.length - offset, 4); i &lt; j; i++) {\n\t    buf[offset + =
i] =3D (value &gt;&gt;&gt; (littleEndian ? i : 3 - i) * 8) &amp; =
0xff\n\t  }\n\t}\n\n\tBuffer.prototype.writeUInt32LE =3D function =
writeUInt32LE (value, offset, noAssert) {\n\t  value =3D +value\n\t  =
offset =3D offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, =
4, 0xffffffff, 0)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    =
this[offset + 3] =3D (value &gt;&gt;&gt; 24)\n\t    this[offset + 2] =3D =
(value &gt;&gt;&gt; 16)\n\t    this[offset + 1] =3D (value &gt;&gt;&gt; =
8)\n\t    this[offset] =3D (value &amp; 0xff)\n\t  } else {\n\t    =
objectWriteUInt32(this, value, offset, true)\n\t  }\n\t  return offset + =
4\n\t}\n\n\tBuffer.prototype.writeUInt32BE =3D function writeUInt32BE =
(value, offset, noAssert) {\n\t  value =3D +value\n\t  offset =3D offset =
| 0\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, =
0)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] =3D (value =
&gt;&gt;&gt; 24)\n\t    this[offset + 1] =3D (value &gt;&gt;&gt; 16)\n\t =
   this[offset + 2] =3D (value &gt;&gt;&gt; 8)\n\t    this[offset + 3] =
=3D (value &amp; 0xff)\n\t  } else {\n\t    objectWriteUInt32(this, =
value, offset, false)\n\t  }\n\t  return offset + =
4\n\t}\n\n\tBuffer.prototype.writeIntLE =3D function writeIntLE (value, =
offset, byteLength, noAssert) {\n\t  value =3D +value\n\t  offset =3D =
offset | 0\n\t  if (!noAssert) {\n\t    var limit =3D Math.pow(2, 8 * =
byteLength - 1)\n\n\t    checkInt(this, value, offset, byteLength, limit =
- 1, -limit)\n\t  }\n\n\t  var i =3D 0\n\t  var mul =3D 1\n\t  var sub =
=3D value &lt; 0 ? 1 : 0\n\t  this[offset] =3D value &amp; 0xFF\n\t  =
while (++i &lt; byteLength &amp;&amp; (mul *=3D 0x100)) {\n\t    =
this[offset + i] =3D ((value / mul) &gt;&gt; 0) - sub &amp; 0xFF\n\t  =
}\n\n\t  return offset + =
byteLength\n\t}\n\n\tBuffer.prototype.writeIntBE =3D function writeIntBE =
(value, offset, byteLength, noAssert) {\n\t  value =3D +value\n\t  =
offset =3D offset | 0\n\t  if (!noAssert) {\n\t    var limit =3D =
Math.pow(2, 8 * byteLength - 1)\n\n\t    checkInt(this, value, offset, =
byteLength, limit - 1, -limit)\n\t  }\n\n\t  var i =3D byteLength - =
1\n\t  var mul =3D 1\n\t  var sub =3D value &lt; 0 ? 1 : 0\n\t  =
this[offset + i] =3D value &amp; 0xFF\n\t  while (--i &gt;=3D 0 =
&amp;&amp; (mul *=3D 0x100)) {\n\t    this[offset + i] =3D ((value / =
mul) &gt;&gt; 0) - sub &amp; 0xFF\n\t  }\n\n\t  return offset + =
byteLength\n\t}\n\n\tBuffer.prototype.writeInt8 =3D function writeInt8 =
(value, offset, noAssert) {\n\t  value =3D +value\n\t  offset =3D offset =
| 0\n\t  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, =
-0x80)\n\t  if (!Buffer.TYPED_ARRAY_SUPPORT) value =3D =
Math.floor(value)\n\t  if (value &lt; 0) value =3D 0xff + value + 1\n\t  =
this[offset] =3D (value &amp; 0xff)\n\t  return offset + =
1\n\t}\n\n\tBuffer.prototype.writeInt16LE =3D function writeInt16LE =
(value, offset, noAssert) {\n\t  value =3D +value\n\t  offset =3D offset =
| 0\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, =
-0x8000)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] =3D =
(value &amp; 0xff)\n\t    this[offset + 1] =3D (value &gt;&gt;&gt; =
8)\n\t  } else {\n\t    objectWriteUInt16(this, value, offset, true)\n\t =
 }\n\t  return offset + 2\n\t}\n\n\tBuffer.prototype.writeInt16BE =3D =
function writeInt16BE (value, offset, noAssert) {\n\t  value =3D =
+value\n\t  offset =3D offset | 0\n\t  if (!noAssert) checkInt(this, =
value, offset, 2, 0x7fff, -0x8000)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) =
{\n\t    this[offset] =3D (value &gt;&gt;&gt; 8)\n\t    this[offset + 1] =
=3D (value &amp; 0xff)\n\t  } else {\n\t    objectWriteUInt16(this, =
value, offset, false)\n\t  }\n\t  return offset + =
2\n\t}\n\n\tBuffer.prototype.writeInt32LE =3D function writeInt32LE =
(value, offset, noAssert) {\n\t  value =3D +value\n\t  offset =3D offset =
| 0\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, =
-0x80000000)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] =
=3D (value &amp; 0xff)\n\t    this[offset + 1] =3D (value &gt;&gt;&gt; =
8)\n\t    this[offset + 2] =3D (value &gt;&gt;&gt; 16)\n\t    =
this[offset + 3] =3D (value &gt;&gt;&gt; 24)\n\t  } else {\n\t    =
objectWriteUInt32(this, value, offset, true)\n\t  }\n\t  return offset + =
4\n\t}\n\n\tBuffer.prototype.writeInt32BE =3D function writeInt32BE =
(value, offset, noAssert) {\n\t  value =3D +value\n\t  offset =3D offset =
| 0\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, =
-0x80000000)\n\t  if (value &lt; 0) value =3D 0xffffffff + value + 1\n\t =
 if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] =3D (value =
&gt;&gt;&gt; 24)\n\t    this[offset + 1] =3D (value &gt;&gt;&gt; 16)\n\t =
   this[offset + 2] =3D (value &gt;&gt;&gt; 8)\n\t    this[offset + 3] =
=3D (value &amp; 0xff)\n\t  } else {\n\t    objectWriteUInt32(this, =
value, offset, false)\n\t  }\n\t  return offset + 4\n\t}\n\n\tfunction =
checkIEEE754 (buf, value, offset, ext, max, min) {\n\t  if (value &gt; =
max || value &lt; min) throw new RangeError('value is out of =
bounds')\n\t  if (offset + ext &gt; buf.length) throw new =
RangeError('index out of range')\n\t  if (offset &lt; 0) throw new =
RangeError('index out of range')\n\t}\n\n\tfunction writeFloat (buf, =
value, offset, littleEndian, noAssert) {\n\t  if (!noAssert) {\n\t    =
checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, =
-3.4028234663852886e+38)\n\t  }\n\t  ieee754.write(buf, value, offset, =
littleEndian, 23, 4)\n\t  return offset + =
4\n\t}\n\n\tBuffer.prototype.writeFloatLE =3D function writeFloatLE =
(value, offset, noAssert) {\n\t  return writeFloat(this, value, offset, =
true, noAssert)\n\t}\n\n\tBuffer.prototype.writeFloatBE =3D function =
writeFloatBE (value, offset, noAssert) {\n\t  return writeFloat(this, =
value, offset, false, noAssert)\n\t}\n\n\tfunction writeDouble (buf, =
value, offset, littleEndian, noAssert) {\n\t  if (!noAssert) {\n\t    =
checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, =
-1.7976931348623157E+308)\n\t  }\n\t  ieee754.write(buf, value, offset, =
littleEndian, 52, 8)\n\t  return offset + =
8\n\t}\n\n\tBuffer.prototype.writeDoubleLE =3D function writeDoubleLE =
(value, offset, noAssert) {\n\t  return writeDouble(this, value, offset, =
true, noAssert)\n\t}\n\n\tBuffer.prototype.writeDoubleBE =3D function =
writeDoubleBE (value, offset, noAssert) {\n\t  return writeDouble(this, =
value, offset, false, noAssert)\n\t}\n\n\t// copy(targetBuffer, =
targetStart=3D0, sourceStart=3D0, =
sourceEnd=3Dbuffer.length)\n\tBuffer.prototype.copy =3D function copy =
(target, targetStart, start, end) {\n\t  if (!start) start =3D 0\n\t  if =
(!end &amp;&amp; end !=3D=3D 0) end =3D this.length\n\t  if (targetStart =
&gt;=3D target.length) targetStart =3D target.length\n\t  if =
(!targetStart) targetStart =3D 0\n\t  if (end &gt; 0 &amp;&amp; end &lt; =
start) end =3D start\n\n\t  // Copy 0 bytes; we're done\n\t  if (end =
=3D=3D=3D start) return 0\n\t  if (target.length =3D=3D=3D 0 || =
this.length =3D=3D=3D 0) return 0\n\n\t  // Fatal error conditions\n\t  =
if (targetStart &lt; 0) {\n\t    throw new RangeError('targetStart out =
of bounds')\n\t  }\n\t  if (start &lt; 0 || start &gt;=3D this.length) =
throw new RangeError('sourceStart out of bounds')\n\t  if (end &lt; 0) =
throw new RangeError('sourceEnd out of bounds')\n\n\t  // Are we =
oob?\n\t  if (end &gt; this.length) end =3D this.length\n\t  if =
(target.length - targetStart &lt; end - start) {\n\t    end =3D =
target.length - targetStart + start\n\t  }\n\n\t  var len =3D end - =
start\n\t  var i\n\n\t  if (this =3D=3D=3D target &amp;&amp; start &lt; =
targetStart &amp;&amp; targetStart &lt; end) {\n\t    // descending copy =
from end\n\t    for (i =3D len - 1; i &gt;=3D 0; i--) {\n\t      =
target[i + targetStart] =3D this[i + start]\n\t    }\n\t  } else if (len =
&lt; 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n\t    // ascending copy =
from start\n\t    for (i =3D 0; i &lt; len; i++) {\n\t      target[i + =
targetStart] =3D this[i + start]\n\t    }\n\t  } else {\n\t    =
target._set(this.subarray(start, start + len), targetStart)\n\t  }\n\n\t =
 return len\n\t}\n\n\t// fill(value, start=3D0, =
end=3Dbuffer.length)\n\tBuffer.prototype.fill =3D function fill (value, =
start, end) {\n\t  if (!value) value =3D 0\n\t  if (!start) start =3D =
0\n\t  if (!end) end =3D this.length\n\n\t  if (end &lt; start) throw =
new RangeError('end &lt; start')\n\n\t  // Fill 0 bytes; we're done\n\t  =
if (end =3D=3D=3D start) return\n\t  if (this.length =3D=3D=3D 0) =
return\n\n\t  if (start &lt; 0 || start &gt;=3D this.length) throw new =
RangeError('start out of bounds')\n\t  if (end &lt; 0 || end &gt; =
this.length) throw new RangeError('end out of bounds')\n\n\t  var i\n\t  =
if (typeof value =3D=3D=3D 'number') {\n\t    for (i =3D start; i &lt; =
end; i++) {\n\t      this[i] =3D value\n\t    }\n\t  } else {\n\t    var =
bytes =3D utf8ToBytes(value.toString())\n\t    var len =3D =
bytes.length\n\t    for (i =3D start; i &lt; end; i++) {\n\t      =
this[i] =3D bytes[i % len]\n\t    }\n\t  }\n\n\t  return =
this\n\t}\n\n\t/**\n\t * Creates a new `ArrayBuffer` with the *copied* =
memory of the buffer instance.\n\t * Added in Node 0.12. Only available =
in browsers that support ArrayBuffer.\n\t =
*/\n\tBuffer.prototype.toArrayBuffer =3D function toArrayBuffer () {\n\t =
 if (typeof Uint8Array !=3D=3D 'undefined') {\n\t    if =
(Buffer.TYPED_ARRAY_SUPPORT) {\n\t      return (new =
Buffer(this)).buffer\n\t    } else {\n\t      var buf =3D new =
Uint8Array(this.length)\n\t      for (var i =3D 0, len =3D buf.length; i =
&lt; len; i +=3D 1) {\n\t        buf[i] =3D this[i]\n\t      }\n\t      =
return buf.buffer\n\t    }\n\t  } else {\n\t    throw new =
TypeError('Buffer.toArrayBuffer not supported in this browser')\n\t  =
}\n\t}\n\n\t// HELPER FUNCTIONS\n\t// =
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D\n\n\tvar BP =3D =
Buffer.prototype\n\n\t/**\n\t * Augment a Uint8Array *instance* (not the =
Uint8Array class!) with Buffer methods\n\t */\n\tBuffer._augment =3D =
function _augment (arr) {\n\t  arr.constructor =3D Buffer\n\t  =
arr._isBuffer =3D true\n\n\t  // save reference to original Uint8Array =
set method before overwriting\n\t  arr._set =3D arr.set\n\n\t  // =
deprecated\n\t  arr.get =3D BP.get\n\t  arr.set =3D BP.set\n\n\t  =
arr.write =3D BP.write\n\t  arr.toString =3D BP.toString\n\t  =
arr.toLocaleString =3D BP.toString\n\t  arr.toJSON =3D BP.toJSON\n\t  =
arr.equals =3D BP.equals\n\t  arr.compare =3D BP.compare\n\t  =
arr.indexOf =3D BP.indexOf\n\t  arr.copy =3D BP.copy\n\t  arr.slice =3D =
BP.slice\n\t  arr.readUIntLE =3D BP.readUIntLE\n\t  arr.readUIntBE =3D =
BP.readUIntBE\n\t  arr.readUInt8 =3D BP.readUInt8\n\t  arr.readUInt16LE =
=3D BP.readUInt16LE\n\t  arr.readUInt16BE =3D BP.readUInt16BE\n\t  =
arr.readUInt32LE =3D BP.readUInt32LE\n\t  arr.readUInt32BE =3D =
BP.readUInt32BE\n\t  arr.readIntLE =3D BP.readIntLE\n\t  arr.readIntBE =
=3D BP.readIntBE\n\t  arr.readInt8 =3D BP.readInt8\n\t  arr.readInt16LE =
=3D BP.readInt16LE\n\t  arr.readInt16BE =3D BP.readInt16BE\n\t  =
arr.readInt32LE =3D BP.readInt32LE\n\t  arr.readInt32BE =3D =
BP.readInt32BE\n\t  arr.readFloatLE =3D BP.readFloatLE\n\t  =
arr.readFloatBE =3D BP.readFloatBE\n\t  arr.readDoubleLE =3D =
BP.readDoubleLE\n\t  arr.readDoubleBE =3D BP.readDoubleBE\n\t  =
arr.writeUInt8 =3D BP.writeUInt8\n\t  arr.writeUIntLE =3D =
BP.writeUIntLE\n\t  arr.writeUIntBE =3D BP.writeUIntBE\n\t  =
arr.writeUInt16LE =3D BP.writeUInt16LE\n\t  arr.writeUInt16BE =3D =
BP.writeUInt16BE\n\t  arr.writeUInt32LE =3D BP.writeUInt32LE\n\t  =
arr.writeUInt32BE =3D BP.writeUInt32BE\n\t  arr.writeIntLE =3D =
BP.writeIntLE\n\t  arr.writeIntBE =3D BP.writeIntBE\n\t  arr.writeInt8 =
=3D BP.writeInt8\n\t  arr.writeInt16LE =3D BP.writeInt16LE\n\t  =
arr.writeInt16BE =3D BP.writeInt16BE\n\t  arr.writeInt32LE =3D =
BP.writeInt32LE\n\t  arr.writeInt32BE =3D BP.writeInt32BE\n\t  =
arr.writeFloatLE =3D BP.writeFloatLE\n\t  arr.writeFloatBE =3D =
BP.writeFloatBE\n\t  arr.writeDoubleLE =3D BP.writeDoubleLE\n\t  =
arr.writeDoubleBE =3D BP.writeDoubleBE\n\t  arr.fill =3D BP.fill\n\t  =
arr.inspect =3D BP.inspect\n\t  arr.toArrayBuffer =3D =
BP.toArrayBuffer\n\n\t  return arr\n\t}\n\n\tvar INVALID_BASE64_RE =3D =
/[^+\\/0-9A-Za-z-_]/g\n\n\tfunction base64clean (str) {\n\t  // Node =
strips out invalid characters like \\n and \\t from the string, =
base64-js does not\n\t  str =3D =
stringtrim(str).replace(INVALID_BASE64_RE, '')\n\t  // Node converts =
strings with length &lt; 2 to ''\n\t  if (str.length &lt; 2) return =
''\n\t  // Node allows for non-padded base64 strings (missing trailing =
=3D=3D=3D), base64-js does not\n\t  while (str.length % 4 !=3D=3D 0) =
{\n\t    str =3D str + '=3D'\n\t  }\n\t  return str\n\t}\n\n\tfunction =
stringtrim (str) {\n\t  if (str.trim) return str.trim()\n\t  return =
str.replace(/^\\s+|\\s+$/g, '')\n\t}\n\n\tfunction toHex (n) {\n\t  if =
(n &lt; 16) return '0' + n.toString(16)\n\t  return =
n.toString(16)\n\t}\n\n\tfunction utf8ToBytes (string, units) {\n\t  =
units =3D units || Infinity\n\t  var codePoint\n\t  var length =3D =
string.length\n\t  var leadSurrogate =3D null\n\t  var bytes =3D =
[]\n\n\t  for (var i =3D 0; i &lt; length; i++) {\n\t    codePoint =3D =
string.charCodeAt(i)\n\n\t    // is surrogate component\n\t    if =
(codePoint &gt; 0xD7FF &amp;&amp; codePoint &lt; 0xE000) {\n\t      // =
last char was a lead\n\t      if (!leadSurrogate) {\n\t        // no =
lead yet\n\t        if (codePoint &gt; 0xDBFF) {\n\t          // =
unexpected trail\n\t          if ((units -=3D 3) &gt; -1) =
bytes.push(0xEF, 0xBF, 0xBD)\n\t          continue\n\t        } else if =
(i + 1 =3D=3D=3D length) {\n\t          // unpaired lead\n\t          if =
((units -=3D 3) &gt; -1) bytes.push(0xEF, 0xBF, 0xBD)\n\t          =
continue\n\t        }\n\n\t        // valid lead\n\t        =
leadSurrogate =3D codePoint\n\n\t        continue\n\t      }\n\n\t      =
// 2 leads in a row\n\t      if (codePoint &lt; 0xDC00) {\n\t        if =
((units -=3D 3) &gt; -1) bytes.push(0xEF, 0xBF, 0xBD)\n\t        =
leadSurrogate =3D codePoint\n\t        continue\n\t      }\n\n\t      // =
valid surrogate pair\n\t      codePoint =3D (leadSurrogate - 0xD800 =
&lt;&lt; 10 | codePoint - 0xDC00) + 0x10000\n\t    } else if =
(leadSurrogate) {\n\t      // valid bmp char, but last char was a =
lead\n\t      if ((units -=3D 3) &gt; -1) bytes.push(0xEF, 0xBF, =
0xBD)\n\t    }\n\n\t    leadSurrogate =3D null\n\n\t    // encode =
utf8\n\t    if (codePoint &lt; 0x80) {\n\t      if ((units -=3D 1) &lt; =
0) break\n\t      bytes.push(codePoint)\n\t    } else if (codePoint &lt; =
0x800) {\n\t      if ((units -=3D 2) &lt; 0) break\n\t      =
bytes.push(\n\t        codePoint &gt;&gt; 0x6 | 0xC0,\n\t        =
codePoint &amp; 0x3F | 0x80\n\t      )\n\t    } else if (codePoint &lt; =
0x10000) {\n\t      if ((units -=3D 3) &lt; 0) break\n\t      =
bytes.push(\n\t        codePoint &gt;&gt; 0xC | 0xE0,\n\t        =
codePoint &gt;&gt; 0x6 &amp; 0x3F | 0x80,\n\t        codePoint &amp; =
0x3F | 0x80\n\t      )\n\t    } else if (codePoint &lt; 0x110000) {\n\t  =
    if ((units -=3D 4) &lt; 0) break\n\t      bytes.push(\n\t        =
codePoint &gt;&gt; 0x12 | 0xF0,\n\t        codePoint &gt;&gt; 0xC &amp; =
0x3F | 0x80,\n\t        codePoint &gt;&gt; 0x6 &amp; 0x3F | 0x80,\n\t    =
    codePoint &amp; 0x3F | 0x80\n\t      )\n\t    } else {\n\t      =
throw new Error('Invalid code point')\n\t    }\n\t  }\n\n\t  return =
bytes\n\t}\n\n\tfunction asciiToBytes (str) {\n\t  var byteArray =3D =
[]\n\t  for (var i =3D 0; i &lt; str.length; i++) {\n\t    // Node's =
code seems to be doing this and not &amp; 0x7F..\n\t    =
byteArray.push(str.charCodeAt(i) &amp; 0xFF)\n\t  }\n\t  return =
byteArray\n\t}\n\n\tfunction utf16leToBytes (str, units) {\n\t  var c, =
hi, lo\n\t  var byteArray =3D []\n\t  for (var i =3D 0; i &lt; =
str.length; i++) {\n\t    if ((units -=3D 2) &lt; 0) break\n\n\t    c =
=3D str.charCodeAt(i)\n\t    hi =3D c &gt;&gt; 8\n\t    lo =3D c % =
256\n\t    byteArray.push(lo)\n\t    byteArray.push(hi)\n\t  }\n\n\t  =
return byteArray\n\t}\n\n\tfunction base64ToBytes (str) {\n\t  return =
base64.toByteArray(base64clean(str))\n\t}\n\n\tfunction blitBuffer (src, =
dst, offset, length) {\n\t  for (var i =3D 0; i &lt; length; i++) {\n\t  =
  if ((i + offset &gt;=3D dst.length) || (i &gt;=3D src.length)) =
break\n\t    dst[i + offset] =3D src[i]\n\t  }\n\t  return =
i\n\t}\n\n\t/* WEBPACK VAR INJECTION */}.call(exports, =
__webpack_require__(2).Buffer, (function() { return this; =
}())))\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, =
__webpack_require__) {\n\n\tvar lookup =3D =
'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\n\t=
;(function (exports) {\n\t\t'use strict';\n\n\t  var Arr =3D (typeof =
Uint8Array !=3D=3D 'undefined')\n\t    ? Uint8Array\n\t    : =
Array\n\n\t\tvar PLUS   =3D '+'.charCodeAt(0)\n\t\tvar SLASH  =3D =
'/'.charCodeAt(0)\n\t\tvar NUMBER =3D '0'.charCodeAt(0)\n\t\tvar LOWER  =
=3D 'a'.charCodeAt(0)\n\t\tvar UPPER  =3D 'A'.charCodeAt(0)\n\t\tvar =
PLUS_URL_SAFE =3D '-'.charCodeAt(0)\n\t\tvar SLASH_URL_SAFE =3D =
'_'.charCodeAt(0)\n\n\t\tfunction decode (elt) {\n\t\t\tvar code =3D =
elt.charCodeAt(0)\n\t\t\tif (code =3D=3D=3D PLUS ||\n\t\t\t    code =
=3D=3D=3D PLUS_URL_SAFE)\n\t\t\t\treturn 62 // '+'\n\t\t\tif (code =
=3D=3D=3D SLASH ||\n\t\t\t    code =3D=3D=3D =
SLASH_URL_SAFE)\n\t\t\t\treturn 63 // '/'\n\t\t\tif (code &lt; =
NUMBER)\n\t\t\t\treturn -1 //no match\n\t\t\tif (code &lt; NUMBER + =
10)\n\t\t\t\treturn code - NUMBER + 26 + 26\n\t\t\tif (code &lt; UPPER + =
26)\n\t\t\t\treturn code - UPPER\n\t\t\tif (code &lt; LOWER + =
26)\n\t\t\t\treturn code - LOWER + 26\n\t\t}\n\n\t\tfunction =
b64ToByteArray (b64) {\n\t\t\tvar i, j, l, tmp, placeHolders, =
arr\n\n\t\t\tif (b64.length % 4 &gt; 0) {\n\t\t\t\tthrow new =
Error('Invalid string. Length must be a multiple of =
4')\n\t\t\t}\n\n\t\t\t// the number of equal signs (place =
holders)\n\t\t\t// if there are two placeholders, than the two =
characters before it\n\t\t\t// represent one byte\n\t\t\t// if there is =
only one, then the three characters before it represent 2 =
bytes\n\t\t\t// this is just a cheap hack to not do indexOf =
twice\n\t\t\tvar len =3D b64.length\n\t\t\tplaceHolders =3D '=3D' =
=3D=3D=3D b64.charAt(len - 2) ? 2 : '=3D' =3D=3D=3D b64.charAt(len - 1) =
? 1 : 0\n\n\t\t\t// base64 is 4/3 + up to two characters of the original =
data\n\t\t\tarr =3D new Arr(b64.length * 3 / 4 - =
placeHolders)\n\n\t\t\t// if there are placeholders, only get up to the =
last complete 4 chars\n\t\t\tl =3D placeHolders &gt; 0 ? b64.length - 4 =
: b64.length\n\n\t\t\tvar L =3D 0\n\n\t\t\tfunction push (v) =
{\n\t\t\t\tarr[L++] =3D v\n\t\t\t}\n\n\t\t\tfor (i =3D 0, j =3D 0; i =
&lt; l; i +=3D 4, j +=3D 3) {\n\t\t\t\ttmp =3D (decode(b64.charAt(i)) =
&lt;&lt; 18) | (decode(b64.charAt(i + 1)) &lt;&lt; 12) | =
(decode(b64.charAt(i + 2)) &lt;&lt; 6) | decode(b64.charAt(i + =
3))\n\t\t\t\tpush((tmp &amp; 0xFF0000) &gt;&gt; 16)\n\t\t\t\tpush((tmp =
&amp; 0xFF00) &gt;&gt; 8)\n\t\t\t\tpush(tmp &amp; =
0xFF)\n\t\t\t}\n\n\t\t\tif (placeHolders =3D=3D=3D 2) {\n\t\t\t\ttmp =3D =
(decode(b64.charAt(i)) &lt;&lt; 2) | (decode(b64.charAt(i + 1)) &gt;&gt; =
4)\n\t\t\t\tpush(tmp &amp; 0xFF)\n\t\t\t} else if (placeHolders =
=3D=3D=3D 1) {\n\t\t\t\ttmp =3D (decode(b64.charAt(i)) &lt;&lt; 10) | =
(decode(b64.charAt(i + 1)) &lt;&lt; 4) | (decode(b64.charAt(i + 2)) =
&gt;&gt; 2)\n\t\t\t\tpush((tmp &gt;&gt; 8) &amp; 0xFF)\n\t\t\t\tpush(tmp =
&amp; 0xFF)\n\t\t\t}\n\n\t\t\treturn arr\n\t\t}\n\n\t\tfunction =
uint8ToBase64 (uint8) {\n\t\t\tvar i,\n\t\t\t\textraBytes =3D =
uint8.length % 3, // if we have 1 byte left, pad 2 bytes\n\t\t\t\toutput =
=3D \"\",\n\t\t\t\ttemp, length\n\n\t\t\tfunction encode (num) =
{\n\t\t\t\treturn lookup.charAt(num)\n\t\t\t}\n\n\t\t\tfunction =
tripletToBase64 (num) {\n\t\t\t\treturn encode(num &gt;&gt; 18 &amp; =
0x3F) + encode(num &gt;&gt; 12 &amp; 0x3F) + encode(num &gt;&gt; 6 &amp; =
0x3F) + encode(num &amp; 0x3F)\n\t\t\t}\n\n\t\t\t// go through the array =
every three bytes, we'll deal with trailing stuff later\n\t\t\tfor (i =
=3D 0, length =3D uint8.length - extraBytes; i &lt; length; i +=3D 3) =
{\n\t\t\t\ttemp =3D (uint8[i] &lt;&lt; 16) + (uint8[i + 1] &lt;&lt; 8) + =
(uint8[i + 2])\n\t\t\t\toutput +=3D =
tripletToBase64(temp)\n\t\t\t}\n\n\t\t\t// pad the end with zeros, but =
make sure to not forget the extra bytes\n\t\t\tswitch (extraBytes) =
{\n\t\t\t\tcase 1:\n\t\t\t\t\ttemp =3D uint8[uint8.length - =
1]\n\t\t\t\t\toutput +=3D encode(temp &gt;&gt; 2)\n\t\t\t\t\toutput +=3D =
encode((temp &lt;&lt; 4) &amp; 0x3F)\n\t\t\t\t\toutput +=3D =
'=3D=3D'\n\t\t\t\t\tbreak\n\t\t\t\tcase 2:\n\t\t\t\t\ttemp =3D =
(uint8[uint8.length - 2] &lt;&lt; 8) + (uint8[uint8.length - =
1])\n\t\t\t\t\toutput +=3D encode(temp &gt;&gt; 10)\n\t\t\t\t\toutput =
+=3D encode((temp &gt;&gt; 4) &amp; 0x3F)\n\t\t\t\t\toutput +=3D =
encode((temp &lt;&lt; 2) &amp; 0x3F)\n\t\t\t\t\toutput +=3D =
'=3D'\n\t\t\t\t\tbreak\n\t\t\t}\n\n\t\t\treturn =
output\n\t\t}\n\n\t\texports.toByteArray =3D =
b64ToByteArray\n\t\texports.fromByteArray =3D uint8ToBase64\n\t}( false =
? (this.base64js =3D {}) : exports))\n\n\n/***/ },\n/* 4 */\n/***/ =
function(module, exports) {\n\n\texports.read =3D function (buffer, =
offset, isLE, mLen, nBytes) {\n\t  var e, m\n\t  var eLen =3D nBytes * 8 =
- mLen - 1\n\t  var eMax =3D (1 &lt;&lt; eLen) - 1\n\t  var eBias =3D =
eMax &gt;&gt; 1\n\t  var nBits =3D -7\n\t  var i =3D isLE ? (nBytes - 1) =
: 0\n\t  var d =3D isLE ? -1 : 1\n\t  var s =3D buffer[offset + i]\n\n\t =
 i +=3D d\n\n\t  e =3D s &amp; ((1 &lt;&lt; (-nBits)) - 1)\n\t  s =
&gt;&gt;=3D (-nBits)\n\t  nBits +=3D eLen\n\t  for (; nBits &gt; 0; e =
=3D e * 256 + buffer[offset + i], i +=3D d, nBits -=3D 8) {}\n\n\t  m =
=3D e &amp; ((1 &lt;&lt; (-nBits)) - 1)\n\t  e &gt;&gt;=3D (-nBits)\n\t  =
nBits +=3D mLen\n\t  for (; nBits &gt; 0; m =3D m * 256 + buffer[offset =
+ i], i +=3D d, nBits -=3D 8) {}\n\n\t  if (e =3D=3D=3D 0) {\n\t    e =
=3D 1 - eBias\n\t  } else if (e =3D=3D=3D eMax) {\n\t    return m ? NaN =
: ((s ? -1 : 1) * Infinity)\n\t  } else {\n\t    m =3D m + Math.pow(2, =
mLen)\n\t    e =3D e - eBias\n\t  }\n\t  return (s ? -1 : 1) * m * =
Math.pow(2, e - mLen)\n\t}\n\n\texports.write =3D function (buffer, =
value, offset, isLE, mLen, nBytes) {\n\t  var e, m, c\n\t  var eLen =3D =
nBytes * 8 - mLen - 1\n\t  var eMax =3D (1 &lt;&lt; eLen) - 1\n\t  var =
eBias =3D eMax &gt;&gt; 1\n\t  var rt =3D (mLen =3D=3D=3D 23 ? =
Math.pow(2, -24) - Math.pow(2, -77) : 0)\n\t  var i =3D isLE ? 0 : =
(nBytes - 1)\n\t  var d =3D isLE ? 1 : -1\n\t  var s =3D value &lt; 0 || =
(value =3D=3D=3D 0 &amp;&amp; 1 / value &lt; 0) ? 1 : 0\n\n\t  value =3D =
Math.abs(value)\n\n\t  if (isNaN(value) || value =3D=3D=3D Infinity) =
{\n\t    m =3D isNaN(value) ? 1 : 0\n\t    e =3D eMax\n\t  } else {\n\t  =
  e =3D Math.floor(Math.log(value) / Math.LN2)\n\t    if (value * (c =3D =
Math.pow(2, -e)) &lt; 1) {\n\t      e--\n\t      c *=3D 2\n\t    }\n\t   =
 if (e + eBias &gt;=3D 1) {\n\t      value +=3D rt / c\n\t    } else =
{\n\t      value +=3D rt * Math.pow(2, 1 - eBias)\n\t    }\n\t    if =
(value * c &gt;=3D 2) {\n\t      e++\n\t      c /=3D 2\n\t    }\n\n\t    =
if (e + eBias &gt;=3D eMax) {\n\t      m =3D 0\n\t      e =3D eMax\n\t   =
 } else if (e + eBias &gt;=3D 1) {\n\t      m =3D (value * c - 1) * =
Math.pow(2, mLen)\n\t      e =3D e + eBias\n\t    } else {\n\t      m =
=3D value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n\t      e =3D =
0\n\t    }\n\t  }\n\n\t  for (; mLen &gt;=3D 8; buffer[offset + i] =3D m =
&amp; 0xff, i +=3D d, m /=3D 256, mLen -=3D 8) {}\n\n\t  e =3D (e =
&lt;&lt; mLen) | m\n\t  eLen +=3D mLen\n\t  for (; eLen &gt; 0; =
buffer[offset + i] =3D e &amp; 0xff, i +=3D d, e /=3D 256, eLen -=3D 8) =
{}\n\n\t  buffer[offset + i - d] |=3D s * 128\n\t}\n\n\n/***/ },\n/* 5 =
*/\n/***/ function(module, exports) {\n\n\t\n\t/**\n\t * isArray\n\t =
*/\n\n\tvar isArray =3D Array.isArray;\n\n\t/**\n\t * toString\n\t =
*/\n\n\tvar str =3D Object.prototype.toString;\n\n\t/**\n\t * Whether or =
not the given `val`\n\t * is an array.\n\t *\n\t * example:\n\t *\n\t *  =
      isArray([]);\n\t *        // &gt; true\n\t *        =
isArray(arguments);\n\t *        // &gt; false\n\t *        =
isArray('');\n\t *        // &gt; false\n\t *\n\t * @param {mixed} =
val\n\t * @return {bool}\n\t */\n\n\tmodule.exports =3D isArray || =
function (val) {\n\t  return !! val &amp;&amp; '[object Array]' =3D=3D =
str.call(val);\n\t};\n\n\n/***/ },\n/* 6 */\n/***/ function(module, =
exports, __webpack_require__) {\n\n\t/* jslint node: true */\n\t/* =
global window */\n\t'use strict';\n\n\tvar _ =3D =
__webpack_require__(7);\n\tvar FontProvider =3D =
__webpack_require__(9);\n\tvar LayoutBuilder =3D =
__webpack_require__(11);\n\tvar PdfKit =3D =
__webpack_require__(24);\n\tvar PDFReference =3D =
__webpack_require__(46);\n\tvar sizes =3D =
__webpack_require__(102);\n\tvar ImageMeasure =3D =
__webpack_require__(103);\n\tvar textDecorator =3D =
__webpack_require__(104);\n\tvar FontProvider =3D =
__webpack_require__(9);\n\n\t_.noConflict();\n\n\t///////////////////////=
/////////////////\n\t// PdfPrinter\n\n\t/**\n\t * @class Creates an =
instance of a PdfPrinter which turns document definition into a pdf\n\t =
*\n\t * @param {Object} fontDescriptors font definition dictionary\n\t =
*\n\t * @example\n\t * var fontDescriptors =3D {\n\t *\tRoboto: {\n\t =
*\t\tnormal: 'fonts/Roboto-Regular.ttf',\n\t *\t\tbold: =
'fonts/Roboto-Medium.ttf',\n\t *\t\titalics: =
'fonts/Roboto-Italic.ttf',\n\t *\t\tbolditalics: =
'fonts/Roboto-Italic.ttf'\n\t *\t}\n\t * };\n\t *\n\t * var printer =3D =
new PdfPrinter(fontDescriptors);\n\t */\n\tfunction =
PdfPrinter(fontDescriptors) {\n\t\tthis.fontDescriptors =3D =
fontDescriptors;\n\t}\n\n\t/**\n\t * Executes layout engine for the =
specified document and renders it into a pdfkit document\n\t * ready to =
be saved.\n\t *\n\t * @param {Object} docDefinition document =
definition\n\t * @param {Object} docDefinition.content an array =
describing the pdf structure (for more information take a look at the =
examples in the /examples folder)\n\t * @param {Object} =
[docDefinition.defaultStyle] default (implicit) style definition\n\t * =
@param {Object} [docDefinition.styles] dictionary defining all styles =
which can be used in the document\n\t * @param {Object} =
[docDefinition.pageSize] page size (pdfkit units, A4 dimensions by =
default)\n\t * @param {Number} docDefinition.pageSize.width width\n\t * =
@param {Number} docDefinition.pageSize.height height\n\t * @param =
{Object} [docDefinition.pageMargins] page margins (pdfkit units)\n\t =
*\n\t * @example\n\t *\n\t * var docDefinition =3D {\n\t * \tinfo: {\n\t =
*\t\ttitle: 'awesome Document',\n\t *\t\tauthor: 'john doe',\n\t =
*\t\tsubject: 'subject of document',\n\t *\t\tkeywords: 'keywords for =
document',\n\t * \t},\n\t *\tcontent: [\n\t *\t\t'First paragraph',\n\t =
*\t\t'Second paragraph, this time a little bit longer',\n\t *\t\t{ text: =
'Third paragraph, slightly bigger font size', fontSize: 20 },\n\t *\t\t{ =
text: 'Another paragraph using a named style', style: 'header' },\n\t =
*\t\t{ text: ['playing with ', 'inlines' ] },\n\t *\t\t{ text: ['and ', =
{ text: 'restyling ', bold: true }, 'them'] },\n\t *\t],\n\t *\tstyles: =
{\n\t *\t\theader: { fontSize: 30, bold: true }\n\t *\t}\n\t * }\n\t =
*\n\t * var pdfDoc =3D printer.createPdfKitDocument(docDefinition);\n\t =
*\n\t * pdfDoc.pipe(fs.createWriteStream('sample.pdf'));\n\t * =
pdfDoc.end();\n\t *\n\t * @return {Object} a pdfKit document object =
which can be saved or encode to data-url\n\t =
*/\n\tPdfPrinter.prototype.createPdfKitDocument =3D =
function(docDefinition, options) {\n\t\toptions =3D options || =
{};\n\n\t\tvar pageSize =3D =
pageSize2widthAndHeight(docDefinition.pageSize || 'a4');\n\n\t  =
if(docDefinition.pageOrientation =3D=3D=3D 'landscape') {\n\t    =
pageSize =3D { width: pageSize.height, height: pageSize.width};\n\t  =
}\n\t\tpageSize.orientation =3D docDefinition.pageOrientation =3D=3D=3D =
'landscape' ? docDefinition.pageOrientation : =
'portrait';\n\n\t\tthis.pdfKitDoc =3D new PdfKit({ size: [ =
pageSize.width, pageSize.height ], compress: =
false});\n\t\tthis.pdfKitDoc.info.Producer =3D =
'pdfmake';\n\t\tthis.pdfKitDoc.info.Creator =3D 'pdfmake';\n\t\t\n\t\t// =
pdf kit maintains the uppercase fieldnames from pdf spec\n\t\t// to keep =
the pdfmake api consistent, the info field are defined =
lowercase\n\t\tif(docDefinition.info){\n\t\t\tvar info =3D =
docDefinition.info;\n\t\t\t// check for falsey an set null, so that =
pdfkit always get either null or value\n\t\t\tthis.pdfKitDoc.info.Title =
=3D docDefinition.info.title ? docDefinition.info.title : =
null;\n\t\t\tthis.pdfKitDoc.info.Author =3D docDefinition.info.author ? =
docDefinition.info.author : null;\n\t\t\tthis.pdfKitDoc.info.Subject =3D =
docDefinition.info.subject ? docDefinition.info.subject : =
null;\n\t\t\tthis.pdfKitDoc.info.Keywords =3D =
docDefinition.info.keywords ? docDefinition.info.keywords : =
null;\n\t\t}\n\t\t\n\t\tthis.fontProvider =3D new =
FontProvider(this.fontDescriptors, this.pdfKitDoc);\n\n\t  =
docDefinition.images =3D docDefinition.images || {};\n\n\t\tvar builder =
=3D new =
LayoutBuilder(\n\t\t\tpageSize,\n\t\t\tfixPageMargins(docDefinition.pageM=
argins || 40),\n\t        new ImageMeasure(this.pdfKitDoc, =
docDefinition.images));\n\n\t  registerDefaultTableLayouts(builder);\n\t =
 if (options.tableLayouts) {\n\t    =
builder.registerTableLayouts(options.tableLayouts);\n\t  }\n\n\t\tvar =
pages =3D builder.layoutDocument(docDefinition.content, =
this.fontProvider, docDefinition.styles || {}, =
docDefinition.defaultStyle || { fontSize: 12, font: 'Roboto' }, =
docDefinition.background, docDefinition.header, docDefinition.footer, =
docDefinition.images, docDefinition.watermark, =
docDefinition.pageBreakBefore);\n\n\t\trenderPages(pages, =
this.fontProvider, this.pdfKitDoc);\n\n\t\tif(options.autoPrint){\n\t    =
var printActionRef =3D this.pdfKitDoc.ref({\n\t      Type: 'Action',\n\t =
     S: 'Named',\n\t      N: 'Print'\n\t    });\n\t    =
this.pdfKitDoc._root.data.OpenAction =3D printActionRef;\n\t    =
printActionRef.end();\n\t\t}\n\t\treturn =
this.pdfKitDoc;\n\t};\n\n\tfunction fixPageMargins(margin) {\n\t    if =
(!margin) return null;\n\n\t    if (typeof margin =3D=3D=3D 'number' || =
margin instanceof Number) {\n\t        margin =3D { left: margin, right: =
margin, top: margin, bottom: margin };\n\t    } else if (margin =
instanceof Array) {\n\t        if (margin.length =3D=3D=3D 2) {\n\t      =
      margin =3D { left: margin[0], top: margin[1], right: margin[0], =
bottom: margin[1] };\n\t        } else if (margin.length =3D=3D=3D 4) =
{\n\t            margin =3D { left: margin[0], top: margin[1], right: =
margin[2], bottom: margin[3] };\n\t        } else throw 'Invalid =
pageMargins definition';\n\t    }\n\n\t    return =
margin;\n\t}\n\n\tfunction registerDefaultTableLayouts(layoutBuilder) =
{\n\t  layoutBuilder.registerTableLayouts({\n\t    noBorders: {\n\t      =
hLineWidth: function(i) { return 0; },\n\t      vLineWidth: function(i) =
{ return 0; },\n\t      paddingLeft: function(i) { return i &amp;&amp; 4 =
|| 0; },\n\t      paddingRight: function(i, node) { return (i &lt; =
node.table.widths.length - 1) ? 4 : 0; },\n\t    },\n\t    =
headerLineOnly: {\n\t      hLineWidth: function(i, node) {\n\t        if =
(i =3D=3D=3D 0 || i =3D=3D=3D node.table.body.length) return 0;\n\t      =
  return (i =3D=3D=3D node.table.headerRows) ? 2 : 0;\n\t      },\n\t    =
  vLineWidth: function(i) { return 0; },\n\t      paddingLeft: =
function(i) {\n\t        return i =3D=3D=3D 0 ? 0 : 8;\n\t      },\n\t   =
   paddingRight: function(i, node) {\n\t        return (i =3D=3D=3D =
node.table.widths.length - 1) ? 0 : 8;\n\t      }\n\t    },\n\t    =
lightHorizontalLines: {\n\t      hLineWidth: function(i, node) {\n\t     =
   if (i =3D=3D=3D 0 || i =3D=3D=3D node.table.body.length) return =
0;\n\t        return (i =3D=3D=3D node.table.headerRows) ? 2 : 1;\n\t    =
  },\n\t      vLineWidth: function(i) { return 0; },\n\t      =
hLineColor: function(i) { return i =3D=3D=3D 1 ? 'black' : '#aaa'; =
},\n\t      paddingLeft: function(i) {\n\t        return i =3D=3D=3D 0 ? =
0 : 8;\n\t      },\n\t      paddingRight: function(i, node) {\n\t        =
return (i =3D=3D=3D node.table.widths.length - 1) ? 0 : 8;\n\t      =
}\n\t    }\n\t  });\n\t}\n\n\tvar defaultLayout =3D {\n\t  hLineWidth: =
function(i, node) { return 1; }, //return node.table.headerRows =
&amp;&amp; i =3D=3D=3D node.table.headerRows &amp;&amp; 3 || 0; },\n\t  =
vLineWidth: function(i, node) { return 1; },\n\t  hLineColor: =
function(i, node) { return 'black'; },\n\t  vLineColor: function(i, =
node) { return 'black'; },\n\t  paddingLeft: function(i, node) { return =
4; }, //i &amp;&amp; 4 || 0; },\n\t  paddingRight: function(i, node) { =
return 4; }, //(i &lt; node.table.widths.length - 1) ? 4 : 0; },\n\t  =
paddingTop: function(i, node) { return 2; },\n\t  paddingBottom: =
function(i, node) { return 2; }\n\t};\n\n\tfunction =
pageSize2widthAndHeight(pageSize) {\n\t    if (typeof pageSize =3D=3D =
'string' || pageSize instanceof String) {\n\t        var size =3D =
sizes[pageSize.toUpperCase()];\n\t        if (!size) throw ('Page size ' =
+ pageSize + ' not recognized');\n\t        return { width: size[0], =
height: size[1] };\n\t    }\n\n\t    return pageSize;\n\t}\n\n\tfunction =
StringObject(str){\n\t\tthis.isString =3D true;\n\t\tthis.toString =3D =
function(){\n\t\t\treturn str;\n\t\t};\n\t}\n\n\tfunction =
updatePageOrientationInOptions(currentPage, pdfKitDoc) {\n\t\tvar =
previousPageOrientation =3D pdfKitDoc.options.size[0] &gt; =
pdfKitDoc.options.size[1] ? 'landscape' : =
'portrait';\n\n\t\tif(currentPage.pageSize.orientation !=3D=3D =
previousPageOrientation) {\n\t\t\tvar width =3D =
pdfKitDoc.options.size[0];\n\t\t\tvar height =3D =
pdfKitDoc.options.size[1];\n\t\t\tpdfKitDoc.options.size =3D [height, =
width];\n\t\t}\n\t}\n\n\tfunction renderPages(pages, fontProvider, =
pdfKitDoc) {\n\t  pdfKitDoc._pdfMakePages =3D pages;\n\t\tfor (var i =3D =
0; i &lt; pages.length; i++) {\n\t\t\tif (i &gt; 0) =
{\n\t\t\t\tupdatePageOrientationInOptions(pages[i], =
pdfKitDoc);\n\t\t\t\tpdfKitDoc.addPage(pdfKitDoc.options);\n\t\t\t}\n\n\t=
\t\tvar page =3D pages[i];\n\t    for(var ii =3D 0, il =3D =
page.items.length; ii &lt; il; ii++) {\n\t        var item =3D =
page.items[ii];\n\t        switch(item.type) {\n\t          case =
'vector':\n\t              renderVector(item.item, pdfKitDoc);\n\t       =
       break;\n\t          case 'line':\n\t              =
renderLine(item.item, item.item.x, item.item.y, pdfKitDoc);\n\t          =
    break;\n\t          case 'image':\n\t              =
renderImage(item.item, item.item.x, item.item.y, pdfKitDoc);\n\t         =
     break;\n\t\t\t\t\t}\n\t    }\n\t    if(page.watermark){\n\t      =
renderWatermark(page, pdfKitDoc);\n\t\t}\n\n\t    =
fontProvider.setFontRefsToPdfDoc();\n\t  }\n\t}\n\n\tfunction =
renderLine(line, x, y, pdfKitDoc) {\n\t\tx =3D x || 0;\n\t\ty =3D y || =
0;\n\n\t\tvar lineHeight =3D line.getHeight();\n\t\tvar ascenderHeight =
=3D line.getAscenderHeight();\n\n\t\ttextDecorator.drawBackground(line, =
x, y, pdfKitDoc);\n\n\t\t//TODO: line.optimizeInlines();\n\t\tfor(var i =
=3D 0, l =3D line.inlines.length; i &lt; l; i++) {\n\t\t\tvar inline =3D =
line.inlines[i];\n\n\t\t\tpdfKitDoc.fill(inline.color || =
'black');\n\n\t\t\tpdfKitDoc.save();\n\t\t\tpdfKitDoc.transform(1, 0, 0, =
-1, 0, pdfKitDoc.page.height);\n\n\n\t    var encoded =3D =
inline.font.encode(inline.text);\n\t\t\tpdfKitDoc.addContent('BT');\n\n\t=
\t\tpdfKitDoc.addContent('' + (x + inline.x) + ' ' + =
(pdfKitDoc.page.height - y - ascenderHeight) + ' =
Td');\n\t\t\tpdfKitDoc.addContent('/' + encoded.fontId + ' ' + =
inline.fontSize + ' Tf');\n\n\t        pdfKitDoc.addContent('&lt;' + =
encoded.encodedText + '&gt; =
Tj');\n\n\t\t\tpdfKitDoc.addContent('ET');\n\n\t\t\tif (inline.link) =
{\n\t\t\t\tpdfKitDoc.link(x + inline.x, pdfKitDoc.page.height - y - =
lineHeight, inline.width, lineHeight, =
inline.link);\n\t\t\t}\n\n\t\t\tpdfKitDoc.restore();\n\t\t}\n\n\t\ttextDe=
corator.drawDecorations(line, x, y, pdfKitDoc);\n\n\t}\n\n\tfunction =
renderWatermark(page, pdfKitDoc){\n\t\tvar watermark =3D =
page.watermark;\n\n\t\tpdfKitDoc.fill('black');\n\t\tpdfKitDoc.opacity(0.=
6);\n\n\t\tpdfKitDoc.save();\n\t\tpdfKitDoc.transform(1, 0, 0, -1, 0, =
pdfKitDoc.page.height);\n\n\t\tvar angle =3D =
Math.atan2(pdfKitDoc.page.height, pdfKitDoc.page.width) * =
180/Math.PI;\n\t\tpdfKitDoc.rotate(angle, {origin: =
[pdfKitDoc.page.width/2, pdfKitDoc.page.height/2]});\n\n\t  var encoded =
=3D =
watermark.font.encode(watermark.text);\n\t\tpdfKitDoc.addContent('BT');\n=
\t\tpdfKitDoc.addContent('' + (pdfKitDoc.page.width/2 - =
watermark.size.size.width/2) + ' ' + (pdfKitDoc.page.height/2 - =
watermark.size.size.height/4) + ' Td');\n\t\tpdfKitDoc.addContent('/' + =
encoded.fontId + ' ' + watermark.size.fontSize + ' =
Tf');\n\t\tpdfKitDoc.addContent('&lt;' + encoded.encodedText + '&gt; =
Tj');\n\t\tpdfKitDoc.addContent('ET');\n\t\tpdfKitDoc.restore();\n\t}\n\n=
\tfunction renderVector(vector, pdfDoc) {\n\t\t//TODO: pdf optimization =
(there's no need to write all properties =
everytime)\n\t\tpdfDoc.lineWidth(vector.lineWidth || 1);\n\t\tif =
(vector.dash) {\n\t\t\tpdfDoc.dash(vector.dash.length, { space: =
vector.dash.space || vector.dash.length });\n\t\t} else =
{\n\t\t\tpdfDoc.undash();\n\t\t}\n\t\tpdfDoc.fillOpacity(vector.fillOpaci=
ty || 1);\n\t\tpdfDoc.strokeOpacity(vector.strokeOpacity || =
1);\n\t\tpdfDoc.lineJoin(vector.lineJoin || 'miter');\n\n\t\t//TODO: =
clipping\n\n\t\tswitch(vector.type) {\n\t\t\tcase =
'ellipse':\n\t\t\t\tpdfDoc.ellipse(vector.x, vector.y, vector.r1, =
vector.r2);\n\t\t\t\tbreak;\n\t\t\tcase 'rect':\n\t\t\t\tif (vector.r) =
{\n\t\t\t\t\tpdfDoc.roundedRect(vector.x, vector.y, vector.w, vector.h, =
vector.r);\n\t\t\t\t} else {\n\t\t\t\t\tpdfDoc.rect(vector.x, vector.y, =
vector.w, vector.h);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase =
'line':\n\t\t\t\tpdfDoc.moveTo(vector.x1, =
vector.y1);\n\t\t\t\tpdfDoc.lineTo(vector.x2, =
vector.y2);\n\t\t\t\tbreak;\n\t\t\tcase 'polyline':\n\t\t\t\tif =
(vector.points.length =3D=3D=3D 0) =
break;\n\n\t\t\t\tpdfDoc.moveTo(vector.points[0].x, =
vector.points[0].y);\n\t\t\t\tfor(var i =3D 1, l =3D =
vector.points.length; i &lt; l; i++) =
{\n\t\t\t\t\tpdfDoc.lineTo(vector.points[i].x, =
vector.points[i].y);\n\t\t\t\t}\n\n\t\t\t\tif (vector.points.length &gt; =
1) {\n\t\t\t\t\tvar p1 =3D vector.points[0];\n\t\t\t\t\tvar pn =3D =
vector.points[vector.points.length - 1];\n\n\t\t\t\t\tif =
(vector.closePath || p1.x =3D=3D=3D pn.x &amp;&amp; p1.y =3D=3D=3D pn.y) =
{\n\t\t\t\t\t\tpdfDoc.closePath();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak=
;\n\t\t}\n\n\t\tif (vector.color &amp;&amp; vector.lineColor) =
{\n\t\t\tpdfDoc.fillAndStroke(vector.color, vector.lineColor);\n\t\t} =
else if (vector.color) {\n\t\t\tpdfDoc.fill(vector.color);\n\t\t} else =
{\n\t\t\tpdfDoc.stroke(vector.lineColor || =
'black');\n\t\t}\n\t}\n\n\tfunction renderImage(image, x, y, pdfKitDoc) =
{\n\t    pdfKitDoc.image(image.image, image.x, image.y, { width: =
image._width, height: image._height });\n\t}\n\n\tmodule.exports =3D =
PdfPrinter;\n\n\n\t/* temporary browser extension =
*/\n\tPdfPrinter.prototype.fs =3D __webpack_require__(44);\n\n\n/***/ =
},\n/* 7 */\n/***/ function(module, exports, __webpack_require__) =
{\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION =
*/(function(module, global) {/**\n\t * @license\n\t * lodash 3.10.1 =
(Custom Build) &lt;https://lodash.com/&gt;\n\t * Build: `lodash modern =
-d -o ./index.js`\n\t * Copyright 2012-2015 The Dojo Foundation =
&lt;http://dojofoundation.org/&gt;\n\t * Based on Underscore.js 1.8.3 =
&lt;http://underscorejs.org/LICENSE&gt;\n\t * Copyright 2009-2015 Jeremy =
Ashkenas, DocumentCloud and Investigative Reporters &amp; Editors\n\t * =
Available under MIT license &lt;https://lodash.com/license&gt;\n\t =
*/\n\t;(function() {\n\n\t  /** Used as a safe reference for `undefined` =
in pre-ES5 environments. */\n\t  var undefined;\n\n\t  /** Used as the =
semantic version number. */\n\t  var VERSION =3D '3.10.1';\n\n\t  /** =
Used to compose bitmasks for wrapper metadata. */\n\t  var BIND_FLAG =3D =
1,\n\t      BIND_KEY_FLAG =3D 2,\n\t      CURRY_BOUND_FLAG =3D 4,\n\t    =
  CURRY_FLAG =3D 8,\n\t      CURRY_RIGHT_FLAG =3D 16,\n\t      =
PARTIAL_FLAG =3D 32,\n\t      PARTIAL_RIGHT_FLAG =3D 64,\n\t      =
ARY_FLAG =3D 128,\n\t      REARG_FLAG =3D 256;\n\n\t  /** Used as =
default options for `_.trunc`. */\n\t  var DEFAULT_TRUNC_LENGTH =3D =
30,\n\t      DEFAULT_TRUNC_OMISSION =3D '...';\n\n\t  /** Used to detect =
when a function becomes hot. */\n\t  var HOT_COUNT =3D 150,\n\t      =
HOT_SPAN =3D 16;\n\n\t  /** Used as the size to enable large array =
optimizations. */\n\t  var LARGE_ARRAY_SIZE =3D 200;\n\n\t  /** Used to =
indicate the type of lazy iteratees. */\n\t  var LAZY_FILTER_FLAG =3D =
1,\n\t      LAZY_MAP_FLAG =3D 2;\n\n\t  /** Used as the `TypeError` =
message for \"Functions\" methods. */\n\t  var FUNC_ERROR_TEXT =3D =
'Expected a function';\n\n\t  /** Used as the internal argument =
placeholder. */\n\t  var PLACEHOLDER =3D '__lodash_placeholder__';\n\n\t =
 /** `Object#toString` result references. */\n\t  var argsTag =3D =
'[object Arguments]',\n\t      arrayTag =3D '[object Array]',\n\t      =
boolTag =3D '[object Boolean]',\n\t      dateTag =3D '[object =
Date]',\n\t      errorTag =3D '[object Error]',\n\t      funcTag =3D =
'[object Function]',\n\t      mapTag =3D '[object Map]',\n\t      =
numberTag =3D '[object Number]',\n\t      objectTag =3D '[object =
Object]',\n\t      regexpTag =3D '[object RegExp]',\n\t      setTag =3D =
'[object Set]',\n\t      stringTag =3D '[object String]',\n\t      =
weakMapTag =3D '[object WeakMap]';\n\n\t  var arrayBufferTag =3D =
'[object ArrayBuffer]',\n\t      float32Tag =3D '[object =
Float32Array]',\n\t      float64Tag =3D '[object Float64Array]',\n\t     =
 int8Tag =3D '[object Int8Array]',\n\t      int16Tag =3D '[object =
Int16Array]',\n\t      int32Tag =3D '[object Int32Array]',\n\t      =
uint8Tag =3D '[object Uint8Array]',\n\t      uint8ClampedTag =3D =
'[object Uint8ClampedArray]',\n\t      uint16Tag =3D '[object =
Uint16Array]',\n\t      uint32Tag =3D '[object Uint32Array]';\n\n\t  /** =
Used to match empty string literals in compiled template source. */\n\t  =
var reEmptyStringLeading =3D /\\b__p \\+=3D '';/g,\n\t      =
reEmptyStringMiddle =3D /\\b(__p \\+=3D) '' \\+/g,\n\t      =
reEmptyStringTrailing =3D /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n\t  =
/** Used to match HTML entities and HTML characters. */\n\t  var =
reEscapedHtml =3D /&amp;(?:amp|lt|gt|quot|#39|#96);/g,\n\t      =
reUnescapedHtml =3D /[&amp;&lt;&gt;\"'`]/g,\n\t      reHasEscapedHtml =
=3D RegExp(reEscapedHtml.source),\n\t      reHasUnescapedHtml =3D =
RegExp(reUnescapedHtml.source);\n\n\t  /** Used to match template =
delimiters. */\n\t  var reEscape =3D /&lt;%-([\\s\\S]+?)%&gt;/g,\n\t     =
 reEvaluate =3D /&lt;%([\\s\\S]+?)%&gt;/g,\n\t      reInterpolate =3D =
/&lt;%=3D([\\s\\S]+?)%&gt;/g;\n\n\t  /** Used to match property names =
within property paths. */\n\t  var reIsDeepProp =3D =
/\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\n\\\\]|\\\\.)*?\\1)\\]/,\n\t    =
  reIsPlainProp =3D /^\\w*$/,\n\t      rePropName =3D =
/[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\n\\\\]|\\\\.)=
*?)\\2)\\]/g;\n\n\t  /**\n\t   * Used to match `RegExp` [syntax =
characters](http://ecma-international.org/ecma-262/6.0/#sec-patterns)\n\t=
   * and those outlined by =
[`EscapeRegExpPattern`](http://ecma-international.org/ecma-262/6.0/#sec-e=
scaperegexppattern).\n\t   */\n\t  var reRegExpChars =3D =
/^[:!,]|[\\\\^$.*+?()[\\]{}|\\/]|(^[0-9a-fA-Fnrtuvx])|([\\n\\r\\u2028\\u2=
029])/g,\n\t      reHasRegExpChars =3D =
RegExp(reRegExpChars.source);\n\n\t  /** Used to match [combining =
diacritical =
marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks). =
*/\n\t  var reComboMark =3D /[\\u0300-\\u036f\\ufe20-\\ufe23]/g;\n\n\t  =
/** Used to match backslashes in property paths. */\n\t  var =
reEscapeChar =3D /\\\\(\\\\)?/g;\n\n\t  /** Used to match [ES template =
delimiters](http://ecma-international.org/ecma-262/6.0/#sec-template-lite=
ral-lexical-components). */\n\t  var reEsTemplate =3D =
/\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n\t  /** Used to match =
`RegExp` flags from their coerced string values. */\n\t  var reFlags =3D =
/\\w*$/;\n\n\t  /** Used to detect hexadecimal string values. */\n\t  =
var reHasHexPrefix =3D /^0[xX]/;\n\n\t  /** Used to detect host =
constructors (Safari &gt; 5). */\n\t  var reIsHostCtor =3D /^\\[object =
.+?Constructor\\]$/;\n\n\t  /** Used to detect unsigned integer values. =
*/\n\t  var reIsUint =3D /^\\d+$/;\n\n\t  /** Used to match latin-1 =
supplementary letters (excluding mathematical operators). */\n\t  var =
reLatin1 =3D /[\\xc0-\\xd6\\xd8-\\xde\\xdf-\\xf6\\xf8-\\xff]/g;\n\n\t  =
/** Used to ensure capturing order of template delimiters. */\n\t  var =
reNoMatch =3D /($^)/;\n\n\t  /** Used to match unescaped characters in =
compiled string literals. */\n\t  var reUnescapedString =3D =
/['\\n\\r\\u2028\\u2029\\\\]/g;\n\n\t  /** Used to match words to create =
compound words. */\n\t  var reWords =3D (function() {\n\t    var upper =
=3D '[A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde]',\n\t        lower =3D =
'[a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff]+';\n\n\t    return RegExp(upper + =
'+(?=3D' + upper + lower + ')|' + upper + '?' + lower + '|' + upper + =
'+|[0-9]+', 'g');\n\t  }());\n\n\t  /** Used to assign default `context` =
object properties. */\n\t  var contextProps =3D [\n\t    'Array', =
'ArrayBuffer', 'Date', 'Error', 'Float32Array', 'Float64Array',\n\t    =
'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Math', =
'Number',\n\t    'Object', 'RegExp', 'Set', 'String', '_', =
'clearTimeout', 'isFinite',\n\t    'parseFloat', 'parseInt', =
'setTimeout', 'TypeError', 'Uint8Array',\n\t    'Uint8ClampedArray', =
'Uint16Array', 'Uint32Array', 'WeakMap'\n\t  ];\n\n\t  /** Used to make =
template sourceURLs easier to identify. */\n\t  var templateCounter =3D =
-1;\n\n\t  /** Used to identify `toStringTag` values of typed arrays. =
*/\n\t  var typedArrayTags =3D {};\n\t  typedArrayTags[float32Tag] =3D =
typedArrayTags[float64Tag] =3D\n\t  typedArrayTags[int8Tag] =3D =
typedArrayTags[int16Tag] =3D\n\t  typedArrayTags[int32Tag] =3D =
typedArrayTags[uint8Tag] =3D\n\t  typedArrayTags[uint8ClampedTag] =3D =
typedArrayTags[uint16Tag] =3D\n\t  typedArrayTags[uint32Tag] =3D =
true;\n\t  typedArrayTags[argsTag] =3D typedArrayTags[arrayTag] =3D\n\t  =
typedArrayTags[arrayBufferTag] =3D typedArrayTags[boolTag] =3D\n\t  =
typedArrayTags[dateTag] =3D typedArrayTags[errorTag] =3D\n\t  =
typedArrayTags[funcTag] =3D typedArrayTags[mapTag] =3D\n\t  =
typedArrayTags[numberTag] =3D typedArrayTags[objectTag] =3D\n\t  =
typedArrayTags[regexpTag] =3D typedArrayTags[setTag] =3D\n\t  =
typedArrayTags[stringTag] =3D typedArrayTags[weakMapTag] =3D =
false;\n\n\t  /** Used to identify `toStringTag` values supported by =
`_.clone`. */\n\t  var cloneableTags =3D {};\n\t  cloneableTags[argsTag] =
=3D cloneableTags[arrayTag] =3D\n\t  cloneableTags[arrayBufferTag] =3D =
cloneableTags[boolTag] =3D\n\t  cloneableTags[dateTag] =3D =
cloneableTags[float32Tag] =3D\n\t  cloneableTags[float64Tag] =3D =
cloneableTags[int8Tag] =3D\n\t  cloneableTags[int16Tag] =3D =
cloneableTags[int32Tag] =3D\n\t  cloneableTags[numberTag] =3D =
cloneableTags[objectTag] =3D\n\t  cloneableTags[regexpTag] =3D =
cloneableTags[stringTag] =3D\n\t  cloneableTags[uint8Tag] =3D =
cloneableTags[uint8ClampedTag] =3D\n\t  cloneableTags[uint16Tag] =3D =
cloneableTags[uint32Tag] =3D true;\n\t  cloneableTags[errorTag] =3D =
cloneableTags[funcTag] =3D\n\t  cloneableTags[mapTag] =3D =
cloneableTags[setTag] =3D\n\t  cloneableTags[weakMapTag] =3D =
false;\n\n\t  /** Used to map latin-1 supplementary letters to basic =
latin letters. */\n\t  var deburredLetters =3D {\n\t    '\\xc0': 'A',  =
'\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': =
'A',\n\t    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', =
'\\xe4': 'a', '\\xe5': 'a',\n\t    '\\xc7': 'C',  '\\xe7': 'c',\n\t    =
'\\xd0': 'D',  '\\xf0': 'd',\n\t    '\\xc8': 'E',  '\\xc9': 'E', =
'\\xca': 'E', '\\xcb': 'E',\n\t    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': =
'e', '\\xeb': 'e',\n\t    '\\xcC': 'I',  '\\xcd': 'I', '\\xce': 'I', =
'\\xcf': 'I',\n\t    '\\xeC': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': =
'i',\n\t    '\\xd1': 'N',  '\\xf1': 'n',\n\t    '\\xd2': 'O',  '\\xd3': =
'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n\t    =
'\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', =
'\\xf8': 'o',\n\t    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': =
'U',\n\t    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n\t =
   '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n\t    '\\xc6': 'Ae', =
'\\xe6': 'ae',\n\t    '\\xde': 'Th', '\\xfe': 'th',\n\t    '\\xdf': =
'ss'\n\t  };\n\n\t  /** Used to map characters to HTML entities. */\n\t  =
var htmlEscapes =3D {\n\t    '&amp;': '&amp;amp;',\n\t    '&lt;': =
'&amp;lt;',\n\t    '&gt;': '&amp;gt;',\n\t    '\"': '&amp;quot;',\n\t    =
\"'\": '&amp;#39;',\n\t    '`': '&amp;#96;'\n\t  };\n\n\t  /** Used to =
map HTML entities to characters. */\n\t  var htmlUnescapes =3D {\n\t    =
'&amp;amp;': '&amp;',\n\t    '&amp;lt;': '&lt;',\n\t    '&amp;gt;': =
'&gt;',\n\t    '&amp;quot;': '\"',\n\t    '&amp;#39;': \"'\",\n\t    =
'&amp;#96;': '`'\n\t  };\n\n\t  /** Used to determine if values are of =
the language type `Object`. */\n\t  var objectTypes =3D {\n\t    =
'function': true,\n\t    'object': true\n\t  };\n\n\t  /** Used to =
escape characters for inclusion in compiled regexes. */\n\t  var =
regexpEscapes =3D {\n\t    '0': 'x30', '1': 'x31', '2': 'x32', '3': =
'x33', '4': 'x34',\n\t    '5': 'x35', '6': 'x36', '7': 'x37', '8': =
'x38', '9': 'x39',\n\t    'A': 'x41', 'B': 'x42', 'C': 'x43', 'D': =
'x44', 'E': 'x45', 'F': 'x46',\n\t    'a': 'x61', 'b': 'x62', 'c': =
'x63', 'd': 'x64', 'e': 'x65', 'f': 'x66',\n\t    'n': 'x6e', 'r': =
'x72', 't': 'x74', 'u': 'x75', 'v': 'x76', 'x': 'x78'\n\t  };\n\n\t  /** =
Used to escape characters for inclusion in compiled string literals. =
*/\n\t  var stringEscapes =3D {\n\t    '\\\\': '\\\\',\n\t    \"'\": =
\"'\",\n\t    '\\n': 'n',\n\t    '\\r': 'r',\n\t    '\\u2028': =
'u2028',\n\t    '\\u2029': 'u2029'\n\t  };\n\n\t  /** Detect free =
variable `exports`. */\n\t  var freeExports =3D objectTypes[typeof =
exports] &amp;&amp; exports &amp;&amp; !exports.nodeType &amp;&amp; =
exports;\n\n\t  /** Detect free variable `module`. */\n\t  var =
freeModule =3D objectTypes[typeof module] &amp;&amp; module &amp;&amp; =
!module.nodeType &amp;&amp; module;\n\n\t  /** Detect free variable =
`global` from Node.js. */\n\t  var freeGlobal =3D freeExports &amp;&amp; =
freeModule &amp;&amp; typeof global =3D=3D 'object' &amp;&amp; global =
&amp;&amp; global.Object &amp;&amp; global;\n\n\t  /** Detect free =
variable `self`. */\n\t  var freeSelf =3D objectTypes[typeof self] =
&amp;&amp; self &amp;&amp; self.Object &amp;&amp; self;\n\n\t  /** =
Detect free variable `window`. */\n\t  var freeWindow =3D =
objectTypes[typeof window] &amp;&amp; window &amp;&amp; window.Object =
&amp;&amp; window;\n\n\t  /** Detect the popular CommonJS extension =
`module.exports`. */\n\t  var moduleExports =3D freeModule &amp;&amp; =
freeModule.exports =3D=3D=3D freeExports &amp;&amp; freeExports;\n\n\t  =
/**\n\t   * Used as a reference to the global object.\n\t   *\n\t   * =
The `this` value is used if it's the global object to avoid =
Greasemonkey's\n\t   * restricted `window` object, otherwise the =
`window` object is used.\n\t   */\n\t  var root =3D freeGlobal || =
((freeWindow !=3D=3D (this &amp;&amp; this.window)) &amp;&amp; =
freeWindow) || freeSelf || this;\n\n\t  =
/*-----------------------------------------------------------------------=
---*/\n\n\t  /**\n\t   * The base implementation of `compareAscending` =
which compares values and\n\t   * sorts them in ascending order without =
guaranteeing a stable sort.\n\t   *\n\t   * @private\n\t   * @param {*} =
value The value to compare.\n\t   * @param {*} other The other value to =
compare.\n\t   * @returns {number} Returns the sort order indicator for =
`value`.\n\t   */\n\t  function baseCompareAscending(value, other) {\n\t =
   if (value !=3D=3D other) {\n\t      var valIsNull =3D value =3D=3D=3D =
null,\n\t          valIsUndef =3D value =3D=3D=3D undefined,\n\t         =
 valIsReflexive =3D value =3D=3D=3D value;\n\n\t      var othIsNull =3D =
other =3D=3D=3D null,\n\t          othIsUndef =3D other =3D=3D=3D =
undefined,\n\t          othIsReflexive =3D other =3D=3D=3D other;\n\n\t  =
    if ((value &gt; other &amp;&amp; !othIsNull) || !valIsReflexive =
||\n\t          (valIsNull &amp;&amp; !othIsUndef &amp;&amp; =
othIsReflexive) ||\n\t          (valIsUndef &amp;&amp; othIsReflexive)) =
{\n\t        return 1;\n\t      }\n\t      if ((value &lt; other =
&amp;&amp; !valIsNull) || !othIsReflexive ||\n\t          (othIsNull =
&amp;&amp; !valIsUndef &amp;&amp; valIsReflexive) ||\n\t          =
(othIsUndef &amp;&amp; valIsReflexive)) {\n\t        return -1;\n\t      =
}\n\t    }\n\t    return 0;\n\t  }\n\n\t  /**\n\t   * The base =
implementation of `_.findIndex` and `_.findLastIndex` without\n\t   * =
support for callback shorthands and `this` binding.\n\t   *\n\t   * =
@private\n\t   * @param {Array} array The array to search.\n\t   * =
@param {Function} predicate The function invoked per iteration.\n\t   * =
@param {boolean} [fromRight] Specify iterating from right to left.\n\t   =
* @returns {number} Returns the index of the matched value, else =
`-1`.\n\t   */\n\t  function baseFindIndex(array, predicate, fromRight) =
{\n\t    var length =3D array.length,\n\t        index =3D fromRight ? =
length : -1;\n\n\t    while ((fromRight ? index-- : ++index &lt; =
length)) {\n\t      if (predicate(array[index], index, array)) {\n\t     =
   return index;\n\t      }\n\t    }\n\t    return -1;\n\t  }\n\n\t  =
/**\n\t   * The base implementation of `_.indexOf` without support for =
binary searches.\n\t   *\n\t   * @private\n\t   * @param {Array} array =
The array to search.\n\t   * @param {*} value The value to search =
for.\n\t   * @param {number} fromIndex The index to search from.\n\t   * =
@returns {number} Returns the index of the matched value, else `-1`.\n\t =
  */\n\t  function baseIndexOf(array, value, fromIndex) {\n\t    if =
(value !=3D=3D value) {\n\t      return indexOfNaN(array, =
fromIndex);\n\t    }\n\t    var index =3D fromIndex - 1,\n\t        =
length =3D array.length;\n\n\t    while (++index &lt; length) {\n\t      =
if (array[index] =3D=3D=3D value) {\n\t        return index;\n\t      =
}\n\t    }\n\t    return -1;\n\t  }\n\n\t  /**\n\t   * The base =
implementation of `_.isFunction` without support for environments\n\t   =
* with incorrect `typeof` results.\n\t   *\n\t   * @private\n\t   * =
@param {*} value The value to check.\n\t   * @returns {boolean} Returns =
`true` if `value` is correctly classified, else `false`.\n\t   */\n\t  =
function baseIsFunction(value) {\n\t    // Avoid a Chakra JIT bug in =
compatibility modes of IE 11.\n\t    // See =
https://github.com/jashkenas/underscore/issues/1621 for more =
details.\n\t    return typeof value =3D=3D 'function' || false;\n\t  =
}\n\n\t  /**\n\t   * Converts `value` to a string if it's not one. An =
empty string is returned\n\t   * for `null` or `undefined` values.\n\t   =
*\n\t   * @private\n\t   * @param {*} value The value to process.\n\t   =
* @returns {string} Returns the string.\n\t   */\n\t  function =
baseToString(value) {\n\t    return value =3D=3D null ? '' : (value + =
'');\n\t  }\n\n\t  /**\n\t   * Used by `_.trim` and `_.trimLeft` to get =
the index of the first character\n\t   * of `string` that is not found =
in `chars`.\n\t   *\n\t   * @private\n\t   * @param {string} string The =
string to inspect.\n\t   * @param {string} chars The characters to =
find.\n\t   * @returns {number} Returns the index of the first character =
not found in `chars`.\n\t   */\n\t  function charsLeftIndex(string, =
chars) {\n\t    var index =3D -1,\n\t        length =3D =
string.length;\n\n\t    while (++index &lt; length &amp;&amp; =
chars.indexOf(string.charAt(index)) &gt; -1) {}\n\t    return index;\n\t =
 }\n\n\t  /**\n\t   * Used by `_.trim` and `_.trimRight` to get the =
index of the last character\n\t   * of `string` that is not found in =
`chars`.\n\t   *\n\t   * @private\n\t   * @param {string} string The =
string to inspect.\n\t   * @param {string} chars The characters to =
find.\n\t   * @returns {number} Returns the index of the last character =
not found in `chars`.\n\t   */\n\t  function charsRightIndex(string, =
chars) {\n\t    var index =3D string.length;\n\n\t    while (index-- =
&amp;&amp; chars.indexOf(string.charAt(index)) &gt; -1) {}\n\t    return =
index;\n\t  }\n\n\t  /**\n\t   * Used by `_.sortBy` to compare =
transformed elements of a collection and stable\n\t   * sort them in =
ascending order.\n\t   *\n\t   * @private\n\t   * @param {Object} object =
The object to compare.\n\t   * @param {Object} other The other object to =
compare.\n\t   * @returns {number} Returns the sort order indicator for =
`object`.\n\t   */\n\t  function compareAscending(object, other) {\n\t   =
 return baseCompareAscending(object.criteria, other.criteria) || =
(object.index - other.index);\n\t  }\n\n\t  /**\n\t   * Used by =
`_.sortByOrder` to compare multiple properties of a value to another\n\t =
  * and stable sort them.\n\t   *\n\t   * If `orders` is unspecified, =
all valuess are sorted in ascending order. Otherwise,\n\t   * a value is =
sorted in ascending order if its corresponding order is \"asc\", and\n\t =
  * descending if \"desc\".\n\t   *\n\t   * @private\n\t   * @param =
{Object} object The object to compare.\n\t   * @param {Object} other The =
other object to compare.\n\t   * @param {boolean[]} orders The order to =
sort by for each property.\n\t   * @returns {number} Returns the sort =
order indicator for `object`.\n\t   */\n\t  function =
compareMultiple(object, other, orders) {\n\t    var index =3D -1,\n\t    =
    objCriteria =3D object.criteria,\n\t        othCriteria =3D =
other.criteria,\n\t        length =3D objCriteria.length,\n\t        =
ordersLength =3D orders.length;\n\n\t    while (++index &lt; length) =
{\n\t      var result =3D baseCompareAscending(objCriteria[index], =
othCriteria[index]);\n\t      if (result) {\n\t        if (index &gt;=3D =
ordersLength) {\n\t          return result;\n\t        }\n\t        var =
order =3D orders[index];\n\t        return result * ((order =3D=3D=3D =
'asc' || order =3D=3D=3D true) ? 1 : -1);\n\t      }\n\t    }\n\t    // =
Fixes an `Array#sort` bug in the JS engine embedded in Adobe =
applications\n\t    // that causes it, under certain circumstances, to =
provide the same value for\n\t    // `object` and `other`. See =
https://github.com/jashkenas/underscore/pull/1247\n\t    // for more =
details.\n\t    //\n\t    // This also ensures a stable sort in V8 and =
other engines.\n\t    // See =
https://code.google.com/p/v8/issues/detail?id=3D90 for more details.\n\t =
   return object.index - other.index;\n\t  }\n\n\t  /**\n\t   * Used by =
`_.deburr` to convert latin-1 supplementary letters to basic latin =
letters.\n\t   *\n\t   * @private\n\t   * @param {string} letter The =
matched letter to deburr.\n\t   * @returns {string} Returns the deburred =
letter.\n\t   */\n\t  function deburrLetter(letter) {\n\t    return =
deburredLetters[letter];\n\t  }\n\n\t  /**\n\t   * Used by `_.escape` to =
convert characters to HTML entities.\n\t   *\n\t   * @private\n\t   * =
@param {string} chr The matched character to escape.\n\t   * @returns =
{string} Returns the escaped character.\n\t   */\n\t  function =
escapeHtmlChar(chr) {\n\t    return htmlEscapes[chr];\n\t  }\n\n\t  =
/**\n\t   * Used by `_.escapeRegExp` to escape characters for inclusion =
in compiled regexes.\n\t   *\n\t   * @private\n\t   * @param {string} =
chr The matched character to escape.\n\t   * @param {string} leadingChar =
The capture group for a leading character.\n\t   * @param {string} =
whitespaceChar The capture group for a whitespace character.\n\t   * =
@returns {string} Returns the escaped character.\n\t   */\n\t  function =
escapeRegExpChar(chr, leadingChar, whitespaceChar) {\n\t    if =
(leadingChar) {\n\t      chr =3D regexpEscapes[chr];\n\t    } else if =
(whitespaceChar) {\n\t      chr =3D stringEscapes[chr];\n\t    }\n\t    =
return '\\\\' + chr;\n\t  }\n\n\t  /**\n\t   * Used by `_.template` to =
escape characters for inclusion in compiled string literals.\n\t   *\n\t =
  * @private\n\t   * @param {string} chr The matched character to =
escape.\n\t   * @returns {string} Returns the escaped character.\n\t   =
*/\n\t  function escapeStringChar(chr) {\n\t    return '\\\\' + =
stringEscapes[chr];\n\t  }\n\n\t  /**\n\t   * Gets the index at which =
the first occurrence of `NaN` is found in `array`.\n\t   *\n\t   * =
@private\n\t   * @param {Array} array The array to search.\n\t   * =
@param {number} fromIndex The index to search from.\n\t   * @param =
{boolean} [fromRight] Specify iterating from right to left.\n\t   * =
@returns {number} Returns the index of the matched `NaN`, else `-1`.\n\t =
  */\n\t  function indexOfNaN(array, fromIndex, fromRight) {\n\t    var =
length =3D array.length,\n\t        index =3D fromIndex + (fromRight ? 0 =
: -1);\n\n\t    while ((fromRight ? index-- : ++index &lt; length)) =
{\n\t      var other =3D array[index];\n\t      if (other !=3D=3D other) =
{\n\t        return index;\n\t      }\n\t    }\n\t    return -1;\n\t  =
}\n\n\t  /**\n\t   * Checks if `value` is object-like.\n\t   *\n\t   * =
@private\n\t   * @param {*} value The value to check.\n\t   * @returns =
{boolean} Returns `true` if `value` is object-like, else `false`.\n\t   =
*/\n\t  function isObjectLike(value) {\n\t    return !!value &amp;&amp; =
typeof value =3D=3D 'object';\n\t  }\n\n\t  /**\n\t   * Used by =
`trimmedLeftIndex` and `trimmedRightIndex` to determine if a\n\t   * =
character code is whitespace.\n\t   *\n\t   * @private\n\t   * @param =
{number} charCode The character code to inspect.\n\t   * @returns =
{boolean} Returns `true` if `charCode` is whitespace, else `false`.\n\t  =
 */\n\t  function isSpace(charCode) {\n\t    return ((charCode &lt;=3D =
160 &amp;&amp; (charCode &gt;=3D 9 &amp;&amp; charCode &lt;=3D 13) || =
charCode =3D=3D 32 || charCode =3D=3D 160) || charCode =3D=3D 5760 || =
charCode =3D=3D 6158 ||\n\t      (charCode &gt;=3D 8192 &amp;&amp; =
(charCode &lt;=3D 8202 || charCode =3D=3D 8232 || charCode =3D=3D 8233 =
|| charCode =3D=3D 8239 || charCode =3D=3D 8287 || charCode =3D=3D 12288 =
|| charCode =3D=3D 65279)));\n\t  }\n\n\t  /**\n\t   * Replaces all =
`placeholder` elements in `array` with an internal placeholder\n\t   * =
and returns an array of their indexes.\n\t   *\n\t   * @private\n\t   * =
@param {Array} array The array to modify.\n\t   * @param {*} placeholder =
The placeholder to replace.\n\t   * @returns {Array} Returns the new =
array of placeholder indexes.\n\t   */\n\t  function =
replaceHolders(array, placeholder) {\n\t    var index =3D -1,\n\t        =
length =3D array.length,\n\t        resIndex =3D -1,\n\t        result =
=3D [];\n\n\t    while (++index &lt; length) {\n\t      if (array[index] =
=3D=3D=3D placeholder) {\n\t        array[index] =3D PLACEHOLDER;\n\t    =
    result[++resIndex] =3D index;\n\t      }\n\t    }\n\t    return =
result;\n\t  }\n\n\t  /**\n\t   * An implementation of `_.uniq` =
optimized for sorted arrays without support\n\t   * for callback =
shorthands and `this` binding.\n\t   *\n\t   * @private\n\t   * @param =
{Array} array The array to inspect.\n\t   * @param {Function} [iteratee] =
The function invoked per iteration.\n\t   * @returns {Array} Returns the =
new duplicate-value-free array.\n\t   */\n\t  function sortedUniq(array, =
iteratee) {\n\t    var seen,\n\t        index =3D -1,\n\t        length =
=3D array.length,\n\t        resIndex =3D -1,\n\t        result =3D =
[];\n\n\t    while (++index &lt; length) {\n\t      var value =3D =
array[index],\n\t          computed =3D iteratee ? iteratee(value, =
index, array) : value;\n\n\t      if (!index || seen !=3D=3D computed) =
{\n\t        seen =3D computed;\n\t        result[++resIndex] =3D =
value;\n\t      }\n\t    }\n\t    return result;\n\t  }\n\n\t  /**\n\t   =
* Used by `_.trim` and `_.trimLeft` to get the index of the first =
non-whitespace\n\t   * character of `string`.\n\t   *\n\t   * =
@private\n\t   * @param {string} string The string to inspect.\n\t   * =
@returns {number} Returns the index of the first non-whitespace =
character.\n\t   */\n\t  function trimmedLeftIndex(string) {\n\t    var =
index =3D -1,\n\t        length =3D string.length;\n\n\t    while =
(++index &lt; length &amp;&amp; isSpace(string.charCodeAt(index))) =
{}\n\t    return index;\n\t  }\n\n\t  /**\n\t   * Used by `_.trim` and =
`_.trimRight` to get the index of the last non-whitespace\n\t   * =
character of `string`.\n\t   *\n\t   * @private\n\t   * @param {string} =
string The string to inspect.\n\t   * @returns {number} Returns the =
index of the last non-whitespace character.\n\t   */\n\t  function =
trimmedRightIndex(string) {\n\t    var index =3D string.length;\n\n\t    =
while (index-- &amp;&amp; isSpace(string.charCodeAt(index))) {}\n\t    =
return index;\n\t  }\n\n\t  /**\n\t   * Used by `_.unescape` to convert =
HTML entities to characters.\n\t   *\n\t   * @private\n\t   * @param =
{string} chr The matched character to unescape.\n\t   * @returns =
{string} Returns the unescaped character.\n\t   */\n\t  function =
unescapeHtmlChar(chr) {\n\t    return htmlUnescapes[chr];\n\t  }\n\n\t  =
/*-----------------------------------------------------------------------=
---*/\n\n\t  /**\n\t   * Create a new pristine `lodash` function using =
the given `context` object.\n\t   *\n\t   * @static\n\t   * @memberOf =
_\n\t   * @category Utility\n\t   * @param {Object} [context=3Droot] The =
context object.\n\t   * @returns {Function} Returns a new `lodash` =
function.\n\t   * @example\n\t   *\n\t   * _.mixin({ 'foo': =
_.constant('foo') });\n\t   *\n\t   * var lodash =3D =
_.runInContext();\n\t   * lodash.mixin({ 'bar': lodash.constant('bar') =
});\n\t   *\n\t   * _.isFunction(_.foo);\n\t   * // =3D&gt; true\n\t   * =
_.isFunction(_.bar);\n\t   * // =3D&gt; false\n\t   *\n\t   * =
lodash.isFunction(lodash.foo);\n\t   * // =3D&gt; false\n\t   * =
lodash.isFunction(lodash.bar);\n\t   * // =3D&gt; true\n\t   *\n\t   * =
// using `context` to mock `Date#getTime` use in `_.now`\n\t   * var =
mock =3D _.runInContext({\n\t   *   'Date': function() {\n\t   *     =
return { 'getTime': getTimeMock };\n\t   *   }\n\t   * });\n\t   *\n\t   =
* // or creating a suped-up `defer` in Node.js\n\t   * var defer =3D =
_.runInContext({ 'setTimeout': setImmediate }).defer;\n\t   */\n\t  =
function runInContext(context) {\n\t    // Avoid issues with some ES3 =
environments that attempt to use values, named\n\t    // after built-in =
constructors like `Object`, for the creation of literals.\n\t    // ES5 =
clears this up by stating that literals must use built-in =
constructors.\n\t    // See https://es5.github.io/#x11.1.5 for more =
details.\n\t    context =3D context ? _.defaults(root.Object(), context, =
_.pick(root, contextProps)) : root;\n\n\t    /** Native constructor =
references. */\n\t    var Array =3D context.Array,\n\t        Date =3D =
context.Date,\n\t        Error =3D context.Error,\n\t        Function =
=3D context.Function,\n\t        Math =3D context.Math,\n\t        =
Number =3D context.Number,\n\t        Object =3D context.Object,\n\t     =
   RegExp =3D context.RegExp,\n\t        String =3D context.String,\n\t  =
      TypeError =3D context.TypeError;\n\n\t    /** Used for native =
method references. */\n\t    var arrayProto =3D Array.prototype,\n\t     =
   objectProto =3D Object.prototype,\n\t        stringProto =3D =
String.prototype;\n\n\t    /** Used to resolve the decompiled source of =
functions. */\n\t    var fnToString =3D =
Function.prototype.toString;\n\n\t    /** Used to check objects for own =
properties. */\n\t    var hasOwnProperty =3D =
objectProto.hasOwnProperty;\n\n\t    /** Used to generate unique IDs. =
*/\n\t    var idCounter =3D 0;\n\n\t    /**\n\t     * Used to resolve =
the =
[`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.pr=
ototype.tostring)\n\t     * of values.\n\t     */\n\t    var objToString =
=3D objectProto.toString;\n\n\t    /** Used to restore the original `_` =
reference in `_.noConflict`. */\n\t    var oldDash =3D root._;\n\n\t    =
/** Used to detect if a method is native. */\n\t    var reIsNative =3D =
RegExp('^' +\n\t      =
fnToString.call(hasOwnProperty).replace(/[\\\\^$.*+?()[\\]{}|]/g, =
'\\\\$&amp;')\n\t      =
.replace(/hasOwnProperty|(function).*?(?=3D\\\\\\()| for =
.+?(?=3D\\\\\\])/g, '$1.*?') + '$'\n\t    );\n\n\t    /** Native method =
references. */\n\t    var ArrayBuffer =3D context.ArrayBuffer,\n\t       =
 clearTimeout =3D context.clearTimeout,\n\t        parseFloat =3D =
context.parseFloat,\n\t        pow =3D Math.pow,\n\t        =
propertyIsEnumerable =3D objectProto.propertyIsEnumerable,\n\t        =
Set =3D getNative(context, 'Set'),\n\t        setTimeout =3D =
context.setTimeout,\n\t        splice =3D arrayProto.splice,\n\t        =
Uint8Array =3D context.Uint8Array,\n\t        WeakMap =3D =
getNative(context, 'WeakMap');\n\n\t    /* Native method references for =
those with the same name as other `lodash` methods. */\n\t    var =
nativeCeil =3D Math.ceil,\n\t        nativeCreate =3D getNative(Object, =
'create'),\n\t        nativeFloor =3D Math.floor,\n\t        =
nativeIsArray =3D getNative(Array, 'isArray'),\n\t        nativeIsFinite =
=3D context.isFinite,\n\t        nativeKeys =3D getNative(Object, =
'keys'),\n\t        nativeMax =3D Math.max,\n\t        nativeMin =3D =
Math.min,\n\t        nativeNow =3D getNative(Date, 'now'),\n\t        =
nativeParseInt =3D context.parseInt,\n\t        nativeRandom =3D =
Math.random;\n\n\t    /** Used as references for `-Infinity` and =
`Infinity`. */\n\t    var NEGATIVE_INFINITY =3D =
Number.NEGATIVE_INFINITY,\n\t        POSITIVE_INFINITY =3D =
Number.POSITIVE_INFINITY;\n\n\t    /** Used as references for the =
maximum length and index of an array. */\n\t    var MAX_ARRAY_LENGTH =3D =
4294967295,\n\t        MAX_ARRAY_INDEX =3D MAX_ARRAY_LENGTH - 1,\n\t     =
   HALF_MAX_ARRAY_LENGTH =3D MAX_ARRAY_LENGTH &gt;&gt;&gt; 1;\n\n\t    =
/**\n\t     * Used as the [maximum =
length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_i=
nteger)\n\t     * of an array-like value.\n\t     */\n\t    var =
MAX_SAFE_INTEGER =3D 9007199254740991;\n\n\t    /** Used to store =
function metadata. */\n\t    var metaMap =3D WeakMap &amp;&amp; new =
WeakMap;\n\n\t    /** Used to lookup unminified function names. */\n\t   =
 var realNames =3D {};\n\n\t    =
/*-----------------------------------------------------------------------=
-*/\n\n\t    /**\n\t     * Creates a `lodash` object which wraps `value` =
to enable implicit chaining.\n\t     * Methods that operate on and =
return arrays, collections, and functions can\n\t     * be chained =
together. Methods that retrieve a single value or may return a\n\t     * =
primitive value will automatically end the chain returning the =
unwrapped\n\t     * value. Explicit chaining may be enabled using =
`_.chain`. The execution of\n\t     * chained methods is lazy, that is, =
execution is deferred until `_#value`\n\t     * is implicitly or =
explicitly called.\n\t     *\n\t     * Lazy evaluation allows several =
methods to support shortcut fusion. Shortcut\n\t     * fusion is an =
optimization strategy which merge iteratee calls; this can help\n\t     =
* to avoid the creation of intermediate data structures and greatly =
reduce the\n\t     * number of iteratee executions.\n\t     *\n\t     * =
Chaining is supported in custom builds as long as the `_#value` method =
is\n\t     * directly or indirectly included in the build.\n\t     *\n\t =
    * In addition to lodash methods, wrappers have `Array` and `String` =
methods.\n\t     *\n\t     * The wrapper `Array` methods are:\n\t     * =
`concat`, `join`, `pop`, `push`, `reverse`, `shift`, `slice`, =
`sort`,\n\t     * `splice`, and `unshift`\n\t     *\n\t     * The =
wrapper `String` methods are:\n\t     * `replace` and `split`\n\t     =
*\n\t     * The wrapper methods that support shortcut fusion are:\n\t    =
 * `compact`, `drop`, `dropRight`, `dropRightWhile`, `dropWhile`, =
`filter`,\n\t     * `first`, `initial`, `last`, `map`, `pluck`, =
`reject`, `rest`, `reverse`,\n\t     * `slice`, `take`, `takeRight`, =
`takeRightWhile`, `takeWhile`, `toArray`,\n\t     * and `where`\n\t     =
*\n\t     * The chainable wrapper methods are:\n\t     * `after`, `ary`, =
`assign`, `at`, `before`, `bind`, `bindAll`, `bindKey`,\n\t     * =
`callback`, `chain`, `chunk`, `commit`, `compact`, `concat`, =
`constant`,\n\t     * `countBy`, `create`, `curry`, `debounce`, =
`defaults`, `defaultsDeep`,\n\t     * `defer`, `delay`, `difference`, =
`drop`, `dropRight`, `dropRightWhile`,\n\t     * `dropWhile`, `fill`, =
`filter`, `flatten`, `flattenDeep`, `flow`, `flowRight`,\n\t     * =
`forEach`, `forEachRight`, `forIn`, `forInRight`, `forOwn`, =
`forOwnRight`,\n\t     * `functions`, `groupBy`, `indexBy`, `initial`, =
`intersection`, `invert`,\n\t     * `invoke`, `keys`, `keysIn`, `map`, =
`mapKeys`, `mapValues`, `matches`,\n\t     * `matchesProperty`, =
`memoize`, `merge`, `method`, `methodOf`, `mixin`,\n\t     * `modArgs`, =
`negate`, `omit`, `once`, `pairs`, `partial`, `partialRight`,\n\t     * =
`partition`, `pick`, `plant`, `pluck`, `property`, `propertyOf`, =
`pull`,\n\t     * `pullAt`, `push`, `range`, `rearg`, `reject`, =
`remove`, `rest`, `restParam`,\n\t     * `reverse`, `set`, `shuffle`, =
`slice`, `sort`, `sortBy`, `sortByAll`,\n\t     * `sortByOrder`, =
`splice`, `spread`, `take`, `takeRight`, `takeRightWhile`,\n\t     * =
`takeWhile`, `tap`, `throttle`, `thru`, `times`, `toArray`, =
`toPlainObject`,\n\t     * `transform`, `union`, `uniq`, `unshift`, =
`unzip`, `unzipWith`, `values`,\n\t     * `valuesIn`, `where`, =
`without`, `wrap`, `xor`, `zip`, `zipObject`, `zipWith`\n\t     *\n\t    =
 * The wrapper methods that are **not** chainable by default are:\n\t    =
 * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clone`, =
`cloneDeep`,\n\t     * `deburr`, `endsWith`, `escape`, `escapeRegExp`, =
`every`, `find`, `findIndex`,\n\t     * `findKey`, `findLast`, =
`findLastIndex`, `findLastKey`, `findWhere`, `first`,\n\t     * `floor`, =
`get`, `gt`, `gte`, `has`, `identity`, `includes`, `indexOf`,\n\t     * =
`inRange`, `isArguments`, `isArray`, `isBoolean`, `isDate`, =
`isElement`,\n\t     * `isEmpty`, `isEqual`, `isError`, `isFinite` =
`isFunction`, `isMatch`,\n\t     * `isNative`, `isNaN`, `isNull`, =
`isNumber`, `isObject`, `isPlainObject`,\n\t     * `isRegExp`, =
`isString`, `isUndefined`, `isTypedArray`, `join`, `kebabCase`,\n\t     =
* `last`, `lastIndexOf`, `lt`, `lte`, `max`, `min`, `noConflict`, =
`noop`,\n\t     * `now`, `pad`, `padLeft`, `padRight`, `parseInt`, =
`pop`, `random`, `reduce`,\n\t     * `reduceRight`, `repeat`, `result`, =
`round`, `runInContext`, `shift`, `size`,\n\t     * `snakeCase`, `some`, =
`sortedIndex`, `sortedLastIndex`, `startCase`,\n\t     * `startsWith`, =
`sum`, `template`, `trim`, `trimLeft`, `trimRight`, `trunc`,\n\t     * =
`unescape`, `uniqueId`, `value`, and `words`\n\t     *\n\t     * The =
wrapper method `sample` will return a wrapped value when `n` is =
provided,\n\t     * otherwise an unwrapped value is returned.\n\t     =
*\n\t     * @name _\n\t     * @constructor\n\t     * @category Chain\n\t =
    * @param {*} value The value to wrap in a `lodash` instance.\n\t     =
* @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * =
@example\n\t     *\n\t     * var wrapped =3D _([1, 2, 3]);\n\t     *\n\t =
    * // returns an unwrapped value\n\t     * =
wrapped.reduce(function(total, n) {\n\t     *   return total + n;\n\t    =
 * });\n\t     * // =3D&gt; 6\n\t     *\n\t     * // returns a wrapped =
value\n\t     * var squares =3D wrapped.map(function(n) {\n\t     *   =
return n * n;\n\t     * });\n\t     *\n\t     * _.isArray(squares);\n\t  =
   * // =3D&gt; false\n\t     *\n\t     * =
_.isArray(squares.value());\n\t     * // =3D&gt; true\n\t     */\n\t    =
function lodash(value) {\n\t      if (isObjectLike(value) &amp;&amp; =
!isArray(value) &amp;&amp; !(value instanceof LazyWrapper)) {\n\t        =
if (value instanceof LodashWrapper) {\n\t          return value;\n\t     =
   }\n\t        if (hasOwnProperty.call(value, '__chain__') &amp;&amp; =
hasOwnProperty.call(value, '__wrapped__')) {\n\t          return =
wrapperClone(value);\n\t        }\n\t      }\n\t      return new =
LodashWrapper(value);\n\t    }\n\n\t    /**\n\t     * The function whose =
prototype all chaining wrappers inherit from.\n\t     *\n\t     * =
@private\n\t     */\n\t    function baseLodash() {\n\t      // No =
operation performed.\n\t    }\n\n\t    /**\n\t     * The base =
constructor for creating `lodash` wrapper objects.\n\t     *\n\t     * =
@private\n\t     * @param {*} value The value to wrap.\n\t     * @param =
{boolean} [chainAll] Enable chaining for all wrapper methods.\n\t     * =
@param {Array} [actions=3D[]] Actions to peform to resolve the unwrapped =
value.\n\t     */\n\t    function LodashWrapper(value, chainAll, =
actions) {\n\t      this.__wrapped__ =3D value;\n\t      =
this.__actions__ =3D actions || [];\n\t      this.__chain__ =3D =
!!chainAll;\n\t    }\n\n\t    /**\n\t     * An object environment =
feature flags.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     =
* @type Object\n\t     */\n\t    var support =3D lodash.support =3D =
{};\n\n\t    /**\n\t     * By default, the template delimiters used by =
lodash are like those in\n\t     * embedded Ruby (ERB). Change the =
following template settings to use\n\t     * alternative delimiters.\n\t =
    *\n\t     * @static\n\t     * @memberOf _\n\t     * @type Object\n\t =
    */\n\t    lodash.templateSettings =3D {\n\n\t      /**\n\t       * =
Used to detect `data` property values to be HTML-escaped.\n\t       =
*\n\t       * @memberOf _.templateSettings\n\t       * @type RegExp\n\t  =
     */\n\t      'escape': reEscape,\n\n\t      /**\n\t       * Used to =
detect code to be evaluated.\n\t       *\n\t       * @memberOf =
_.templateSettings\n\t       * @type RegExp\n\t       */\n\t      =
'evaluate': reEvaluate,\n\n\t      /**\n\t       * Used to detect `data` =
property values to inject.\n\t       *\n\t       * @memberOf =
_.templateSettings\n\t       * @type RegExp\n\t       */\n\t      =
'interpolate': reInterpolate,\n\n\t      /**\n\t       * Used to =
reference the data object in the template text.\n\t       *\n\t       * =
@memberOf _.templateSettings\n\t       * @type string\n\t       */\n\t   =
   'variable': '',\n\n\t      /**\n\t       * Used to import variables =
into the compiled template.\n\t       *\n\t       * @memberOf =
_.templateSettings\n\t       * @type Object\n\t       */\n\t      =
'imports': {\n\n\t        /**\n\t         * A reference to the `lodash` =
function.\n\t         *\n\t         * @memberOf =
_.templateSettings.imports\n\t         * @type Function\n\t         =
*/\n\t        '_': lodash\n\t      }\n\t    };\n\n\t    =
/*-----------------------------------------------------------------------=
-*/\n\n\t    /**\n\t     * Creates a lazy wrapper object which wraps =
`value` to enable lazy evaluation.\n\t     *\n\t     * @private\n\t     =
* @param {*} value The value to wrap.\n\t     */\n\t    function =
LazyWrapper(value) {\n\t      this.__wrapped__ =3D value;\n\t      =
this.__actions__ =3D [];\n\t      this.__dir__ =3D 1;\n\t      =
this.__filtered__ =3D false;\n\t      this.__iteratees__ =3D [];\n\t     =
 this.__takeCount__ =3D POSITIVE_INFINITY;\n\t      this.__views__ =3D =
[];\n\t    }\n\n\t    /**\n\t     * Creates a clone of the lazy wrapper =
object.\n\t     *\n\t     * @private\n\t     * @name clone\n\t     * =
@memberOf LazyWrapper\n\t     * @returns {Object} Returns the cloned =
`LazyWrapper` object.\n\t     */\n\t    function lazyClone() {\n\t      =
var result =3D new LazyWrapper(this.__wrapped__);\n\t      =
result.__actions__ =3D arrayCopy(this.__actions__);\n\t      =
result.__dir__ =3D this.__dir__;\n\t      result.__filtered__ =3D =
this.__filtered__;\n\t      result.__iteratees__ =3D =
arrayCopy(this.__iteratees__);\n\t      result.__takeCount__ =3D =
this.__takeCount__;\n\t      result.__views__ =3D =
arrayCopy(this.__views__);\n\t      return result;\n\t    }\n\n\t    =
/**\n\t     * Reverses the direction of lazy iteration.\n\t     *\n\t    =
 * @private\n\t     * @name reverse\n\t     * @memberOf LazyWrapper\n\t  =
   * @returns {Object} Returns the new reversed `LazyWrapper` =
object.\n\t     */\n\t    function lazyReverse() {\n\t      if =
(this.__filtered__) {\n\t        var result =3D new =
LazyWrapper(this);\n\t        result.__dir__ =3D -1;\n\t        =
result.__filtered__ =3D true;\n\t      } else {\n\t        result =3D =
this.clone();\n\t        result.__dir__ *=3D -1;\n\t      }\n\t      =
return result;\n\t    }\n\n\t    /**\n\t     * Extracts the unwrapped =
value from its lazy wrapper.\n\t     *\n\t     * @private\n\t     * =
@name value\n\t     * @memberOf LazyWrapper\n\t     * @returns {*} =
Returns the unwrapped value.\n\t     */\n\t    function lazyValue() =
{\n\t      var array =3D this.__wrapped__.value(),\n\t          dir =3D =
this.__dir__,\n\t          isArr =3D isArray(array),\n\t          =
isRight =3D dir &lt; 0,\n\t          arrLength =3D isArr ? array.length =
: 0,\n\t          view =3D getView(0, arrLength, this.__views__),\n\t    =
      start =3D view.start,\n\t          end =3D view.end,\n\t          =
length =3D end - start,\n\t          index =3D isRight ? end : (start - =
1),\n\t          iteratees =3D this.__iteratees__,\n\t          =
iterLength =3D iteratees.length,\n\t          resIndex =3D 0,\n\t        =
  takeCount =3D nativeMin(length, this.__takeCount__);\n\n\t      if =
(!isArr || arrLength &lt; LARGE_ARRAY_SIZE || (arrLength =3D=3D length =
&amp;&amp; takeCount =3D=3D length)) {\n\t        return =
baseWrapperValue((isRight &amp;&amp; isArr) ? array.reverse() : array, =
this.__actions__);\n\t      }\n\t      var result =3D [];\n\n\t      =
outer:\n\t      while (length-- &amp;&amp; resIndex &lt; takeCount) =
{\n\t        index +=3D dir;\n\n\t        var iterIndex =3D -1,\n\t      =
      value =3D array[index];\n\n\t        while (++iterIndex &lt; =
iterLength) {\n\t          var data =3D iteratees[iterIndex],\n\t        =
      iteratee =3D data.iteratee,\n\t              type =3D =
data.type,\n\t              computed =3D iteratee(value);\n\n\t          =
if (type =3D=3D LAZY_MAP_FLAG) {\n\t            value =3D computed;\n\t  =
        } else if (!computed) {\n\t            if (type =3D=3D =
LAZY_FILTER_FLAG) {\n\t              continue outer;\n\t            } =
else {\n\t              break outer;\n\t            }\n\t          }\n\t =
       }\n\t        result[resIndex++] =3D value;\n\t      }\n\t      =
return result;\n\t    }\n\n\t    =
/*-----------------------------------------------------------------------=
-*/\n\n\t    /**\n\t     * Creates a cache object to store key/value =
pairs.\n\t     *\n\t     * @private\n\t     * @static\n\t     * @name =
Cache\n\t     * @memberOf _.memoize\n\t     */\n\t    function =
MapCache() {\n\t      this.__data__ =3D {};\n\t    }\n\n\t    /**\n\t    =
 * Removes `key` and its value from the cache.\n\t     *\n\t     * =
@private\n\t     * @name delete\n\t     * @memberOf _.memoize.Cache\n\t  =
   * @param {string} key The key of the value to remove.\n\t     * =
@returns {boolean} Returns `true` if the entry was removed successfully, =
else `false`.\n\t     */\n\t    function mapDelete(key) {\n\t      =
return this.has(key) &amp;&amp; delete this.__data__[key];\n\t    =
}\n\n\t    /**\n\t     * Gets the cached value for `key`.\n\t     *\n\t  =
   * @private\n\t     * @name get\n\t     * @memberOf =
_.memoize.Cache\n\t     * @param {string} key The key of the value to =
get.\n\t     * @returns {*} Returns the cached value.\n\t     */\n\t    =
function mapGet(key) {\n\t      return key =3D=3D '__proto__' ? =
undefined : this.__data__[key];\n\t    }\n\n\t    /**\n\t     * Checks =
if a cached value for `key` exists.\n\t     *\n\t     * @private\n\t     =
* @name has\n\t     * @memberOf _.memoize.Cache\n\t     * @param =
{string} key The key of the entry to check.\n\t     * @returns {boolean} =
Returns `true` if an entry for `key` exists, else `false`.\n\t     =
*/\n\t    function mapHas(key) {\n\t      return key !=3D '__proto__' =
&amp;&amp; hasOwnProperty.call(this.__data__, key);\n\t    }\n\n\t    =
/**\n\t     * Sets `value` to `key` of the cache.\n\t     *\n\t     * =
@private\n\t     * @name set\n\t     * @memberOf _.memoize.Cache\n\t     =
* @param {string} key The key of the value to cache.\n\t     * @param =
{*} value The value to cache.\n\t     * @returns {Object} Returns the =
cache object.\n\t     */\n\t    function mapSet(key, value) {\n\t      =
if (key !=3D '__proto__') {\n\t        this.__data__[key] =3D value;\n\t =
     }\n\t      return this;\n\t    }\n\n\t    =
/*-----------------------------------------------------------------------=
-*/\n\n\t    /**\n\t     *\n\t     * Creates a cache object to store =
unique values.\n\t     *\n\t     * @private\n\t     * @param {Array} =
[values] The values to cache.\n\t     */\n\t    function =
SetCache(values) {\n\t      var length =3D values ? values.length : =
0;\n\n\t      this.data =3D { 'hash': nativeCreate(null), 'set': new Set =
};\n\t      while (length--) {\n\t        this.push(values[length]);\n\t =
     }\n\t    }\n\n\t    /**\n\t     * Checks if `value` is in `cache` =
mimicking the return signature of\n\t     * `_.indexOf` by returning `0` =
if the value is found, else `-1`.\n\t     *\n\t     * @private\n\t     * =
@param {Object} cache The cache to search.\n\t     * @param {*} value =
The value to search for.\n\t     * @returns {number} Returns `0` if =
`value` is found, else `-1`.\n\t     */\n\t    function =
cacheIndexOf(cache, value) {\n\t      var data =3D cache.data,\n\t       =
   result =3D (typeof value =3D=3D 'string' || isObject(value)) ? =
data.set.has(value) : data.hash[value];\n\n\t      return result ? 0 : =
-1;\n\t    }\n\n\t    /**\n\t     * Adds `value` to the cache.\n\t     =
*\n\t     * @private\n\t     * @name push\n\t     * @memberOf =
SetCache\n\t     * @param {*} value The value to cache.\n\t     */\n\t   =
 function cachePush(value) {\n\t      var data =3D this.data;\n\t      =
if (typeof value =3D=3D 'string' || isObject(value)) {\n\t        =
data.set.add(value);\n\t      } else {\n\t        data.hash[value] =3D =
true;\n\t      }\n\t    }\n\n\t    =
/*-----------------------------------------------------------------------=
-*/\n\n\t    /**\n\t     * Creates a new array joining `array` with =
`other`.\n\t     *\n\t     * @private\n\t     * @param {Array} array The =
array to join.\n\t     * @param {Array} other The other array to =
join.\n\t     * @returns {Array} Returns the new concatenated array.\n\t =
    */\n\t    function arrayConcat(array, other) {\n\t      var index =
=3D -1,\n\t          length =3D array.length,\n\t          othIndex =3D =
-1,\n\t          othLength =3D other.length,\n\t          result =3D =
Array(length + othLength);\n\n\t      while (++index &lt; length) {\n\t  =
      result[index] =3D array[index];\n\t      }\n\t      while =
(++othIndex &lt; othLength) {\n\t        result[index++] =3D =
other[othIndex];\n\t      }\n\t      return result;\n\t    }\n\n\t    =
/**\n\t     * Copies the values of `source` to `array`.\n\t     *\n\t    =
 * @private\n\t     * @param {Array} source The array to copy values =
from.\n\t     * @param {Array} [array=3D[]] The array to copy values =
to.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    =
function arrayCopy(source, array) {\n\t      var index =3D -1,\n\t       =
   length =3D source.length;\n\n\t      array || (array =3D =
Array(length));\n\t      while (++index &lt; length) {\n\t        =
array[index] =3D source[index];\n\t      }\n\t      return array;\n\t    =
}\n\n\t    /**\n\t     * A specialized version of `_.forEach` for arrays =
without support for callback\n\t     * shorthands and `this` =
binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The =
array to iterate over.\n\t     * @param {Function} iteratee The function =
invoked per iteration.\n\t     * @returns {Array} Returns `array`.\n\t   =
  */\n\t    function arrayEach(array, iteratee) {\n\t      var index =3D =
-1,\n\t          length =3D array.length;\n\n\t      while (++index &lt; =
length) {\n\t        if (iteratee(array[index], index, array) =3D=3D=3D =
false) {\n\t          break;\n\t        }\n\t      }\n\t      return =
array;\n\t    }\n\n\t    /**\n\t     * A specialized version of =
`_.forEachRight` for arrays without support for\n\t     * callback =
shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * =
@param {Array} array The array to iterate over.\n\t     * @param =
{Function} iteratee The function invoked per iteration.\n\t     * =
@returns {Array} Returns `array`.\n\t     */\n\t    function =
arrayEachRight(array, iteratee) {\n\t      var length =3D =
array.length;\n\n\t      while (length--) {\n\t        if =
(iteratee(array[length], length, array) =3D=3D=3D false) {\n\t          =
break;\n\t        }\n\t      }\n\t      return array;\n\t    }\n\n\t    =
/**\n\t     * A specialized version of `_.every` for arrays without =
support for callback\n\t     * shorthands and `this` binding.\n\t     =
*\n\t     * @private\n\t     * @param {Array} array The array to iterate =
over.\n\t     * @param {Function} predicate The function invoked per =
iteration.\n\t     * @returns {boolean} Returns `true` if all elements =
pass the predicate check,\n\t     *  else `false`.\n\t     */\n\t    =
function arrayEvery(array, predicate) {\n\t      var index =3D -1,\n\t   =
       length =3D array.length;\n\n\t      while (++index &lt; length) =
{\n\t        if (!predicate(array[index], index, array)) {\n\t          =
return false;\n\t        }\n\t      }\n\t      return true;\n\t    =
}\n\n\t    /**\n\t     * A specialized version of `baseExtremum` for =
arrays which invokes `iteratee`\n\t     * with one argument: =
(value).\n\t     *\n\t     * @private\n\t     * @param {Array} array The =
array to iterate over.\n\t     * @param {Function} iteratee The function =
invoked per iteration.\n\t     * @param {Function} comparator The =
function used to compare values.\n\t     * @param {*} exValue The =
initial extremum value.\n\t     * @returns {*} Returns the extremum =
value.\n\t     */\n\t    function arrayExtremum(array, iteratee, =
comparator, exValue) {\n\t      var index =3D -1,\n\t          length =
=3D array.length,\n\t          computed =3D exValue,\n\t          result =
=3D computed;\n\n\t      while (++index &lt; length) {\n\t        var =
value =3D array[index],\n\t            current =3D =
+iteratee(value);\n\n\t        if (comparator(current, computed)) {\n\t  =
        computed =3D current;\n\t          result =3D value;\n\t        =
}\n\t      }\n\t      return result;\n\t    }\n\n\t    /**\n\t     * A =
specialized version of `_.filter` for arrays without support for =
callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * =
@private\n\t     * @param {Array} array The array to iterate over.\n\t   =
  * @param {Function} predicate The function invoked per iteration.\n\t  =
   * @returns {Array} Returns the new filtered array.\n\t     */\n\t    =
function arrayFilter(array, predicate) {\n\t      var index =3D -1,\n\t  =
        length =3D array.length,\n\t          resIndex =3D -1,\n\t       =
   result =3D [];\n\n\t      while (++index &lt; length) {\n\t        =
var value =3D array[index];\n\t        if (predicate(value, index, =
array)) {\n\t          result[++resIndex] =3D value;\n\t        }\n\t    =
  }\n\t      return result;\n\t    }\n\n\t    /**\n\t     * A =
specialized version of `_.map` for arrays without support for =
callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * =
@private\n\t     * @param {Array} array The array to iterate over.\n\t   =
  * @param {Function} iteratee The function invoked per iteration.\n\t   =
  * @returns {Array} Returns the new mapped array.\n\t     */\n\t    =
function arrayMap(array, iteratee) {\n\t      var index =3D -1,\n\t      =
    length =3D array.length,\n\t          result =3D =
Array(length);\n\n\t      while (++index &lt; length) {\n\t        =
result[index] =3D iteratee(array[index], index, array);\n\t      }\n\t   =
   return result;\n\t    }\n\n\t    /**\n\t     * Appends the elements =
of `values` to `array`.\n\t     *\n\t     * @private\n\t     * @param =
{Array} array The array to modify.\n\t     * @param {Array} values The =
values to append.\n\t     * @returns {Array} Returns `array`.\n\t     =
*/\n\t    function arrayPush(array, values) {\n\t      var index =3D =
-1,\n\t          length =3D values.length,\n\t          offset =3D =
array.length;\n\n\t      while (++index &lt; length) {\n\t        =
array[offset + index] =3D values[index];\n\t      }\n\t      return =
array;\n\t    }\n\n\t    /**\n\t     * A specialized version of =
`_.reduce` for arrays without support for callback\n\t     * shorthands =
and `this` binding.\n\t     *\n\t     * @private\n\t     * @param =
{Array} array The array to iterate over.\n\t     * @param {Function} =
iteratee The function invoked per iteration.\n\t     * @param {*} =
[accumulator] The initial value.\n\t     * @param {boolean} =
[initFromArray] Specify using the first element of `array`\n\t     *  as =
the initial value.\n\t     * @returns {*} Returns the accumulated =
value.\n\t     */\n\t    function arrayReduce(array, iteratee, =
accumulator, initFromArray) {\n\t      var index =3D -1,\n\t          =
length =3D array.length;\n\n\t      if (initFromArray &amp;&amp; length) =
{\n\t        accumulator =3D array[++index];\n\t      }\n\t      while =
(++index &lt; length) {\n\t        accumulator =3D iteratee(accumulator, =
array[index], index, array);\n\t      }\n\t      return accumulator;\n\t =
   }\n\n\t    /**\n\t     * A specialized version of `_.reduceRight` for =
arrays without support for\n\t     * callback shorthands and `this` =
binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The =
array to iterate over.\n\t     * @param {Function} iteratee The function =
invoked per iteration.\n\t     * @param {*} [accumulator] The initial =
value.\n\t     * @param {boolean} [initFromArray] Specify using the last =
element of `array`\n\t     *  as the initial value.\n\t     * @returns =
{*} Returns the accumulated value.\n\t     */\n\t    function =
arrayReduceRight(array, iteratee, accumulator, initFromArray) {\n\t      =
var length =3D array.length;\n\t      if (initFromArray &amp;&amp; =
length) {\n\t        accumulator =3D array[--length];\n\t      }\n\t     =
 while (length--) {\n\t        accumulator =3D iteratee(accumulator, =
array[length], length, array);\n\t      }\n\t      return =
accumulator;\n\t    }\n\n\t    /**\n\t     * A specialized version of =
`_.some` for arrays without support for callback\n\t     * shorthands =
and `this` binding.\n\t     *\n\t     * @private\n\t     * @param =
{Array} array The array to iterate over.\n\t     * @param {Function} =
predicate The function invoked per iteration.\n\t     * @returns =
{boolean} Returns `true` if any element passes the predicate check,\n\t  =
   *  else `false`.\n\t     */\n\t    function arraySome(array, =
predicate) {\n\t      var index =3D -1,\n\t          length =3D =
array.length;\n\n\t      while (++index &lt; length) {\n\t        if =
(predicate(array[index], index, array)) {\n\t          return true;\n\t  =
      }\n\t      }\n\t      return false;\n\t    }\n\n\t    /**\n\t     =
* A specialized version of `_.sum` for arrays without support for =
callback\n\t     * shorthands and `this` binding..\n\t     *\n\t     * =
@private\n\t     * @param {Array} array The array to iterate over.\n\t   =
  * @param {Function} iteratee The function invoked per iteration.\n\t   =
  * @returns {number} Returns the sum.\n\t     */\n\t    function =
arraySum(array, iteratee) {\n\t      var length =3D array.length,\n\t    =
      result =3D 0;\n\n\t      while (length--) {\n\t        result +=3D =
+iteratee(array[length]) || 0;\n\t      }\n\t      return result;\n\t    =
}\n\n\t    /**\n\t     * Used by `_.defaults` to customize its =
`_.assign` use.\n\t     *\n\t     * @private\n\t     * @param {*} =
objectValue The destination object property value.\n\t     * @param {*} =
sourceValue The source object property value.\n\t     * @returns {*} =
Returns the value to assign to the destination object.\n\t     */\n\t    =
function assignDefaults(objectValue, sourceValue) {\n\t      return =
objectValue =3D=3D=3D undefined ? sourceValue : objectValue;\n\t    =
}\n\n\t    /**\n\t     * Used by `_.template` to customize its =
`_.assign` use.\n\t     *\n\t     * **Note:** This function is like =
`assignDefaults` except that it ignores\n\t     * inherited property =
values when checking if a property is `undefined`.\n\t     *\n\t     * =
@private\n\t     * @param {*} objectValue The destination object =
property value.\n\t     * @param {*} sourceValue The source object =
property value.\n\t     * @param {string} key The key associated with =
the object and source values.\n\t     * @param {Object} object The =
destination object.\n\t     * @returns {*} Returns the value to assign =
to the destination object.\n\t     */\n\t    function =
assignOwnDefaults(objectValue, sourceValue, key, object) {\n\t      =
return (objectValue =3D=3D=3D undefined || !hasOwnProperty.call(object, =
key))\n\t        ? sourceValue\n\t        : objectValue;\n\t    }\n\n\t  =
  /**\n\t     * A specialized version of `_.assign` for customizing =
assigned values without\n\t     * support for argument juggling, =
multiple sources, and `this` binding `customizer`\n\t     * =
functions.\n\t     *\n\t     * @private\n\t     * @param {Object} object =
The destination object.\n\t     * @param {Object} source The source =
object.\n\t     * @param {Function} customizer The function to customize =
assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     =
*/\n\t    function assignWith(object, source, customizer) {\n\t      var =
index =3D -1,\n\t          props =3D keys(source),\n\t          length =
=3D props.length;\n\n\t      while (++index &lt; length) {\n\t        =
var key =3D props[index],\n\t            value =3D object[key],\n\t      =
      result =3D customizer(value, source[key], key, object, =
source);\n\n\t        if ((result =3D=3D=3D result ? (result !=3D=3D =
value) : (value =3D=3D=3D value)) ||\n\t            (value =3D=3D=3D =
undefined &amp;&amp; !(key in object))) {\n\t          object[key] =3D =
result;\n\t        }\n\t      }\n\t      return object;\n\t    }\n\n\t   =
 /**\n\t     * The base implementation of `_.assign` without support for =
argument juggling,\n\t     * multiple sources, and `customizer` =
functions.\n\t     *\n\t     * @private\n\t     * @param {Object} object =
The destination object.\n\t     * @param {Object} source The source =
object.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    =
function baseAssign(object, source) {\n\t      return source =3D=3D =
null\n\t        ? object\n\t        : baseCopy(source, keys(source), =
object);\n\t    }\n\n\t    /**\n\t     * The base implementation of =
`_.at` without support for string collections\n\t     * and individual =
key arguments.\n\t     *\n\t     * @private\n\t     * @param =
{Array|Object} collection The collection to iterate over.\n\t     * =
@param {number[]|string[]} props The property names or indexes of =
elements to pick.\n\t     * @returns {Array} Returns the new array of =
picked elements.\n\t     */\n\t    function baseAt(collection, props) =
{\n\t      var index =3D -1,\n\t          isNil =3D collection =3D=3D =
null,\n\t          isArr =3D !isNil &amp;&amp; =
isArrayLike(collection),\n\t          length =3D isArr ? =
collection.length : 0,\n\t          propsLength =3D props.length,\n\t    =
      result =3D Array(propsLength);\n\n\t      while(++index &lt; =
propsLength) {\n\t        var key =3D props[index];\n\t        if =
(isArr) {\n\t          result[index] =3D isIndex(key, length) ? =
collection[key] : undefined;\n\t        } else {\n\t          =
result[index] =3D isNil ? undefined : collection[key];\n\t        }\n\t  =
    }\n\t      return result;\n\t    }\n\n\t    /**\n\t     * Copies =
properties of `source` to `object`.\n\t     *\n\t     * @private\n\t     =
* @param {Object} source The object to copy properties from.\n\t     * =
@param {Array} props The property names to copy.\n\t     * @param =
{Object} [object=3D{}] The object to copy properties to.\n\t     * =
@returns {Object} Returns `object`.\n\t     */\n\t    function =
baseCopy(source, props, object) {\n\t      object || (object =3D =
{});\n\n\t      var index =3D -1,\n\t          length =3D =
props.length;\n\n\t      while (++index &lt; length) {\n\t        var =
key =3D props[index];\n\t        object[key] =3D source[key];\n\t      =
}\n\t      return object;\n\t    }\n\n\t    /**\n\t     * The base =
implementation of `_.callback` which supports specifying the\n\t     * =
number of arguments to provide to `func`.\n\t     *\n\t     * =
@private\n\t     * @param {*} [func=3D_.identity] The value to convert =
to a callback.\n\t     * @param {*} [thisArg] The `this` binding of =
`func`.\n\t     * @param {number} [argCount] The number of arguments to =
provide to `func`.\n\t     * @returns {Function} Returns the =
callback.\n\t     */\n\t    function baseCallback(func, thisArg, =
argCount) {\n\t      var type =3D typeof func;\n\t      if (type =3D=3D =
'function') {\n\t        return thisArg =3D=3D=3D undefined\n\t          =
? func\n\t          : bindCallback(func, thisArg, argCount);\n\t      =
}\n\t      if (func =3D=3D null) {\n\t        return identity;\n\t      =
}\n\t      if (type =3D=3D 'object') {\n\t        return =
baseMatches(func);\n\t      }\n\t      return thisArg =3D=3D=3D =
undefined\n\t        ? property(func)\n\t        : =
baseMatchesProperty(func, thisArg);\n\t    }\n\n\t    /**\n\t     * The =
base implementation of `_.clone` without support for argument =
juggling\n\t     * and `this` binding `customizer` functions.\n\t     =
*\n\t     * @private\n\t     * @param {*} value The value to clone.\n\t  =
   * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @param =
{Function} [customizer] The function to customize cloning values.\n\t    =
 * @param {string} [key] The key of `value`.\n\t     * @param {Object} =
[object] The object `value` belongs to.\n\t     * @param {Array} =
[stackA=3D[]] Tracks traversed source objects.\n\t     * @param {Array} =
[stackB=3D[]] Associates clones with source counterparts.\n\t     * =
@returns {*} Returns the cloned value.\n\t     */\n\t    function =
baseClone(value, isDeep, customizer, key, object, stackA, stackB) {\n\t  =
    var result;\n\t      if (customizer) {\n\t        result =3D object =
? customizer(value, key, object) : customizer(value);\n\t      }\n\t     =
 if (result !=3D=3D undefined) {\n\t        return result;\n\t      =
}\n\t      if (!isObject(value)) {\n\t        return value;\n\t      =
}\n\t      var isArr =3D isArray(value);\n\t      if (isArr) {\n\t       =
 result =3D initCloneArray(value);\n\t        if (!isDeep) {\n\t         =
 return arrayCopy(value, result);\n\t        }\n\t      } else {\n\t     =
   var tag =3D objToString.call(value),\n\t            isFunc =3D tag =
=3D=3D funcTag;\n\n\t        if (tag =3D=3D objectTag || tag =3D=3D =
argsTag || (isFunc &amp;&amp; !object)) {\n\t          result =3D =
initCloneObject(isFunc ? {} : value);\n\t          if (!isDeep) {\n\t    =
        return baseAssign(result, value);\n\t          }\n\t        } =
else {\n\t          return cloneableTags[tag]\n\t            ? =
initCloneByTag(value, tag, isDeep)\n\t            : (object ? value : =
{});\n\t        }\n\t      }\n\t      // Check for circular references =
and return its corresponding clone.\n\t      stackA || (stackA =3D =
[]);\n\t      stackB || (stackB =3D []);\n\n\t      var length =3D =
stackA.length;\n\t      while (length--) {\n\t        if (stackA[length] =
=3D=3D value) {\n\t          return stackB[length];\n\t        }\n\t     =
 }\n\t      // Add the source value to the stack of traversed objects =
and associate it with its clone.\n\t      stackA.push(value);\n\t      =
stackB.push(result);\n\n\t      // Recursively populate clone =
(susceptible to call stack limits).\n\t      (isArr ? arrayEach : =
baseForOwn)(value, function(subValue, key) {\n\t        result[key] =3D =
baseClone(subValue, isDeep, customizer, key, value, stackA, stackB);\n\t =
     });\n\t      return result;\n\t    }\n\n\t    /**\n\t     * The =
base implementation of `_.create` without support for assigning\n\t     =
* properties to the created object.\n\t     *\n\t     * @private\n\t     =
* @param {Object} prototype The object to inherit from.\n\t     * =
@returns {Object} Returns the new object.\n\t     */\n\t    var =
baseCreate =3D (function() {\n\t      function object() {}\n\t      =
return function(prototype) {\n\t        if (isObject(prototype)) {\n\t   =
       object.prototype =3D prototype;\n\t          var result =3D new =
object;\n\t          object.prototype =3D undefined;\n\t        }\n\t    =
    return result || {};\n\t      };\n\t    }());\n\n\t    /**\n\t     * =
The base implementation of `_.delay` and `_.defer` which accepts an =
index\n\t     * of where to slice the arguments to provide to =
`func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func =
The function to delay.\n\t     * @param {number} wait The number of =
milliseconds to delay invocation.\n\t     * @param {Object} args The =
arguments provide to `func`.\n\t     * @returns {number} Returns the =
timer id.\n\t     */\n\t    function baseDelay(func, wait, args) {\n\t   =
   if (typeof func !=3D 'function') {\n\t        throw new =
TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      return =
setTimeout(function() { func.apply(undefined, args); }, wait);\n\t    =
}\n\n\t    /**\n\t     * The base implementation of `_.difference` which =
accepts a single array\n\t     * of values to exclude.\n\t     *\n\t     =
* @private\n\t     * @param {Array} array The array to inspect.\n\t     =
* @param {Array} values The values to exclude.\n\t     * @returns =
{Array} Returns the new array of filtered values.\n\t     */\n\t    =
function baseDifference(array, values) {\n\t      var length =3D array ? =
array.length : 0,\n\t          result =3D [];\n\n\t      if (!length) =
{\n\t        return result;\n\t      }\n\t      var index =3D -1,\n\t    =
      indexOf =3D getIndexOf(),\n\t          isCommon =3D indexOf =3D=3D =
baseIndexOf,\n\t          cache =3D (isCommon &amp;&amp; values.length =
&gt;=3D LARGE_ARRAY_SIZE) ? createCache(values) : null,\n\t          =
valuesLength =3D values.length;\n\n\t      if (cache) {\n\t        =
indexOf =3D cacheIndexOf;\n\t        isCommon =3D false;\n\t        =
values =3D cache;\n\t      }\n\t      outer:\n\t      while (++index =
&lt; length) {\n\t        var value =3D array[index];\n\n\t        if =
(isCommon &amp;&amp; value =3D=3D=3D value) {\n\t          var =
valuesIndex =3D valuesLength;\n\t          while (valuesIndex--) {\n\t   =
         if (values[valuesIndex] =3D=3D=3D value) {\n\t              =
continue outer;\n\t            }\n\t          }\n\t          =
result.push(value);\n\t        }\n\t        else if (indexOf(values, =
value, 0) &lt; 0) {\n\t          result.push(value);\n\t        }\n\t    =
  }\n\t      return result;\n\t    }\n\n\t    /**\n\t     * The base =
implementation of `_.forEach` without support for callback\n\t     * =
shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * =
@param {Array|Object|string} collection The collection to iterate =
over.\n\t     * @param {Function} iteratee The function invoked per =
iteration.\n\t     * @returns {Array|Object|string} Returns =
`collection`.\n\t     */\n\t    var baseEach =3D =
createBaseEach(baseForOwn);\n\n\t    /**\n\t     * The base =
implementation of `_.forEachRight` without support for callback\n\t     =
* shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * =
@param {Array|Object|string} collection The collection to iterate =
over.\n\t     * @param {Function} iteratee The function invoked per =
iteration.\n\t     * @returns {Array|Object|string} Returns =
`collection`.\n\t     */\n\t    var baseEachRight =3D =
createBaseEach(baseForOwnRight, true);\n\n\t    /**\n\t     * The base =
implementation of `_.every` without support for callback\n\t     * =
shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * =
@param {Array|Object|string} collection The collection to iterate =
over.\n\t     * @param {Function} predicate The function invoked per =
iteration.\n\t     * @returns {boolean} Returns `true` if all elements =
pass the predicate check,\n\t     *  else `false`\n\t     */\n\t    =
function baseEvery(collection, predicate) {\n\t      var result =3D =
true;\n\t      baseEach(collection, function(value, index, collection) =
{\n\t        result =3D !!predicate(value, index, collection);\n\t       =
 return result;\n\t      });\n\t      return result;\n\t    }\n\n\t    =
/**\n\t     * Gets the extremum value of `collection` invoking =
`iteratee` for each value\n\t     * in `collection` to generate the =
criterion by which the value is ranked.\n\t     * The `iteratee` is =
invoked with three arguments: (value, index|key, collection).\n\t     =
*\n\t     * @private\n\t     * @param {Array|Object|string} collection =
The collection to iterate over.\n\t     * @param {Function} iteratee The =
function invoked per iteration.\n\t     * @param {Function} comparator =
The function used to compare values.\n\t     * @param {*} exValue The =
initial extremum value.\n\t     * @returns {*} Returns the extremum =
value.\n\t     */\n\t    function baseExtremum(collection, iteratee, =
comparator, exValue) {\n\t      var computed =3D exValue,\n\t          =
result =3D computed;\n\n\t      baseEach(collection, function(value, =
index, collection) {\n\t        var current =3D +iteratee(value, index, =
collection);\n\t        if (comparator(current, computed) || (current =
=3D=3D=3D exValue &amp;&amp; current =3D=3D=3D result)) {\n\t          =
computed =3D current;\n\t          result =3D value;\n\t        }\n\t    =
  });\n\t      return result;\n\t    }\n\n\t    /**\n\t     * The base =
implementation of `_.fill` without an iteratee call guard.\n\t     *\n\t =
    * @private\n\t     * @param {Array} array The array to fill.\n\t     =
* @param {*} value The value to fill `array` with.\n\t     * @param =
{number} [start=3D0] The start position.\n\t     * @param {number} =
[end=3Darray.length] The end position.\n\t     * @returns {Array} =
Returns `array`.\n\t     */\n\t    function baseFill(array, value, =
start, end) {\n\t      var length =3D array.length;\n\n\t      start =3D =
start =3D=3D null ? 0 : (+start || 0);\n\t      if (start &lt; 0) {\n\t  =
      start =3D -start &gt; length ? 0 : (length + start);\n\t      =
}\n\t      end =3D (end =3D=3D=3D undefined || end &gt; length) ? length =
: (+end || 0);\n\t      if (end &lt; 0) {\n\t        end +=3D =
length;\n\t      }\n\t      length =3D start &gt; end ? 0 : (end =
&gt;&gt;&gt; 0);\n\t      start &gt;&gt;&gt;=3D 0;\n\n\t      while =
(start &lt; length) {\n\t        array[start++] =3D value;\n\t      =
}\n\t      return array;\n\t    }\n\n\t    /**\n\t     * The base =
implementation of `_.filter` without support for callback\n\t     * =
shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * =
@param {Array|Object|string} collection The collection to iterate =
over.\n\t     * @param {Function} predicate The function invoked per =
iteration.\n\t     * @returns {Array} Returns the new filtered =
array.\n\t     */\n\t    function baseFilter(collection, predicate) =
{\n\t      var result =3D [];\n\t      baseEach(collection, =
function(value, index, collection) {\n\t        if (predicate(value, =
index, collection)) {\n\t          result.push(value);\n\t        }\n\t  =
    });\n\t      return result;\n\t    }\n\n\t    /**\n\t     * The base =
implementation of `_.find`, `_.findLast`, `_.findKey`, and =
`_.findLastKey`,\n\t     * without support for callback shorthands and =
`this` binding, which iterates\n\t     * over `collection` using the =
provided `eachFunc`.\n\t     *\n\t     * @private\n\t     * @param =
{Array|Object|string} collection The collection to search.\n\t     * =
@param {Function} predicate The function invoked per iteration.\n\t     =
* @param {Function} eachFunc The function to iterate over =
`collection`.\n\t     * @param {boolean} [retKey] Specify returning the =
key of the found element\n\t     *  instead of the element itself.\n\t   =
  * @returns {*} Returns the found element or its key, else =
`undefined`.\n\t     */\n\t    function baseFind(collection, predicate, =
eachFunc, retKey) {\n\t      var result;\n\t      eachFunc(collection, =
function(value, key, collection) {\n\t        if (predicate(value, key, =
collection)) {\n\t          result =3D retKey ? key : value;\n\t         =
 return false;\n\t        }\n\t      });\n\t      return result;\n\t    =
}\n\n\t    /**\n\t     * The base implementation of `_.flatten` with =
added support for restricting\n\t     * flattening and specifying the =
start index.\n\t     *\n\t     * @private\n\t     * @param {Array} array =
The array to flatten.\n\t     * @param {boolean} [isDeep] Specify a deep =
flatten.\n\t     * @param {boolean} [isStrict] Restrict flattening to =
arrays-like objects.\n\t     * @param {Array} [result=3D[]] The initial =
result value.\n\t     * @returns {Array} Returns the new flattened =
array.\n\t     */\n\t    function baseFlatten(array, isDeep, isStrict, =
result) {\n\t      result || (result =3D []);\n\n\t      var index =3D =
-1,\n\t          length =3D array.length;\n\n\t      while (++index &lt; =
length) {\n\t        var value =3D array[index];\n\t        if =
(isObjectLike(value) &amp;&amp; isArrayLike(value) &amp;&amp;\n\t        =
    (isStrict || isArray(value) || isArguments(value))) {\n\t          =
if (isDeep) {\n\t            // Recursively flatten arrays (susceptible =
to call stack limits).\n\t            baseFlatten(value, isDeep, =
isStrict, result);\n\t          } else {\n\t            =
arrayPush(result, value);\n\t          }\n\t        } else if =
(!isStrict) {\n\t          result[result.length] =3D value;\n\t        =
}\n\t      }\n\t      return result;\n\t    }\n\n\t    /**\n\t     * The =
base implementation of `baseForIn` and `baseForOwn` which iterates\n\t   =
  * over `object` properties returned by `keysFunc` invoking `iteratee` =
for\n\t     * each property. Iteratee functions may exit iteration early =
by explicitly\n\t     * returning `false`.\n\t     *\n\t     * =
@private\n\t     * @param {Object} object The object to iterate =
over.\n\t     * @param {Function} iteratee The function invoked per =
iteration.\n\t     * @param {Function} keysFunc The function to get the =
keys of `object`.\n\t     * @returns {Object} Returns `object`.\n\t     =
*/\n\t    var baseFor =3D createBaseFor();\n\n\t    /**\n\t     * This =
function is like `baseFor` except that it iterates over properties\n\t   =
  * in the opposite order.\n\t     *\n\t     * @private\n\t     * @param =
{Object} object The object to iterate over.\n\t     * @param {Function} =
iteratee The function invoked per iteration.\n\t     * @param {Function} =
keysFunc The function to get the keys of `object`.\n\t     * @returns =
{Object} Returns `object`.\n\t     */\n\t    var baseForRight =3D =
createBaseFor(true);\n\n\t    /**\n\t     * The base implementation of =
`_.forIn` without support for callback\n\t     * shorthands and `this` =
binding.\n\t     *\n\t     * @private\n\t     * @param {Object} object =
The object to iterate over.\n\t     * @param {Function} iteratee The =
function invoked per iteration.\n\t     * @returns {Object} Returns =
`object`.\n\t     */\n\t    function baseForIn(object, iteratee) {\n\t   =
   return baseFor(object, iteratee, keysIn);\n\t    }\n\n\t    /**\n\t   =
  * The base implementation of `_.forOwn` without support for =
callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * =
@private\n\t     * @param {Object} object The object to iterate =
over.\n\t     * @param {Function} iteratee The function invoked per =
iteration.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t  =
  function baseForOwn(object, iteratee) {\n\t      return =
baseFor(object, iteratee, keys);\n\t    }\n\n\t    /**\n\t     * The =
base implementation of `_.forOwnRight` without support for callback\n\t  =
   * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     =
* @param {Object} object The object to iterate over.\n\t     * @param =
{Function} iteratee The function invoked per iteration.\n\t     * =
@returns {Object} Returns `object`.\n\t     */\n\t    function =
baseForOwnRight(object, iteratee) {\n\t      return baseForRight(object, =
iteratee, keys);\n\t    }\n\n\t    /**\n\t     * The base implementation =
of `_.functions` which creates an array of\n\t     * `object` function =
property names filtered from those provided.\n\t     *\n\t     * =
@private\n\t     * @param {Object} object The object to inspect.\n\t     =
* @param {Array} props The property names to filter.\n\t     * @returns =
{Array} Returns the new array of filtered property names.\n\t     */\n\t =
   function baseFunctions(object, props) {\n\t      var index =3D =
-1,\n\t          length =3D props.length,\n\t          resIndex =3D =
-1,\n\t          result =3D [];\n\n\t      while (++index &lt; length) =
{\n\t        var key =3D props[index];\n\t        if =
(isFunction(object[key])) {\n\t          result[++resIndex] =3D key;\n\t =
       }\n\t      }\n\t      return result;\n\t    }\n\n\t    /**\n\t    =
 * The base implementation of `get` without support for string paths\n\t =
    * and default values.\n\t     *\n\t     * @private\n\t     * @param =
{Object} object The object to query.\n\t     * @param {Array} path The =
path of the property to get.\n\t     * @param {string} [pathKey] The key =
representation of path.\n\t     * @returns {*} Returns the resolved =
value.\n\t     */\n\t    function baseGet(object, path, pathKey) {\n\t   =
   if (object =3D=3D null) {\n\t        return;\n\t      }\n\t      if =
(pathKey !=3D=3D undefined &amp;&amp; pathKey in toObject(object)) {\n\t =
       path =3D [pathKey];\n\t      }\n\t      var index =3D 0,\n\t      =
    length =3D path.length;\n\n\t      while (object !=3D null =
&amp;&amp; index &lt; length) {\n\t        object =3D =
object[path[index++]];\n\t      }\n\t      return (index &amp;&amp; =
index =3D=3D length) ? object : undefined;\n\t    }\n\n\t    /**\n\t     =
* The base implementation of `_.isEqual` without support for `this` =
binding\n\t     * `customizer` functions.\n\t     *\n\t     * =
@private\n\t     * @param {*} value The value to compare.\n\t     * =
@param {*} other The other value to compare.\n\t     * @param {Function} =
[customizer] The function to customize comparing values.\n\t     * =
@param {boolean} [isLoose] Specify performing partial comparisons.\n\t   =
  * @param {Array} [stackA] Tracks traversed `value` objects.\n\t     * =
@param {Array} [stackB] Tracks traversed `other` objects.\n\t     * =
@returns {boolean} Returns `true` if the values are equivalent, else =
`false`.\n\t     */\n\t    function baseIsEqual(value, other, =
customizer, isLoose, stackA, stackB) {\n\t      if (value =3D=3D=3D =
other) {\n\t        return true;\n\t      }\n\t      if (value =3D=3D =
null || other =3D=3D null || (!isObject(value) &amp;&amp; =
!isObjectLike(other))) {\n\t        return value !=3D=3D value =
&amp;&amp; other !=3D=3D other;\n\t      }\n\t      return =
baseIsEqualDeep(value, other, baseIsEqual, customizer, isLoose, stackA, =
stackB);\n\t    }\n\n\t    /**\n\t     * A specialized version of =
`baseIsEqual` for arrays and objects which performs\n\t     * deep =
comparisons and tracks traversed objects enabling objects with =
circular\n\t     * references to be compared.\n\t     *\n\t     * =
@private\n\t     * @param {Object} object The object to compare.\n\t     =
* @param {Object} other The other object to compare.\n\t     * @param =
{Function} equalFunc The function to determine equivalents of =
values.\n\t     * @param {Function} [customizer] The function to =
customize comparing objects.\n\t     * @param {boolean} [isLoose] =
Specify performing partial comparisons.\n\t     * @param {Array} =
[stackA=3D[]] Tracks traversed `value` objects.\n\t     * @param {Array} =
[stackB=3D[]] Tracks traversed `other` objects.\n\t     * @returns =
{boolean} Returns `true` if the objects are equivalent, else =
`false`.\n\t     */\n\t    function baseIsEqualDeep(object, other, =
equalFunc, customizer, isLoose, stackA, stackB) {\n\t      var objIsArr =
=3D isArray(object),\n\t          othIsArr =3D isArray(other),\n\t       =
   objTag =3D arrayTag,\n\t          othTag =3D arrayTag;\n\n\t      if =
(!objIsArr) {\n\t        objTag =3D objToString.call(object);\n\t        =
if (objTag =3D=3D argsTag) {\n\t          objTag =3D objectTag;\n\t      =
  } else if (objTag !=3D objectTag) {\n\t          objIsArr =3D =
isTypedArray(object);\n\t        }\n\t      }\n\t      if (!othIsArr) =
{\n\t        othTag =3D objToString.call(other);\n\t        if (othTag =
=3D=3D argsTag) {\n\t          othTag =3D objectTag;\n\t        } else =
if (othTag !=3D objectTag) {\n\t          othIsArr =3D =
isTypedArray(other);\n\t        }\n\t      }\n\t      var objIsObj =3D =
objTag =3D=3D objectTag,\n\t          othIsObj =3D othTag =3D=3D =
objectTag,\n\t          isSameTag =3D objTag =3D=3D othTag;\n\n\t      =
if (isSameTag &amp;&amp; !(objIsArr || objIsObj)) {\n\t        return =
equalByTag(object, other, objTag);\n\t      }\n\t      if (!isLoose) =
{\n\t        var objIsWrapped =3D objIsObj &amp;&amp; =
hasOwnProperty.call(object, '__wrapped__'),\n\t            othIsWrapped =
=3D othIsObj &amp;&amp; hasOwnProperty.call(other, '__wrapped__');\n\n\t =
       if (objIsWrapped || othIsWrapped) {\n\t          return =
equalFunc(objIsWrapped ? object.value() : object, othIsWrapped ? =
other.value() : other, customizer, isLoose, stackA, stackB);\n\t        =
}\n\t      }\n\t      if (!isSameTag) {\n\t        return false;\n\t     =
 }\n\t      // Assume cyclic values are equal.\n\t      // For more =
information on detecting circular references see =
https://es5.github.io/#JO.\n\t      stackA || (stackA =3D []);\n\t      =
stackB || (stackB =3D []);\n\n\t      var length =3D stackA.length;\n\t  =
    while (length--) {\n\t        if (stackA[length] =3D=3D object) =
{\n\t          return stackB[length] =3D=3D other;\n\t        }\n\t      =
}\n\t      // Add `object` and `other` to the stack of traversed =
objects.\n\t      stackA.push(object);\n\t      =
stackB.push(other);\n\n\t      var result =3D (objIsArr ? equalArrays : =
equalObjects)(object, other, equalFunc, customizer, isLoose, stackA, =
stackB);\n\n\t      stackA.pop();\n\t      stackB.pop();\n\n\t      =
return result;\n\t    }\n\n\t    /**\n\t     * The base implementation =
of `_.isMatch` without support for callback\n\t     * shorthands and =
`this` binding.\n\t     *\n\t     * @private\n\t     * @param {Object} =
object The object to inspect.\n\t     * @param {Array} matchData The =
propery names, values, and compare flags to match.\n\t     * @param =
{Function} [customizer] The function to customize comparing objects.\n\t =
    * @returns {boolean} Returns `true` if `object` is a match, else =
`false`.\n\t     */\n\t    function baseIsMatch(object, matchData, =
customizer) {\n\t      var index =3D matchData.length,\n\t          =
length =3D index,\n\t          noCustomizer =3D !customizer;\n\n\t      =
if (object =3D=3D null) {\n\t        return !length;\n\t      }\n\t      =
object =3D toObject(object);\n\t      while (index--) {\n\t        var =
data =3D matchData[index];\n\t        if ((noCustomizer &amp;&amp; =
data[2])\n\t              ? data[1] !=3D=3D object[data[0]]\n\t          =
    : !(data[0] in object)\n\t            ) {\n\t          return =
false;\n\t        }\n\t      }\n\t      while (++index &lt; length) =
{\n\t        data =3D matchData[index];\n\t        var key =3D =
data[0],\n\t            objValue =3D object[key],\n\t            =
srcValue =3D data[1];\n\n\t        if (noCustomizer &amp;&amp; data[2]) =
{\n\t          if (objValue =3D=3D=3D undefined &amp;&amp; !(key in =
object)) {\n\t            return false;\n\t          }\n\t        } else =
{\n\t          var result =3D customizer ? customizer(objValue, =
srcValue, key) : undefined;\n\t          if (!(result =3D=3D=3D =
undefined ? baseIsEqual(srcValue, objValue, customizer, true) : result)) =
{\n\t            return false;\n\t          }\n\t        }\n\t      =
}\n\t      return true;\n\t    }\n\n\t    /**\n\t     * The base =
implementation of `_.map` without support for callback shorthands\n\t    =
 * and `this` binding.\n\t     *\n\t     * @private\n\t     * @param =
{Array|Object|string} collection The collection to iterate over.\n\t     =
* @param {Function} iteratee The function invoked per iteration.\n\t     =
* @returns {Array} Returns the new mapped array.\n\t     */\n\t    =
function baseMap(collection, iteratee) {\n\t      var index =3D -1,\n\t  =
        result =3D isArrayLike(collection) ? Array(collection.length) : =
[];\n\n\t      baseEach(collection, function(value, key, collection) =
{\n\t        result[++index] =3D iteratee(value, key, collection);\n\t   =
   });\n\t      return result;\n\t    }\n\n\t    /**\n\t     * The base =
implementation of `_.matches` which does not clone `source`.\n\t     =
*\n\t     * @private\n\t     * @param {Object} source The object of =
property values to match.\n\t     * @returns {Function} Returns the new =
function.\n\t     */\n\t    function baseMatches(source) {\n\t      var =
matchData =3D getMatchData(source);\n\t      if (matchData.length =3D=3D =
1 &amp;&amp; matchData[0][2]) {\n\t        var key =3D =
matchData[0][0],\n\t            value =3D matchData[0][1];\n\n\t        =
return function(object) {\n\t          if (object =3D=3D null) {\n\t     =
       return false;\n\t          }\n\t          return object[key] =
=3D=3D=3D value &amp;&amp; (value !=3D=3D undefined || (key in =
toObject(object)));\n\t        };\n\t      }\n\t      return =
function(object) {\n\t        return baseIsMatch(object, matchData);\n\t =
     };\n\t    }\n\n\t    /**\n\t     * The base implementation of =
`_.matchesProperty` which does not clone `srcValue`.\n\t     *\n\t     * =
@private\n\t     * @param {string} path The path of the property to =
get.\n\t     * @param {*} srcValue The value to compare.\n\t     * =
@returns {Function} Returns the new function.\n\t     */\n\t    function =
baseMatchesProperty(path, srcValue) {\n\t      var isArr =3D =
isArray(path),\n\t          isCommon =3D isKey(path) &amp;&amp; =
isStrictComparable(srcValue),\n\t          pathKey =3D (path + =
'');\n\n\t      path =3D toPath(path);\n\t      return function(object) =
{\n\t        if (object =3D=3D null) {\n\t          return false;\n\t    =
    }\n\t        var key =3D pathKey;\n\t        object =3D =
toObject(object);\n\t        if ((isArr || !isCommon) &amp;&amp; !(key =
in object)) {\n\t          object =3D path.length =3D=3D 1 ? object : =
baseGet(object, baseSlice(path, 0, -1));\n\t          if (object =3D=3D =
null) {\n\t            return false;\n\t          }\n\t          key =3D =
last(path);\n\t          object =3D toObject(object);\n\t        }\n\t   =
     return object[key] =3D=3D=3D srcValue\n\t          ? (srcValue =
!=3D=3D undefined || (key in object))\n\t          : =
baseIsEqual(srcValue, object[key], undefined, true);\n\t      };\n\t    =
}\n\n\t    /**\n\t     * The base implementation of `_.merge` without =
support for argument juggling,\n\t     * multiple sources, and `this` =
binding `customizer` functions.\n\t     *\n\t     * @private\n\t     * =
@param {Object} object The destination object.\n\t     * @param {Object} =
source The source object.\n\t     * @param {Function} [customizer] The =
function to customize merged values.\n\t     * @param {Array} =
[stackA=3D[]] Tracks traversed source objects.\n\t     * @param {Array} =
[stackB=3D[]] Associates values with source counterparts.\n\t     * =
@returns {Object} Returns `object`.\n\t     */\n\t    function =
baseMerge(object, source, customizer, stackA, stackB) {\n\t      if =
(!isObject(object)) {\n\t        return object;\n\t      }\n\t      var =
isSrcArr =3D isArrayLike(source) &amp;&amp; (isArray(source) || =
isTypedArray(source)),\n\t          props =3D isSrcArr ? undefined : =
keys(source);\n\n\t      arrayEach(props || source, function(srcValue, =
key) {\n\t        if (props) {\n\t          key =3D srcValue;\n\t        =
  srcValue =3D source[key];\n\t        }\n\t        if =
(isObjectLike(srcValue)) {\n\t          stackA || (stackA =3D []);\n\t   =
       stackB || (stackB =3D []);\n\t          baseMergeDeep(object, =
source, key, baseMerge, customizer, stackA, stackB);\n\t        }\n\t    =
    else {\n\t          var value =3D object[key],\n\t              =
result =3D customizer ? customizer(value, srcValue, key, object, source) =
: undefined,\n\t              isCommon =3D result =3D=3D=3D =
undefined;\n\n\t          if (isCommon) {\n\t            result =3D =
srcValue;\n\t          }\n\t          if ((result !=3D=3D undefined || =
(isSrcArr &amp;&amp; !(key in object))) &amp;&amp;\n\t              =
(isCommon || (result =3D=3D=3D result ? (result !=3D=3D value) : (value =
=3D=3D=3D value)))) {\n\t            object[key] =3D result;\n\t         =
 }\n\t        }\n\t      });\n\t      return object;\n\t    }\n\n\t    =
/**\n\t     * A specialized version of `baseMerge` for arrays and =
objects which performs\n\t     * deep merges and tracks traversed =
objects enabling objects with circular\n\t     * references to be =
merged.\n\t     *\n\t     * @private\n\t     * @param {Object} object =
The destination object.\n\t     * @param {Object} source The source =
object.\n\t     * @param {string} key The key of the value to merge.\n\t =
    * @param {Function} mergeFunc The function to merge values.\n\t     =
* @param {Function} [customizer] The function to customize merged =
values.\n\t     * @param {Array} [stackA=3D[]] Tracks traversed source =
objects.\n\t     * @param {Array} [stackB=3D[]] Associates values with =
source counterparts.\n\t     * @returns {boolean} Returns `true` if the =
objects are equivalent, else `false`.\n\t     */\n\t    function =
baseMergeDeep(object, source, key, mergeFunc, customizer, stackA, =
stackB) {\n\t      var length =3D stackA.length,\n\t          srcValue =
=3D source[key];\n\n\t      while (length--) {\n\t        if =
(stackA[length] =3D=3D srcValue) {\n\t          object[key] =3D =
stackB[length];\n\t          return;\n\t        }\n\t      }\n\t      =
var value =3D object[key],\n\t          result =3D customizer ? =
customizer(value, srcValue, key, object, source) : undefined,\n\t        =
  isCommon =3D result =3D=3D=3D undefined;\n\n\t      if (isCommon) =
{\n\t        result =3D srcValue;\n\t        if (isArrayLike(srcValue) =
&amp;&amp; (isArray(srcValue) || isTypedArray(srcValue))) {\n\t          =
result =3D isArray(value)\n\t            ? value\n\t            : =
(isArrayLike(value) ? arrayCopy(value) : []);\n\t        }\n\t        =
else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n\t         =
 result =3D isArguments(value)\n\t            ? toPlainObject(value)\n\t =
           : (isPlainObject(value) ? value : {});\n\t        }\n\t       =
 else {\n\t          isCommon =3D false;\n\t        }\n\t      }\n\t     =
 // Add the source value to the stack of traversed objects and =
associate\n\t      // it with its merged value.\n\t      =
stackA.push(srcValue);\n\t      stackB.push(result);\n\n\t      if =
(isCommon) {\n\t        // Recursively merge objects and arrays =
(susceptible to call stack limits).\n\t        object[key] =3D =
mergeFunc(result, srcValue, customizer, stackA, stackB);\n\t      } else =
if (result =3D=3D=3D result ? (result !=3D=3D value) : (value =3D=3D=3D =
value)) {\n\t        object[key] =3D result;\n\t      }\n\t    }\n\n\t   =
 /**\n\t     * The base implementation of `_.property` without support =
for deep paths.\n\t     *\n\t     * @private\n\t     * @param {string} =
key The key of the property to get.\n\t     * @returns {Function} =
Returns the new function.\n\t     */\n\t    function baseProperty(key) =
{\n\t      return function(object) {\n\t        return object =3D=3D =
null ? undefined : object[key];\n\t      };\n\t    }\n\n\t    /**\n\t    =
 * A specialized version of `baseProperty` which supports deep =
paths.\n\t     *\n\t     * @private\n\t     * @param {Array|string} path =
The path of the property to get.\n\t     * @returns {Function} Returns =
the new function.\n\t     */\n\t    function basePropertyDeep(path) =
{\n\t      var pathKey =3D (path + '');\n\t      path =3D =
toPath(path);\n\t      return function(object) {\n\t        return =
baseGet(object, path, pathKey);\n\t      };\n\t    }\n\n\t    /**\n\t    =
 * The base implementation of `_.pullAt` without support for =
individual\n\t     * index arguments and capturing the removed =
elements.\n\t     *\n\t     * @private\n\t     * @param {Array} array =
The array to modify.\n\t     * @param {number[]} indexes The indexes of =
elements to remove.\n\t     * @returns {Array} Returns `array`.\n\t     =
*/\n\t    function basePullAt(array, indexes) {\n\t      var length =3D =
array ? indexes.length : 0;\n\t      while (length--) {\n\t        var =
index =3D indexes[length];\n\t        if (index !=3D previous &amp;&amp; =
isIndex(index)) {\n\t          var previous =3D index;\n\t          =
splice.call(array, index, 1);\n\t        }\n\t      }\n\t      return =
array;\n\t    }\n\n\t    /**\n\t     * The base implementation of =
`_.random` without support for argument juggling\n\t     * and returning =
floating-point numbers.\n\t     *\n\t     * @private\n\t     * @param =
{number} min The minimum possible value.\n\t     * @param {number} max =
The maximum possible value.\n\t     * @returns {number} Returns the =
random number.\n\t     */\n\t    function baseRandom(min, max) {\n\t     =
 return min + nativeFloor(nativeRandom() * (max - min + 1));\n\t    =
}\n\n\t    /**\n\t     * The base implementation of `_.reduce` and =
`_.reduceRight` without support\n\t     * for callback shorthands and =
`this` binding, which iterates over `collection`\n\t     * using the =
provided `eachFunc`.\n\t     *\n\t     * @private\n\t     * @param =
{Array|Object|string} collection The collection to iterate over.\n\t     =
* @param {Function} iteratee The function invoked per iteration.\n\t     =
* @param {*} accumulator The initial value.\n\t     * @param {boolean} =
initFromCollection Specify using the first or last element\n\t     *  of =
`collection` as the initial value.\n\t     * @param {Function} eachFunc =
The function to iterate over `collection`.\n\t     * @returns {*} =
Returns the accumulated value.\n\t     */\n\t    function =
baseReduce(collection, iteratee, accumulator, initFromCollection, =
eachFunc) {\n\t      eachFunc(collection, function(value, index, =
collection) {\n\t        accumulator =3D initFromCollection\n\t          =
? (initFromCollection =3D false, value)\n\t          : =
iteratee(accumulator, value, index, collection);\n\t      });\n\t      =
return accumulator;\n\t    }\n\n\t    /**\n\t     * The base =
implementation of `setData` without support for hot loop detection.\n\t  =
   *\n\t     * @private\n\t     * @param {Function} func The function to =
associate metadata with.\n\t     * @param {*} data The metadata.\n\t     =
* @returns {Function} Returns `func`.\n\t     */\n\t    var baseSetData =
=3D !metaMap ? identity : function(func, data) {\n\t      =
metaMap.set(func, data);\n\t      return func;\n\t    };\n\n\t    =
/**\n\t     * The base implementation of `_.slice` without an iteratee =
call guard.\n\t     *\n\t     * @private\n\t     * @param {Array} array =
The array to slice.\n\t     * @param {number} [start=3D0] The start =
position.\n\t     * @param {number} [end=3Darray.length] The end =
position.\n\t     * @returns {Array} Returns the slice of `array`.\n\t   =
  */\n\t    function baseSlice(array, start, end) {\n\t      var index =
=3D -1,\n\t          length =3D array.length;\n\n\t      start =3D start =
=3D=3D null ? 0 : (+start || 0);\n\t      if (start &lt; 0) {\n\t        =
start =3D -start &gt; length ? 0 : (length + start);\n\t      }\n\t      =
end =3D (end =3D=3D=3D undefined || end &gt; length) ? length : (+end || =
0);\n\t      if (end &lt; 0) {\n\t        end +=3D length;\n\t      =
}\n\t      length =3D start &gt; end ? 0 : ((end - start) &gt;&gt;&gt; =
0);\n\t      start &gt;&gt;&gt;=3D 0;\n\n\t      var result =3D =
Array(length);\n\t      while (++index &lt; length) {\n\t        =
result[index] =3D array[index + start];\n\t      }\n\t      return =
result;\n\t    }\n\n\t    /**\n\t     * The base implementation of =
`_.some` without support for callback shorthands\n\t     * and `this` =
binding.\n\t     *\n\t     * @private\n\t     * @param =
{Array|Object|string} collection The collection to iterate over.\n\t     =
* @param {Function} predicate The function invoked per iteration.\n\t    =
 * @returns {boolean} Returns `true` if any element passes the predicate =
check,\n\t     *  else `false`.\n\t     */\n\t    function =
baseSome(collection, predicate) {\n\t      var result;\n\n\t      =
baseEach(collection, function(value, index, collection) {\n\t        =
result =3D predicate(value, index, collection);\n\t        return =
!result;\n\t      });\n\t      return !!result;\n\t    }\n\n\t    =
/**\n\t     * The base implementation of `_.sortBy` which uses =
`comparer` to define\n\t     * the sort order of `array` and replaces =
criteria objects with their\n\t     * corresponding values.\n\t     =
*\n\t     * @private\n\t     * @param {Array} array The array to =
sort.\n\t     * @param {Function} comparer The function to define sort =
order.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    =
function baseSortBy(array, comparer) {\n\t      var length =3D =
array.length;\n\n\t      array.sort(comparer);\n\t      while (length--) =
{\n\t        array[length] =3D array[length].value;\n\t      }\n\t      =
return array;\n\t    }\n\n\t    /**\n\t     * The base implementation of =
`_.sortByOrder` without param guards.\n\t     *\n\t     * @private\n\t   =
  * @param {Array|Object|string} collection The collection to iterate =
over.\n\t     * @param {Function[]|Object[]|string[]} iteratees The =
iteratees to sort by.\n\t     * @param {boolean[]} orders The sort =
orders of `iteratees`.\n\t     * @returns {Array} Returns the new sorted =
array.\n\t     */\n\t    function baseSortByOrder(collection, iteratees, =
orders) {\n\t      var callback =3D getCallback(),\n\t          index =
=3D -1;\n\n\t      iteratees =3D arrayMap(iteratees, function(iteratee) =
{ return callback(iteratee); });\n\n\t      var result =3D =
baseMap(collection, function(value) {\n\t        var criteria =3D =
arrayMap(iteratees, function(iteratee) { return iteratee(value); });\n\t =
       return { 'criteria': criteria, 'index': ++index, 'value': value =
};\n\t      });\n\n\t      return baseSortBy(result, function(object, =
other) {\n\t        return compareMultiple(object, other, orders);\n\t   =
   });\n\t    }\n\n\t    /**\n\t     * The base implementation of =
`_.sum` without support for callback shorthands\n\t     * and `this` =
binding.\n\t     *\n\t     * @private\n\t     * @param =
{Array|Object|string} collection The collection to iterate over.\n\t     =
* @param {Function} iteratee The function invoked per iteration.\n\t     =
* @returns {number} Returns the sum.\n\t     */\n\t    function =
baseSum(collection, iteratee) {\n\t      var result =3D 0;\n\t      =
baseEach(collection, function(value, index, collection) {\n\t        =
result +=3D +iteratee(value, index, collection) || 0;\n\t      });\n\t   =
   return result;\n\t    }\n\n\t    /**\n\t     * The base =
implementation of `_.uniq` without support for callback shorthands\n\t   =
  * and `this` binding.\n\t     *\n\t     * @private\n\t     * @param =
{Array} array The array to inspect.\n\t     * @param {Function} =
[iteratee] The function invoked per iteration.\n\t     * @returns =
{Array} Returns the new duplicate-value-free array.\n\t     */\n\t    =
function baseUniq(array, iteratee) {\n\t      var index =3D -1,\n\t      =
    indexOf =3D getIndexOf(),\n\t          length =3D array.length,\n\t  =
        isCommon =3D indexOf =3D=3D baseIndexOf,\n\t          isLarge =
=3D isCommon &amp;&amp; length &gt;=3D LARGE_ARRAY_SIZE,\n\t          =
seen =3D isLarge ? createCache() : null,\n\t          result =3D =
[];\n\n\t      if (seen) {\n\t        indexOf =3D cacheIndexOf;\n\t      =
  isCommon =3D false;\n\t      } else {\n\t        isLarge =3D =
false;\n\t        seen =3D iteratee ? [] : result;\n\t      }\n\t      =
outer:\n\t      while (++index &lt; length) {\n\t        var value =3D =
array[index],\n\t            computed =3D iteratee ? iteratee(value, =
index, array) : value;\n\n\t        if (isCommon &amp;&amp; value =
=3D=3D=3D value) {\n\t          var seenIndex =3D seen.length;\n\t       =
   while (seenIndex--) {\n\t            if (seen[seenIndex] =3D=3D=3D =
computed) {\n\t              continue outer;\n\t            }\n\t        =
  }\n\t          if (iteratee) {\n\t            seen.push(computed);\n\t =
         }\n\t          result.push(value);\n\t        }\n\t        else =
if (indexOf(seen, computed, 0) &lt; 0) {\n\t          if (iteratee || =
isLarge) {\n\t            seen.push(computed);\n\t          }\n\t        =
  result.push(value);\n\t        }\n\t      }\n\t      return =
result;\n\t    }\n\n\t    /**\n\t     * The base implementation of =
`_.values` and `_.valuesIn` which creates an\n\t     * array of `object` =
property values corresponding to the property names\n\t     * of =
`props`.\n\t     *\n\t     * @private\n\t     * @param {Object} object =
The object to query.\n\t     * @param {Array} props The property names =
to get values for.\n\t     * @returns {Object} Returns the array of =
property values.\n\t     */\n\t    function baseValues(object, props) =
{\n\t      var index =3D -1,\n\t          length =3D props.length,\n\t   =
       result =3D Array(length);\n\n\t      while (++index &lt; length) =
{\n\t        result[index] =3D object[props[index]];\n\t      }\n\t      =
return result;\n\t    }\n\n\t    /**\n\t     * The base implementation =
of `_.dropRightWhile`, `_.dropWhile`, `_.takeRightWhile`,\n\t     * and =
`_.takeWhile` without support for callback shorthands and `this` =
binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The =
array to query.\n\t     * @param {Function} predicate The function =
invoked per iteration.\n\t     * @param {boolean} [isDrop] Specify =
dropping elements instead of taking them.\n\t     * @param {boolean} =
[fromRight] Specify iterating from right to left.\n\t     * @returns =
{Array} Returns the slice of `array`.\n\t     */\n\t    function =
baseWhile(array, predicate, isDrop, fromRight) {\n\t      var length =3D =
array.length,\n\t          index =3D fromRight ? length : -1;\n\n\t      =
while ((fromRight ? index-- : ++index &lt; length) &amp;&amp; =
predicate(array[index], index, array)) {}\n\t      return isDrop\n\t     =
   ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : =
length))\n\t        : baseSlice(array, (fromRight ? index + 1 : 0), =
(fromRight ? length : index));\n\t    }\n\n\t    /**\n\t     * The base =
implementation of `wrapperValue` which returns the result of\n\t     * =
performing a sequence of actions on the unwrapped `value`, where =
each\n\t     * successive action is supplied the return value of the =
previous.\n\t     *\n\t     * @private\n\t     * @param {*} value The =
unwrapped value.\n\t     * @param {Array} actions Actions to peform to =
resolve the unwrapped value.\n\t     * @returns {*} Returns the resolved =
value.\n\t     */\n\t    function baseWrapperValue(value, actions) {\n\t =
     var result =3D value;\n\t      if (result instanceof LazyWrapper) =
{\n\t        result =3D result.value();\n\t      }\n\t      var index =
=3D -1,\n\t          length =3D actions.length;\n\n\t      while =
(++index &lt; length) {\n\t        var action =3D actions[index];\n\t    =
    result =3D action.func.apply(action.thisArg, arrayPush([result], =
action.args));\n\t      }\n\t      return result;\n\t    }\n\n\t    =
/**\n\t     * Performs a binary search of `array` to determine the index =
at which `value`\n\t     * should be inserted into `array` in order to =
maintain its sort order.\n\t     *\n\t     * @private\n\t     * @param =
{Array} array The sorted array to inspect.\n\t     * @param {*} value =
The value to evaluate.\n\t     * @param {boolean} [retHighest] Specify =
returning the highest qualified index.\n\t     * @returns {number} =
Returns the index at which `value` should be inserted\n\t     *  into =
`array`.\n\t     */\n\t    function binaryIndex(array, value, =
retHighest) {\n\t      var low =3D 0,\n\t          high =3D array ? =
array.length : low;\n\n\t      if (typeof value =3D=3D 'number' =
&amp;&amp; value =3D=3D=3D value &amp;&amp; high &lt;=3D =
HALF_MAX_ARRAY_LENGTH) {\n\t        while (low &lt; high) {\n\t          =
var mid =3D (low + high) &gt;&gt;&gt; 1,\n\t              computed =3D =
array[mid];\n\n\t          if ((retHighest ? (computed &lt;=3D value) : =
(computed &lt; value)) &amp;&amp; computed !=3D=3D null) {\n\t           =
 low =3D mid + 1;\n\t          } else {\n\t            high =3D mid;\n\t =
         }\n\t        }\n\t        return high;\n\t      }\n\t      =
return binaryIndexBy(array, value, identity, retHighest);\n\t    }\n\n\t =
   /**\n\t     * This function is like `binaryIndex` except that it =
invokes `iteratee` for\n\t     * `value` and each element of `array` to =
compute their sort ranking. The\n\t     * iteratee is invoked with one =
argument; (value).\n\t     *\n\t     * @private\n\t     * @param {Array} =
array The sorted array to inspect.\n\t     * @param {*} value The value =
to evaluate.\n\t     * @param {Function} iteratee The function invoked =
per iteration.\n\t     * @param {boolean} [retHighest] Specify returning =
the highest qualified index.\n\t     * @returns {number} Returns the =
index at which `value` should be inserted\n\t     *  into `array`.\n\t   =
  */\n\t    function binaryIndexBy(array, value, iteratee, retHighest) =
{\n\t      value =3D iteratee(value);\n\n\t      var low =3D 0,\n\t      =
    high =3D array ? array.length : 0,\n\t          valIsNaN =3D value =
!=3D=3D value,\n\t          valIsNull =3D value =3D=3D=3D null,\n\t      =
    valIsUndef =3D value =3D=3D=3D undefined;\n\n\t      while (low &lt; =
high) {\n\t        var mid =3D nativeFloor((low + high) / 2),\n\t        =
    computed =3D iteratee(array[mid]),\n\t            isDef =3D computed =
!=3D=3D undefined,\n\t            isReflexive =3D computed =3D=3D=3D =
computed;\n\n\t        if (valIsNaN) {\n\t          var setLow =3D =
isReflexive || retHighest;\n\t        } else if (valIsNull) {\n\t        =
  setLow =3D isReflexive &amp;&amp; isDef &amp;&amp; (retHighest || =
computed !=3D null);\n\t        } else if (valIsUndef) {\n\t          =
setLow =3D isReflexive &amp;&amp; (retHighest || isDef);\n\t        } =
else if (computed =3D=3D null) {\n\t          setLow =3D false;\n\t      =
  } else {\n\t          setLow =3D retHighest ? (computed &lt;=3D value) =
: (computed &lt; value);\n\t        }\n\t        if (setLow) {\n\t       =
   low =3D mid + 1;\n\t        } else {\n\t          high =3D mid;\n\t   =
     }\n\t      }\n\t      return nativeMin(high, MAX_ARRAY_INDEX);\n\t  =
  }\n\n\t    /**\n\t     * A specialized version of `baseCallback` which =
only supports `this` binding\n\t     * and specifying the number of =
arguments to provide to `func`.\n\t     *\n\t     * @private\n\t     * =
@param {Function} func The function to bind.\n\t     * @param {*} =
thisArg The `this` binding of `func`.\n\t     * @param {number} =
[argCount] The number of arguments to provide to `func`.\n\t     * =
@returns {Function} Returns the callback.\n\t     */\n\t    function =
bindCallback(func, thisArg, argCount) {\n\t      if (typeof func !=3D =
'function') {\n\t        return identity;\n\t      }\n\t      if =
(thisArg =3D=3D=3D undefined) {\n\t        return func;\n\t      }\n\t   =
   switch (argCount) {\n\t        case 1: return function(value) {\n\t   =
       return func.call(thisArg, value);\n\t        };\n\t        case =
3: return function(value, index, collection) {\n\t          return =
func.call(thisArg, value, index, collection);\n\t        };\n\t        =
case 4: return function(accumulator, value, index, collection) {\n\t     =
     return func.call(thisArg, accumulator, value, index, =
collection);\n\t        };\n\t        case 5: return function(value, =
other, key, object, source) {\n\t          return func.call(thisArg, =
value, other, key, object, source);\n\t        };\n\t      }\n\t      =
return function() {\n\t        return func.apply(thisArg, =
arguments);\n\t      };\n\t    }\n\n\t    /**\n\t     * Creates a clone =
of the given array buffer.\n\t     *\n\t     * @private\n\t     * @param =
{ArrayBuffer} buffer The array buffer to clone.\n\t     * @returns =
{ArrayBuffer} Returns the cloned array buffer.\n\t     */\n\t    =
function bufferClone(buffer) {\n\t      var result =3D new =
ArrayBuffer(buffer.byteLength),\n\t          view =3D new =
Uint8Array(result);\n\n\t      view.set(new Uint8Array(buffer));\n\t     =
 return result;\n\t    }\n\n\t    /**\n\t     * Creates an array that is =
the composition of partially applied arguments,\n\t     * placeholders, =
and provided arguments into a single array of arguments.\n\t     *\n\t   =
  * @private\n\t     * @param {Array|Object} args The provided =
arguments.\n\t     * @param {Array} partials The arguments to prepend to =
those provided.\n\t     * @param {Array} holders The `partials` =
placeholder indexes.\n\t     * @returns {Array} Returns the new array of =
composed arguments.\n\t     */\n\t    function composeArgs(args, =
partials, holders) {\n\t      var holdersLength =3D holders.length,\n\t  =
        argsIndex =3D -1,\n\t          argsLength =3D =
nativeMax(args.length - holdersLength, 0),\n\t          leftIndex =3D =
-1,\n\t          leftLength =3D partials.length,\n\t          result =3D =
Array(leftLength + argsLength);\n\n\t      while (++leftIndex &lt; =
leftLength) {\n\t        result[leftIndex] =3D partials[leftIndex];\n\t  =
    }\n\t      while (++argsIndex &lt; holdersLength) {\n\t        =
result[holders[argsIndex]] =3D args[argsIndex];\n\t      }\n\t      =
while (argsLength--) {\n\t        result[leftIndex++] =3D =
args[argsIndex++];\n\t      }\n\t      return result;\n\t    }\n\n\t    =
/**\n\t     * This function is like `composeArgs` except that the =
arguments composition\n\t     * is tailored for `_.partialRight`.\n\t    =
 *\n\t     * @private\n\t     * @param {Array|Object} args The provided =
arguments.\n\t     * @param {Array} partials The arguments to append to =
those provided.\n\t     * @param {Array} holders The `partials` =
placeholder indexes.\n\t     * @returns {Array} Returns the new array of =
composed arguments.\n\t     */\n\t    function composeArgsRight(args, =
partials, holders) {\n\t      var holdersIndex =3D -1,\n\t          =
holdersLength =3D holders.length,\n\t          argsIndex =3D -1,\n\t     =
     argsLength =3D nativeMax(args.length - holdersLength, 0),\n\t       =
   rightIndex =3D -1,\n\t          rightLength =3D partials.length,\n\t  =
        result =3D Array(argsLength + rightLength);\n\n\t      while =
(++argsIndex &lt; argsLength) {\n\t        result[argsIndex] =3D =
args[argsIndex];\n\t      }\n\t      var offset =3D argsIndex;\n\t      =
while (++rightIndex &lt; rightLength) {\n\t        result[offset + =
rightIndex] =3D partials[rightIndex];\n\t      }\n\t      while =
(++holdersIndex &lt; holdersLength) {\n\t        result[offset + =
holders[holdersIndex]] =3D args[argsIndex++];\n\t      }\n\t      return =
result;\n\t    }\n\n\t    /**\n\t     * Creates a `_.countBy`, =
`_.groupBy`, `_.indexBy`, or `_.partition` function.\n\t     *\n\t     * =
@private\n\t     * @param {Function} setter The function to set keys and =
values of the accumulator object.\n\t     * @param {Function} =
[initializer] The function to initialize the accumulator object.\n\t     =
* @returns {Function} Returns the new aggregator function.\n\t     =
*/\n\t    function createAggregator(setter, initializer) {\n\t      =
return function(collection, iteratee, thisArg) {\n\t        var result =
=3D initializer ? initializer() : {};\n\t        iteratee =3D =
getCallback(iteratee, thisArg, 3);\n\n\t        if (isArray(collection)) =
{\n\t          var index =3D -1,\n\t              length =3D =
collection.length;\n\n\t          while (++index &lt; length) {\n\t      =
      var value =3D collection[index];\n\t            setter(result, =
value, iteratee(value, index, collection), collection);\n\t          =
}\n\t        } else {\n\t          baseEach(collection, function(value, =
key, collection) {\n\t            setter(result, value, iteratee(value, =
key, collection), collection);\n\t          });\n\t        }\n\t        =
return result;\n\t      };\n\t    }\n\n\t    /**\n\t     * Creates a =
`_.assign`, `_.defaults`, or `_.merge` function.\n\t     *\n\t     * =
@private\n\t     * @param {Function} assigner The function to assign =
values.\n\t     * @returns {Function} Returns the new assigner =
function.\n\t     */\n\t    function createAssigner(assigner) {\n\t      =
return restParam(function(object, sources) {\n\t        var index =3D =
-1,\n\t            length =3D object =3D=3D null ? 0 : =
sources.length,\n\t            customizer =3D length &gt; 2 ? =
sources[length - 2] : undefined,\n\t            guard =3D length &gt; 2 =
? sources[2] : undefined,\n\t            thisArg =3D length &gt; 1 ? =
sources[length - 1] : undefined;\n\n\t        if (typeof customizer =
=3D=3D 'function') {\n\t          customizer =3D =
bindCallback(customizer, thisArg, 5);\n\t          length -=3D 2;\n\t    =
    } else {\n\t          customizer =3D typeof thisArg =3D=3D =
'function' ? thisArg : undefined;\n\t          length -=3D (customizer ? =
1 : 0);\n\t        }\n\t        if (guard &amp;&amp; =
isIterateeCall(sources[0], sources[1], guard)) {\n\t          customizer =
=3D length &lt; 3 ? undefined : customizer;\n\t          length =3D =
1;\n\t        }\n\t        while (++index &lt; length) {\n\t          =
var source =3D sources[index];\n\t          if (source) {\n\t            =
assigner(object, source, customizer);\n\t          }\n\t        }\n\t    =
    return object;\n\t      });\n\t    }\n\n\t    /**\n\t     * Creates =
a `baseEach` or `baseEachRight` function.\n\t     *\n\t     * =
@private\n\t     * @param {Function} eachFunc The function to iterate =
over a collection.\n\t     * @param {boolean} [fromRight] Specify =
iterating from right to left.\n\t     * @returns {Function} Returns the =
new base function.\n\t     */\n\t    function createBaseEach(eachFunc, =
fromRight) {\n\t      return function(collection, iteratee) {\n\t        =
var length =3D collection ? getLength(collection) : 0;\n\t        if =
(!isLength(length)) {\n\t          return eachFunc(collection, =
iteratee);\n\t        }\n\t        var index =3D fromRight ? length : =
-1,\n\t            iterable =3D toObject(collection);\n\n\t        while =
((fromRight ? index-- : ++index &lt; length)) {\n\t          if =
(iteratee(iterable[index], index, iterable) =3D=3D=3D false) {\n\t       =
     break;\n\t          }\n\t        }\n\t        return =
collection;\n\t      };\n\t    }\n\n\t    /**\n\t     * Creates a base =
function for `_.forIn` or `_.forInRight`.\n\t     *\n\t     * =
@private\n\t     * @param {boolean} [fromRight] Specify iterating from =
right to left.\n\t     * @returns {Function} Returns the new base =
function.\n\t     */\n\t    function createBaseFor(fromRight) {\n\t      =
return function(object, iteratee, keysFunc) {\n\t        var iterable =
=3D toObject(object),\n\t            props =3D keysFunc(object),\n\t     =
       length =3D props.length,\n\t            index =3D fromRight ? =
length : -1;\n\n\t        while ((fromRight ? index-- : ++index &lt; =
length)) {\n\t          var key =3D props[index];\n\t          if =
(iteratee(iterable[key], key, iterable) =3D=3D=3D false) {\n\t           =
 break;\n\t          }\n\t        }\n\t        return object;\n\t      =
};\n\t    }\n\n\t    /**\n\t     * Creates a function that wraps `func` =
and invokes it with the `this`\n\t     * binding of `thisArg`.\n\t     =
*\n\t     * @private\n\t     * @param {Function} func The function to =
bind.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t   =
  * @returns {Function} Returns the new bound function.\n\t     */\n\t   =
 function createBindWrapper(func, thisArg) {\n\t      var Ctor =3D =
createCtorWrapper(func);\n\n\t      function wrapper() {\n\t        var =
fn =3D (this &amp;&amp; this !=3D=3D root &amp;&amp; this instanceof =
wrapper) ? Ctor : func;\n\t        return fn.apply(thisArg, =
arguments);\n\t      }\n\t      return wrapper;\n\t    }\n\n\t    =
/**\n\t     * Creates a `Set` cache object to optimize linear searches =
of large arrays.\n\t     *\n\t     * @private\n\t     * @param {Array} =
[values] The values to cache.\n\t     * @returns {null|Object} Returns =
the new cache object if `Set` is supported, else `null`.\n\t     */\n\t  =
  function createCache(values) {\n\t      return (nativeCreate =
&amp;&amp; Set) ? new SetCache(values) : null;\n\t    }\n\n\t    /**\n\t =
    * Creates a function that produces compound words out of the words =
in a\n\t     * given string.\n\t     *\n\t     * @private\n\t     * =
@param {Function} callback The function to combine each word.\n\t     * =
@returns {Function} Returns the new compounder function.\n\t     */\n\t  =
  function createCompounder(callback) {\n\t      return function(string) =
{\n\t        var index =3D -1,\n\t            array =3D =
words(deburr(string)),\n\t            length =3D array.length,\n\t       =
     result =3D '';\n\n\t        while (++index &lt; length) {\n\t       =
   result =3D callback(result, array[index], index);\n\t        }\n\t    =
    return result;\n\t      };\n\t    }\n\n\t    /**\n\t     * Creates a =
function that produces an instance of `Ctor` regardless of\n\t     * =
whether it was invoked as part of a `new` expression or by `call` or =
`apply`.\n\t     *\n\t     * @private\n\t     * @param {Function} Ctor =
The constructor to wrap.\n\t     * @returns {Function} Returns the new =
wrapped function.\n\t     */\n\t    function createCtorWrapper(Ctor) =
{\n\t      return function() {\n\t        // Use a `switch` statement to =
work with class constructors.\n\t        // See =
http://ecma-international.org/ecma-262/6.0/#sec-ecmascript-function-objec=
ts-call-thisargument-argumentslist\n\t        // for more details.\n\t   =
     var args =3D arguments;\n\t        switch (args.length) {\n\t       =
   case 0: return new Ctor;\n\t          case 1: return new =
Ctor(args[0]);\n\t          case 2: return new Ctor(args[0], =
args[1]);\n\t          case 3: return new Ctor(args[0], args[1], =
args[2]);\n\t          case 4: return new Ctor(args[0], args[1], =
args[2], args[3]);\n\t          case 5: return new Ctor(args[0], =
args[1], args[2], args[3], args[4]);\n\t          case 6: return new =
Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n\t          =
case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], =
args[5], args[6]);\n\t        }\n\t        var thisBinding =3D =
baseCreate(Ctor.prototype),\n\t            result =3D =
Ctor.apply(thisBinding, args);\n\n\t        // Mimic the constructor's =
`return` behavior.\n\t        // See https://es5.github.io/#x13.2.2 for =
more details.\n\t        return isObject(result) ? result : =
thisBinding;\n\t      };\n\t    }\n\n\t    /**\n\t     * Creates a =
`_.curry` or `_.curryRight` function.\n\t     *\n\t     * @private\n\t   =
  * @param {boolean} flag The curry bit flag.\n\t     * @returns =
{Function} Returns the new curry function.\n\t     */\n\t    function =
createCurry(flag) {\n\t      function curryFunc(func, arity, guard) =
{\n\t        if (guard &amp;&amp; isIterateeCall(func, arity, guard)) =
{\n\t          arity =3D undefined;\n\t        }\n\t        var result =
=3D createWrapper(func, flag, undefined, undefined, undefined, =
undefined, undefined, arity);\n\t        result.placeholder =3D =
curryFunc.placeholder;\n\t        return result;\n\t      }\n\t      =
return curryFunc;\n\t    }\n\n\t    /**\n\t     * Creates a `_.defaults` =
or `_.defaultsDeep` function.\n\t     *\n\t     * @private\n\t     * =
@param {Function} assigner The function to assign values.\n\t     * =
@param {Function} customizer The function to customize assigned =
values.\n\t     * @returns {Function} Returns the new defaults =
function.\n\t     */\n\t    function createDefaults(assigner, =
customizer) {\n\t      return restParam(function(args) {\n\t        var =
object =3D args[0];\n\t        if (object =3D=3D null) {\n\t          =
return object;\n\t        }\n\t        args.push(customizer);\n\t        =
return assigner.apply(undefined, args);\n\t      });\n\t    }\n\n\t    =
/**\n\t     * Creates a `_.max` or `_.min` function.\n\t     *\n\t     * =
@private\n\t     * @param {Function} comparator The function used to =
compare values.\n\t     * @param {*} exValue The initial extremum =
value.\n\t     * @returns {Function} Returns the new extremum =
function.\n\t     */\n\t    function createExtremum(comparator, exValue) =
{\n\t      return function(collection, iteratee, thisArg) {\n\t        =
if (thisArg &amp;&amp; isIterateeCall(collection, iteratee, thisArg)) =
{\n\t          iteratee =3D undefined;\n\t        }\n\t        iteratee =
=3D getCallback(iteratee, thisArg, 3);\n\t        if (iteratee.length =
=3D=3D 1) {\n\t          collection =3D isArray(collection) ? collection =
: toIterable(collection);\n\t          var result =3D =
arrayExtremum(collection, iteratee, comparator, exValue);\n\t          =
if (!(collection.length &amp;&amp; result =3D=3D=3D exValue)) {\n\t      =
      return result;\n\t          }\n\t        }\n\t        return =
baseExtremum(collection, iteratee, comparator, exValue);\n\t      };\n\t =
   }\n\n\t    /**\n\t     * Creates a `_.find` or `_.findLast` =
function.\n\t     *\n\t     * @private\n\t     * @param {Function} =
eachFunc The function to iterate over a collection.\n\t     * @param =
{boolean} [fromRight] Specify iterating from right to left.\n\t     * =
@returns {Function} Returns the new find function.\n\t     */\n\t    =
function createFind(eachFunc, fromRight) {\n\t      return =
function(collection, predicate, thisArg) {\n\t        predicate =3D =
getCallback(predicate, thisArg, 3);\n\t        if (isArray(collection)) =
{\n\t          var index =3D baseFindIndex(collection, predicate, =
fromRight);\n\t          return index &gt; -1 ? collection[index] : =
undefined;\n\t        }\n\t        return baseFind(collection, =
predicate, eachFunc);\n\t      };\n\t    }\n\n\t    /**\n\t     * =
Creates a `_.findIndex` or `_.findLastIndex` function.\n\t     *\n\t     =
* @private\n\t     * @param {boolean} [fromRight] Specify iterating from =
right to left.\n\t     * @returns {Function} Returns the new find =
function.\n\t     */\n\t    function createFindIndex(fromRight) {\n\t    =
  return function(array, predicate, thisArg) {\n\t        if (!(array =
&amp;&amp; array.length)) {\n\t          return -1;\n\t        }\n\t     =
   predicate =3D getCallback(predicate, thisArg, 3);\n\t        return =
baseFindIndex(array, predicate, fromRight);\n\t      };\n\t    }\n\n\t   =
 /**\n\t     * Creates a `_.findKey` or `_.findLastKey` function.\n\t    =
 *\n\t     * @private\n\t     * @param {Function} objectFunc The =
function to iterate over an object.\n\t     * @returns {Function} =
Returns the new find function.\n\t     */\n\t    function =
createFindKey(objectFunc) {\n\t      return function(object, predicate, =
thisArg) {\n\t        predicate =3D getCallback(predicate, thisArg, =
3);\n\t        return baseFind(object, predicate, objectFunc, true);\n\t =
     };\n\t    }\n\n\t    /**\n\t     * Creates a `_.flow` or =
`_.flowRight` function.\n\t     *\n\t     * @private\n\t     * @param =
{boolean} [fromRight] Specify iterating from right to left.\n\t     * =
@returns {Function} Returns the new flow function.\n\t     */\n\t    =
function createFlow(fromRight) {\n\t      return function() {\n\t        =
var wrapper,\n\t            length =3D arguments.length,\n\t            =
index =3D fromRight ? length : -1,\n\t            leftIndex =3D 0,\n\t   =
         funcs =3D Array(length);\n\n\t        while ((fromRight ? =
index-- : ++index &lt; length)) {\n\t          var func =3D =
funcs[leftIndex++] =3D arguments[index];\n\t          if (typeof func =
!=3D 'function') {\n\t            throw new =
TypeError(FUNC_ERROR_TEXT);\n\t          }\n\t          if (!wrapper =
&amp;&amp; LodashWrapper.prototype.thru &amp;&amp; getFuncName(func) =
=3D=3D 'wrapper') {\n\t            wrapper =3D new LodashWrapper([], =
true);\n\t          }\n\t        }\n\t        index =3D wrapper ? -1 : =
length;\n\t        while (++index &lt; length) {\n\t          func =3D =
funcs[index];\n\n\t          var funcName =3D getFuncName(func),\n\t     =
         data =3D funcName =3D=3D 'wrapper' ? getData(func) : =
undefined;\n\n\t          if (data &amp;&amp; isLaziable(data[0]) =
&amp;&amp; data[1] =3D=3D (ARY_FLAG | CURRY_FLAG | PARTIAL_FLAG | =
REARG_FLAG) &amp;&amp; !data[4].length &amp;&amp; data[9] =3D=3D 1) =
{\n\t            wrapper =3D =
wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n\t          } =
else {\n\t            wrapper =3D (func.length =3D=3D 1 &amp;&amp; =
isLaziable(func)) ? wrapper[funcName]() : wrapper.thru(func);\n\t        =
  }\n\t        }\n\t        return function() {\n\t          var args =
=3D arguments,\n\t              value =3D args[0];\n\n\t          if =
(wrapper &amp;&amp; args.length =3D=3D 1 &amp;&amp; isArray(value) =
&amp;&amp; value.length &gt;=3D LARGE_ARRAY_SIZE) {\n\t            =
return wrapper.plant(value).value();\n\t          }\n\t          var =
index =3D 0,\n\t              result =3D length ? =
funcs[index].apply(this, args) : value;\n\n\t          while (++index =
&lt; length) {\n\t            result =3D funcs[index].call(this, =
result);\n\t          }\n\t          return result;\n\t        };\n\t    =
  };\n\t    }\n\n\t    /**\n\t     * Creates a function for `_.forEach` =
or `_.forEachRight`.\n\t     *\n\t     * @private\n\t     * @param =
{Function} arrayFunc The function to iterate over an array.\n\t     * =
@param {Function} eachFunc The function to iterate over a =
collection.\n\t     * @returns {Function} Returns the new each =
function.\n\t     */\n\t    function createForEach(arrayFunc, eachFunc) =
{\n\t      return function(collection, iteratee, thisArg) {\n\t        =
return (typeof iteratee =3D=3D 'function' &amp;&amp; thisArg =3D=3D=3D =
undefined &amp;&amp; isArray(collection))\n\t          ? =
arrayFunc(collection, iteratee)\n\t          : eachFunc(collection, =
bindCallback(iteratee, thisArg, 3));\n\t      };\n\t    }\n\n\t    =
/**\n\t     * Creates a function for `_.forIn` or `_.forInRight`.\n\t    =
 *\n\t     * @private\n\t     * @param {Function} objectFunc The =
function to iterate over an object.\n\t     * @returns {Function} =
Returns the new each function.\n\t     */\n\t    function =
createForIn(objectFunc) {\n\t      return function(object, iteratee, =
thisArg) {\n\t        if (typeof iteratee !=3D 'function' || thisArg =
!=3D=3D undefined) {\n\t          iteratee =3D bindCallback(iteratee, =
thisArg, 3);\n\t        }\n\t        return objectFunc(object, iteratee, =
keysIn);\n\t      };\n\t    }\n\n\t    /**\n\t     * Creates a function =
for `_.forOwn` or `_.forOwnRight`.\n\t     *\n\t     * @private\n\t     =
* @param {Function} objectFunc The function to iterate over an =
object.\n\t     * @returns {Function} Returns the new each function.\n\t =
    */\n\t    function createForOwn(objectFunc) {\n\t      return =
function(object, iteratee, thisArg) {\n\t        if (typeof iteratee =
!=3D 'function' || thisArg !=3D=3D undefined) {\n\t          iteratee =
=3D bindCallback(iteratee, thisArg, 3);\n\t        }\n\t        return =
objectFunc(object, iteratee);\n\t      };\n\t    }\n\n\t    /**\n\t     =
* Creates a function for `_.mapKeys` or `_.mapValues`.\n\t     *\n\t     =
* @private\n\t     * @param {boolean} [isMapKeys] Specify mapping keys =
instead of values.\n\t     * @returns {Function} Returns the new map =
function.\n\t     */\n\t    function createObjectMapper(isMapKeys) {\n\t =
     return function(object, iteratee, thisArg) {\n\t        var result =
=3D {};\n\t        iteratee =3D getCallback(iteratee, thisArg, 3);\n\n\t =
       baseForOwn(object, function(value, key, object) {\n\t          =
var mapped =3D iteratee(value, key, object);\n\t          key =3D =
isMapKeys ? mapped : key;\n\t          value =3D isMapKeys ? value : =
mapped;\n\t          result[key] =3D value;\n\t        });\n\t        =
return result;\n\t      };\n\t    }\n\n\t    /**\n\t     * Creates a =
function for `_.padLeft` or `_.padRight`.\n\t     *\n\t     * =
@private\n\t     * @param {boolean} [fromRight] Specify padding from the =
right.\n\t     * @returns {Function} Returns the new pad function.\n\t   =
  */\n\t    function createPadDir(fromRight) {\n\t      return =
function(string, length, chars) {\n\t        string =3D =
baseToString(string);\n\t        return (fromRight ? string : '') + =
createPadding(string, length, chars) + (fromRight ? '' : string);\n\t    =
  };\n\t    }\n\n\t    /**\n\t     * Creates a `_.partial` or =
`_.partialRight` function.\n\t     *\n\t     * @private\n\t     * @param =
{boolean} flag The partial bit flag.\n\t     * @returns {Function} =
Returns the new partial function.\n\t     */\n\t    function =
createPartial(flag) {\n\t      var partialFunc =3D =
restParam(function(func, partials) {\n\t        var holders =3D =
replaceHolders(partials, partialFunc.placeholder);\n\t        return =
createWrapper(func, flag, undefined, partials, holders);\n\t      =
});\n\t      return partialFunc;\n\t    }\n\n\t    /**\n\t     * Creates =
a function for `_.reduce` or `_.reduceRight`.\n\t     *\n\t     * =
@private\n\t     * @param {Function} arrayFunc The function to iterate =
over an array.\n\t     * @param {Function} eachFunc The function to =
iterate over a collection.\n\t     * @returns {Function} Returns the new =
each function.\n\t     */\n\t    function createReduce(arrayFunc, =
eachFunc) {\n\t      return function(collection, iteratee, accumulator, =
thisArg) {\n\t        var initFromArray =3D arguments.length &lt; 3;\n\t =
       return (typeof iteratee =3D=3D 'function' &amp;&amp; thisArg =
=3D=3D=3D undefined &amp;&amp; isArray(collection))\n\t          ? =
arrayFunc(collection, iteratee, accumulator, initFromArray)\n\t          =
: baseReduce(collection, getCallback(iteratee, thisArg, 4), accumulator, =
initFromArray, eachFunc);\n\t      };\n\t    }\n\n\t    /**\n\t     * =
Creates a function that wraps `func` and invokes it with optional =
`this`\n\t     * binding of, partial application, and currying.\n\t     =
*\n\t     * @private\n\t     * @param {Function|string} func The =
function or method name to reference.\n\t     * @param {number} bitmask =
The bitmask of flags. See `createWrapper` for more details.\n\t     * =
@param {*} [thisArg] The `this` binding of `func`.\n\t     * @param =
{Array} [partials] The arguments to prepend to those provided to the new =
function.\n\t     * @param {Array} [holders] The `partials` placeholder =
indexes.\n\t     * @param {Array} [partialsRight] The arguments to =
append to those provided to the new function.\n\t     * @param {Array} =
[holdersRight] The `partialsRight` placeholder indexes.\n\t     * @param =
{Array} [argPos] The argument positions of the new function.\n\t     * =
@param {number} [ary] The arity cap of `func`.\n\t     * @param {number} =
[arity] The arity of `func`.\n\t     * @returns {Function} Returns the =
new wrapped function.\n\t     */\n\t    function =
createHybridWrapper(func, bitmask, thisArg, partials, holders, =
partialsRight, holdersRight, argPos, ary, arity) {\n\t      var isAry =
=3D bitmask &amp; ARY_FLAG,\n\t          isBind =3D bitmask &amp; =
BIND_FLAG,\n\t          isBindKey =3D bitmask &amp; BIND_KEY_FLAG,\n\t   =
       isCurry =3D bitmask &amp; CURRY_FLAG,\n\t          isCurryBound =
=3D bitmask &amp; CURRY_BOUND_FLAG,\n\t          isCurryRight =3D =
bitmask &amp; CURRY_RIGHT_FLAG,\n\t          Ctor =3D isBindKey ? =
undefined : createCtorWrapper(func);\n\n\t      function wrapper() {\n\t =
       // Avoid `arguments` object use disqualifying optimizations =
by\n\t        // converting it to an array before providing it to other =
functions.\n\t        var length =3D arguments.length,\n\t            =
index =3D length,\n\t            args =3D Array(length);\n\n\t        =
while (index--) {\n\t          args[index] =3D arguments[index];\n\t     =
   }\n\t        if (partials) {\n\t          args =3D composeArgs(args, =
partials, holders);\n\t        }\n\t        if (partialsRight) {\n\t     =
     args =3D composeArgsRight(args, partialsRight, holdersRight);\n\t   =
     }\n\t        if (isCurry || isCurryRight) {\n\t          var =
placeholder =3D wrapper.placeholder,\n\t              argsHolders =3D =
replaceHolders(args, placeholder);\n\n\t          length -=3D =
argsHolders.length;\n\t          if (length &lt; arity) {\n\t            =
var newArgPos =3D argPos ? arrayCopy(argPos) : undefined,\n\t            =
    newArity =3D nativeMax(arity - length, 0),\n\t                =
newsHolders =3D isCurry ? argsHolders : undefined,\n\t                =
newHoldersRight =3D isCurry ? undefined : argsHolders,\n\t               =
 newPartials =3D isCurry ? args : undefined,\n\t                =
newPartialsRight =3D isCurry ? undefined : args;\n\n\t            =
bitmask |=3D (isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG);\n\t          =
  bitmask &amp;=3D ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);\n\n\t =
           if (!isCurryBound) {\n\t              bitmask &amp;=3D =
~(BIND_FLAG | BIND_KEY_FLAG);\n\t            }\n\t            var =
newData =3D [func, bitmask, thisArg, newPartials, newsHolders, =
newPartialsRight, newHoldersRight, newArgPos, ary, newArity],\n\t        =
        result =3D createHybridWrapper.apply(undefined, newData);\n\n\t  =
          if (isLaziable(func)) {\n\t              setData(result, =
newData);\n\t            }\n\t            result.placeholder =3D =
placeholder;\n\t            return result;\n\t          }\n\t        =
}\n\t        var thisBinding =3D isBind ? thisArg : this,\n\t            =
fn =3D isBindKey ? thisBinding[func] : func;\n\n\t        if (argPos) =
{\n\t          args =3D reorder(args, argPos);\n\t        }\n\t        =
if (isAry &amp;&amp; ary &lt; args.length) {\n\t          args.length =
=3D ary;\n\t        }\n\t        if (this &amp;&amp; this !=3D=3D root =
&amp;&amp; this instanceof wrapper) {\n\t          fn =3D Ctor || =
createCtorWrapper(func);\n\t        }\n\t        return =
fn.apply(thisBinding, args);\n\t      }\n\t      return wrapper;\n\t    =
}\n\n\t    /**\n\t     * Creates the padding required for `string` based =
on the given `length`.\n\t     * The `chars` string is truncated if the =
number of characters exceeds `length`.\n\t     *\n\t     * @private\n\t  =
   * @param {string} string The string to create padding for.\n\t     * =
@param {number} [length=3D0] The padding length.\n\t     * @param =
{string} [chars=3D' '] The string used as padding.\n\t     * @returns =
{string} Returns the pad for `string`.\n\t     */\n\t    function =
createPadding(string, length, chars) {\n\t      var strLength =3D =
string.length;\n\t      length =3D +length;\n\n\t      if (strLength =
&gt;=3D length || !nativeIsFinite(length)) {\n\t        return '';\n\t   =
   }\n\t      var padLength =3D length - strLength;\n\t      chars =3D =
chars =3D=3D null ? ' ' : (chars + '');\n\t      return repeat(chars, =
nativeCeil(padLength / chars.length)).slice(0, padLength);\n\t    =
}\n\n\t    /**\n\t     * Creates a function that wraps `func` and =
invokes it with the optional `this`\n\t     * binding of `thisArg` and =
the `partials` prepended to those provided to\n\t     * the wrapper.\n\t =
    *\n\t     * @private\n\t     * @param {Function} func The function =
to partially apply arguments to.\n\t     * @param {number} bitmask The =
bitmask of flags. See `createWrapper` for more details.\n\t     * @param =
{*} thisArg The `this` binding of `func`.\n\t     * @param {Array} =
partials The arguments to prepend to those provided to the new =
function.\n\t     * @returns {Function} Returns the new bound =
function.\n\t     */\n\t    function createPartialWrapper(func, bitmask, =
thisArg, partials) {\n\t      var isBind =3D bitmask &amp; =
BIND_FLAG,\n\t          Ctor =3D createCtorWrapper(func);\n\n\t      =
function wrapper() {\n\t        // Avoid `arguments` object use =
disqualifying optimizations by\n\t        // converting it to an array =
before providing it `func`.\n\t        var argsIndex =3D -1,\n\t         =
   argsLength =3D arguments.length,\n\t            leftIndex =3D -1,\n\t =
           leftLength =3D partials.length,\n\t            args =3D =
Array(leftLength + argsLength);\n\n\t        while (++leftIndex &lt; =
leftLength) {\n\t          args[leftIndex] =3D partials[leftIndex];\n\t  =
      }\n\t        while (argsLength--) {\n\t          args[leftIndex++] =
=3D arguments[++argsIndex];\n\t        }\n\t        var fn =3D (this =
&amp;&amp; this !=3D=3D root &amp;&amp; this instanceof wrapper) ? Ctor =
: func;\n\t        return fn.apply(isBind ? thisArg : this, args);\n\t   =
   }\n\t      return wrapper;\n\t    }\n\n\t    /**\n\t     * Creates a =
`_.ceil`, `_.floor`, or `_.round` function.\n\t     *\n\t     * =
@private\n\t     * @param {string} methodName The name of the `Math` =
method to use when rounding.\n\t     * @returns {Function} Returns the =
new round function.\n\t     */\n\t    function createRound(methodName) =
{\n\t      var func =3D Math[methodName];\n\t      return =
function(number, precision) {\n\t        precision =3D precision =
=3D=3D=3D undefined ? 0 : (+precision || 0);\n\t        if (precision) =
{\n\t          precision =3D pow(10, precision);\n\t          return =
func(number * precision) / precision;\n\t        }\n\t        return =
func(number);\n\t      };\n\t    }\n\n\t    /**\n\t     * Creates a =
`_.sortedIndex` or `_.sortedLastIndex` function.\n\t     *\n\t     * =
@private\n\t     * @param {boolean} [retHighest] Specify returning the =
highest qualified index.\n\t     * @returns {Function} Returns the new =
index function.\n\t     */\n\t    function createSortedIndex(retHighest) =
{\n\t      return function(array, value, iteratee, thisArg) {\n\t        =
var callback =3D getCallback(iteratee);\n\t        return (iteratee =
=3D=3D null &amp;&amp; callback =3D=3D=3D baseCallback)\n\t          ? =
binaryIndex(array, value, retHighest)\n\t          : =
binaryIndexBy(array, value, callback(iteratee, thisArg, 1), =
retHighest);\n\t      };\n\t    }\n\n\t    /**\n\t     * Creates a =
function that either curries or invokes `func` with optional\n\t     * =
`this` binding and partially applied arguments.\n\t     *\n\t     * =
@private\n\t     * @param {Function|string} func The function or method =
name to reference.\n\t     * @param {number} bitmask The bitmask of =
flags.\n\t     *  The bitmask may be composed of the following =
flags:\n\t     *     1 - `_.bind`\n\t     *     2 - `_.bindKey`\n\t     =
*     4 - `_.curry` or `_.curryRight` of a bound function\n\t     *     =
8 - `_.curry`\n\t     *    16 - `_.curryRight`\n\t     *    32 - =
`_.partial`\n\t     *    64 - `_.partialRight`\n\t     *   128 - =
`_.rearg`\n\t     *   256 - `_.ary`\n\t     * @param {*} [thisArg] The =
`this` binding of `func`.\n\t     * @param {Array} [partials] The =
arguments to be partially applied.\n\t     * @param {Array} [holders] =
The `partials` placeholder indexes.\n\t     * @param {Array} [argPos] =
The argument positions of the new function.\n\t     * @param {number} =
[ary] The arity cap of `func`.\n\t     * @param {number} [arity] The =
arity of `func`.\n\t     * @returns {Function} Returns the new wrapped =
function.\n\t     */\n\t    function createWrapper(func, bitmask, =
thisArg, partials, holders, argPos, ary, arity) {\n\t      var isBindKey =
=3D bitmask &amp; BIND_KEY_FLAG;\n\t      if (!isBindKey &amp;&amp; =
typeof func !=3D 'function') {\n\t        throw new =
TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      var length =3D partials =
? partials.length : 0;\n\t      if (!length) {\n\t        bitmask =
&amp;=3D ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);\n\t        partials =3D =
holders =3D undefined;\n\t      }\n\t      length -=3D (holders ? =
holders.length : 0);\n\t      if (bitmask &amp; PARTIAL_RIGHT_FLAG) =
{\n\t        var partialsRight =3D partials,\n\t            holdersRight =
=3D holders;\n\n\t        partials =3D holders =3D undefined;\n\t      =
}\n\t      var data =3D isBindKey ? undefined : getData(func),\n\t       =
   newData =3D [func, bitmask, thisArg, partials, holders, =
partialsRight, holdersRight, argPos, ary, arity];\n\n\t      if (data) =
{\n\t        mergeData(newData, data);\n\t        bitmask =3D =
newData[1];\n\t        arity =3D newData[9];\n\t      }\n\t      =
newData[9] =3D arity =3D=3D null\n\t        ? (isBindKey ? 0 : =
func.length)\n\t        : (nativeMax(arity - length, 0) || 0);\n\n\t     =
 if (bitmask =3D=3D BIND_FLAG) {\n\t        var result =3D =
createBindWrapper(newData[0], newData[2]);\n\t      } else if ((bitmask =
=3D=3D PARTIAL_FLAG || bitmask =3D=3D (BIND_FLAG | PARTIAL_FLAG)) =
&amp;&amp; !newData[4].length) {\n\t        result =3D =
createPartialWrapper.apply(undefined, newData);\n\t      } else {\n\t    =
    result =3D createHybridWrapper.apply(undefined, newData);\n\t      =
}\n\t      var setter =3D data ? baseSetData : setData;\n\t      return =
setter(result, newData);\n\t    }\n\n\t    /**\n\t     * A specialized =
version of `baseIsEqualDeep` for arrays with support for\n\t     * =
partial deep comparisons.\n\t     *\n\t     * @private\n\t     * @param =
{Array} array The array to compare.\n\t     * @param {Array} other The =
other array to compare.\n\t     * @param {Function} equalFunc The =
function to determine equivalents of values.\n\t     * @param {Function} =
[customizer] The function to customize comparing arrays.\n\t     * =
@param {boolean} [isLoose] Specify performing partial comparisons.\n\t   =
  * @param {Array} [stackA] Tracks traversed `value` objects.\n\t     * =
@param {Array} [stackB] Tracks traversed `other` objects.\n\t     * =
@returns {boolean} Returns `true` if the arrays are equivalent, else =
`false`.\n\t     */\n\t    function equalArrays(array, other, equalFunc, =
customizer, isLoose, stackA, stackB) {\n\t      var index =3D -1,\n\t    =
      arrLength =3D array.length,\n\t          othLength =3D =
other.length;\n\n\t      if (arrLength !=3D othLength &amp;&amp; =
!(isLoose &amp;&amp; othLength &gt; arrLength)) {\n\t        return =
false;\n\t      }\n\t      // Ignore non-index properties.\n\t      =
while (++index &lt; arrLength) {\n\t        var arrValue =3D =
array[index],\n\t            othValue =3D other[index],\n\t            =
result =3D customizer ? customizer(isLoose ? othValue : arrValue, =
isLoose ? arrValue : othValue, index) : undefined;\n\n\t        if =
(result !=3D=3D undefined) {\n\t          if (result) {\n\t            =
continue;\n\t          }\n\t          return false;\n\t        }\n\t     =
   // Recursively compare arrays (susceptible to call stack limits).\n\t =
       if (isLoose) {\n\t          if (!arraySome(other, =
function(othValue) {\n\t                return arrValue =3D=3D=3D =
othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, =
stackB);\n\t              })) {\n\t            return false;\n\t         =
 }\n\t        } else if (!(arrValue =3D=3D=3D othValue || =
equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB))) =
{\n\t          return false;\n\t        }\n\t      }\n\t      return =
true;\n\t    }\n\n\t    /**\n\t     * A specialized version of =
`baseIsEqualDeep` for comparing objects of\n\t     * the same =
`toStringTag`.\n\t     *\n\t     * **Note:** This function only supports =
comparing values with tags of\n\t     * `Boolean`, `Date`, `Error`, =
`Number`, `RegExp`, or `String`.\n\t     *\n\t     * @private\n\t     * =
@param {Object} object The object to compare.\n\t     * @param {Object} =
other The other object to compare.\n\t     * @param {string} tag The =
`toStringTag` of the objects to compare.\n\t     * @returns {boolean} =
Returns `true` if the objects are equivalent, else `false`.\n\t     =
*/\n\t    function equalByTag(object, other, tag) {\n\t      switch =
(tag) {\n\t        case boolTag:\n\t        case dateTag:\n\t          =
// Coerce dates and booleans to numbers, dates to milliseconds and =
booleans\n\t          // to `1` or `0` treating invalid dates coerced to =
`NaN` as not equal.\n\t          return +object =3D=3D +other;\n\n\t     =
   case errorTag:\n\t          return object.name =3D=3D other.name =
&amp;&amp; object.message =3D=3D other.message;\n\n\t        case =
numberTag:\n\t          // Treat `NaN` vs. `NaN` as equal.\n\t          =
return (object !=3D +object)\n\t            ? other !=3D +other\n\t      =
      : object =3D=3D +other;\n\n\t        case regexpTag:\n\t        =
case stringTag:\n\t          // Coerce regexes to strings and treat =
strings primitives and string\n\t          // objects as equal. See =
https://es5.github.io/#x15.10.6.4 for more details.\n\t          return =
object =3D=3D (other + '');\n\t      }\n\t      return false;\n\t    =
}\n\n\t    /**\n\t     * A specialized version of `baseIsEqualDeep` for =
objects with support for\n\t     * partial deep comparisons.\n\t     =
*\n\t     * @private\n\t     * @param {Object} object The object to =
compare.\n\t     * @param {Object} other The other object to =
compare.\n\t     * @param {Function} equalFunc The function to determine =
equivalents of values.\n\t     * @param {Function} [customizer] The =
function to customize comparing values.\n\t     * @param {boolean} =
[isLoose] Specify performing partial comparisons.\n\t     * @param =
{Array} [stackA] Tracks traversed `value` objects.\n\t     * @param =
{Array} [stackB] Tracks traversed `other` objects.\n\t     * @returns =
{boolean} Returns `true` if the objects are equivalent, else =
`false`.\n\t     */\n\t    function equalObjects(object, other, =
equalFunc, customizer, isLoose, stackA, stackB) {\n\t      var objProps =
=3D keys(object),\n\t          objLength =3D objProps.length,\n\t        =
  othProps =3D keys(other),\n\t          othLength =3D =
othProps.length;\n\n\t      if (objLength !=3D othLength &amp;&amp; =
!isLoose) {\n\t        return false;\n\t      }\n\t      var index =3D =
objLength;\n\t      while (index--) {\n\t        var key =3D =
objProps[index];\n\t        if (!(isLoose ? key in other : =
hasOwnProperty.call(other, key))) {\n\t          return false;\n\t       =
 }\n\t      }\n\t      var skipCtor =3D isLoose;\n\t      while (++index =
&lt; objLength) {\n\t        key =3D objProps[index];\n\t        var =
objValue =3D object[key],\n\t            othValue =3D other[key],\n\t    =
        result =3D customizer ? customizer(isLoose ? othValue : =
objValue, isLoose? objValue : othValue, key) : undefined;\n\n\t        =
// Recursively compare objects (susceptible to call stack limits).\n\t   =
     if (!(result =3D=3D=3D undefined ? equalFunc(objValue, othValue, =
customizer, isLoose, stackA, stackB) : result)) {\n\t          return =
false;\n\t        }\n\t        skipCtor || (skipCtor =3D key =3D=3D =
'constructor');\n\t      }\n\t      if (!skipCtor) {\n\t        var =
objCtor =3D object.constructor,\n\t            othCtor =3D =
other.constructor;\n\n\t        // Non `Object` object instances with =
different constructors are not equal.\n\t        if (objCtor !=3D =
othCtor &amp;&amp;\n\t            ('constructor' in object &amp;&amp; =
'constructor' in other) &amp;&amp;\n\t            !(typeof objCtor =
=3D=3D 'function' &amp;&amp; objCtor instanceof objCtor &amp;&amp;\n\t   =
           typeof othCtor =3D=3D 'function' &amp;&amp; othCtor =
instanceof othCtor)) {\n\t          return false;\n\t        }\n\t      =
}\n\t      return true;\n\t    }\n\n\t    /**\n\t     * Gets the =
appropriate \"callback\" function. If the `_.callback` method is\n\t     =
* customized this function returns the custom method, otherwise it =
returns\n\t     * the `baseCallback` function. If arguments are provided =
the chosen function\n\t     * is invoked with them and its result is =
returned.\n\t     *\n\t     * @private\n\t     * @returns {Function} =
Returns the chosen function or its result.\n\t     */\n\t    function =
getCallback(func, thisArg, argCount) {\n\t      var result =3D =
lodash.callback || callback;\n\t      result =3D result =3D=3D=3D =
callback ? baseCallback : result;\n\t      return argCount ? =
result(func, thisArg, argCount) : result;\n\t    }\n\n\t    /**\n\t     =
* Gets metadata for `func`.\n\t     *\n\t     * @private\n\t     * =
@param {Function} func The function to query.\n\t     * @returns {*} =
Returns the metadata for `func`.\n\t     */\n\t    var getData =3D =
!metaMap ? noop : function(func) {\n\t      return =
metaMap.get(func);\n\t    };\n\n\t    /**\n\t     * Gets the name of =
`func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func =
The function to query.\n\t     * @returns {string} Returns the function =
name.\n\t     */\n\t    function getFuncName(func) {\n\t      var result =
=3D func.name,\n\t          array =3D realNames[result],\n\t          =
length =3D array ? array.length : 0;\n\n\t      while (length--) {\n\t   =
     var data =3D array[length],\n\t            otherFunc =3D =
data.func;\n\t        if (otherFunc =3D=3D null || otherFunc =3D=3D =
func) {\n\t          return data.name;\n\t        }\n\t      }\n\t      =
return result;\n\t    }\n\n\t    /**\n\t     * Gets the appropriate =
\"indexOf\" function. If the `_.indexOf` method is\n\t     * customized =
this function returns the custom method, otherwise it returns\n\t     * =
the `baseIndexOf` function. If arguments are provided the chosen =
function\n\t     * is invoked with them and its result is returned.\n\t  =
   *\n\t     * @private\n\t     * @returns {Function|number} Returns the =
chosen function or its result.\n\t     */\n\t    function =
getIndexOf(collection, target, fromIndex) {\n\t      var result =3D =
lodash.indexOf || indexOf;\n\t      result =3D result =3D=3D=3D indexOf =
? baseIndexOf : result;\n\t      return collection ? result(collection, =
target, fromIndex) : result;\n\t    }\n\n\t    /**\n\t     * Gets the =
\"length\" property value of `object`.\n\t     *\n\t     * **Note:** =
This function is used to avoid a [JIT =
bug](https://bugs.webkit.org/show_bug.cgi?id=3D142792)\n\t     * that =
affects Safari on at least iOS 8.1-8.3 ARM64.\n\t     *\n\t     * =
@private\n\t     * @param {Object} object The object to query.\n\t     * =
@returns {*} Returns the \"length\" value.\n\t     */\n\t    var =
getLength =3D baseProperty('length');\n\n\t    /**\n\t     * Gets the =
propery names, values, and compare flags of `object`.\n\t     *\n\t     =
* @private\n\t     * @param {Object} object The object to query.\n\t     =
* @returns {Array} Returns the match data of `object`.\n\t     */\n\t    =
function getMatchData(object) {\n\t      var result =3D =
pairs(object),\n\t          length =3D result.length;\n\n\t      while =
(length--) {\n\t        result[length][2] =3D =
isStrictComparable(result[length][1]);\n\t      }\n\t      return =
result;\n\t    }\n\n\t    /**\n\t     * Gets the native function at =
`key` of `object`.\n\t     *\n\t     * @private\n\t     * @param =
{Object} object The object to query.\n\t     * @param {string} key The =
key of the method to get.\n\t     * @returns {*} Returns the function if =
it's native, else `undefined`.\n\t     */\n\t    function =
getNative(object, key) {\n\t      var value =3D object =3D=3D null ? =
undefined : object[key];\n\t      return isNative(value) ? value : =
undefined;\n\t    }\n\n\t    /**\n\t     * Gets the view, applying any =
`transforms` to the `start` and `end` positions.\n\t     *\n\t     * =
@private\n\t     * @param {number} start The start of the view.\n\t     =
* @param {number} end The end of the view.\n\t     * @param {Array} =
transforms The transformations to apply to the view.\n\t     * @returns =
{Object} Returns an object containing the `start` and `end`\n\t     *  =
positions of the view.\n\t     */\n\t    function getView(start, end, =
transforms) {\n\t      var index =3D -1,\n\t          length =3D =
transforms.length;\n\n\t      while (++index &lt; length) {\n\t        =
var data =3D transforms[index],\n\t            size =3D data.size;\n\n\t =
       switch (data.type) {\n\t          case 'drop':      start +=3D =
size; break;\n\t          case 'dropRight': end -=3D size; break;\n\t    =
      case 'take':      end =3D nativeMin(end, start + size); break;\n\t =
         case 'takeRight': start =3D nativeMax(start, end - size); =
break;\n\t        }\n\t      }\n\t      return { 'start': start, 'end': =
end };\n\t    }\n\n\t    /**\n\t     * Initializes an array clone.\n\t   =
  *\n\t     * @private\n\t     * @param {Array} array The array to =
clone.\n\t     * @returns {Array} Returns the initialized clone.\n\t     =
*/\n\t    function initCloneArray(array) {\n\t      var length =3D =
array.length,\n\t          result =3D new =
array.constructor(length);\n\n\t      // Add array properties assigned =
by `RegExp#exec`.\n\t      if (length &amp;&amp; typeof array[0] =3D=3D =
'string' &amp;&amp; hasOwnProperty.call(array, 'index')) {\n\t        =
result.index =3D array.index;\n\t        result.input =3D =
array.input;\n\t      }\n\t      return result;\n\t    }\n\n\t    =
/**\n\t     * Initializes an object clone.\n\t     *\n\t     * =
@private\n\t     * @param {Object} object The object to clone.\n\t     * =
@returns {Object} Returns the initialized clone.\n\t     */\n\t    =
function initCloneObject(object) {\n\t      var Ctor =3D =
object.constructor;\n\t      if (!(typeof Ctor =3D=3D 'function' =
&amp;&amp; Ctor instanceof Ctor)) {\n\t        Ctor =3D Object;\n\t      =
}\n\t      return new Ctor;\n\t    }\n\n\t    /**\n\t     * Initializes =
an object clone based on its `toStringTag`.\n\t     *\n\t     * =
**Note:** This function only supports cloning values with tags of\n\t    =
 * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n\t     =
*\n\t     * @private\n\t     * @param {Object} object The object to =
clone.\n\t     * @param {string} tag The `toStringTag` of the object to =
clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     =
* @returns {Object} Returns the initialized clone.\n\t     */\n\t    =
function initCloneByTag(object, tag, isDeep) {\n\t      var Ctor =3D =
object.constructor;\n\t      switch (tag) {\n\t        case =
arrayBufferTag:\n\t          return bufferClone(object);\n\n\t        =
case boolTag:\n\t        case dateTag:\n\t          return new =
Ctor(+object);\n\n\t        case float32Tag: case float64Tag:\n\t        =
case int8Tag: case int16Tag: case int32Tag:\n\t        case uint8Tag: =
case uint8ClampedTag: case uint16Tag: case uint32Tag:\n\t          var =
buffer =3D object.buffer;\n\t          return new Ctor(isDeep ? =
bufferClone(buffer) : buffer, object.byteOffset, object.length);\n\n\t   =
     case numberTag:\n\t        case stringTag:\n\t          return new =
Ctor(object);\n\n\t        case regexpTag:\n\t          var result =3D =
new Ctor(object.source, reFlags.exec(object));\n\t          =
result.lastIndex =3D object.lastIndex;\n\t      }\n\t      return =
result;\n\t    }\n\n\t    /**\n\t     * Invokes the method at `path` on =
`object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object =
The object to query.\n\t     * @param {Array|string} path The path of =
the method to invoke.\n\t     * @param {Array} args The arguments to =
invoke the method with.\n\t     * @returns {*} Returns the result of the =
invoked method.\n\t     */\n\t    function invokePath(object, path, =
args) {\n\t      if (object !=3D null &amp;&amp; !isKey(path, object)) =
{\n\t        path =3D toPath(path);\n\t        object =3D path.length =
=3D=3D 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n\t        =
path =3D last(path);\n\t      }\n\t      var func =3D object =3D=3D null =
? object : object[path];\n\t      return func =3D=3D null ? undefined : =
func.apply(object, args);\n\t    }\n\n\t    /**\n\t     * Checks if =
`value` is array-like.\n\t     *\n\t     * @private\n\t     * @param {*} =
value The value to check.\n\t     * @returns {boolean} Returns `true` if =
`value` is array-like, else `false`.\n\t     */\n\t    function =
isArrayLike(value) {\n\t      return value !=3D null &amp;&amp; =
isLength(getLength(value));\n\t    }\n\n\t    /**\n\t     * Checks if =
`value` is a valid array-like index.\n\t     *\n\t     * @private\n\t    =
 * @param {*} value The value to check.\n\t     * @param {number} =
[length=3DMAX_SAFE_INTEGER] The upper bounds of a valid index.\n\t     * =
@returns {boolean} Returns `true` if `value` is a valid index, else =
`false`.\n\t     */\n\t    function isIndex(value, length) {\n\t      =
value =3D (typeof value =3D=3D 'number' || reIsUint.test(value)) ? =
+value : -1;\n\t      length =3D length =3D=3D null ? MAX_SAFE_INTEGER : =
length;\n\t      return value &gt; -1 &amp;&amp; value % 1 =3D=3D 0 =
&amp;&amp; value &lt; length;\n\t    }\n\n\t    /**\n\t     * Checks if =
the provided arguments are from an iteratee call.\n\t     *\n\t     * =
@private\n\t     * @param {*} value The potential iteratee value =
argument.\n\t     * @param {*} index The potential iteratee index or key =
argument.\n\t     * @param {*} object The potential iteratee object =
argument.\n\t     * @returns {boolean} Returns `true` if the arguments =
are from an iteratee call, else `false`.\n\t     */\n\t    function =
isIterateeCall(value, index, object) {\n\t      if (!isObject(object)) =
{\n\t        return false;\n\t      }\n\t      var type =3D typeof =
index;\n\t      if (type =3D=3D 'number'\n\t          ? =
(isArrayLike(object) &amp;&amp; isIndex(index, object.length))\n\t       =
   : (type =3D=3D 'string' &amp;&amp; index in object)) {\n\t        var =
other =3D object[index];\n\t        return value =3D=3D=3D value ? =
(value =3D=3D=3D other) : (other !=3D=3D other);\n\t      }\n\t      =
return false;\n\t    }\n\n\t    /**\n\t     * Checks if `value` is a =
property name and not a property path.\n\t     *\n\t     * @private\n\t  =
   * @param {*} value The value to check.\n\t     * @param {Object} =
[object] The object to query keys on.\n\t     * @returns {boolean} =
Returns `true` if `value` is a property name, else `false`.\n\t     =
*/\n\t    function isKey(value, object) {\n\t      var type =3D typeof =
value;\n\t      if ((type =3D=3D 'string' &amp;&amp; =
reIsPlainProp.test(value)) || type =3D=3D 'number') {\n\t        return =
true;\n\t      }\n\t      if (isArray(value)) {\n\t        return =
false;\n\t      }\n\t      var result =3D !reIsDeepProp.test(value);\n\t =
     return result || (object !=3D null &amp;&amp; value in =
toObject(object));\n\t    }\n\n\t    /**\n\t     * Checks if `func` has =
a lazy counterpart.\n\t     *\n\t     * @private\n\t     * @param =
{Function} func The function to check.\n\t     * @returns {boolean} =
Returns `true` if `func` has a lazy counterpart, else `false`.\n\t     =
*/\n\t    function isLaziable(func) {\n\t      var funcName =3D =
getFuncName(func);\n\t      if (!(funcName in LazyWrapper.prototype)) =
{\n\t        return false;\n\t      }\n\t      var other =3D =
lodash[funcName];\n\t      if (func =3D=3D=3D other) {\n\t        return =
true;\n\t      }\n\t      var data =3D getData(other);\n\t      return =
!!data &amp;&amp; func =3D=3D=3D data[0];\n\t    }\n\n\t    /**\n\t     =
* Checks if `value` is a valid array-like length.\n\t     *\n\t     * =
**Note:** This function is based on =
[`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n=
\t     *\n\t     * @private\n\t     * @param {*} value The value to =
check.\n\t     * @returns {boolean} Returns `true` if `value` is a valid =
length, else `false`.\n\t     */\n\t    function isLength(value) {\n\t   =
   return typeof value =3D=3D 'number' &amp;&amp; value &gt; -1 =
&amp;&amp; value % 1 =3D=3D 0 &amp;&amp; value &lt;=3D =
MAX_SAFE_INTEGER;\n\t    }\n\n\t    /**\n\t     * Checks if `value` is =
suitable for strict equality comparisons, i.e. `=3D=3D=3D`.\n\t     =
*\n\t     * @private\n\t     * @param {*} value The value to check.\n\t  =
   * @returns {boolean} Returns `true` if `value` if suitable for =
strict\n\t     *  equality comparisons, else `false`.\n\t     */\n\t    =
function isStrictComparable(value) {\n\t      return value =3D=3D=3D =
value &amp;&amp; !isObject(value);\n\t    }\n\n\t    /**\n\t     * =
Merges the function metadata of `source` into `data`.\n\t     *\n\t     =
* Merging metadata reduces the number of wrappers required to invoke a =
function.\n\t     * This is possible because methods like `_.bind`, =
`_.curry`, and `_.partial`\n\t     * may be applied regardless of =
execution order. Methods like `_.ary` and `_.rearg`\n\t     * augment =
function arguments, making the order in which they are executed =
important,\n\t     * preventing the merging of metadata. However, we =
make an exception for a safe\n\t     * common case where curried =
functions have `_.ary` and or `_.rearg` applied.\n\t     *\n\t     * =
@private\n\t     * @param {Array} data The destination metadata.\n\t     =
* @param {Array} source The source metadata.\n\t     * @returns {Array} =
Returns `data`.\n\t     */\n\t    function mergeData(data, source) {\n\t =
     var bitmask =3D data[1],\n\t          srcBitmask =3D source[1],\n\t =
         newBitmask =3D bitmask | srcBitmask,\n\t          isCommon =3D =
newBitmask &lt; ARY_FLAG;\n\n\t      var isCombo =3D\n\t        =
(srcBitmask =3D=3D ARY_FLAG &amp;&amp; bitmask =3D=3D CURRY_FLAG) ||\n\t =
       (srcBitmask =3D=3D ARY_FLAG &amp;&amp; bitmask =3D=3D REARG_FLAG =
&amp;&amp; data[7].length &lt;=3D source[8]) ||\n\t        (srcBitmask =
=3D=3D (ARY_FLAG | REARG_FLAG) &amp;&amp; bitmask =3D=3D =
CURRY_FLAG);\n\n\t      // Exit early if metadata can't be merged.\n\t   =
   if (!(isCommon || isCombo)) {\n\t        return data;\n\t      }\n\t  =
    // Use source `thisArg` if available.\n\t      if (srcBitmask &amp; =
BIND_FLAG) {\n\t        data[2] =3D source[2];\n\t        // Set when =
currying a bound function.\n\t        newBitmask |=3D (bitmask &amp; =
BIND_FLAG) ? 0 : CURRY_BOUND_FLAG;\n\t      }\n\t      // Compose =
partial arguments.\n\t      var value =3D source[3];\n\t      if (value) =
{\n\t        var partials =3D data[3];\n\t        data[3] =3D partials ? =
composeArgs(partials, value, source[4]) : arrayCopy(value);\n\t        =
data[4] =3D partials ? replaceHolders(data[3], PLACEHOLDER) : =
arrayCopy(source[4]);\n\t      }\n\t      // Compose partial right =
arguments.\n\t      value =3D source[5];\n\t      if (value) {\n\t       =
 partials =3D data[5];\n\t        data[5] =3D partials ? =
composeArgsRight(partials, value, source[6]) : arrayCopy(value);\n\t     =
   data[6] =3D partials ? replaceHolders(data[5], PLACEHOLDER) : =
arrayCopy(source[6]);\n\t      }\n\t      // Use source `argPos` if =
available.\n\t      value =3D source[7];\n\t      if (value) {\n\t       =
 data[7] =3D arrayCopy(value);\n\t      }\n\t      // Use source `ary` =
if it's smaller.\n\t      if (srcBitmask &amp; ARY_FLAG) {\n\t        =
data[8] =3D data[8] =3D=3D null ? source[8] : nativeMin(data[8], =
source[8]);\n\t      }\n\t      // Use source `arity` if one is not =
provided.\n\t      if (data[9] =3D=3D null) {\n\t        data[9] =3D =
source[9];\n\t      }\n\t      // Use source `func` and merge =
bitmasks.\n\t      data[0] =3D source[0];\n\t      data[1] =3D =
newBitmask;\n\n\t      return data;\n\t    }\n\n\t    /**\n\t     * Used =
by `_.defaultsDeep` to customize its `_.merge` use.\n\t     *\n\t     * =
@private\n\t     * @param {*} objectValue The destination object =
property value.\n\t     * @param {*} sourceValue The source object =
property value.\n\t     * @returns {*} Returns the value to assign to =
the destination object.\n\t     */\n\t    function =
mergeDefaults(objectValue, sourceValue) {\n\t      return objectValue =
=3D=3D=3D undefined ? sourceValue : merge(objectValue, sourceValue, =
mergeDefaults);\n\t    }\n\n\t    /**\n\t     * A specialized version of =
`_.pick` which picks `object` properties specified\n\t     * by =
`props`.\n\t     *\n\t     * @private\n\t     * @param {Object} object =
The source object.\n\t     * @param {string[]} props The property names =
to pick.\n\t     * @returns {Object} Returns the new object.\n\t     =
*/\n\t    function pickByArray(object, props) {\n\t      object =3D =
toObject(object);\n\n\t      var index =3D -1,\n\t          length =3D =
props.length,\n\t          result =3D {};\n\n\t      while (++index &lt; =
length) {\n\t        var key =3D props[index];\n\t        if (key in =
object) {\n\t          result[key] =3D object[key];\n\t        }\n\t     =
 }\n\t      return result;\n\t    }\n\n\t    /**\n\t     * A specialized =
version of `_.pick` which picks `object` properties `predicate`\n\t     =
* returns truthy for.\n\t     *\n\t     * @private\n\t     * @param =
{Object} object The source object.\n\t     * @param {Function} predicate =
The function invoked per iteration.\n\t     * @returns {Object} Returns =
the new object.\n\t     */\n\t    function pickByCallback(object, =
predicate) {\n\t      var result =3D {};\n\t      baseForIn(object, =
function(value, key, object) {\n\t        if (predicate(value, key, =
object)) {\n\t          result[key] =3D value;\n\t        }\n\t      =
});\n\t      return result;\n\t    }\n\n\t    /**\n\t     * Reorder =
`array` according to the specified indexes where the element at\n\t     =
* the first index is assigned as the first element, the element at\n\t   =
  * the second index is assigned as the second element, and so on.\n\t   =
  *\n\t     * @private\n\t     * @param {Array} array The array to =
reorder.\n\t     * @param {Array} indexes The arranged array =
indexes.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    =
function reorder(array, indexes) {\n\t      var arrLength =3D =
array.length,\n\t          length =3D nativeMin(indexes.length, =
arrLength),\n\t          oldArray =3D arrayCopy(array);\n\n\t      while =
(length--) {\n\t        var index =3D indexes[length];\n\t        =
array[length] =3D isIndex(index, arrLength) ? oldArray[index] : =
undefined;\n\t      }\n\t      return array;\n\t    }\n\n\t    /**\n\t   =
  * Sets metadata for `func`.\n\t     *\n\t     * **Note:** If this =
function becomes hot, i.e. is invoked a lot in a short\n\t     * period =
of time, it will trip its breaker and transition to an identity =
function\n\t     * to avoid garbage collection pauses in V8. See [V8 =
issue 2070](https://code.google.com/p/v8/issues/detail?id=3D2070)\n\t    =
 * for more details.\n\t     *\n\t     * @private\n\t     * @param =
{Function} func The function to associate metadata with.\n\t     * =
@param {*} data The metadata.\n\t     * @returns {Function} Returns =
`func`.\n\t     */\n\t    var setData =3D (function() {\n\t      var =
count =3D 0,\n\t          lastCalled =3D 0;\n\n\t      return =
function(key, value) {\n\t        var stamp =3D now(),\n\t            =
remaining =3D HOT_SPAN - (stamp - lastCalled);\n\n\t        lastCalled =
=3D stamp;\n\t        if (remaining &gt; 0) {\n\t          if (++count =
&gt;=3D HOT_COUNT) {\n\t            return key;\n\t          }\n\t       =
 } else {\n\t          count =3D 0;\n\t        }\n\t        return =
baseSetData(key, value);\n\t      };\n\t    }());\n\n\t    /**\n\t     * =
A fallback implementation of `Object.keys` which creates an array of =
the\n\t     * own enumerable property names of `object`.\n\t     *\n\t   =
  * @private\n\t     * @param {Object} object The object to query.\n\t   =
  * @returns {Array} Returns the array of property names.\n\t     */\n\t =
   function shimKeys(object) {\n\t      var props =3D =
keysIn(object),\n\t          propsLength =3D props.length,\n\t          =
length =3D propsLength &amp;&amp; object.length;\n\n\t      var =
allowIndexes =3D !!length &amp;&amp; isLength(length) &amp;&amp;\n\t     =
   (isArray(object) || isArguments(object));\n\n\t      var index =3D =
-1,\n\t          result =3D [];\n\n\t      while (++index &lt; =
propsLength) {\n\t        var key =3D props[index];\n\t        if =
((allowIndexes &amp;&amp; isIndex(key, length)) || =
hasOwnProperty.call(object, key)) {\n\t          result.push(key);\n\t   =
     }\n\t      }\n\t      return result;\n\t    }\n\n\t    /**\n\t     =
* Converts `value` to an array-like object if it's not one.\n\t     =
*\n\t     * @private\n\t     * @param {*} value The value to =
process.\n\t     * @returns {Array|Object} Returns the array-like =
object.\n\t     */\n\t    function toIterable(value) {\n\t      if =
(value =3D=3D null) {\n\t        return [];\n\t      }\n\t      if =
(!isArrayLike(value)) {\n\t        return values(value);\n\t      }\n\t  =
    return isObject(value) ? value : Object(value);\n\t    }\n\n\t    =
/**\n\t     * Converts `value` to an object if it's not one.\n\t     =
*\n\t     * @private\n\t     * @param {*} value The value to =
process.\n\t     * @returns {Object} Returns the object.\n\t     */\n\t  =
  function toObject(value) {\n\t      return isObject(value) ? value : =
Object(value);\n\t    }\n\n\t    /**\n\t     * Converts `value` to =
property path array if it's not one.\n\t     *\n\t     * @private\n\t    =
 * @param {*} value The value to process.\n\t     * @returns {Array} =
Returns the property path array.\n\t     */\n\t    function =
toPath(value) {\n\t      if (isArray(value)) {\n\t        return =
value;\n\t      }\n\t      var result =3D [];\n\t      =
baseToString(value).replace(rePropName, function(match, number, quote, =
string) {\n\t        result.push(quote ? string.replace(reEscapeChar, =
'$1') : (number || match));\n\t      });\n\t      return result;\n\t    =
}\n\n\t    /**\n\t     * Creates a clone of `wrapper`.\n\t     *\n\t     =
* @private\n\t     * @param {Object} wrapper The wrapper to clone.\n\t   =
  * @returns {Object} Returns the cloned wrapper.\n\t     */\n\t    =
function wrapperClone(wrapper) {\n\t      return wrapper instanceof =
LazyWrapper\n\t        ? wrapper.clone()\n\t        : new =
LodashWrapper(wrapper.__wrapped__, wrapper.__chain__, =
arrayCopy(wrapper.__actions__));\n\t    }\n\n\t    =
/*-----------------------------------------------------------------------=
-*/\n\n\t    /**\n\t     * Creates an array of elements split into =
groups the length of `size`.\n\t     * If `collection` can't be split =
evenly, the final chunk will be the remaining\n\t     * elements.\n\t    =
 *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t =
    * @param {Array} array The array to process.\n\t     * @param =
{number} [size=3D1] The length of each chunk.\n\t     * @param- {Object} =
[guard] Enables use as a callback for functions like `_.map`.\n\t     * =
@returns {Array} Returns the new array containing chunks.\n\t     * =
@example\n\t     *\n\t     * _.chunk(['a', 'b', 'c', 'd'], 2);\n\t     * =
// =3D&gt; [['a', 'b'], ['c', 'd']]\n\t     *\n\t     * _.chunk(['a', =
'b', 'c', 'd'], 3);\n\t     * // =3D&gt; [['a', 'b', 'c'], ['d']]\n\t    =
 */\n\t    function chunk(array, size, guard) {\n\t      if (guard ? =
isIterateeCall(array, size, guard) : size =3D=3D null) {\n\t        size =
=3D 1;\n\t      } else {\n\t        size =3D nativeMax(nativeFloor(size) =
|| 1, 1);\n\t      }\n\t      var index =3D 0,\n\t          length =3D =
array ? array.length : 0,\n\t          resIndex =3D -1,\n\t          =
result =3D Array(nativeCeil(length / size));\n\n\t      while (index =
&lt; length) {\n\t        result[++resIndex] =3D baseSlice(array, index, =
(index +=3D size));\n\t      }\n\t      return result;\n\t    }\n\n\t    =
/**\n\t     * Creates an array with all falsey values removed. The =
values `false`, `null`,\n\t     * `0`, `\"\"`, `undefined`, and `NaN` =
are falsey.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * =
@category Array\n\t     * @param {Array} array The array to compact.\n\t =
    * @returns {Array} Returns the new array of filtered values.\n\t     =
* @example\n\t     *\n\t     * _.compact([0, 1, false, 2, '', 3]);\n\t   =
  * // =3D&gt; [1, 2, 3]\n\t     */\n\t    function compact(array) {\n\t =
     var index =3D -1,\n\t          length =3D array ? array.length : =
0,\n\t          resIndex =3D -1,\n\t          result =3D [];\n\n\t      =
while (++index &lt; length) {\n\t        var value =3D array[index];\n\t =
       if (value) {\n\t          result[++resIndex] =3D value;\n\t       =
 }\n\t      }\n\t      return result;\n\t    }\n\n\t    /**\n\t     * =
Creates an array of unique `array` values not included in the other\n\t  =
   * provided arrays using =
[`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-sameval=
uezero)\n\t     * for equality comparisons.\n\t     *\n\t     * =
@static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param =
{Array} array The array to inspect.\n\t     * @param {...Array} [values] =
The arrays of values to exclude.\n\t     * @returns {Array} Returns the =
new array of filtered values.\n\t     * @example\n\t     *\n\t     * =
_.difference([1, 2, 3], [4, 2]);\n\t     * // =3D&gt; [1, 3]\n\t     =
*/\n\t    var difference =3D restParam(function(array, values) {\n\t     =
 return (isObjectLike(array) &amp;&amp; isArrayLike(array))\n\t        ? =
baseDifference(array, baseFlatten(values, false, true))\n\t        : =
[];\n\t    });\n\n\t    /**\n\t     * Creates a slice of `array` with =
`n` elements dropped from the beginning.\n\t     *\n\t     * @static\n\t =
    * @memberOf _\n\t     * @category Array\n\t     * @param {Array} =
array The array to query.\n\t     * @param {number} [n=3D1] The number =
of elements to drop.\n\t     * @param- {Object} [guard] Enables use as a =
callback for functions like `_.map`.\n\t     * @returns {Array} Returns =
the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.drop([1, =
2, 3]);\n\t     * // =3D&gt; [2, 3]\n\t     *\n\t     * _.drop([1, 2, =
3], 2);\n\t     * // =3D&gt; [3]\n\t     *\n\t     * _.drop([1, 2, 3], =
5);\n\t     * // =3D&gt; []\n\t     *\n\t     * _.drop([1, 2, 3], =
0);\n\t     * // =3D&gt; [1, 2, 3]\n\t     */\n\t    function =
drop(array, n, guard) {\n\t      var length =3D array ? array.length : =
0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if =
(guard ? isIterateeCall(array, n, guard) : n =3D=3D null) {\n\t        n =
=3D 1;\n\t      }\n\t      return baseSlice(array, n &lt; 0 ? 0 : =
n);\n\t    }\n\n\t    /**\n\t     * Creates a slice of `array` with `n` =
elements dropped from the end.\n\t     *\n\t     * @static\n\t     * =
@memberOf _\n\t     * @category Array\n\t     * @param {Array} array The =
array to query.\n\t     * @param {number} [n=3D1] The number of elements =
to drop.\n\t     * @param- {Object} [guard] Enables use as a callback =
for functions like `_.map`.\n\t     * @returns {Array} Returns the slice =
of `array`.\n\t     * @example\n\t     *\n\t     * _.dropRight([1, 2, =
3]);\n\t     * // =3D&gt; [1, 2]\n\t     *\n\t     * _.dropRight([1, 2, =
3], 2);\n\t     * // =3D&gt; [1]\n\t     *\n\t     * _.dropRight([1, 2, =
3], 5);\n\t     * // =3D&gt; []\n\t     *\n\t     * _.dropRight([1, 2, =
3], 0);\n\t     * // =3D&gt; [1, 2, 3]\n\t     */\n\t    function =
dropRight(array, n, guard) {\n\t      var length =3D array ? =
array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      =
}\n\t      if (guard ? isIterateeCall(array, n, guard) : n =3D=3D null) =
{\n\t        n =3D 1;\n\t      }\n\t      n =3D length - (+n || 0);\n\t  =
    return baseSlice(array, 0, n &lt; 0 ? 0 : n);\n\t    }\n\n\t    =
/**\n\t     * Creates a slice of `array` excluding elements dropped from =
the end.\n\t     * Elements are dropped until `predicate` returns =
falsey. The predicate is\n\t     * bound to `thisArg` and invoked with =
three arguments: (value, index, array).\n\t     *\n\t     * If a =
property name is provided for `predicate` the created `_.property`\n\t   =
  * style callback returns the property value of the given element.\n\t  =
   *\n\t     * If a value is also provided for `thisArg` the created =
`_.matchesProperty`\n\t     * style callback returns `true` for elements =
that have a matching property\n\t     * value, else `false`.\n\t     =
*\n\t     * If an object is provided for `predicate` the created =
`_.matches` style\n\t     * callback returns `true` for elements that =
match the properties of the given\n\t     * object, else `false`.\n\t    =
 *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t =
    * @param {Array} array The array to query.\n\t     * @param =
{Function|Object|string} [predicate=3D_.identity] The function =
invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The =
`this` binding of `predicate`.\n\t     * @returns {Array} Returns the =
slice of `array`.\n\t     * @example\n\t     *\n\t     * =
_.dropRightWhile([1, 2, 3], function(n) {\n\t     *   return n &gt; =
1;\n\t     * });\n\t     * // =3D&gt; [1]\n\t     *\n\t     * var users =
=3D [\n\t     *   { 'user': 'barney',  'active': true },\n\t     *   { =
'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', =
'active': false }\n\t     * ];\n\t     *\n\t     * // using the =
`_.matches` callback shorthand\n\t     * _.pluck(_.dropRightWhile(users, =
{ 'user': 'pebbles', 'active': false }), 'user');\n\t     * // =3D&gt; =
['barney', 'fred']\n\t     *\n\t     * // using the `_.matchesProperty` =
callback shorthand\n\t     * _.pluck(_.dropRightWhile(users, 'active', =
false), 'user');\n\t     * // =3D&gt; ['barney']\n\t     *\n\t     * // =
using the `_.property` callback shorthand\n\t     * =
_.pluck(_.dropRightWhile(users, 'active'), 'user');\n\t     * // =3D&gt; =
['barney', 'fred', 'pebbles']\n\t     */\n\t    function =
dropRightWhile(array, predicate, thisArg) {\n\t      return (array =
&amp;&amp; array.length)\n\t        ? baseWhile(array, =
getCallback(predicate, thisArg, 3), true, true)\n\t        : [];\n\t    =
}\n\n\t    /**\n\t     * Creates a slice of `array` excluding elements =
dropped from the beginning.\n\t     * Elements are dropped until =
`predicate` returns falsey. The predicate is\n\t     * bound to =
`thisArg` and invoked with three arguments: (value, index, array).\n\t   =
  *\n\t     * If a property name is provided for `predicate` the created =
`_.property`\n\t     * style callback returns the property value of the =
given element.\n\t     *\n\t     * If a value is also provided for =
`thisArg` the created `_.matchesProperty`\n\t     * style callback =
returns `true` for elements that have a matching property\n\t     * =
value, else `false`.\n\t     *\n\t     * If an object is provided for =
`predicate` the created `_.matches` style\n\t     * callback returns =
`true` for elements that have the properties of the given\n\t     * =
object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf =
_\n\t     * @category Array\n\t     * @param {Array} array The array to =
query.\n\t     * @param {Function|Object|string} =
[predicate=3D_.identity] The function invoked\n\t     *  per =
iteration.\n\t     * @param {*} [thisArg] The `this` binding of =
`predicate`.\n\t     * @returns {Array} Returns the slice of =
`array`.\n\t     * @example\n\t     *\n\t     * _.dropWhile([1, 2, 3], =
function(n) {\n\t     *   return n &lt; 3;\n\t     * });\n\t     * // =
=3D&gt; [3]\n\t     *\n\t     * var users =3D [\n\t     *   { 'user': =
'barney',  'active': false },\n\t     *   { 'user': 'fred',    'active': =
false },\n\t     *   { 'user': 'pebbles', 'active': true }\n\t     * =
];\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t   =
  * _.pluck(_.dropWhile(users, { 'user': 'barney', 'active': false }), =
'user');\n\t     * // =3D&gt; ['fred', 'pebbles']\n\t     *\n\t     * // =
using the `_.matchesProperty` callback shorthand\n\t     * =
_.pluck(_.dropWhile(users, 'active', false), 'user');\n\t     * // =
=3D&gt; ['pebbles']\n\t     *\n\t     * // using the `_.property` =
callback shorthand\n\t     * _.pluck(_.dropWhile(users, 'active'), =
'user');\n\t     * // =3D&gt; ['barney', 'fred', 'pebbles']\n\t     =
*/\n\t    function dropWhile(array, predicate, thisArg) {\n\t      =
return (array &amp;&amp; array.length)\n\t        ? baseWhile(array, =
getCallback(predicate, thisArg, 3), true)\n\t        : [];\n\t    =
}\n\n\t    /**\n\t     * Fills elements of `array` with `value` from =
`start` up to, but not\n\t     * including, `end`.\n\t     *\n\t     * =
**Note:** This method mutates `array`.\n\t     *\n\t     * @static\n\t   =
  * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array =
The array to fill.\n\t     * @param {*} value The value to fill `array` =
with.\n\t     * @param {number} [start=3D0] The start position.\n\t     =
* @param {number} [end=3Darray.length] The end position.\n\t     * =
@returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * =
var array =3D [1, 2, 3];\n\t     *\n\t     * _.fill(array, 'a');\n\t     =
* console.log(array);\n\t     * // =3D&gt; ['a', 'a', 'a']\n\t     *\n\t =
    * _.fill(Array(3), 2);\n\t     * // =3D&gt; [2, 2, 2]\n\t     *\n\t  =
   * _.fill([4, 6, 8], '*', 1, 2);\n\t     * // =3D&gt; [4, '*', 8]\n\t  =
   */\n\t    function fill(array, value, start, end) {\n\t      var =
length =3D array ? array.length : 0;\n\t      if (!length) {\n\t        =
return [];\n\t      }\n\t      if (start &amp;&amp; typeof start !=3D =
'number' &amp;&amp; isIterateeCall(array, value, start)) {\n\t        =
start =3D 0;\n\t        end =3D length;\n\t      }\n\t      return =
baseFill(array, value, start, end);\n\t    }\n\n\t    /**\n\t     * This =
method is like `_.find` except that it returns the index of the =
first\n\t     * element `predicate` returns truthy for instead of the =
element itself.\n\t     *\n\t     * If a property name is provided for =
`predicate` the created `_.property`\n\t     * style callback returns =
the property value of the given element.\n\t     *\n\t     * If a value =
is also provided for `thisArg` the created `_.matchesProperty`\n\t     * =
style callback returns `true` for elements that have a matching =
property\n\t     * value, else `false`.\n\t     *\n\t     * If an object =
is provided for `predicate` the created `_.matches` style\n\t     * =
callback returns `true` for elements that have the properties of the =
given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t    =
 * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array =
The array to search.\n\t     * @param {Function|Object|string} =
[predicate=3D_.identity] The function invoked\n\t     *  per =
iteration.\n\t     * @param {*} [thisArg] The `this` binding of =
`predicate`.\n\t     * @returns {number} Returns the index of the found =
element, else `-1`.\n\t     * @example\n\t     *\n\t     * var users =3D =
[\n\t     *   { 'user': 'barney',  'active': false },\n\t     *   { =
'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', =
'active': true }\n\t     * ];\n\t     *\n\t     * _.findIndex(users, =
function(chr) {\n\t     *   return chr.user =3D=3D 'barney';\n\t     * =
});\n\t     * // =3D&gt; 0\n\t     *\n\t     * // using the `_.matches` =
callback shorthand\n\t     * _.findIndex(users, { 'user': 'fred', =
'active': false });\n\t     * // =3D&gt; 1\n\t     *\n\t     * // using =
the `_.matchesProperty` callback shorthand\n\t     * _.findIndex(users, =
'active', false);\n\t     * // =3D&gt; 0\n\t     *\n\t     * // using =
the `_.property` callback shorthand\n\t     * _.findIndex(users, =
'active');\n\t     * // =3D&gt; 2\n\t     */\n\t    var findIndex =3D =
createFindIndex();\n\n\t    /**\n\t     * This method is like =
`_.findIndex` except that it iterates over elements\n\t     * of =
`collection` from right to left.\n\t     *\n\t     * If a property name =
is provided for `predicate` the created `_.property`\n\t     * style =
callback returns the property value of the given element.\n\t     *\n\t  =
   * If a value is also provided for `thisArg` the created =
`_.matchesProperty`\n\t     * style callback returns `true` for elements =
that have a matching property\n\t     * value, else `false`.\n\t     =
*\n\t     * If an object is provided for `predicate` the created =
`_.matches` style\n\t     * callback returns `true` for elements that =
have the properties of the given\n\t     * object, else `false`.\n\t     =
*\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t  =
   * @param {Array} array The array to search.\n\t     * @param =
{Function|Object|string} [predicate=3D_.identity] The function =
invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The =
`this` binding of `predicate`.\n\t     * @returns {number} Returns the =
index of the found element, else `-1`.\n\t     * @example\n\t     *\n\t  =
   * var users =3D [\n\t     *   { 'user': 'barney',  'active': true =
},\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { =
'user': 'pebbles', 'active': false }\n\t     * ];\n\t     *\n\t     * =
_.findLastIndex(users, function(chr) {\n\t     *   return chr.user =
=3D=3D 'pebbles';\n\t     * });\n\t     * // =3D&gt; 2\n\t     *\n\t     =
* // using the `_.matches` callback shorthand\n\t     * =
_.findLastIndex(users, { 'user': 'barney', 'active': true });\n\t     * =
// =3D&gt; 0\n\t     *\n\t     * // using the `_.matchesProperty` =
callback shorthand\n\t     * _.findLastIndex(users, 'active', =
false);\n\t     * // =3D&gt; 2\n\t     *\n\t     * // using the =
`_.property` callback shorthand\n\t     * _.findLastIndex(users, =
'active');\n\t     * // =3D&gt; 0\n\t     */\n\t    var findLastIndex =
=3D createFindIndex(true);\n\n\t    /**\n\t     * Gets the first element =
of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * =
@alias head\n\t     * @category Array\n\t     * @param {Array} array The =
array to query.\n\t     * @returns {*} Returns the first element of =
`array`.\n\t     * @example\n\t     *\n\t     * _.first([1, 2, 3]);\n\t  =
   * // =3D&gt; 1\n\t     *\n\t     * _.first([]);\n\t     * // =3D&gt; =
undefined\n\t     */\n\t    function first(array) {\n\t      return =
array ? array[0] : undefined;\n\t    }\n\n\t    /**\n\t     * Flattens a =
nested array. If `isDeep` is `true` the array is recursively\n\t     * =
flattened, otherwise it is only flattened a single level.\n\t     *\n\t  =
   * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * =
@param {Array} array The array to flatten.\n\t     * @param {boolean} =
[isDeep] Specify a deep flatten.\n\t     * @param- {Object} [guard] =
Enables use as a callback for functions like `_.map`.\n\t     * @returns =
{Array} Returns the new flattened array.\n\t     * @example\n\t     =
*\n\t     * _.flatten([1, [2, 3, [4]]]);\n\t     * // =3D&gt; [1, 2, 3, =
[4]]\n\t     *\n\t     * // using `isDeep`\n\t     * _.flatten([1, [2, =
3, [4]]], true);\n\t     * // =3D&gt; [1, 2, 3, 4]\n\t     */\n\t    =
function flatten(array, isDeep, guard) {\n\t      var length =3D array ? =
array.length : 0;\n\t      if (guard &amp;&amp; isIterateeCall(array, =
isDeep, guard)) {\n\t        isDeep =3D false;\n\t      }\n\t      =
return length ? baseFlatten(array, isDeep) : [];\n\t    }\n\n\t    =
/**\n\t     * Recursively flattens a nested array.\n\t     *\n\t     * =
@static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param =
{Array} array The array to recursively flatten.\n\t     * @returns =
{Array} Returns the new flattened array.\n\t     * @example\n\t     =
*\n\t     * _.flattenDeep([1, [2, 3, [4]]]);\n\t     * // =3D&gt; [1, 2, =
3, 4]\n\t     */\n\t    function flattenDeep(array) {\n\t      var =
length =3D array ? array.length : 0;\n\t      return length ? =
baseFlatten(array, true) : [];\n\t    }\n\n\t    /**\n\t     * Gets the =
index at which the first occurrence of `value` is found in `array`\n\t   =
  * using =
[`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-sameval=
uezero)\n\t     * for equality comparisons. If `fromIndex` is negative, =
it is used as the offset\n\t     * from the end of `array`. If `array` =
is sorted providing `true` for `fromIndex`\n\t     * performs a faster =
binary search.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     =
* @category Array\n\t     * @param {Array} array The array to =
search.\n\t     * @param {*} value The value to search for.\n\t     * =
@param {boolean|number} [fromIndex=3D0] The index to search from or =
`true`\n\t     *  to perform a binary search on a sorted array.\n\t     =
* @returns {number} Returns the index of the matched value, else =
`-1`.\n\t     * @example\n\t     *\n\t     * _.indexOf([1, 2, 1, 2], =
2);\n\t     * // =3D&gt; 1\n\t     *\n\t     * // using `fromIndex`\n\t  =
   * _.indexOf([1, 2, 1, 2], 2, 2);\n\t     * // =3D&gt; 3\n\t     *\n\t =
    * // performing a binary search\n\t     * _.indexOf([1, 1, 2, 2], 2, =
true);\n\t     * // =3D&gt; 2\n\t     */\n\t    function indexOf(array, =
value, fromIndex) {\n\t      var length =3D array ? array.length : =
0;\n\t      if (!length) {\n\t        return -1;\n\t      }\n\t      if =
(typeof fromIndex =3D=3D 'number') {\n\t        fromIndex =3D fromIndex =
&lt; 0 ? nativeMax(length + fromIndex, 0) : fromIndex;\n\t      } else =
if (fromIndex) {\n\t        var index =3D binaryIndex(array, value);\n\t =
       if (index &lt; length &amp;&amp;\n\t            (value =3D=3D=3D =
value ? (value =3D=3D=3D array[index]) : (array[index] !=3D=3D =
array[index]))) {\n\t          return index;\n\t        }\n\t        =
return -1;\n\t      }\n\t      return baseIndexOf(array, value, =
fromIndex || 0);\n\t    }\n\n\t    /**\n\t     * Gets all but the last =
element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf =
_\n\t     * @category Array\n\t     * @param {Array} array The array to =
query.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     =
* @example\n\t     *\n\t     * _.initial([1, 2, 3]);\n\t     * // =
=3D&gt; [1, 2]\n\t     */\n\t    function initial(array) {\n\t      =
return dropRight(array, 1);\n\t    }\n\n\t    /**\n\t     * Creates an =
array of unique values that are included in all of the provided\n\t     =
* arrays using =
[`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-sameval=
uezero)\n\t     * for equality comparisons.\n\t     *\n\t     * =
@static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param =
{...Array} [arrays] The arrays to inspect.\n\t     * @returns {Array} =
Returns the new array of shared values.\n\t     * @example\n\t     * =
_.intersection([1, 2], [4, 2], [2, 1]);\n\t     * // =3D&gt; [2]\n\t     =
*/\n\t    var intersection =3D restParam(function(arrays) {\n\t      var =
othLength =3D arrays.length,\n\t          othIndex =3D othLength,\n\t    =
      caches =3D Array(length),\n\t          indexOf =3D =
getIndexOf(),\n\t          isCommon =3D indexOf =3D=3D baseIndexOf,\n\t  =
        result =3D [];\n\n\t      while (othIndex--) {\n\t        var =
value =3D arrays[othIndex] =3D isArrayLike(value =3D arrays[othIndex]) ? =
value : [];\n\t        caches[othIndex] =3D (isCommon &amp;&amp; =
value.length &gt;=3D 120) ? createCache(othIndex &amp;&amp; value) : =
null;\n\t      }\n\t      var array =3D arrays[0],\n\t          index =
=3D -1,\n\t          length =3D array ? array.length : 0,\n\t          =
seen =3D caches[0];\n\n\t      outer:\n\t      while (++index &lt; =
length) {\n\t        value =3D array[index];\n\t        if ((seen ? =
cacheIndexOf(seen, value) : indexOf(result, value, 0)) &lt; 0) {\n\t     =
     var othIndex =3D othLength;\n\t          while (--othIndex) {\n\t   =
         var cache =3D caches[othIndex];\n\t            if ((cache ? =
cacheIndexOf(cache, value) : indexOf(arrays[othIndex], value, 0)) &lt; =
0) {\n\t              continue outer;\n\t            }\n\t          =
}\n\t          if (seen) {\n\t            seen.push(value);\n\t          =
}\n\t          result.push(value);\n\t        }\n\t      }\n\t      =
return result;\n\t    });\n\n\t    /**\n\t     * Gets the last element =
of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * =
@category Array\n\t     * @param {Array} array The array to query.\n\t   =
  * @returns {*} Returns the last element of `array`.\n\t     * =
@example\n\t     *\n\t     * _.last([1, 2, 3]);\n\t     * // =3D&gt; =
3\n\t     */\n\t    function last(array) {\n\t      var length =3D array =
? array.length : 0;\n\t      return length ? array[length - 1] : =
undefined;\n\t    }\n\n\t    /**\n\t     * This method is like =
`_.indexOf` except that it iterates over elements of\n\t     * `array` =
from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf =
_\n\t     * @category Array\n\t     * @param {Array} array The array to =
search.\n\t     * @param {*} value The value to search for.\n\t     * =
@param {boolean|number} [fromIndex=3Darray.length-1] The index to search =
from\n\t     *  or `true` to perform a binary search on a sorted =
array.\n\t     * @returns {number} Returns the index of the matched =
value, else `-1`.\n\t     * @example\n\t     *\n\t     * =
_.lastIndexOf([1, 2, 1, 2], 2);\n\t     * // =3D&gt; 3\n\t     *\n\t     =
* // using `fromIndex`\n\t     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n\t  =
   * // =3D&gt; 1\n\t     *\n\t     * // performing a binary search\n\t  =
   * _.lastIndexOf([1, 1, 2, 2], 2, true);\n\t     * // =3D&gt; 3\n\t    =
 */\n\t    function lastIndexOf(array, value, fromIndex) {\n\t      var =
length =3D array ? array.length : 0;\n\t      if (!length) {\n\t        =
return -1;\n\t      }\n\t      var index =3D length;\n\t      if (typeof =
fromIndex =3D=3D 'number') {\n\t        index =3D (fromIndex &lt; 0 ? =
nativeMax(length + fromIndex, 0) : nativeMin(fromIndex || 0, length - =
1)) + 1;\n\t      } else if (fromIndex) {\n\t        index =3D =
binaryIndex(array, value, true) - 1;\n\t        var other =3D =
array[index];\n\t        if (value =3D=3D=3D value ? (value =3D=3D=3D =
other) : (other !=3D=3D other)) {\n\t          return index;\n\t        =
}\n\t        return -1;\n\t      }\n\t      if (value !=3D=3D value) =
{\n\t        return indexOfNaN(array, index, true);\n\t      }\n\t      =
while (index--) {\n\t        if (array[index] =3D=3D=3D value) {\n\t     =
     return index;\n\t        }\n\t      }\n\t      return -1;\n\t    =
}\n\n\t    /**\n\t     * Removes all provided values from `array` =
using\n\t     * =
[`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-sameval=
uezero)\n\t     * for equality comparisons.\n\t     *\n\t     * =
**Note:** Unlike `_.without`, this method mutates `array`.\n\t     *\n\t =
    * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * =
@param {Array} array The array to modify.\n\t     * @param {...*} =
[values] The values to remove.\n\t     * @returns {Array} Returns =
`array`.\n\t     * @example\n\t     *\n\t     * var array =3D [1, 2, 3, =
1, 2, 3];\n\t     *\n\t     * _.pull(array, 2, 3);\n\t     * =
console.log(array);\n\t     * // =3D&gt; [1, 1]\n\t     */\n\t    =
function pull() {\n\t      var args =3D arguments,\n\t          array =
=3D args[0];\n\n\t      if (!(array &amp;&amp; array.length)) {\n\t      =
  return array;\n\t      }\n\t      var index =3D 0,\n\t          =
indexOf =3D getIndexOf(),\n\t          length =3D args.length;\n\n\t     =
 while (++index &lt; length) {\n\t        var fromIndex =3D 0,\n\t       =
     value =3D args[index];\n\n\t        while ((fromIndex =3D =
indexOf(array, value, fromIndex)) &gt; -1) {\n\t          =
splice.call(array, fromIndex, 1);\n\t        }\n\t      }\n\t      =
return array;\n\t    }\n\n\t    /**\n\t     * Removes elements from =
`array` corresponding to the given indexes and returns\n\t     * an =
array of the removed elements. Indexes may be specified as an array =
of\n\t     * indexes or as individual arguments.\n\t     *\n\t     * =
**Note:** Unlike `_.at`, this method mutates `array`.\n\t     *\n\t     =
* @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * =
@param {Array} array The array to modify.\n\t     * @param =
{...(number|number[])} [indexes] The indexes of elements to remove,\n\t  =
   *  specified as individual indexes or arrays of indexes.\n\t     * =
@returns {Array} Returns the new array of removed elements.\n\t     * =
@example\n\t     *\n\t     * var array =3D [5, 10, 15, 20];\n\t     * =
var evens =3D _.pullAt(array, 1, 3);\n\t     *\n\t     * =
console.log(array);\n\t     * // =3D&gt; [5, 15]\n\t     *\n\t     * =
console.log(evens);\n\t     * // =3D&gt; [10, 20]\n\t     */\n\t    var =
pullAt =3D restParam(function(array, indexes) {\n\t      indexes =3D =
baseFlatten(indexes);\n\n\t      var result =3D baseAt(array, =
indexes);\n\t      basePullAt(array, =
indexes.sort(baseCompareAscending));\n\t      return result;\n\t    =
});\n\n\t    /**\n\t     * Removes all elements from `array` that =
`predicate` returns truthy for\n\t     * and returns an array of the =
removed elements. The predicate is bound to\n\t     * `thisArg` and =
invoked with three arguments: (value, index, array).\n\t     *\n\t     * =
If a property name is provided for `predicate` the created =
`_.property`\n\t     * style callback returns the property value of the =
given element.\n\t     *\n\t     * If a value is also provided for =
`thisArg` the created `_.matchesProperty`\n\t     * style callback =
returns `true` for elements that have a matching property\n\t     * =
value, else `false`.\n\t     *\n\t     * If an object is provided for =
`predicate` the created `_.matches` style\n\t     * callback returns =
`true` for elements that have the properties of the given\n\t     * =
object, else `false`.\n\t     *\n\t     * **Note:** Unlike `_.filter`, =
this method mutates `array`.\n\t     *\n\t     * @static\n\t     * =
@memberOf _\n\t     * @category Array\n\t     * @param {Array} array The =
array to modify.\n\t     * @param {Function|Object|string} =
[predicate=3D_.identity] The function invoked\n\t     *  per =
iteration.\n\t     * @param {*} [thisArg] The `this` binding of =
`predicate`.\n\t     * @returns {Array} Returns the new array of removed =
elements.\n\t     * @example\n\t     *\n\t     * var array =3D [1, 2, 3, =
4];\n\t     * var evens =3D _.remove(array, function(n) {\n\t     *   =
return n % 2 =3D=3D 0;\n\t     * });\n\t     *\n\t     * =
console.log(array);\n\t     * // =3D&gt; [1, 3]\n\t     *\n\t     * =
console.log(evens);\n\t     * // =3D&gt; [2, 4]\n\t     */\n\t    =
function remove(array, predicate, thisArg) {\n\t      var result =3D =
[];\n\t      if (!(array &amp;&amp; array.length)) {\n\t        return =
result;\n\t      }\n\t      var index =3D -1,\n\t          indexes =3D =
[],\n\t          length =3D array.length;\n\n\t      predicate =3D =
getCallback(predicate, thisArg, 3);\n\t      while (++index &lt; length) =
{\n\t        var value =3D array[index];\n\t        if (predicate(value, =
index, array)) {\n\t          result.push(value);\n\t          =
indexes.push(index);\n\t        }\n\t      }\n\t      basePullAt(array, =
indexes);\n\t      return result;\n\t    }\n\n\t    /**\n\t     * Gets =
all but the first element of `array`.\n\t     *\n\t     * @static\n\t    =
 * @memberOf _\n\t     * @alias tail\n\t     * @category Array\n\t     * =
@param {Array} array The array to query.\n\t     * @returns {Array} =
Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * =
_.rest([1, 2, 3]);\n\t     * // =3D&gt; [2, 3]\n\t     */\n\t    =
function rest(array) {\n\t      return drop(array, 1);\n\t    }\n\n\t    =
/**\n\t     * Creates a slice of `array` from `start` up to, but not =
including, `end`.\n\t     *\n\t     * **Note:** This method is used =
instead of `Array#slice` to support node\n\t     * lists in IE &lt; 9 =
and to ensure dense arrays are returned.\n\t     *\n\t     * @static\n\t =
    * @memberOf _\n\t     * @category Array\n\t     * @param {Array} =
array The array to slice.\n\t     * @param {number} [start=3D0] The =
start position.\n\t     * @param {number} [end=3Darray.length] The end =
position.\n\t     * @returns {Array} Returns the slice of `array`.\n\t   =
  */\n\t    function slice(array, start, end) {\n\t      var length =3D =
array ? array.length : 0;\n\t      if (!length) {\n\t        return =
[];\n\t      }\n\t      if (end &amp;&amp; typeof end !=3D 'number' =
&amp;&amp; isIterateeCall(array, start, end)) {\n\t        start =3D =
0;\n\t        end =3D length;\n\t      }\n\t      return =
baseSlice(array, start, end);\n\t    }\n\n\t    /**\n\t     * Uses a =
binary search to determine the lowest index at which `value` should\n\t  =
   * be inserted into `array` in order to maintain its sort order. If an =
iteratee\n\t     * function is provided it is invoked for `value` and =
each element of `array`\n\t     * to compute their sort ranking. The =
iteratee is bound to `thisArg` and\n\t     * invoked with one argument; =
(value).\n\t     *\n\t     * If a property name is provided for =
`iteratee` the created `_.property`\n\t     * style callback returns the =
property value of the given element.\n\t     *\n\t     * If a value is =
also provided for `thisArg` the created `_.matchesProperty`\n\t     * =
style callback returns `true` for elements that have a matching =
property\n\t     * value, else `false`.\n\t     *\n\t     * If an object =
is provided for `iteratee` the created `_.matches` style\n\t     * =
callback returns `true` for elements that have the properties of the =
given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t    =
 * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array =
The sorted array to inspect.\n\t     * @param {*} value The value to =
evaluate.\n\t     * @param {Function|Object|string} =
[iteratee=3D_.identity] The function invoked\n\t     *  per =
iteration.\n\t     * @param {*} [thisArg] The `this` binding of =
`iteratee`.\n\t     * @returns {number} Returns the index at which =
`value` should be inserted\n\t     *  into `array`.\n\t     * =
@example\n\t     *\n\t     * _.sortedIndex([30, 50], 40);\n\t     * // =
=3D&gt; 1\n\t     *\n\t     * _.sortedIndex([4, 4, 5, 5], 5);\n\t     * =
// =3D&gt; 2\n\t     *\n\t     * var dict =3D { 'data': { 'thirty': 30, =
'forty': 40, 'fifty': 50 } };\n\t     *\n\t     * // using an iteratee =
function\n\t     * _.sortedIndex(['thirty', 'fifty'], 'forty', =
function(word) {\n\t     *   return this.data[word];\n\t     * }, =
dict);\n\t     * // =3D&gt; 1\n\t     *\n\t     * // using the =
`_.property` callback shorthand\n\t     * _.sortedIndex([{ 'x': 30 }, { =
'x': 50 }], { 'x': 40 }, 'x');\n\t     * // =3D&gt; 1\n\t     */\n\t    =
var sortedIndex =3D createSortedIndex();\n\n\t    /**\n\t     * This =
method is like `_.sortedIndex` except that it returns the highest\n\t    =
 * index at which `value` should be inserted into `array` in order =
to\n\t     * maintain its sort order.\n\t     *\n\t     * @static\n\t    =
 * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array =
The sorted array to inspect.\n\t     * @param {*} value The value to =
evaluate.\n\t     * @param {Function|Object|string} =
[iteratee=3D_.identity] The function invoked\n\t     *  per =
iteration.\n\t     * @param {*} [thisArg] The `this` binding of =
`iteratee`.\n\t     * @returns {number} Returns the index at which =
`value` should be inserted\n\t     *  into `array`.\n\t     * =
@example\n\t     *\n\t     * _.sortedLastIndex([4, 4, 5, 5], 5);\n\t     =
* // =3D&gt; 4\n\t     */\n\t    var sortedLastIndex =3D =
createSortedIndex(true);\n\n\t    /**\n\t     * Creates a slice of =
`array` with `n` elements taken from the beginning.\n\t     *\n\t     * =
@static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param =
{Array} array The array to query.\n\t     * @param {number} [n=3D1] The =
number of elements to take.\n\t     * @param- {Object} [guard] Enables =
use as a callback for functions like `_.map`.\n\t     * @returns {Array} =
Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * =
_.take([1, 2, 3]);\n\t     * // =3D&gt; [1]\n\t     *\n\t     * =
_.take([1, 2, 3], 2);\n\t     * // =3D&gt; [1, 2]\n\t     *\n\t     * =
_.take([1, 2, 3], 5);\n\t     * // =3D&gt; [1, 2, 3]\n\t     *\n\t     * =
_.take([1, 2, 3], 0);\n\t     * // =3D&gt; []\n\t     */\n\t    function =
take(array, n, guard) {\n\t      var length =3D array ? array.length : =
0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if =
(guard ? isIterateeCall(array, n, guard) : n =3D=3D null) {\n\t        n =
=3D 1;\n\t      }\n\t      return baseSlice(array, 0, n &lt; 0 ? 0 : =
n);\n\t    }\n\n\t    /**\n\t     * Creates a slice of `array` with `n` =
elements taken from the end.\n\t     *\n\t     * @static\n\t     * =
@memberOf _\n\t     * @category Array\n\t     * @param {Array} array The =
array to query.\n\t     * @param {number} [n=3D1] The number of elements =
to take.\n\t     * @param- {Object} [guard] Enables use as a callback =
for functions like `_.map`.\n\t     * @returns {Array} Returns the slice =
of `array`.\n\t     * @example\n\t     *\n\t     * _.takeRight([1, 2, =
3]);\n\t     * // =3D&gt; [3]\n\t     *\n\t     * _.takeRight([1, 2, 3], =
2);\n\t     * // =3D&gt; [2, 3]\n\t     *\n\t     * _.takeRight([1, 2, =
3], 5);\n\t     * // =3D&gt; [1, 2, 3]\n\t     *\n\t     * =
_.takeRight([1, 2, 3], 0);\n\t     * // =3D&gt; []\n\t     */\n\t    =
function takeRight(array, n, guard) {\n\t      var length =3D array ? =
array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      =
}\n\t      if (guard ? isIterateeCall(array, n, guard) : n =3D=3D null) =
{\n\t        n =3D 1;\n\t      }\n\t      n =3D length - (+n || 0);\n\t  =
    return baseSlice(array, n &lt; 0 ? 0 : n);\n\t    }\n\n\t    /**\n\t =
    * Creates a slice of `array` with elements taken from the end. =
Elements are\n\t     * taken until `predicate` returns falsey. The =
predicate is bound to `thisArg`\n\t     * and invoked with three =
arguments: (value, index, array).\n\t     *\n\t     * If a property name =
is provided for `predicate` the created `_.property`\n\t     * style =
callback returns the property value of the given element.\n\t     *\n\t  =
   * If a value is also provided for `thisArg` the created =
`_.matchesProperty`\n\t     * style callback returns `true` for elements =
that have a matching property\n\t     * value, else `false`.\n\t     =
*\n\t     * If an object is provided for `predicate` the created =
`_.matches` style\n\t     * callback returns `true` for elements that =
have the properties of the given\n\t     * object, else `false`.\n\t     =
*\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t  =
   * @param {Array} array The array to query.\n\t     * @param =
{Function|Object|string} [predicate=3D_.identity] The function =
invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The =
`this` binding of `predicate`.\n\t     * @returns {Array} Returns the =
slice of `array`.\n\t     * @example\n\t     *\n\t     * =
_.takeRightWhile([1, 2, 3], function(n) {\n\t     *   return n &gt; =
1;\n\t     * });\n\t     * // =3D&gt; [2, 3]\n\t     *\n\t     * var =
users =3D [\n\t     *   { 'user': 'barney',  'active': true },\n\t     * =
  { 'user': 'fred',    'active': false },\n\t     *   { 'user': =
'pebbles', 'active': false }\n\t     * ];\n\t     *\n\t     * // using =
the `_.matches` callback shorthand\n\t     * =
_.pluck(_.takeRightWhile(users, { 'user': 'pebbles', 'active': false }), =
'user');\n\t     * // =3D&gt; ['pebbles']\n\t     *\n\t     * // using =
the `_.matchesProperty` callback shorthand\n\t     * =
_.pluck(_.takeRightWhile(users, 'active', false), 'user');\n\t     * // =
=3D&gt; ['fred', 'pebbles']\n\t     *\n\t     * // using the =
`_.property` callback shorthand\n\t     * =
_.pluck(_.takeRightWhile(users, 'active'), 'user');\n\t     * // =3D&gt; =
[]\n\t     */\n\t    function takeRightWhile(array, predicate, thisArg) =
{\n\t      return (array &amp;&amp; array.length)\n\t        ? =
baseWhile(array, getCallback(predicate, thisArg, 3), false, true)\n\t    =
    : [];\n\t    }\n\n\t    /**\n\t     * Creates a slice of `array` =
with elements taken from the beginning. Elements\n\t     * are taken =
until `predicate` returns falsey. The predicate is bound to\n\t     * =
`thisArg` and invoked with three arguments: (value, index, array).\n\t   =
  *\n\t     * If a property name is provided for `predicate` the created =
`_.property`\n\t     * style callback returns the property value of the =
given element.\n\t     *\n\t     * If a value is also provided for =
`thisArg` the created `_.matchesProperty`\n\t     * style callback =
returns `true` for elements that have a matching property\n\t     * =
value, else `false`.\n\t     *\n\t     * If an object is provided for =
`predicate` the created `_.matches` style\n\t     * callback returns =
`true` for elements that have the properties of the given\n\t     * =
object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf =
_\n\t     * @category Array\n\t     * @param {Array} array The array to =
query.\n\t     * @param {Function|Object|string} =
[predicate=3D_.identity] The function invoked\n\t     *  per =
iteration.\n\t     * @param {*} [thisArg] The `this` binding of =
`predicate`.\n\t     * @returns {Array} Returns the slice of =
`array`.\n\t     * @example\n\t     *\n\t     * _.takeWhile([1, 2, 3], =
function(n) {\n\t     *   return n &lt; 3;\n\t     * });\n\t     * // =
=3D&gt; [1, 2]\n\t     *\n\t     * var users =3D [\n\t     *   { 'user': =
'barney',  'active': false },\n\t     *   { 'user': 'fred',    'active': =
false},\n\t     *   { 'user': 'pebbles', 'active': true }\n\t     * =
];\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t   =
  * _.pluck(_.takeWhile(users, { 'user': 'barney', 'active': false }), =
'user');\n\t     * // =3D&gt; ['barney']\n\t     *\n\t     * // using =
the `_.matchesProperty` callback shorthand\n\t     * =
_.pluck(_.takeWhile(users, 'active', false), 'user');\n\t     * // =
=3D&gt; ['barney', 'fred']\n\t     *\n\t     * // using the `_.property` =
callback shorthand\n\t     * _.pluck(_.takeWhile(users, 'active'), =
'user');\n\t     * // =3D&gt; []\n\t     */\n\t    function =
takeWhile(array, predicate, thisArg) {\n\t      return (array &amp;&amp; =
array.length)\n\t        ? baseWhile(array, getCallback(predicate, =
thisArg, 3))\n\t        : [];\n\t    }\n\n\t    /**\n\t     * Creates an =
array of unique values, in order, from all of the provided arrays\n\t    =
 * using =
[`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-sameval=
uezero)\n\t     * for equality comparisons.\n\t     *\n\t     * =
@static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param =
{...Array} [arrays] The arrays to inspect.\n\t     * @returns {Array} =
Returns the new array of combined values.\n\t     * @example\n\t     =
*\n\t     * _.union([1, 2], [4, 2], [2, 1]);\n\t     * // =3D&gt; [1, 2, =
4]\n\t     */\n\t    var union =3D restParam(function(arrays) {\n\t      =
return baseUniq(baseFlatten(arrays, false, true));\n\t    });\n\n\t    =
/**\n\t     * Creates a duplicate-free version of an array, using\n\t    =
 * =
[`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-sameval=
uezero)\n\t     * for equality comparisons, in which only the first =
occurence of each element\n\t     * is kept. Providing `true` for =
`isSorted` performs a faster search algorithm\n\t     * for sorted =
arrays. If an iteratee function is provided it is invoked for\n\t     * =
each element in the array to generate the criterion by which =
uniqueness\n\t     * is computed. The `iteratee` is bound to `thisArg` =
and invoked with three\n\t     * arguments: (value, index, array).\n\t   =
  *\n\t     * If a property name is provided for `iteratee` the created =
`_.property`\n\t     * style callback returns the property value of the =
given element.\n\t     *\n\t     * If a value is also provided for =
`thisArg` the created `_.matchesProperty`\n\t     * style callback =
returns `true` for elements that have a matching property\n\t     * =
value, else `false`.\n\t     *\n\t     * If an object is provided for =
`iteratee` the created `_.matches` style\n\t     * callback returns =
`true` for elements that have the properties of the given\n\t     * =
object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf =
_\n\t     * @alias unique\n\t     * @category Array\n\t     * @param =
{Array} array The array to inspect.\n\t     * @param {boolean} =
[isSorted] Specify the array is sorted.\n\t     * @param =
{Function|Object|string} [iteratee] The function invoked per =
iteration.\n\t     * @param {*} [thisArg] The `this` binding of =
`iteratee`.\n\t     * @returns {Array} Returns the new =
duplicate-value-free array.\n\t     * @example\n\t     *\n\t     * =
_.uniq([2, 1, 2]);\n\t     * // =3D&gt; [2, 1]\n\t     *\n\t     * // =
using `isSorted`\n\t     * _.uniq([1, 1, 2], true);\n\t     * // =3D&gt; =
[1, 2]\n\t     *\n\t     * // using an iteratee function\n\t     * =
_.uniq([1, 2.5, 1.5, 2], function(n) {\n\t     *   return =
this.floor(n);\n\t     * }, Math);\n\t     * // =3D&gt; [1, 2.5]\n\t     =
*\n\t     * // using the `_.property` callback shorthand\n\t     * =
_.uniq([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n\t     * // =3D&gt; =
[{ 'x': 1 }, { 'x': 2 }]\n\t     */\n\t    function uniq(array, =
isSorted, iteratee, thisArg) {\n\t      var length =3D array ? =
array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      =
}\n\t      if (isSorted !=3D null &amp;&amp; typeof isSorted !=3D =
'boolean') {\n\t        thisArg =3D iteratee;\n\t        iteratee =3D =
isIterateeCall(array, isSorted, thisArg) ? undefined : isSorted;\n\t     =
   isSorted =3D false;\n\t      }\n\t      var callback =3D =
getCallback();\n\t      if (!(iteratee =3D=3D null &amp;&amp; callback =
=3D=3D=3D baseCallback)) {\n\t        iteratee =3D callback(iteratee, =
thisArg, 3);\n\t      }\n\t      return (isSorted &amp;&amp; =
getIndexOf() =3D=3D baseIndexOf)\n\t        ? sortedUniq(array, =
iteratee)\n\t        : baseUniq(array, iteratee);\n\t    }\n\n\t    =
/**\n\t     * This method is like `_.zip` except that it accepts an =
array of grouped\n\t     * elements and creates an array regrouping the =
elements to their pre-zip\n\t     * configuration.\n\t     *\n\t     * =
@static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param =
{Array} array The array of grouped elements to process.\n\t     * =
@returns {Array} Returns the new array of regrouped elements.\n\t     * =
@example\n\t     *\n\t     * var zipped =3D _.zip(['fred', 'barney'], =
[30, 40], [true, false]);\n\t     * // =3D&gt; [['fred', 30, true], =
['barney', 40, false]]\n\t     *\n\t     * _.unzip(zipped);\n\t     * // =
=3D&gt; [['fred', 'barney'], [30, 40], [true, false]]\n\t     */\n\t    =
function unzip(array) {\n\t      if (!(array &amp;&amp; array.length)) =
{\n\t        return [];\n\t      }\n\t      var index =3D -1,\n\t        =
  length =3D 0;\n\n\t      array =3D arrayFilter(array, function(group) =
{\n\t        if (isArrayLike(group)) {\n\t          length =3D =
nativeMax(group.length, length);\n\t          return true;\n\t        =
}\n\t      });\n\t      var result =3D Array(length);\n\t      while =
(++index &lt; length) {\n\t        result[index] =3D arrayMap(array, =
baseProperty(index));\n\t      }\n\t      return result;\n\t    }\n\n\t  =
  /**\n\t     * This method is like `_.unzip` except that it accepts an =
iteratee to specify\n\t     * how regrouped values should be combined. =
The `iteratee` is bound to `thisArg`\n\t     * and invoked with four =
arguments: (accumulator, value, index, group).\n\t     *\n\t     * =
@static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param =
{Array} array The array of grouped elements to process.\n\t     * @param =
{Function} [iteratee] The function to combine regrouped values.\n\t     =
* @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * =
@returns {Array} Returns the new array of regrouped elements.\n\t     * =
@example\n\t     *\n\t     * var zipped =3D _.zip([1, 2], [10, 20], =
[100, 200]);\n\t     * // =3D&gt; [[1, 10, 100], [2, 20, 200]]\n\t     =
*\n\t     * _.unzipWith(zipped, _.add);\n\t     * // =3D&gt; [3, 30, =
300]\n\t     */\n\t    function unzipWith(array, iteratee, thisArg) =
{\n\t      var length =3D array ? array.length : 0;\n\t      if =
(!length) {\n\t        return [];\n\t      }\n\t      var result =3D =
unzip(array);\n\t      if (iteratee =3D=3D null) {\n\t        return =
result;\n\t      }\n\t      iteratee =3D bindCallback(iteratee, thisArg, =
4);\n\t      return arrayMap(result, function(group) {\n\t        return =
arrayReduce(group, iteratee, undefined, true);\n\t      });\n\t    =
}\n\n\t    /**\n\t     * Creates an array excluding all provided values =
using\n\t     * =
[`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-sameval=
uezero)\n\t     * for equality comparisons.\n\t     *\n\t     * =
@static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param =
{Array} array The array to filter.\n\t     * @param {...*} [values] The =
values to exclude.\n\t     * @returns {Array} Returns the new array of =
filtered values.\n\t     * @example\n\t     *\n\t     * _.without([1, 2, =
1, 3], 1, 2);\n\t     * // =3D&gt; [3]\n\t     */\n\t    var without =3D =
restParam(function(array, values) {\n\t      return =
isArrayLike(array)\n\t        ? baseDifference(array, values)\n\t        =
: [];\n\t    });\n\n\t    /**\n\t     * Creates an array of unique =
values that is the [symmetric =
difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n\t     =
* of the provided arrays.\n\t     *\n\t     * @static\n\t     * =
@memberOf _\n\t     * @category Array\n\t     * @param {...Array} =
[arrays] The arrays to inspect.\n\t     * @returns {Array} Returns the =
new array of values.\n\t     * @example\n\t     *\n\t     * _.xor([1, =
2], [4, 2]);\n\t     * // =3D&gt; [1, 4]\n\t     */\n\t    function =
xor() {\n\t      var index =3D -1,\n\t          length =3D =
arguments.length;\n\n\t      while (++index &lt; length) {\n\t        =
var array =3D arguments[index];\n\t        if (isArrayLike(array)) {\n\t =
         var result =3D result\n\t            ? =
arrayPush(baseDifference(result, array), baseDifference(array, =
result))\n\t            : array;\n\t        }\n\t      }\n\t      return =
result ? baseUniq(result) : [];\n\t    }\n\n\t    /**\n\t     * Creates =
an array of grouped elements, the first of which contains the first\n\t  =
   * elements of the given arrays, the second of which contains the =
second elements\n\t     * of the given arrays, and so on.\n\t     *\n\t  =
   * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * =
@param {...Array} [arrays] The arrays to process.\n\t     * @returns =
{Array} Returns the new array of grouped elements.\n\t     * =
@example\n\t     *\n\t     * _.zip(['fred', 'barney'], [30, 40], [true, =
false]);\n\t     * // =3D&gt; [['fred', 30, true], ['barney', 40, =
false]]\n\t     */\n\t    var zip =3D restParam(unzip);\n\n\t    /**\n\t =
    * The inverse of `_.pairs`; this method returns an object composed =
from arrays\n\t     * of property names and values. Provide either a =
single two dimensional array,\n\t     * e.g. `[[key1, value1], [key2, =
value2]]` or two arrays, one of property names\n\t     * and one of =
corresponding values.\n\t     *\n\t     * @static\n\t     * @memberOf =
_\n\t     * @alias object\n\t     * @category Array\n\t     * @param =
{Array} props The property names.\n\t     * @param {Array} [values=3D[]] =
The property values.\n\t     * @returns {Object} Returns the new =
object.\n\t     * @example\n\t     *\n\t     * _.zipObject([['fred', =
30], ['barney', 40]]);\n\t     * // =3D&gt; { 'fred': 30, 'barney': 40 =
}\n\t     *\n\t     * _.zipObject(['fred', 'barney'], [30, 40]);\n\t     =
* // =3D&gt; { 'fred': 30, 'barney': 40 }\n\t     */\n\t    function =
zipObject(props, values) {\n\t      var index =3D -1,\n\t          =
length =3D props ? props.length : 0,\n\t          result =3D {};\n\n\t   =
   if (length &amp;&amp; !values &amp;&amp; !isArray(props[0])) {\n\t    =
    values =3D [];\n\t      }\n\t      while (++index &lt; length) {\n\t =
       var key =3D props[index];\n\t        if (values) {\n\t          =
result[key] =3D values[index];\n\t        } else if (key) {\n\t          =
result[key[0]] =3D key[1];\n\t        }\n\t      }\n\t      return =
result;\n\t    }\n\n\t    /**\n\t     * This method is like `_.zip` =
except that it accepts an iteratee to specify\n\t     * how grouped =
values should be combined. The `iteratee` is bound to `thisArg`\n\t     =
* and invoked with four arguments: (accumulator, value, index, =
group).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * =
@category Array\n\t     * @param {...Array} [arrays] The arrays to =
process.\n\t     * @param {Function} [iteratee] The function to combine =
grouped values.\n\t     * @param {*} [thisArg] The `this` binding of =
`iteratee`.\n\t     * @returns {Array} Returns the new array of grouped =
elements.\n\t     * @example\n\t     *\n\t     * _.zipWith([1, 2], [10, =
20], [100, 200], _.add);\n\t     * // =3D&gt; [111, 222]\n\t     */\n\t  =
  var zipWith =3D restParam(function(arrays) {\n\t      var length =3D =
arrays.length,\n\t          iteratee =3D length &gt; 2 ? arrays[length - =
2] : undefined,\n\t          thisArg =3D length &gt; 1 ? arrays[length - =
1] : undefined;\n\n\t      if (length &gt; 2 &amp;&amp; typeof iteratee =
=3D=3D 'function') {\n\t        length -=3D 2;\n\t      } else {\n\t     =
   iteratee =3D (length &gt; 1 &amp;&amp; typeof thisArg =3D=3D =
'function') ? (--length, thisArg) : undefined;\n\t        thisArg =3D =
undefined;\n\t      }\n\t      arrays.length =3D length;\n\t      return =
unzipWith(arrays, iteratee, thisArg);\n\t    });\n\n\t    =
/*-----------------------------------------------------------------------=
-*/\n\n\t    /**\n\t     * Creates a `lodash` object that wraps `value` =
with explicit method\n\t     * chaining enabled.\n\t     *\n\t     * =
@static\n\t     * @memberOf _\n\t     * @category Chain\n\t     * @param =
{*} value The value to wrap.\n\t     * @returns {Object} Returns the new =
`lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var =
users =3D [\n\t     *   { 'user': 'barney',  'age': 36 },\n\t     *   { =
'user': 'fred',    'age': 40 },\n\t     *   { 'user': 'pebbles', 'age': =
1 }\n\t     * ];\n\t     *\n\t     * var youngest =3D _.chain(users)\n\t =
    *   .sortBy('age')\n\t     *   .map(function(chr) {\n\t     *     =
return chr.user + ' is ' + chr.age;\n\t     *   })\n\t     *   =
.first()\n\t     *   .value();\n\t     * // =3D&gt; 'pebbles is 1'\n\t   =
  */\n\t    function chain(value) {\n\t      var result =3D =
lodash(value);\n\t      result.__chain__ =3D true;\n\t      return =
result;\n\t    }\n\n\t    /**\n\t     * This method invokes =
`interceptor` and returns `value`. The interceptor is\n\t     * bound to =
`thisArg` and invoked with one argument; (value). The purpose of\n\t     =
* this method is to \"tap into\" a method chain in order to perform =
operations\n\t     * on intermediate results within the chain.\n\t     =
*\n\t     * @static\n\t     * @memberOf _\n\t     * @category Chain\n\t  =
   * @param {*} value The value to provide to `interceptor`.\n\t     * =
@param {Function} interceptor The function to invoke.\n\t     * @param =
{*} [thisArg] The `this` binding of `interceptor`.\n\t     * @returns =
{*} Returns `value`.\n\t     * @example\n\t     *\n\t     * _([1, 2, =
3])\n\t     *  .tap(function(array) {\n\t     *    array.pop();\n\t     =
*  })\n\t     *  .reverse()\n\t     *  .value();\n\t     * // =3D&gt; =
[2, 1]\n\t     */\n\t    function tap(value, interceptor, thisArg) {\n\t =
     interceptor.call(thisArg, value);\n\t      return value;\n\t    =
}\n\n\t    /**\n\t     * This method is like `_.tap` except that it =
returns the result of `interceptor`.\n\t     *\n\t     * @static\n\t     =
* @memberOf _\n\t     * @category Chain\n\t     * @param {*} value The =
value to provide to `interceptor`.\n\t     * @param {Function} =
interceptor The function to invoke.\n\t     * @param {*} [thisArg] The =
`this` binding of `interceptor`.\n\t     * @returns {*} Returns the =
result of `interceptor`.\n\t     * @example\n\t     *\n\t     * _('  abc =
 ')\n\t     *  .chain()\n\t     *  .trim()\n\t     *  =
.thru(function(value) {\n\t     *    return [value];\n\t     *  })\n\t   =
  *  .value();\n\t     * // =3D&gt; ['abc']\n\t     */\n\t    function =
thru(value, interceptor, thisArg) {\n\t      return =
interceptor.call(thisArg, value);\n\t    }\n\n\t    /**\n\t     * =
Enables explicit method chaining on the wrapper object.\n\t     *\n\t    =
 * @name chain\n\t     * @memberOf _\n\t     * @category Chain\n\t     * =
@returns {Object} Returns the new `lodash` wrapper instance.\n\t     * =
@example\n\t     *\n\t     * var users =3D [\n\t     *   { 'user': =
'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 }\n\t   =
  * ];\n\t     *\n\t     * // without explicit chaining\n\t     * =
_(users).first();\n\t     * // =3D&gt; { 'user': 'barney', 'age': 36 =
}\n\t     *\n\t     * // with explicit chaining\n\t     * =
_(users).chain()\n\t     *   .first()\n\t     *   .pick('user')\n\t     =
*   .value();\n\t     * // =3D&gt; { 'user': 'barney' }\n\t     */\n\t   =
 function wrapperChain() {\n\t      return chain(this);\n\t    }\n\n\t   =
 /**\n\t     * Executes the chained sequence and returns the wrapped =
result.\n\t     *\n\t     * @name commit\n\t     * @memberOf _\n\t     * =
@category Chain\n\t     * @returns {Object} Returns the new `lodash` =
wrapper instance.\n\t     * @example\n\t     *\n\t     * var array =3D =
[1, 2];\n\t     * var wrapped =3D _(array).push(3);\n\t     *\n\t     * =
console.log(array);\n\t     * // =3D&gt; [1, 2]\n\t     *\n\t     * =
wrapped =3D wrapped.commit();\n\t     * console.log(array);\n\t     * // =
=3D&gt; [1, 2, 3]\n\t     *\n\t     * wrapped.last();\n\t     * // =
=3D&gt; 3\n\t     *\n\t     * console.log(array);\n\t     * // =3D&gt; =
[1, 2, 3]\n\t     */\n\t    function wrapperCommit() {\n\t      return =
new LodashWrapper(this.value(), this.__chain__);\n\t    }\n\n\t    =
/**\n\t     * Creates a new array joining a wrapped array with any =
additional arrays\n\t     * and/or values.\n\t     *\n\t     * @name =
concat\n\t     * @memberOf _\n\t     * @category Chain\n\t     * @param =
{...*} [values] The values to concatenate.\n\t     * @returns {Array} =
Returns the new concatenated array.\n\t     * @example\n\t     *\n\t     =
* var array =3D [1];\n\t     * var wrapped =3D _(array).concat(2, [3], =
[[4]]);\n\t     *\n\t     * console.log(wrapped.value());\n\t     * // =
=3D&gt; [1, 2, 3, [4]]\n\t     *\n\t     * console.log(array);\n\t     * =
// =3D&gt; [1]\n\t     */\n\t    var wrapperConcat =3D =
restParam(function(values) {\n\t      values =3D =
baseFlatten(values);\n\t      return this.thru(function(array) {\n\t     =
   return arrayConcat(isArray(array) ? array : [toObject(array)], =
values);\n\t      });\n\t    });\n\n\t    /**\n\t     * Creates a clone =
of the chained sequence planting `value` as the wrapped value.\n\t     =
*\n\t     * @name plant\n\t     * @memberOf _\n\t     * @category =
Chain\n\t     * @returns {Object} Returns the new `lodash` wrapper =
instance.\n\t     * @example\n\t     *\n\t     * var array =3D [1, =
2];\n\t     * var wrapped =3D _(array).map(function(value) {\n\t     *   =
return Math.pow(value, 2);\n\t     * });\n\t     *\n\t     * var other =
=3D [3, 4];\n\t     * var otherWrapped =3D wrapped.plant(other);\n\t     =
*\n\t     * otherWrapped.value();\n\t     * // =3D&gt; [9, 16]\n\t     =
*\n\t     * wrapped.value();\n\t     * // =3D&gt; [1, 4]\n\t     */\n\t  =
  function wrapperPlant(value) {\n\t      var result,\n\t          =
parent =3D this;\n\n\t      while (parent instanceof baseLodash) {\n\t   =
     var clone =3D wrapperClone(parent);\n\t        if (result) {\n\t    =
      previous.__wrapped__ =3D clone;\n\t        } else {\n\t          =
result =3D clone;\n\t        }\n\t        var previous =3D clone;\n\t    =
    parent =3D parent.__wrapped__;\n\t      }\n\t      =
previous.__wrapped__ =3D value;\n\t      return result;\n\t    }\n\n\t   =
 /**\n\t     * Reverses the wrapped array so the first element becomes =
the last, the\n\t     * second element becomes the second to last, and =
so on.\n\t     *\n\t     * **Note:** This method mutates the wrapped =
array.\n\t     *\n\t     * @name reverse\n\t     * @memberOf _\n\t     * =
@category Chain\n\t     * @returns {Object} Returns the new reversed =
`lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var =
array =3D [1, 2, 3];\n\t     *\n\t     * _(array).reverse().value()\n\t  =
   * // =3D&gt; [3, 2, 1]\n\t     *\n\t     * console.log(array);\n\t    =
 * // =3D&gt; [3, 2, 1]\n\t     */\n\t    function wrapperReverse() =
{\n\t      var value =3D this.__wrapped__;\n\n\t      var interceptor =
=3D function(value) {\n\t        return (wrapped &amp;&amp; =
wrapped.__dir__ &lt; 0) ? value : value.reverse();\n\t      };\n\t      =
if (value instanceof LazyWrapper) {\n\t        var wrapped =3D =
value;\n\t        if (this.__actions__.length) {\n\t          wrapped =
=3D new LazyWrapper(this);\n\t        }\n\t        wrapped =3D =
wrapped.reverse();\n\t        wrapped.__actions__.push({ 'func': thru, =
'args': [interceptor], 'thisArg': undefined });\n\t        return new =
LodashWrapper(wrapped, this.__chain__);\n\t      }\n\t      return =
this.thru(interceptor);\n\t    }\n\n\t    /**\n\t     * Produces the =
result of coercing the unwrapped value to a string.\n\t     *\n\t     * =
@name toString\n\t     * @memberOf _\n\t     * @category Chain\n\t     * =
@returns {string} Returns the coerced string value.\n\t     * =
@example\n\t     *\n\t     * _([1, 2, 3]).toString();\n\t     * // =
=3D&gt; '1,2,3'\n\t     */\n\t    function wrapperToString() {\n\t      =
return (this.value() + '');\n\t    }\n\n\t    /**\n\t     * Executes the =
chained sequence to extract the unwrapped value.\n\t     *\n\t     * =
@name value\n\t     * @memberOf _\n\t     * @alias run, toJSON, =
valueOf\n\t     * @category Chain\n\t     * @returns {*} Returns the =
resolved unwrapped value.\n\t     * @example\n\t     *\n\t     * _([1, =
2, 3]).value();\n\t     * // =3D&gt; [1, 2, 3]\n\t     */\n\t    =
function wrapperValue() {\n\t      return =
baseWrapperValue(this.__wrapped__, this.__actions__);\n\t    }\n\n\t    =
/*-----------------------------------------------------------------------=
-*/\n\n\t    /**\n\t     * Creates an array of elements corresponding to =
the given keys, or indexes,\n\t     * of `collection`. Keys may be =
specified as individual arguments or as arrays\n\t     * of keys.\n\t    =
 *\n\t     * @static\n\t     * @memberOf _\n\t     * @category =
Collection\n\t     * @param {Array|Object|string} collection The =
collection to iterate over.\n\t     * @param =
{...(number|number[]|string|string[])} [props] The property names\n\t    =
 *  or indexes of elements to pick, specified individually or in =
arrays.\n\t     * @returns {Array} Returns the new array of picked =
elements.\n\t     * @example\n\t     *\n\t     * _.at(['a', 'b', 'c'], =
[0, 2]);\n\t     * // =3D&gt; ['a', 'c']\n\t     *\n\t     * =
_.at(['barney', 'fred', 'pebbles'], 0, 2);\n\t     * // =3D&gt; =
['barney', 'pebbles']\n\t     */\n\t    var at =3D =
restParam(function(collection, props) {\n\t      return =
baseAt(collection, baseFlatten(props));\n\t    });\n\n\t    /**\n\t     =
* Creates an object composed of keys generated from the results of =
running\n\t     * each element of `collection` through `iteratee`. The =
corresponding value\n\t     * of each key is the number of times the key =
was returned by `iteratee`.\n\t     * The `iteratee` is bound to =
`thisArg` and invoked with three arguments:\n\t     * (value, index|key, =
collection).\n\t     *\n\t     * If a property name is provided for =
`iteratee` the created `_.property`\n\t     * style callback returns the =
property value of the given element.\n\t     *\n\t     * If a value is =
also provided for `thisArg` the created `_.matchesProperty`\n\t     * =
style callback returns `true` for elements that have a matching =
property\n\t     * value, else `false`.\n\t     *\n\t     * If an object =
is provided for `iteratee` the created `_.matches` style\n\t     * =
callback returns `true` for elements that have the properties of the =
given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t    =
 * @memberOf _\n\t     * @category Collection\n\t     * @param =
{Array|Object|string} collection The collection to iterate over.\n\t     =
* @param {Function|Object|string} [iteratee=3D_.identity] The function =
invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The =
`this` binding of `iteratee`.\n\t     * @returns {Object} Returns the =
composed aggregate object.\n\t     * @example\n\t     *\n\t     * =
_.countBy([4.3, 6.1, 6.4], function(n) {\n\t     *   return =
Math.floor(n);\n\t     * });\n\t     * // =3D&gt; { '4': 1, '6': 2 }\n\t =
    *\n\t     * _.countBy([4.3, 6.1, 6.4], function(n) {\n\t     *   =
return this.floor(n);\n\t     * }, Math);\n\t     * // =3D&gt; { '4': 1, =
'6': 2 }\n\t     *\n\t     * _.countBy(['one', 'two', 'three'], =
'length');\n\t     * // =3D&gt; { '3': 2, '5': 1 }\n\t     */\n\t    var =
countBy =3D createAggregator(function(result, value, key) {\n\t      =
hasOwnProperty.call(result, key) ? ++result[key] : (result[key] =3D =
1);\n\t    });\n\n\t    /**\n\t     * Checks if `predicate` returns =
truthy for **all** elements of `collection`.\n\t     * The predicate is =
bound to `thisArg` and invoked with three arguments:\n\t     * (value, =
index|key, collection).\n\t     *\n\t     * If a property name is =
provided for `predicate` the created `_.property`\n\t     * style =
callback returns the property value of the given element.\n\t     *\n\t  =
   * If a value is also provided for `thisArg` the created =
`_.matchesProperty`\n\t     * style callback returns `true` for elements =
that have a matching property\n\t     * value, else `false`.\n\t     =
*\n\t     * If an object is provided for `predicate` the created =
`_.matches` style\n\t     * callback returns `true` for elements that =
have the properties of the given\n\t     * object, else `false`.\n\t     =
*\n\t     * @static\n\t     * @memberOf _\n\t     * @alias all\n\t     * =
@category Collection\n\t     * @param {Array|Object|string} collection =
The collection to iterate over.\n\t     * @param =
{Function|Object|string} [predicate=3D_.identity] The function =
invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The =
`this` binding of `predicate`.\n\t     * @returns {boolean} Returns =
`true` if all elements pass the predicate check,\n\t     *  else =
`false`.\n\t     * @example\n\t     *\n\t     * _.every([true, 1, null, =
'yes'], Boolean);\n\t     * // =3D&gt; false\n\t     *\n\t     * var =
users =3D [\n\t     *   { 'user': 'barney', 'active': false },\n\t     * =
  { 'user': 'fred',   'active': false }\n\t     * ];\n\t     *\n\t     * =
// using the `_.matches` callback shorthand\n\t     * _.every(users, { =
'user': 'barney', 'active': false });\n\t     * // =3D&gt; false\n\t     =
*\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     =
* _.every(users, 'active', false);\n\t     * // =3D&gt; true\n\t     =
*\n\t     * // using the `_.property` callback shorthand\n\t     * =
_.every(users, 'active');\n\t     * // =3D&gt; false\n\t     */\n\t    =
function every(collection, predicate, thisArg) {\n\t      var func =3D =
isArray(collection) ? arrayEvery : baseEvery;\n\t      if (thisArg =
&amp;&amp; isIterateeCall(collection, predicate, thisArg)) {\n\t        =
predicate =3D undefined;\n\t      }\n\t      if (typeof predicate !=3D =
'function' || thisArg !=3D=3D undefined) {\n\t        predicate =3D =
getCallback(predicate, thisArg, 3);\n\t      }\n\t      return =
func(collection, predicate);\n\t    }\n\n\t    /**\n\t     * Iterates =
over elements of `collection`, returning an array of all elements\n\t    =
 * `predicate` returns truthy for. The predicate is bound to `thisArg` =
and\n\t     * invoked with three arguments: (value, index|key, =
collection).\n\t     *\n\t     * If a property name is provided for =
`predicate` the created `_.property`\n\t     * style callback returns =
the property value of the given element.\n\t     *\n\t     * If a value =
is also provided for `thisArg` the created `_.matchesProperty`\n\t     * =
style callback returns `true` for elements that have a matching =
property\n\t     * value, else `false`.\n\t     *\n\t     * If an object =
is provided for `predicate` the created `_.matches` style\n\t     * =
callback returns `true` for elements that have the properties of the =
given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t    =
 * @memberOf _\n\t     * @alias select\n\t     * @category =
Collection\n\t     * @param {Array|Object|string} collection The =
collection to iterate over.\n\t     * @param {Function|Object|string} =
[predicate=3D_.identity] The function invoked\n\t     *  per =
iteration.\n\t     * @param {*} [thisArg] The `this` binding of =
`predicate`.\n\t     * @returns {Array} Returns the new filtered =
array.\n\t     * @example\n\t     *\n\t     * _.filter([4, 5, 6], =
function(n) {\n\t     *   return n % 2 =3D=3D 0;\n\t     * });\n\t     * =
// =3D&gt; [4, 6]\n\t     *\n\t     * var users =3D [\n\t     *   { =
'user': 'barney', 'age': 36, 'active': true },\n\t     *   { 'user': =
'fred',   'age': 40, 'active': false }\n\t     * ];\n\t     *\n\t     * =
// using the `_.matches` callback shorthand\n\t     * =
_.pluck(_.filter(users, { 'age': 36, 'active': true }), 'user');\n\t     =
* // =3D&gt; ['barney']\n\t     *\n\t     * // using the =
`_.matchesProperty` callback shorthand\n\t     * _.pluck(_.filter(users, =
'active', false), 'user');\n\t     * // =3D&gt; ['fred']\n\t     *\n\t   =
  * // using the `_.property` callback shorthand\n\t     * =
_.pluck(_.filter(users, 'active'), 'user');\n\t     * // =3D&gt; =
['barney']\n\t     */\n\t    function filter(collection, predicate, =
thisArg) {\n\t      var func =3D isArray(collection) ? arrayFilter : =
baseFilter;\n\t      predicate =3D getCallback(predicate, thisArg, =
3);\n\t      return func(collection, predicate);\n\t    }\n\n\t    =
/**\n\t     * Iterates over elements of `collection`, returning the =
first element\n\t     * `predicate` returns truthy for. The predicate is =
bound to `thisArg` and\n\t     * invoked with three arguments: (value, =
index|key, collection).\n\t     *\n\t     * If a property name is =
provided for `predicate` the created `_.property`\n\t     * style =
callback returns the property value of the given element.\n\t     *\n\t  =
   * If a value is also provided for `thisArg` the created =
`_.matchesProperty`\n\t     * style callback returns `true` for elements =
that have a matching property\n\t     * value, else `false`.\n\t     =
*\n\t     * If an object is provided for `predicate` the created =
`_.matches` style\n\t     * callback returns `true` for elements that =
have the properties of the given\n\t     * object, else `false`.\n\t     =
*\n\t     * @static\n\t     * @memberOf _\n\t     * @alias detect\n\t    =
 * @category Collection\n\t     * @param {Array|Object|string} =
collection The collection to search.\n\t     * @param =
{Function|Object|string} [predicate=3D_.identity] The function =
invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The =
`this` binding of `predicate`.\n\t     * @returns {*} Returns the =
matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     =
* var users =3D [\n\t     *   { 'user': 'barney',  'age': 36, 'active': =
true },\n\t     *   { 'user': 'fred',    'age': 40, 'active': false =
},\n\t     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n\t     =
* ];\n\t     *\n\t     * _.result(_.find(users, function(chr) {\n\t     =
*   return chr.age &lt; 40;\n\t     * }), 'user');\n\t     * // =3D&gt; =
'barney'\n\t     *\n\t     * // using the `_.matches` callback =
shorthand\n\t     * _.result(_.find(users, { 'age': 1, 'active': true =
}), 'user');\n\t     * // =3D&gt; 'pebbles'\n\t     *\n\t     * // using =
the `_.matchesProperty` callback shorthand\n\t     * =
_.result(_.find(users, 'active', false), 'user');\n\t     * // =3D&gt; =
'fred'\n\t     *\n\t     * // using the `_.property` callback =
shorthand\n\t     * _.result(_.find(users, 'active'), 'user');\n\t     * =
// =3D&gt; 'barney'\n\t     */\n\t    var find =3D =
createFind(baseEach);\n\n\t    /**\n\t     * This method is like =
`_.find` except that it iterates over elements of\n\t     * `collection` =
from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf =
_\n\t     * @category Collection\n\t     * @param {Array|Object|string} =
collection The collection to search.\n\t     * @param =
{Function|Object|string} [predicate=3D_.identity] The function =
invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The =
`this` binding of `predicate`.\n\t     * @returns {*} Returns the =
matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     =
* _.findLast([1, 2, 3, 4], function(n) {\n\t     *   return n % 2 =3D=3D =
1;\n\t     * });\n\t     * // =3D&gt; 3\n\t     */\n\t    var findLast =
=3D createFind(baseEachRight, true);\n\n\t    /**\n\t     * Performs a =
deep comparison between each element in `collection` and the\n\t     * =
source object, returning the first element that has equivalent =
property\n\t     * values.\n\t     *\n\t     * **Note:** This method =
supports comparing arrays, booleans, `Date` objects,\n\t     * numbers, =
`Object` objects, regexes, and strings. Objects are compared by\n\t     =
* their own, not inherited, enumerable properties. For comparing a =
single\n\t     * own or inherited property value see =
`_.matchesProperty`.\n\t     *\n\t     * @static\n\t     * @memberOf =
_\n\t     * @category Collection\n\t     * @param {Array|Object|string} =
collection The collection to search.\n\t     * @param {Object} source =
The object of property values to match.\n\t     * @returns {*} Returns =
the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t  =
   * var users =3D [\n\t     *   { 'user': 'barney', 'age': 36, =
'active': true },\n\t     *   { 'user': 'fred',   'age': 40, 'active': =
false }\n\t     * ];\n\t     *\n\t     * _.result(_.findWhere(users, { =
'age': 36, 'active': true }), 'user');\n\t     * // =3D&gt; 'barney'\n\t =
    *\n\t     * _.result(_.findWhere(users, { 'age': 40, 'active': false =
}), 'user');\n\t     * // =3D&gt; 'fred'\n\t     */\n\t    function =
findWhere(collection, source) {\n\t      return find(collection, =
baseMatches(source));\n\t    }\n\n\t    /**\n\t     * Iterates over =
elements of `collection` invoking `iteratee` for each element.\n\t     * =
The `iteratee` is bound to `thisArg` and invoked with three =
arguments:\n\t     * (value, index|key, collection). Iteratee functions =
may exit iteration early\n\t     * by explicitly returning `false`.\n\t  =
   *\n\t     * **Note:** As with other \"Collections\" methods, objects =
with a \"length\" property\n\t     * are iterated like arrays. To avoid =
this behavior `_.forIn` or `_.forOwn`\n\t     * may be used for object =
iteration.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * =
@alias each\n\t     * @category Collection\n\t     * @param =
{Array|Object|string} collection The collection to iterate over.\n\t     =
* @param {Function} [iteratee=3D_.identity] The function invoked per =
iteration.\n\t     * @param {*} [thisArg] The `this` binding of =
`iteratee`.\n\t     * @returns {Array|Object|string} Returns =
`collection`.\n\t     * @example\n\t     *\n\t     * _([1, =
2]).forEach(function(n) {\n\t     *   console.log(n);\n\t     * =
}).value();\n\t     * // =3D&gt; logs each value from left to right and =
returns the array\n\t     *\n\t     * _.forEach({ 'a': 1, 'b': 2 }, =
function(n, key) {\n\t     *   console.log(n, key);\n\t     * });\n\t    =
 * // =3D&gt; logs each value-key pair and returns the object (iteration =
order is not guaranteed)\n\t     */\n\t    var forEach =3D =
createForEach(arrayEach, baseEach);\n\n\t    /**\n\t     * This method =
is like `_.forEach` except that it iterates over elements of\n\t     * =
`collection` from right to left.\n\t     *\n\t     * @static\n\t     * =
@memberOf _\n\t     * @alias eachRight\n\t     * @category =
Collection\n\t     * @param {Array|Object|string} collection The =
collection to iterate over.\n\t     * @param {Function} =
[iteratee=3D_.identity] The function invoked per iteration.\n\t     * =
@param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * =
@returns {Array|Object|string} Returns `collection`.\n\t     * =
@example\n\t     *\n\t     * _([1, 2]).forEachRight(function(n) {\n\t    =
 *   console.log(n);\n\t     * }).value();\n\t     * // =3D&gt; logs =
each value from right to left and returns the array\n\t     */\n\t    =
var forEachRight =3D createForEach(arrayEachRight, baseEachRight);\n\n\t =
   /**\n\t     * Creates an object composed of keys generated from the =
results of running\n\t     * each element of `collection` through =
`iteratee`. The corresponding value\n\t     * of each key is an array of =
the elements responsible for generating the key.\n\t     * The =
`iteratee` is bound to `thisArg` and invoked with three arguments:\n\t   =
  * (value, index|key, collection).\n\t     *\n\t     * If a property =
name is provided for `iteratee` the created `_.property`\n\t     * style =
callback returns the property value of the given element.\n\t     *\n\t  =
   * If a value is also provided for `thisArg` the created =
`_.matchesProperty`\n\t     * style callback returns `true` for elements =
that have a matching property\n\t     * value, else `false`.\n\t     =
*\n\t     * If an object is provided for `iteratee` the created =
`_.matches` style\n\t     * callback returns `true` for elements that =
have the properties of the given\n\t     * object, else `false`.\n\t     =
*\n\t     * @static\n\t     * @memberOf _\n\t     * @category =
Collection\n\t     * @param {Array|Object|string} collection The =
collection to iterate over.\n\t     * @param {Function|Object|string} =
[iteratee=3D_.identity] The function invoked\n\t     *  per =
iteration.\n\t     * @param {*} [thisArg] The `this` binding of =
`iteratee`.\n\t     * @returns {Object} Returns the composed aggregate =
object.\n\t     * @example\n\t     *\n\t     * _.groupBy([4.2, 6.1, =
6.4], function(n) {\n\t     *   return Math.floor(n);\n\t     * });\n\t  =
   * // =3D&gt; { '4': [4.2], '6': [6.1, 6.4] }\n\t     *\n\t     * =
_.groupBy([4.2, 6.1, 6.4], function(n) {\n\t     *   return =
this.floor(n);\n\t     * }, Math);\n\t     * // =3D&gt; { '4': [4.2], =
'6': [6.1, 6.4] }\n\t     *\n\t     * // using the `_.property` callback =
shorthand\n\t     * _.groupBy(['one', 'two', 'three'], 'length');\n\t    =
 * // =3D&gt; { '3': ['one', 'two'], '5': ['three'] }\n\t     */\n\t    =
var groupBy =3D createAggregator(function(result, value, key) {\n\t      =
if (hasOwnProperty.call(result, key)) {\n\t        =
result[key].push(value);\n\t      } else {\n\t        result[key] =3D =
[value];\n\t      }\n\t    });\n\n\t    /**\n\t     * Checks if `value` =
is in `collection` using\n\t     * =
[`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-sameval=
uezero)\n\t     * for equality comparisons. If `fromIndex` is negative, =
it is used as the offset\n\t     * from the end of `collection`.\n\t     =
*\n\t     * @static\n\t     * @memberOf _\n\t     * @alias contains, =
include\n\t     * @category Collection\n\t     * @param =
{Array|Object|string} collection The collection to search.\n\t     * =
@param {*} target The value to search for.\n\t     * @param {number} =
[fromIndex=3D0] The index to search from.\n\t     * @param- {Object} =
[guard] Enables use as a callback for functions like `_.reduce`.\n\t     =
* @returns {boolean} Returns `true` if a matching element is found, else =
`false`.\n\t     * @example\n\t     *\n\t     * _.includes([1, 2, 3], =
1);\n\t     * // =3D&gt; true\n\t     *\n\t     * _.includes([1, 2, 3], =
1, 2);\n\t     * // =3D&gt; false\n\t     *\n\t     * _.includes({ =
'user': 'fred', 'age': 40 }, 'fred');\n\t     * // =3D&gt; true\n\t     =
*\n\t     * _.includes('pebbles', 'eb');\n\t     * // =3D&gt; true\n\t   =
  */\n\t    function includes(collection, target, fromIndex, guard) =
{\n\t      var length =3D collection ? getLength(collection) : 0;\n\t    =
  if (!isLength(length)) {\n\t        collection =3D =
values(collection);\n\t        length =3D collection.length;\n\t      =
}\n\t      if (typeof fromIndex !=3D 'number' || (guard &amp;&amp; =
isIterateeCall(target, fromIndex, guard))) {\n\t        fromIndex =3D =
0;\n\t      } else {\n\t        fromIndex =3D fromIndex &lt; 0 ? =
nativeMax(length + fromIndex, 0) : (fromIndex || 0);\n\t      }\n\t      =
return (typeof collection =3D=3D 'string' || !isArray(collection) =
&amp;&amp; isString(collection))\n\t        ? (fromIndex &lt;=3D length =
&amp;&amp; collection.indexOf(target, fromIndex) &gt; -1)\n\t        : =
(!!length &amp;&amp; getIndexOf(collection, target, fromIndex) &gt; =
-1);\n\t    }\n\n\t    /**\n\t     * Creates an object composed of keys =
generated from the results of running\n\t     * each element of =
`collection` through `iteratee`. The corresponding value\n\t     * of =
each key is the last element responsible for generating the key. The\n\t =
    * iteratee function is bound to `thisArg` and invoked with three =
arguments:\n\t     * (value, index|key, collection).\n\t     *\n\t     * =
If a property name is provided for `iteratee` the created =
`_.property`\n\t     * style callback returns the property value of the =
given element.\n\t     *\n\t     * If a value is also provided for =
`thisArg` the created `_.matchesProperty`\n\t     * style callback =
returns `true` for elements that have a matching property\n\t     * =
value, else `false`.\n\t     *\n\t     * If an object is provided for =
`iteratee` the created `_.matches` style\n\t     * callback returns =
`true` for elements that have the properties of the given\n\t     * =
object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf =
_\n\t     * @category Collection\n\t     * @param {Array|Object|string} =
collection The collection to iterate over.\n\t     * @param =
{Function|Object|string} [iteratee=3D_.identity] The function =
invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The =
`this` binding of `iteratee`.\n\t     * @returns {Object} Returns the =
composed aggregate object.\n\t     * @example\n\t     *\n\t     * var =
keyData =3D [\n\t     *   { 'dir': 'left', 'code': 97 },\n\t     *   { =
'dir': 'right', 'code': 100 }\n\t     * ];\n\t     *\n\t     * =
_.indexBy(keyData, 'dir');\n\t     * // =3D&gt; { 'left': { 'dir': =
'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n\t     =
*\n\t     * _.indexBy(keyData, function(object) {\n\t     *   return =
String.fromCharCode(object.code);\n\t     * });\n\t     * // =3D&gt; { =
'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } =
}\n\t     *\n\t     * _.indexBy(keyData, function(object) {\n\t     *   =
return this.fromCharCode(object.code);\n\t     * }, String);\n\t     * =
// =3D&gt; { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', =
'code': 100 } }\n\t     */\n\t    var indexBy =3D =
createAggregator(function(result, value, key) {\n\t      result[key] =3D =
value;\n\t    });\n\n\t    /**\n\t     * Invokes the method at `path` of =
each element in `collection`, returning\n\t     * an array of the =
results of each invoked method. Any additional arguments\n\t     * are =
provided to each invoked method. If `methodName` is a function it is\n\t =
    * invoked for, and `this` bound to, each element in =
`collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     =
* @category Collection\n\t     * @param {Array|Object|string} collection =
The collection to iterate over.\n\t     * @param {Array|Function|string} =
path The path of the method to invoke or\n\t     *  the function invoked =
per iteration.\n\t     * @param {...*} [args] The arguments to invoke =
the method with.\n\t     * @returns {Array} Returns the array of =
results.\n\t     * @example\n\t     *\n\t     * _.invoke([[5, 1, 7], [3, =
2, 1]], 'sort');\n\t     * // =3D&gt; [[1, 5, 7], [1, 2, 3]]\n\t     =
*\n\t     * _.invoke([123, 456], String.prototype.split, '');\n\t     * =
// =3D&gt; [['1', '2', '3'], ['4', '5', '6']]\n\t     */\n\t    var =
invoke =3D restParam(function(collection, path, args) {\n\t      var =
index =3D -1,\n\t          isFunc =3D typeof path =3D=3D 'function',\n\t =
         isProp =3D isKey(path),\n\t          result =3D =
isArrayLike(collection) ? Array(collection.length) : [];\n\n\t      =
baseEach(collection, function(value) {\n\t        var func =3D isFunc ? =
path : ((isProp &amp;&amp; value !=3D null) ? value[path] : =
undefined);\n\t        result[++index] =3D func ? func.apply(value, =
args) : invokePath(value, path, args);\n\t      });\n\t      return =
result;\n\t    });\n\n\t    /**\n\t     * Creates an array of values by =
running each element in `collection` through\n\t     * `iteratee`. The =
`iteratee` is bound to `thisArg` and invoked with three\n\t     * =
arguments: (value, index|key, collection).\n\t     *\n\t     * If a =
property name is provided for `iteratee` the created `_.property`\n\t    =
 * style callback returns the property value of the given element.\n\t   =
  *\n\t     * If a value is also provided for `thisArg` the created =
`_.matchesProperty`\n\t     * style callback returns `true` for elements =
that have a matching property\n\t     * value, else `false`.\n\t     =
*\n\t     * If an object is provided for `iteratee` the created =
`_.matches` style\n\t     * callback returns `true` for elements that =
have the properties of the given\n\t     * object, else `false`.\n\t     =
*\n\t     * Many lodash methods are guarded to work as iteratees for =
methods like\n\t     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, =
`_.reject`, and `_.some`.\n\t     *\n\t     * The guarded methods =
are:\n\t     * `ary`, `callback`, `chunk`, `clone`, `create`, `curry`, =
`curryRight`,\n\t     * `drop`, `dropRight`, `every`, `fill`, `flatten`, =
`invert`, `max`, `min`,\n\t     * `parseInt`, `slice`, `sortBy`, `take`, =
`takeRight`, `template`, `trim`,\n\t     * `trimLeft`, `trimRight`, =
`trunc`, `random`, `range`, `sample`, `some`,\n\t     * `sum`, `uniq`, =
and `words`\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * =
@alias collect\n\t     * @category Collection\n\t     * @param =
{Array|Object|string} collection The collection to iterate over.\n\t     =
* @param {Function|Object|string} [iteratee=3D_.identity] The function =
invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The =
`this` binding of `iteratee`.\n\t     * @returns {Array} Returns the new =
mapped array.\n\t     * @example\n\t     *\n\t     * function =
timesThree(n) {\n\t     *   return n * 3;\n\t     * }\n\t     *\n\t     =
* _.map([1, 2], timesThree);\n\t     * // =3D&gt; [3, 6]\n\t     *\n\t   =
  * _.map({ 'a': 1, 'b': 2 }, timesThree);\n\t     * // =3D&gt; [3, 6] =
(iteration order is not guaranteed)\n\t     *\n\t     * var users =3D =
[\n\t     *   { 'user': 'barney' },\n\t     *   { 'user': 'fred' }\n\t   =
  * ];\n\t     *\n\t     * // using the `_.property` callback =
shorthand\n\t     * _.map(users, 'user');\n\t     * // =3D&gt; =
['barney', 'fred']\n\t     */\n\t    function map(collection, iteratee, =
thisArg) {\n\t      var func =3D isArray(collection) ? arrayMap : =
baseMap;\n\t      iteratee =3D getCallback(iteratee, thisArg, 3);\n\t    =
  return func(collection, iteratee);\n\t    }\n\n\t    /**\n\t     * =
Creates an array of elements split into two groups, the first of =
which\n\t     * contains elements `predicate` returns truthy for, while =
the second of which\n\t     * contains elements `predicate` returns =
falsey for. The predicate is bound\n\t     * to `thisArg` and invoked =
with three arguments: (value, index|key, collection).\n\t     *\n\t     =
* If a property name is provided for `predicate` the created =
`_.property`\n\t     * style callback returns the property value of the =
given element.\n\t     *\n\t     * If a value is also provided for =
`thisArg` the created `_.matchesProperty`\n\t     * style callback =
returns `true` for elements that have a matching property\n\t     * =
value, else `false`.\n\t     *\n\t     * If an object is provided for =
`predicate` the created `_.matches` style\n\t     * callback returns =
`true` for elements that have the properties of the given\n\t     * =
object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf =
_\n\t     * @category Collection\n\t     * @param {Array|Object|string} =
collection The collection to iterate over.\n\t     * @param =
{Function|Object|string} [predicate=3D_.identity] The function =
invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The =
`this` binding of `predicate`.\n\t     * @returns {Array} Returns the =
array of grouped elements.\n\t     * @example\n\t     *\n\t     * =
_.partition([1, 2, 3], function(n) {\n\t     *   return n % 2;\n\t     * =
});\n\t     * // =3D&gt; [[1, 3], [2]]\n\t     *\n\t     * =
_.partition([1.2, 2.3, 3.4], function(n) {\n\t     *   return =
this.floor(n) % 2;\n\t     * }, Math);\n\t     * // =3D&gt; [[1.2, 3.4], =
[2.3]]\n\t     *\n\t     * var users =3D [\n\t     *   { 'user': =
'barney',  'age': 36, 'active': false },\n\t     *   { 'user': 'fred',   =
 'age': 40, 'active': true },\n\t     *   { 'user': 'pebbles', 'age': 1, =
 'active': false }\n\t     * ];\n\t     *\n\t     * var mapper =3D =
function(array) {\n\t     *   return _.pluck(array, 'user');\n\t     * =
};\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t   =
  * _.map(_.partition(users, { 'age': 1, 'active': false }), =
mapper);\n\t     * // =3D&gt; [['pebbles'], ['barney', 'fred']]\n\t     =
*\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     =
* _.map(_.partition(users, 'active', false), mapper);\n\t     * // =
=3D&gt; [['barney', 'pebbles'], ['fred']]\n\t     *\n\t     * // using =
the `_.property` callback shorthand\n\t     * _.map(_.partition(users, =
'active'), mapper);\n\t     * // =3D&gt; [['fred'], ['barney', =
'pebbles']]\n\t     */\n\t    var partition =3D =
createAggregator(function(result, value, key) {\n\t      result[key ? 0 =
: 1].push(value);\n\t    }, function() { return [[], []]; });\n\n\t    =
/**\n\t     * Gets the property value of `path` from all elements in =
`collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     =
* @category Collection\n\t     * @param {Array|Object|string} collection =
The collection to iterate over.\n\t     * @param {Array|string} path The =
path of the property to pluck.\n\t     * @returns {Array} Returns the =
property values.\n\t     * @example\n\t     *\n\t     * var users =3D =
[\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': =
'fred',   'age': 40 }\n\t     * ];\n\t     *\n\t     * _.pluck(users, =
'user');\n\t     * // =3D&gt; ['barney', 'fred']\n\t     *\n\t     * var =
userIndex =3D _.indexBy(users, 'user');\n\t     * _.pluck(userIndex, =
'age');\n\t     * // =3D&gt; [36, 40] (iteration order is not =
guaranteed)\n\t     */\n\t    function pluck(collection, path) {\n\t     =
 return map(collection, property(path));\n\t    }\n\n\t    /**\n\t     * =
Reduces `collection` to a value which is the accumulated result of =
running\n\t     * each element in `collection` through `iteratee`, where =
each successive\n\t     * invocation is supplied the return value of the =
previous. If `accumulator`\n\t     * is not provided the first element =
of `collection` is used as the initial\n\t     * value. The `iteratee` =
is bound to `thisArg` and invoked with four arguments:\n\t     * =
(accumulator, value, index|key, collection).\n\t     *\n\t     * Many =
lodash methods are guarded to work as iteratees for methods like\n\t     =
* `_.reduce`, `_.reduceRight`, and `_.transform`.\n\t     *\n\t     * =
The guarded methods are:\n\t     * `assign`, `defaults`, `defaultsDeep`, =
`includes`, `merge`, `sortByAll`,\n\t     * and `sortByOrder`\n\t     =
*\n\t     * @static\n\t     * @memberOf _\n\t     * @alias foldl, =
inject\n\t     * @category Collection\n\t     * @param =
{Array|Object|string} collection The collection to iterate over.\n\t     =
* @param {Function} [iteratee=3D_.identity] The function invoked per =
iteration.\n\t     * @param {*} [accumulator] The initial value.\n\t     =
* @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * =
@returns {*} Returns the accumulated value.\n\t     * @example\n\t     =
*\n\t     * _.reduce([1, 2], function(total, n) {\n\t     *   return =
total + n;\n\t     * });\n\t     * // =3D&gt; 3\n\t     *\n\t     * =
_.reduce({ 'a': 1, 'b': 2 }, function(result, n, key) {\n\t     *   =
result[key] =3D n * 3;\n\t     *   return result;\n\t     * }, {});\n\t  =
   * // =3D&gt; { 'a': 3, 'b': 6 } (iteration order is not =
guaranteed)\n\t     */\n\t    var reduce =3D createReduce(arrayReduce, =
baseEach);\n\n\t    /**\n\t     * This method is like `_.reduce` except =
that it iterates over elements of\n\t     * `collection` from right to =
left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias =
foldr\n\t     * @category Collection\n\t     * @param =
{Array|Object|string} collection The collection to iterate over.\n\t     =
* @param {Function} [iteratee=3D_.identity] The function invoked per =
iteration.\n\t     * @param {*} [accumulator] The initial value.\n\t     =
* @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * =
@returns {*} Returns the accumulated value.\n\t     * @example\n\t     =
*\n\t     * var array =3D [[0, 1], [2, 3], [4, 5]];\n\t     *\n\t     * =
_.reduceRight(array, function(flattened, other) {\n\t     *   return =
flattened.concat(other);\n\t     * }, []);\n\t     * // =3D&gt; [4, 5, =
2, 3, 0, 1]\n\t     */\n\t    var reduceRight =3D =
createReduce(arrayReduceRight, baseEachRight);\n\n\t    /**\n\t     * =
The opposite of `_.filter`; this method returns the elements of =
`collection`\n\t     * that `predicate` does **not** return truthy =
for.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * =
@category Collection\n\t     * @param {Array|Object|string} collection =
The collection to iterate over.\n\t     * @param =
{Function|Object|string} [predicate=3D_.identity] The function =
invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The =
`this` binding of `predicate`.\n\t     * @returns {Array} Returns the =
new filtered array.\n\t     * @example\n\t     *\n\t     * _.reject([1, =
2, 3, 4], function(n) {\n\t     *   return n % 2 =3D=3D 0;\n\t     * =
});\n\t     * // =3D&gt; [1, 3]\n\t     *\n\t     * var users =3D [\n\t  =
   *   { 'user': 'barney', 'age': 36, 'active': false },\n\t     *   { =
'user': 'fred',   'age': 40, 'active': true }\n\t     * ];\n\t     *\n\t =
    * // using the `_.matches` callback shorthand\n\t     * =
_.pluck(_.reject(users, { 'age': 40, 'active': true }), 'user');\n\t     =
* // =3D&gt; ['barney']\n\t     *\n\t     * // using the =
`_.matchesProperty` callback shorthand\n\t     * _.pluck(_.reject(users, =
'active', false), 'user');\n\t     * // =3D&gt; ['fred']\n\t     *\n\t   =
  * // using the `_.property` callback shorthand\n\t     * =
_.pluck(_.reject(users, 'active'), 'user');\n\t     * // =3D&gt; =
['barney']\n\t     */\n\t    function reject(collection, predicate, =
thisArg) {\n\t      var func =3D isArray(collection) ? arrayFilter : =
baseFilter;\n\t      predicate =3D getCallback(predicate, thisArg, =
3);\n\t      return func(collection, function(value, index, collection) =
{\n\t        return !predicate(value, index, collection);\n\t      =
});\n\t    }\n\n\t    /**\n\t     * Gets a random element or `n` random =
elements from a collection.\n\t     *\n\t     * @static\n\t     * =
@memberOf _\n\t     * @category Collection\n\t     * @param =
{Array|Object|string} collection The collection to sample.\n\t     * =
@param {number} [n] The number of elements to sample.\n\t     * @param- =
{Object} [guard] Enables use as a callback for functions like =
`_.map`.\n\t     * @returns {*} Returns the random sample(s).\n\t     * =
@example\n\t     *\n\t     * _.sample([1, 2, 3, 4]);\n\t     * // =
=3D&gt; 2\n\t     *\n\t     * _.sample([1, 2, 3, 4], 2);\n\t     * // =
=3D&gt; [3, 1]\n\t     */\n\t    function sample(collection, n, guard) =
{\n\t      if (guard ? isIterateeCall(collection, n, guard) : n =3D=3D =
null) {\n\t        collection =3D toIterable(collection);\n\t        var =
length =3D collection.length;\n\t        return length &gt; 0 ? =
collection[baseRandom(0, length - 1)] : undefined;\n\t      }\n\t      =
var index =3D -1,\n\t          result =3D toArray(collection),\n\t       =
   length =3D result.length,\n\t          lastIndex =3D length - =
1;\n\n\t      n =3D nativeMin(n &lt; 0 ? 0 : (+n || 0), length);\n\t     =
 while (++index &lt; n) {\n\t        var rand =3D baseRandom(index, =
lastIndex),\n\t            value =3D result[rand];\n\n\t        =
result[rand] =3D result[index];\n\t        result[index] =3D value;\n\t  =
    }\n\t      result.length =3D n;\n\t      return result;\n\t    =
}\n\n\t    /**\n\t     * Creates an array of shuffled values, using a =
version of the\n\t     * [Fisher-Yates =
shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n\t     =
*\n\t     * @static\n\t     * @memberOf _\n\t     * @category =
Collection\n\t     * @param {Array|Object|string} collection The =
collection to shuffle.\n\t     * @returns {Array} Returns the new =
shuffled array.\n\t     * @example\n\t     *\n\t     * _.shuffle([1, 2, =
3, 4]);\n\t     * // =3D&gt; [4, 1, 3, 2]\n\t     */\n\t    function =
shuffle(collection) {\n\t      return sample(collection, =
POSITIVE_INFINITY);\n\t    }\n\n\t    /**\n\t     * Gets the size of =
`collection` by returning its length for array-like\n\t     * values or =
the number of own enumerable properties for objects.\n\t     *\n\t     * =
@static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * =
@param {Array|Object|string} collection The collection to inspect.\n\t   =
  * @returns {number} Returns the size of `collection`.\n\t     * =
@example\n\t     *\n\t     * _.size([1, 2, 3]);\n\t     * // =3D&gt; =
3\n\t     *\n\t     * _.size({ 'a': 1, 'b': 2 });\n\t     * // =3D&gt; =
2\n\t     *\n\t     * _.size('pebbles');\n\t     * // =3D&gt; 7\n\t     =
*/\n\t    function size(collection) {\n\t      var length =3D collection =
? getLength(collection) : 0;\n\t      return isLength(length) ? length : =
keys(collection).length;\n\t    }\n\n\t    /**\n\t     * Checks if =
`predicate` returns truthy for **any** element of `collection`.\n\t     =
* The function returns as soon as it finds a passing value and does not =
iterate\n\t     * over the entire collection. The predicate is bound to =
`thisArg` and invoked\n\t     * with three arguments: (value, index|key, =
collection).\n\t     *\n\t     * If a property name is provided for =
`predicate` the created `_.property`\n\t     * style callback returns =
the property value of the given element.\n\t     *\n\t     * If a value =
is also provided for `thisArg` the created `_.matchesProperty`\n\t     * =
style callback returns `true` for elements that have a matching =
property\n\t     * value, else `false`.\n\t     *\n\t     * If an object =
is provided for `predicate` the created `_.matches` style\n\t     * =
callback returns `true` for elements that have the properties of the =
given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t    =
 * @memberOf _\n\t     * @alias any\n\t     * @category Collection\n\t   =
  * @param {Array|Object|string} collection The collection to iterate =
over.\n\t     * @param {Function|Object|string} [predicate=3D_.identity] =
The function invoked\n\t     *  per iteration.\n\t     * @param {*} =
[thisArg] The `this` binding of `predicate`.\n\t     * @returns =
{boolean} Returns `true` if any element passes the predicate check,\n\t  =
   *  else `false`.\n\t     * @example\n\t     *\n\t     * _.some([null, =
0, 'yes', false], Boolean);\n\t     * // =3D&gt; true\n\t     *\n\t     =
* var users =3D [\n\t     *   { 'user': 'barney', 'active': true },\n\t  =
   *   { 'user': 'fred',   'active': false }\n\t     * ];\n\t     *\n\t  =
   * // using the `_.matches` callback shorthand\n\t     * _.some(users, =
{ 'user': 'barney', 'active': false });\n\t     * // =3D&gt; false\n\t   =
  *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t    =
 * _.some(users, 'active', false);\n\t     * // =3D&gt; true\n\t     =
*\n\t     * // using the `_.property` callback shorthand\n\t     * =
_.some(users, 'active');\n\t     * // =3D&gt; true\n\t     */\n\t    =
function some(collection, predicate, thisArg) {\n\t      var func =3D =
isArray(collection) ? arraySome : baseSome;\n\t      if (thisArg =
&amp;&amp; isIterateeCall(collection, predicate, thisArg)) {\n\t        =
predicate =3D undefined;\n\t      }\n\t      if (typeof predicate !=3D =
'function' || thisArg !=3D=3D undefined) {\n\t        predicate =3D =
getCallback(predicate, thisArg, 3);\n\t      }\n\t      return =
func(collection, predicate);\n\t    }\n\n\t    /**\n\t     * Creates an =
array of elements, sorted in ascending order by the results of\n\t     * =
running each element in a collection through `iteratee`. This method =
performs\n\t     * a stable sort, that is, it preserves the original =
sort order of equal elements.\n\t     * The `iteratee` is bound to =
`thisArg` and invoked with three arguments:\n\t     * (value, index|key, =
collection).\n\t     *\n\t     * If a property name is provided for =
`iteratee` the created `_.property`\n\t     * style callback returns the =
property value of the given element.\n\t     *\n\t     * If a value is =
also provided for `thisArg` the created `_.matchesProperty`\n\t     * =
style callback returns `true` for elements that have a matching =
property\n\t     * value, else `false`.\n\t     *\n\t     * If an object =
is provided for `iteratee` the created `_.matches` style\n\t     * =
callback returns `true` for elements that have the properties of the =
given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t    =
 * @memberOf _\n\t     * @category Collection\n\t     * @param =
{Array|Object|string} collection The collection to iterate over.\n\t     =
* @param {Function|Object|string} [iteratee=3D_.identity] The function =
invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The =
`this` binding of `iteratee`.\n\t     * @returns {Array} Returns the new =
sorted array.\n\t     * @example\n\t     *\n\t     * _.sortBy([1, 2, 3], =
function(n) {\n\t     *   return Math.sin(n);\n\t     * });\n\t     * // =
=3D&gt; [3, 1, 2]\n\t     *\n\t     * _.sortBy([1, 2, 3], function(n) =
{\n\t     *   return this.sin(n);\n\t     * }, Math);\n\t     * // =
=3D&gt; [3, 1, 2]\n\t     *\n\t     * var users =3D [\n\t     *   { =
'user': 'fred' },\n\t     *   { 'user': 'pebbles' },\n\t     *   { =
'user': 'barney' }\n\t     * ];\n\t     *\n\t     * // using the =
`_.property` callback shorthand\n\t     * _.pluck(_.sortBy(users, =
'user'), 'user');\n\t     * // =3D&gt; ['barney', 'fred', 'pebbles']\n\t =
    */\n\t    function sortBy(collection, iteratee, thisArg) {\n\t      =
if (collection =3D=3D null) {\n\t        return [];\n\t      }\n\t      =
if (thisArg &amp;&amp; isIterateeCall(collection, iteratee, thisArg)) =
{\n\t        iteratee =3D undefined;\n\t      }\n\t      var index =3D =
-1;\n\t      iteratee =3D getCallback(iteratee, thisArg, 3);\n\n\t      =
var result =3D baseMap(collection, function(value, key, collection) =
{\n\t        return { 'criteria': iteratee(value, key, collection), =
'index': ++index, 'value': value };\n\t      });\n\t      return =
baseSortBy(result, compareAscending);\n\t    }\n\n\t    /**\n\t     * =
This method is like `_.sortBy` except that it can sort by multiple =
iteratees\n\t     * or property names.\n\t     *\n\t     * If a property =
name is provided for an iteratee the created `_.property`\n\t     * =
style callback returns the property value of the given element.\n\t     =
*\n\t     * If an object is provided for an iteratee the created =
`_.matches` style\n\t     * callback returns `true` for elements that =
have the properties of the given\n\t     * object, else `false`.\n\t     =
*\n\t     * @static\n\t     * @memberOf _\n\t     * @category =
Collection\n\t     * @param {Array|Object|string} collection The =
collection to iterate over.\n\t     * @param =
{...(Function|Function[]|Object|Object[]|string|string[])} iteratees\n\t =
    *  The iteratees to sort by, specified as individual values or =
arrays of values.\n\t     * @returns {Array} Returns the new sorted =
array.\n\t     * @example\n\t     *\n\t     * var users =3D [\n\t     *  =
 { 'user': 'fred',   'age': 48 },\n\t     *   { 'user': 'barney', 'age': =
36 },\n\t     *   { 'user': 'fred',   'age': 42 },\n\t     *   { 'user': =
'barney', 'age': 34 }\n\t     * ];\n\t     *\n\t     * =
_.map(_.sortByAll(users, ['user', 'age']), _.values);\n\t     * // =
=3D&gt; [['barney', 34], ['barney', 36], ['fred', 42], ['fred', 48]]\n\t =
    *\n\t     * _.map(_.sortByAll(users, 'user', function(chr) {\n\t     =
*   return Math.floor(chr.age / 10);\n\t     * }), _.values);\n\t     * =
// =3D&gt; [['barney', 36], ['barney', 34], ['fred', 48], ['fred', =
42]]\n\t     */\n\t    var sortByAll =3D restParam(function(collection, =
iteratees) {\n\t      if (collection =3D=3D null) {\n\t        return =
[];\n\t      }\n\t      var guard =3D iteratees[2];\n\t      if (guard =
&amp;&amp; isIterateeCall(iteratees[0], iteratees[1], guard)) {\n\t      =
  iteratees.length =3D 1;\n\t      }\n\t      return =
baseSortByOrder(collection, baseFlatten(iteratees), []);\n\t    =
});\n\n\t    /**\n\t     * This method is like `_.sortByAll` except that =
it allows specifying the\n\t     * sort orders of the iteratees to sort =
by. If `orders` is unspecified, all\n\t     * values are sorted in =
ascending order. Otherwise, a value is sorted in\n\t     * ascending =
order if its corresponding order is \"asc\", and descending if =
\"desc\".\n\t     *\n\t     * If a property name is provided for an =
iteratee the created `_.property`\n\t     * style callback returns the =
property value of the given element.\n\t     *\n\t     * If an object is =
provided for an iteratee the created `_.matches` style\n\t     * =
callback returns `true` for elements that have the properties of the =
given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t    =
 * @memberOf _\n\t     * @category Collection\n\t     * @param =
{Array|Object|string} collection The collection to iterate over.\n\t     =
* @param {Function[]|Object[]|string[]} iteratees The iteratees to sort =
by.\n\t     * @param {boolean[]} [orders] The sort orders of =
`iteratees`.\n\t     * @param- {Object} [guard] Enables use as a =
callback for functions like `_.reduce`.\n\t     * @returns {Array} =
Returns the new sorted array.\n\t     * @example\n\t     *\n\t     * var =
users =3D [\n\t     *   { 'user': 'fred',   'age': 48 },\n\t     *   { =
'user': 'barney', 'age': 34 },\n\t     *   { 'user': 'fred',   'age': 42 =
},\n\t     *   { 'user': 'barney', 'age': 36 }\n\t     * ];\n\t     =
*\n\t     * // sort by `user` in ascending order and by `age` in =
descending order\n\t     * _.map(_.sortByOrder(users, ['user', 'age'], =
['asc', 'desc']), _.values);\n\t     * // =3D&gt; [['barney', 36], =
['barney', 34], ['fred', 48], ['fred', 42]]\n\t     */\n\t    function =
sortByOrder(collection, iteratees, orders, guard) {\n\t      if =
(collection =3D=3D null) {\n\t        return [];\n\t      }\n\t      if =
(guard &amp;&amp; isIterateeCall(iteratees, orders, guard)) {\n\t        =
orders =3D undefined;\n\t      }\n\t      if (!isArray(iteratees)) {\n\t =
       iteratees =3D iteratees =3D=3D null ? [] : [iteratees];\n\t      =
}\n\t      if (!isArray(orders)) {\n\t        orders =3D orders =3D=3D =
null ? [] : [orders];\n\t      }\n\t      return =
baseSortByOrder(collection, iteratees, orders);\n\t    }\n\n\t    =
/**\n\t     * Performs a deep comparison between each element in =
`collection` and the\n\t     * source object, returning an array of all =
elements that have equivalent\n\t     * property values.\n\t     *\n\t   =
  * **Note:** This method supports comparing arrays, booleans, `Date` =
objects,\n\t     * numbers, `Object` objects, regexes, and strings. =
Objects are compared by\n\t     * their own, not inherited, enumerable =
properties. For comparing a single\n\t     * own or inherited property =
value see `_.matchesProperty`.\n\t     *\n\t     * @static\n\t     * =
@memberOf _\n\t     * @category Collection\n\t     * @param =
{Array|Object|string} collection The collection to search.\n\t     * =
@param {Object} source The object of property values to match.\n\t     * =
@returns {Array} Returns the new filtered array.\n\t     * @example\n\t  =
   *\n\t     * var users =3D [\n\t     *   { 'user': 'barney', 'age': =
36, 'active': false, 'pets': ['hoppy'] },\n\t     *   { 'user': 'fred',  =
 'age': 40, 'active': true, 'pets': ['baby puss', 'dino'] }\n\t     * =
];\n\t     *\n\t     * _.pluck(_.where(users, { 'age': 36, 'active': =
false }), 'user');\n\t     * // =3D&gt; ['barney']\n\t     *\n\t     * =
_.pluck(_.where(users, { 'pets': ['dino'] }), 'user');\n\t     * // =
=3D&gt; ['fred']\n\t     */\n\t    function where(collection, source) =
{\n\t      return filter(collection, baseMatches(source));\n\t    =
}\n\n\t    =
/*-----------------------------------------------------------------------=
-*/\n\n\t    /**\n\t     * Gets the number of milliseconds that have =
elapsed since the Unix epoch\n\t     * (1 January 1970 00:00:00 =
UTC).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * =
@category Date\n\t     * @example\n\t     *\n\t     * =
_.defer(function(stamp) {\n\t     *   console.log(_.now() - stamp);\n\t  =
   * }, _.now());\n\t     * // =3D&gt; logs the number of milliseconds =
it took for the deferred function to be invoked\n\t     */\n\t    var =
now =3D nativeNow || function() {\n\t      return new =
Date().getTime();\n\t    };\n\n\t    =
/*-----------------------------------------------------------------------=
-*/\n\n\t    /**\n\t     * The opposite of `_.before`; this method =
creates a function that invokes\n\t     * `func` once it is called `n` =
or more times.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     =
* @category Function\n\t     * @param {number} n The number of calls =
before `func` is invoked.\n\t     * @param {Function} func The function =
to restrict.\n\t     * @returns {Function} Returns the new restricted =
function.\n\t     * @example\n\t     *\n\t     * var saves =3D =
['profile', 'settings'];\n\t     *\n\t     * var done =3D =
_.after(saves.length, function() {\n\t     *   console.log('done =
saving!');\n\t     * });\n\t     *\n\t     * _.forEach(saves, =
function(type) {\n\t     *   asyncSave({ 'type': type, 'complete': done =
});\n\t     * });\n\t     * // =3D&gt; logs 'done saving!' after the two =
async saves have completed\n\t     */\n\t    function after(n, func) =
{\n\t      if (typeof func !=3D 'function') {\n\t        if (typeof n =
=3D=3D 'function') {\n\t          var temp =3D n;\n\t          n =3D =
func;\n\t          func =3D temp;\n\t        } else {\n\t          throw =
new TypeError(FUNC_ERROR_TEXT);\n\t        }\n\t      }\n\t      n =3D =
nativeIsFinite(n =3D +n) ? n : 0;\n\t      return function() {\n\t       =
 if (--n &lt; 1) {\n\t          return func.apply(this, arguments);\n\t  =
      }\n\t      };\n\t    }\n\n\t    /**\n\t     * Creates a function =
that accepts up to `n` arguments ignoring any\n\t     * additional =
arguments.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * =
@category Function\n\t     * @param {Function} func The function to cap =
arguments for.\n\t     * @param {number} [n=3Dfunc.length] The arity =
cap.\n\t     * @param- {Object} [guard] Enables use as a callback for =
functions like `_.map`.\n\t     * @returns {Function} Returns the new =
function.\n\t     * @example\n\t     *\n\t     * _.map(['6', '8', '10'], =
_.ary(parseInt, 1));\n\t     * // =3D&gt; [6, 8, 10]\n\t     */\n\t    =
function ary(func, n, guard) {\n\t      if (guard &amp;&amp; =
isIterateeCall(func, n, guard)) {\n\t        n =3D undefined;\n\t      =
}\n\t      n =3D (func &amp;&amp; n =3D=3D null) ? func.length : =
nativeMax(+n || 0, 0);\n\t      return createWrapper(func, ARY_FLAG, =
undefined, undefined, undefined, undefined, n);\n\t    }\n\n\t    =
/**\n\t     * Creates a function that invokes `func`, with the `this` =
binding and arguments\n\t     * of the created function, while it is =
called less than `n` times. Subsequent\n\t     * calls to the created =
function return the result of the last `func` invocation.\n\t     *\n\t  =
   * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     =
* @param {number} n The number of calls at which `func` is no longer =
invoked.\n\t     * @param {Function} func The function to restrict.\n\t  =
   * @returns {Function} Returns the new restricted function.\n\t     * =
@example\n\t     *\n\t     * jQuery('#add').on('click', _.before(5, =
addContactToList));\n\t     * // =3D&gt; allows adding up to 4 contacts =
to the list\n\t     */\n\t    function before(n, func) {\n\t      var =
result;\n\t      if (typeof func !=3D 'function') {\n\t        if =
(typeof n =3D=3D 'function') {\n\t          var temp =3D n;\n\t          =
n =3D func;\n\t          func =3D temp;\n\t        } else {\n\t          =
throw new TypeError(FUNC_ERROR_TEXT);\n\t        }\n\t      }\n\t      =
return function() {\n\t        if (--n &gt; 0) {\n\t          result =3D =
func.apply(this, arguments);\n\t        }\n\t        if (n &lt;=3D 1) =
{\n\t          func =3D undefined;\n\t        }\n\t        return =
result;\n\t      };\n\t    }\n\n\t    /**\n\t     * Creates a function =
that invokes `func` with the `this` binding of `thisArg`\n\t     * and =
prepends any additional `_.bind` arguments to those provided to the\n\t  =
   * bound function.\n\t     *\n\t     * The `_.bind.placeholder` value, =
which defaults to `_` in monolithic builds,\n\t     * may be used as a =
placeholder for partially applied arguments.\n\t     *\n\t     * =
**Note:** Unlike native `Function#bind` this method does not set the =
\"length\"\n\t     * property of bound functions.\n\t     *\n\t     * =
@static\n\t     * @memberOf _\n\t     * @category Function\n\t     * =
@param {Function} func The function to bind.\n\t     * @param {*} =
thisArg The `this` binding of `func`.\n\t     * @param {...*} [partials] =
The arguments to be partially applied.\n\t     * @returns {Function} =
Returns the new bound function.\n\t     * @example\n\t     *\n\t     * =
var greet =3D function(greeting, punctuation) {\n\t     *   return =
greeting + ' ' + this.user + punctuation;\n\t     * };\n\t     *\n\t     =
* var object =3D { 'user': 'fred' };\n\t     *\n\t     * var bound =3D =
_.bind(greet, object, 'hi');\n\t     * bound('!');\n\t     * // =3D&gt; =
'hi fred!'\n\t     *\n\t     * // using placeholders\n\t     * var bound =
=3D _.bind(greet, object, _, '!');\n\t     * bound('hi');\n\t     * // =
=3D&gt; 'hi fred!'\n\t     */\n\t    var bind =3D =
restParam(function(func, thisArg, partials) {\n\t      var bitmask =3D =
BIND_FLAG;\n\t      if (partials.length) {\n\t        var holders =3D =
replaceHolders(partials, bind.placeholder);\n\t        bitmask |=3D =
PARTIAL_FLAG;\n\t      }\n\t      return createWrapper(func, bitmask, =
thisArg, partials, holders);\n\t    });\n\n\t    /**\n\t     * Binds =
methods of an object to the object itself, overwriting the existing\n\t  =
   * method. Method names may be specified as individual arguments or as =
arrays\n\t     * of method names. If no method names are provided all =
enumerable function\n\t     * properties, own and inherited, of `object` =
are bound.\n\t     *\n\t     * **Note:** This method does not set the =
\"length\" property of bound functions.\n\t     *\n\t     * @static\n\t  =
   * @memberOf _\n\t     * @category Function\n\t     * @param {Object} =
object The object to bind and assign the bound methods to.\n\t     * =
@param {...(string|string[])} [methodNames] The object method names to =
bind,\n\t     *  specified as individual method names or arrays of =
method names.\n\t     * @returns {Object} Returns `object`.\n\t     * =
@example\n\t     *\n\t     * var view =3D {\n\t     *   'label': =
'docs',\n\t     *   'onClick': function() {\n\t     *     =
console.log('clicked ' + this.label);\n\t     *   }\n\t     * };\n\t     =
*\n\t     * _.bindAll(view);\n\t     * jQuery('#docs').on('click', =
view.onClick);\n\t     * // =3D&gt; logs 'clicked docs' when the element =
is clicked\n\t     */\n\t    var bindAll =3D restParam(function(object, =
methodNames) {\n\t      methodNames =3D methodNames.length ? =
baseFlatten(methodNames) : functions(object);\n\n\t      var index =3D =
-1,\n\t          length =3D methodNames.length;\n\n\t      while =
(++index &lt; length) {\n\t        var key =3D methodNames[index];\n\t   =
     object[key] =3D createWrapper(object[key], BIND_FLAG, object);\n\t  =
    }\n\t      return object;\n\t    });\n\n\t    /**\n\t     * Creates =
a function that invokes the method at `object[key]` and prepends\n\t     =
* any additional `_.bindKey` arguments to those provided to the bound =
function.\n\t     *\n\t     * This method differs from `_.bind` by =
allowing bound functions to reference\n\t     * methods that may be =
redefined or don't yet exist.\n\t     * See [Peter Michaux's =
article](http://peter.michaux.ca/articles/lazy-function-definition-patter=
n)\n\t     * for more details.\n\t     *\n\t     * The =
`_.bindKey.placeholder` value, which defaults to `_` in monolithic\n\t   =
  * builds, may be used as a placeholder for partially applied =
arguments.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * =
@category Function\n\t     * @param {Object} object The object the =
method belongs to.\n\t     * @param {string} key The key of the =
method.\n\t     * @param {...*} [partials] The arguments to be partially =
applied.\n\t     * @returns {Function} Returns the new bound =
function.\n\t     * @example\n\t     *\n\t     * var object =3D {\n\t    =
 *   'user': 'fred',\n\t     *   'greet': function(greeting, =
punctuation) {\n\t     *     return greeting + ' ' + this.user + =
punctuation;\n\t     *   }\n\t     * };\n\t     *\n\t     * var bound =
=3D _.bindKey(object, 'greet', 'hi');\n\t     * bound('!');\n\t     * // =
=3D&gt; 'hi fred!'\n\t     *\n\t     * object.greet =3D =
function(greeting, punctuation) {\n\t     *   return greeting + 'ya ' + =
this.user + punctuation;\n\t     * };\n\t     *\n\t     * =
bound('!');\n\t     * // =3D&gt; 'hiya fred!'\n\t     *\n\t     * // =
using placeholders\n\t     * var bound =3D _.bindKey(object, 'greet', _, =
'!');\n\t     * bound('hi');\n\t     * // =3D&gt; 'hiya fred!'\n\t     =
*/\n\t    var bindKey =3D restParam(function(object, key, partials) =
{\n\t      var bitmask =3D BIND_FLAG | BIND_KEY_FLAG;\n\t      if =
(partials.length) {\n\t        var holders =3D replaceHolders(partials, =
bindKey.placeholder);\n\t        bitmask |=3D PARTIAL_FLAG;\n\t      =
}\n\t      return createWrapper(key, bitmask, object, partials, =
holders);\n\t    });\n\n\t    /**\n\t     * Creates a function that =
accepts one or more arguments of `func` that when\n\t     * called =
either invokes `func` returning its result, if all `func` arguments\n\t  =
   * have been provided, or returns a function that accepts one or more =
of the\n\t     * remaining `func` arguments, and so on. The arity of =
`func` may be specified\n\t     * if `func.length` is not =
sufficient.\n\t     *\n\t     * The `_.curry.placeholder` value, which =
defaults to `_` in monolithic builds,\n\t     * may be used as a =
placeholder for provided arguments.\n\t     *\n\t     * **Note:** This =
method does not set the \"length\" property of curried functions.\n\t    =
 *\n\t     * @static\n\t     * @memberOf _\n\t     * @category =
Function\n\t     * @param {Function} func The function to curry.\n\t     =
* @param {number} [arity=3Dfunc.length] The arity of `func`.\n\t     * =
@param- {Object} [guard] Enables use as a callback for functions like =
`_.map`.\n\t     * @returns {Function} Returns the new curried =
function.\n\t     * @example\n\t     *\n\t     * var abc =3D function(a, =
b, c) {\n\t     *   return [a, b, c];\n\t     * };\n\t     *\n\t     * =
var curried =3D _.curry(abc);\n\t     *\n\t     * curried(1)(2)(3);\n\t  =
   * // =3D&gt; [1, 2, 3]\n\t     *\n\t     * curried(1, 2)(3);\n\t     =
* // =3D&gt; [1, 2, 3]\n\t     *\n\t     * curried(1, 2, 3);\n\t     * =
// =3D&gt; [1, 2, 3]\n\t     *\n\t     * // using placeholders\n\t     * =
curried(1)(_, 3)(2);\n\t     * // =3D&gt; [1, 2, 3]\n\t     */\n\t    =
var curry =3D createCurry(CURRY_FLAG);\n\n\t    /**\n\t     * This =
method is like `_.curry` except that arguments are applied to `func`\n\t =
    * in the manner of `_.partialRight` instead of `_.partial`.\n\t     =
*\n\t     * The `_.curryRight.placeholder` value, which defaults to `_` =
in monolithic\n\t     * builds, may be used as a placeholder for =
provided arguments.\n\t     *\n\t     * **Note:** This method does not =
set the \"length\" property of curried functions.\n\t     *\n\t     * =
@static\n\t     * @memberOf _\n\t     * @category Function\n\t     * =
@param {Function} func The function to curry.\n\t     * @param {number} =
[arity=3Dfunc.length] The arity of `func`.\n\t     * @param- {Object} =
[guard] Enables use as a callback for functions like `_.map`.\n\t     * =
@returns {Function} Returns the new curried function.\n\t     * =
@example\n\t     *\n\t     * var abc =3D function(a, b, c) {\n\t     *   =
return [a, b, c];\n\t     * };\n\t     *\n\t     * var curried =3D =
_.curryRight(abc);\n\t     *\n\t     * curried(3)(2)(1);\n\t     * // =
=3D&gt; [1, 2, 3]\n\t     *\n\t     * curried(2, 3)(1);\n\t     * // =
=3D&gt; [1, 2, 3]\n\t     *\n\t     * curried(1, 2, 3);\n\t     * // =
=3D&gt; [1, 2, 3]\n\t     *\n\t     * // using placeholders\n\t     * =
curried(3)(1, _)(2);\n\t     * // =3D&gt; [1, 2, 3]\n\t     */\n\t    =
var curryRight =3D createCurry(CURRY_RIGHT_FLAG);\n\n\t    /**\n\t     * =
Creates a debounced function that delays invoking `func` until after =
`wait`\n\t     * milliseconds have elapsed since the last time the =
debounced function was\n\t     * invoked. The debounced function comes =
with a `cancel` method to cancel\n\t     * delayed invocations. Provide =
an options object to indicate that `func`\n\t     * should be invoked on =
the leading and/or trailing edge of the `wait` timeout.\n\t     * =
Subsequent calls to the debounced function return the result of the =
last\n\t     * `func` invocation.\n\t     *\n\t     * **Note:** If =
`leading` and `trailing` options are `true`, `func` is invoked\n\t     * =
on the trailing edge of the timeout only if the the debounced function =
is\n\t     * invoked more than once during the `wait` timeout.\n\t     =
*\n\t     * See [David Corbacho's =
article](http://drupalmotion.com/article/debounce-and-throttle-visual-exp=
lanation)\n\t     * for details over the differences between =
`_.debounce` and `_.throttle`.\n\t     *\n\t     * @static\n\t     * =
@memberOf _\n\t     * @category Function\n\t     * @param {Function} =
func The function to debounce.\n\t     * @param {number} [wait=3D0] The =
number of milliseconds to delay.\n\t     * @param {Object} [options] The =
options object.\n\t     * @param {boolean} [options.leading=3Dfalse] =
Specify invoking on the leading\n\t     *  edge of the timeout.\n\t     =
* @param {number} [options.maxWait] The maximum time `func` is allowed =
to be\n\t     *  delayed before it is invoked.\n\t     * @param =
{boolean} [options.trailing=3Dtrue] Specify invoking on the trailing\n\t =
    *  edge of the timeout.\n\t     * @returns {Function} Returns the =
new debounced function.\n\t     * @example\n\t     *\n\t     * // avoid =
costly calculations while the window size is in flux\n\t     * =
jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n\t     =
*\n\t     * // invoke `sendMail` when the click event is fired, =
debouncing subsequent calls\n\t     * jQuery('#postbox').on('click', =
_.debounce(sendMail, 300, {\n\t     *   'leading': true,\n\t     *   =
'trailing': false\n\t     * }));\n\t     *\n\t     * // ensure =
`batchLog` is invoked once after 1 second of debounced calls\n\t     * =
var source =3D new EventSource('/stream');\n\t     * =
jQuery(source).on('message', _.debounce(batchLog, 250, {\n\t     *   =
'maxWait': 1000\n\t     * }));\n\t     *\n\t     * // cancel a debounced =
call\n\t     * var todoChanges =3D _.debounce(batchLog, 1000);\n\t     * =
Object.observe(models.todo, todoChanges);\n\t     *\n\t     * =
Object.observe(models, function(changes) {\n\t     *   if =
(_.find(changes, { 'user': 'todo', 'type': 'delete'})) {\n\t     *     =
todoChanges.cancel();\n\t     *   }\n\t     * }, ['delete']);\n\t     =
*\n\t     * // ...at some point `models.todo` is changed\n\t     * =
models.todo.completed =3D true;\n\t     *\n\t     * // ...before 1 =
second has passed `models.todo` is deleted\n\t     * // which cancels =
the debounced `todoChanges` call\n\t     * delete models.todo;\n\t     =
*/\n\t    function debounce(func, wait, options) {\n\t      var =
args,\n\t          maxTimeoutId,\n\t          result,\n\t          =
stamp,\n\t          thisArg,\n\t          timeoutId,\n\t          =
trailingCall,\n\t          lastCalled =3D 0,\n\t          maxWait =3D =
false,\n\t          trailing =3D true;\n\n\t      if (typeof func !=3D =
'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      =
}\n\t      wait =3D wait &lt; 0 ? 0 : (+wait || 0);\n\t      if (options =
=3D=3D=3D true) {\n\t        var leading =3D true;\n\t        trailing =
=3D false;\n\t      } else if (isObject(options)) {\n\t        leading =
=3D !!options.leading;\n\t        maxWait =3D 'maxWait' in options =
&amp;&amp; nativeMax(+options.maxWait || 0, wait);\n\t        trailing =
=3D 'trailing' in options ? !!options.trailing : trailing;\n\t      =
}\n\n\t      function cancel() {\n\t        if (timeoutId) {\n\t         =
 clearTimeout(timeoutId);\n\t        }\n\t        if (maxTimeoutId) =
{\n\t          clearTimeout(maxTimeoutId);\n\t        }\n\t        =
lastCalled =3D 0;\n\t        maxTimeoutId =3D timeoutId =3D trailingCall =
=3D undefined;\n\t      }\n\n\t      function complete(isCalled, id) =
{\n\t        if (id) {\n\t          clearTimeout(id);\n\t        }\n\t   =
     maxTimeoutId =3D timeoutId =3D trailingCall =3D undefined;\n\t      =
  if (isCalled) {\n\t          lastCalled =3D now();\n\t          result =
=3D func.apply(thisArg, args);\n\t          if (!timeoutId &amp;&amp; =
!maxTimeoutId) {\n\t            args =3D thisArg =3D undefined;\n\t      =
    }\n\t        }\n\t      }\n\n\t      function delayed() {\n\t        =
var remaining =3D wait - (now() - stamp);\n\t        if (remaining =
&lt;=3D 0 || remaining &gt; wait) {\n\t          complete(trailingCall, =
maxTimeoutId);\n\t        } else {\n\t          timeoutId =3D =
setTimeout(delayed, remaining);\n\t        }\n\t      }\n\n\t      =
function maxDelayed() {\n\t        complete(trailing, timeoutId);\n\t    =
  }\n\n\t      function debounced() {\n\t        args =3D arguments;\n\t =
       stamp =3D now();\n\t        thisArg =3D this;\n\t        =
trailingCall =3D trailing &amp;&amp; (timeoutId || !leading);\n\n\t      =
  if (maxWait =3D=3D=3D false) {\n\t          var leadingCall =3D =
leading &amp;&amp; !timeoutId;\n\t        } else {\n\t          if =
(!maxTimeoutId &amp;&amp; !leading) {\n\t            lastCalled =3D =
stamp;\n\t          }\n\t          var remaining =3D maxWait - (stamp - =
lastCalled),\n\t              isCalled =3D remaining &lt;=3D 0 || =
remaining &gt; maxWait;\n\n\t          if (isCalled) {\n\t            if =
(maxTimeoutId) {\n\t              maxTimeoutId =3D =
clearTimeout(maxTimeoutId);\n\t            }\n\t            lastCalled =
=3D stamp;\n\t            result =3D func.apply(thisArg, args);\n\t      =
    }\n\t          else if (!maxTimeoutId) {\n\t            maxTimeoutId =
=3D setTimeout(maxDelayed, remaining);\n\t          }\n\t        }\n\t   =
     if (isCalled &amp;&amp; timeoutId) {\n\t          timeoutId =3D =
clearTimeout(timeoutId);\n\t        }\n\t        else if (!timeoutId =
&amp;&amp; wait !=3D=3D maxWait) {\n\t          timeoutId =3D =
setTimeout(delayed, wait);\n\t        }\n\t        if (leadingCall) =
{\n\t          isCalled =3D true;\n\t          result =3D =
func.apply(thisArg, args);\n\t        }\n\t        if (isCalled =
&amp;&amp; !timeoutId &amp;&amp; !maxTimeoutId) {\n\t          args =3D =
thisArg =3D undefined;\n\t        }\n\t        return result;\n\t      =
}\n\t      debounced.cancel =3D cancel;\n\t      return debounced;\n\t   =
 }\n\n\t    /**\n\t     * Defers invoking the `func` until the current =
call stack has cleared. Any\n\t     * additional arguments are provided =
to `func` when it is invoked.\n\t     *\n\t     * @static\n\t     * =
@memberOf _\n\t     * @category Function\n\t     * @param {Function} =
func The function to defer.\n\t     * @param {...*} [args] The arguments =
to invoke the function with.\n\t     * @returns {number} Returns the =
timer id.\n\t     * @example\n\t     *\n\t     * _.defer(function(text) =
{\n\t     *   console.log(text);\n\t     * }, 'deferred');\n\t     * // =
logs 'deferred' after one or more milliseconds\n\t     */\n\t    var =
defer =3D restParam(function(func, args) {\n\t      return =
baseDelay(func, 1, args);\n\t    });\n\n\t    /**\n\t     * Invokes =
`func` after `wait` milliseconds. Any additional arguments are\n\t     * =
provided to `func` when it is invoked.\n\t     *\n\t     * @static\n\t   =
  * @memberOf _\n\t     * @category Function\n\t     * @param {Function} =
func The function to delay.\n\t     * @param {number} wait The number of =
milliseconds to delay invocation.\n\t     * @param {...*} [args] The =
arguments to invoke the function with.\n\t     * @returns {number} =
Returns the timer id.\n\t     * @example\n\t     *\n\t     * =
_.delay(function(text) {\n\t     *   console.log(text);\n\t     * }, =
1000, 'later');\n\t     * // =3D&gt; logs 'later' after one second\n\t   =
  */\n\t    var delay =3D restParam(function(func, wait, args) {\n\t     =
 return baseDelay(func, wait, args);\n\t    });\n\n\t    /**\n\t     * =
Creates a function that returns the result of invoking the provided\n\t  =
   * functions with the `this` binding of the created function, where =
each\n\t     * successive invocation is supplied the return value of the =
previous.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * =
@category Function\n\t     * @param {...Function} [funcs] Functions to =
invoke.\n\t     * @returns {Function} Returns the new function.\n\t     =
* @example\n\t     *\n\t     * function square(n) {\n\t     *   return n =
* n;\n\t     * }\n\t     *\n\t     * var addSquare =3D _.flow(_.add, =
square);\n\t     * addSquare(1, 2);\n\t     * // =3D&gt; 9\n\t     =
*/\n\t    var flow =3D createFlow();\n\n\t    /**\n\t     * This method =
is like `_.flow` except that it creates a function that\n\t     * =
invokes the provided functions from right to left.\n\t     *\n\t     * =
@static\n\t     * @memberOf _\n\t     * @alias backflow, compose\n\t     =
* @category Function\n\t     * @param {...Function} [funcs] Functions to =
invoke.\n\t     * @returns {Function} Returns the new function.\n\t     =
* @example\n\t     *\n\t     * function square(n) {\n\t     *   return n =
* n;\n\t     * }\n\t     *\n\t     * var addSquare =3D =
_.flowRight(square, _.add);\n\t     * addSquare(1, 2);\n\t     * // =
=3D&gt; 9\n\t     */\n\t    var flowRight =3D createFlow(true);\n\n\t    =
/**\n\t     * Creates a function that memoizes the result of `func`. If =
`resolver` is\n\t     * provided it determines the cache key for storing =
the result based on the\n\t     * arguments provided to the memoized =
function. By default, the first argument\n\t     * provided to the =
memoized function is coerced to a string and used as the\n\t     * cache =
key. The `func` is invoked with the `this` binding of the memoized\n\t   =
  * function.\n\t     *\n\t     * **Note:** The cache is exposed as the =
`cache` property on the memoized\n\t     * function. Its creation may be =
customized by replacing the `_.memoize.Cache`\n\t     * constructor with =
one whose instances implement the =
[`Map`](http://ecma-international.org/ecma-262/6.0/#sec-properties-of-the=
-map-prototype-object)\n\t     * method interface of `get`, `has`, and =
`set`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * =
@category Function\n\t     * @param {Function} func The function to have =
its output memoized.\n\t     * @param {Function} [resolver] The function =
to resolve the cache key.\n\t     * @returns {Function} Returns the new =
memoizing function.\n\t     * @example\n\t     *\n\t     * var upperCase =
=3D _.memoize(function(string) {\n\t     *   return =
string.toUpperCase();\n\t     * });\n\t     *\n\t     * =
upperCase('fred');\n\t     * // =3D&gt; 'FRED'\n\t     *\n\t     * // =
modifying the result cache\n\t     * upperCase.cache.set('fred', =
'BARNEY');\n\t     * upperCase('fred');\n\t     * // =3D&gt; =
'BARNEY'\n\t     *\n\t     * // replacing `_.memoize.Cache`\n\t     * =
var object =3D { 'user': 'fred' };\n\t     * var other =3D { 'user': =
'barney' };\n\t     * var identity =3D _.memoize(_.identity);\n\t     =
*\n\t     * identity(object);\n\t     * // =3D&gt; { 'user': 'fred' =
}\n\t     * identity(other);\n\t     * // =3D&gt; { 'user': 'fred' }\n\t =
    *\n\t     * _.memoize.Cache =3D WeakMap;\n\t     * var identity =3D =
_.memoize(_.identity);\n\t     *\n\t     * identity(object);\n\t     * =
// =3D&gt; { 'user': 'fred' }\n\t     * identity(other);\n\t     * // =
=3D&gt; { 'user': 'barney' }\n\t     */\n\t    function memoize(func, =
resolver) {\n\t      if (typeof func !=3D 'function' || (resolver =
&amp;&amp; typeof resolver !=3D 'function')) {\n\t        throw new =
TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      var memoized =3D =
function() {\n\t        var args =3D arguments,\n\t            key =3D =
resolver ? resolver.apply(this, args) : args[0],\n\t            cache =
=3D memoized.cache;\n\n\t        if (cache.has(key)) {\n\t          =
return cache.get(key);\n\t        }\n\t        var result =3D =
func.apply(this, args);\n\t        memoized.cache =3D cache.set(key, =
result);\n\t        return result;\n\t      };\n\t      memoized.cache =
=3D new memoize.Cache;\n\t      return memoized;\n\t    }\n\n\t    =
/**\n\t     * Creates a function that runs each argument through a =
corresponding\n\t     * transform function.\n\t     *\n\t     * =
@static\n\t     * @memberOf _\n\t     * @category Function\n\t     * =
@param {Function} func The function to wrap.\n\t     * @param =
{...(Function|Function[])} [transforms] The functions to transform\n\t   =
  * arguments, specified as individual functions or arrays of =
functions.\n\t     * @returns {Function} Returns the new function.\n\t   =
  * @example\n\t     *\n\t     * function doubled(n) {\n\t     *   =
return n * 2;\n\t     * }\n\t     *\n\t     * function square(n) {\n\t   =
  *   return n * n;\n\t     * }\n\t     *\n\t     * var modded =3D =
_.modArgs(function(x, y) {\n\t     *   return [x, y];\n\t     * }, =
square, doubled);\n\t     *\n\t     * modded(1, 2);\n\t     * // =3D&gt; =
[1, 4]\n\t     *\n\t     * modded(5, 10);\n\t     * // =3D&gt; [25, =
20]\n\t     */\n\t    var modArgs =3D restParam(function(func, =
transforms) {\n\t      transforms =3D baseFlatten(transforms);\n\t      =
if (typeof func !=3D 'function' || !arrayEvery(transforms, =
baseIsFunction)) {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t  =
    }\n\t      var length =3D transforms.length;\n\t      return =
restParam(function(args) {\n\t        var index =3D =
nativeMin(args.length, length);\n\t        while (index--) {\n\t         =
 args[index] =3D transforms[index](args[index]);\n\t        }\n\t        =
return func.apply(this, args);\n\t      });\n\t    });\n\n\t    /**\n\t  =
   * Creates a function that negates the result of the predicate `func`. =
The\n\t     * `func` predicate is invoked with the `this` binding and =
arguments of the\n\t     * created function.\n\t     *\n\t     * =
@static\n\t     * @memberOf _\n\t     * @category Function\n\t     * =
@param {Function} predicate The predicate to negate.\n\t     * @returns =
{Function} Returns the new function.\n\t     * @example\n\t     *\n\t    =
 * function isEven(n) {\n\t     *   return n % 2 =3D=3D 0;\n\t     * =
}\n\t     *\n\t     * _.filter([1, 2, 3, 4, 5, 6], =
_.negate(isEven));\n\t     * // =3D&gt; [1, 3, 5]\n\t     */\n\t    =
function negate(predicate) {\n\t      if (typeof predicate !=3D =
'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      =
}\n\t      return function() {\n\t        return !predicate.apply(this, =
arguments);\n\t      };\n\t    }\n\n\t    /**\n\t     * Creates a =
function that is restricted to invoking `func` once. Repeat calls\n\t    =
 * to the function return the value of the first call. The `func` is =
invoked\n\t     * with the `this` binding and arguments of the created =
function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * =
@category Function\n\t     * @param {Function} func The function to =
restrict.\n\t     * @returns {Function} Returns the new restricted =
function.\n\t     * @example\n\t     *\n\t     * var initialize =3D =
_.once(createApplication);\n\t     * initialize();\n\t     * =
initialize();\n\t     * // `initialize` invokes `createApplication` =
once\n\t     */\n\t    function once(func) {\n\t      return before(2, =
func);\n\t    }\n\n\t    /**\n\t     * Creates a function that invokes =
`func` with `partial` arguments prepended\n\t     * to those provided to =
the new function. This method is like `_.bind` except\n\t     * it does =
**not** alter the `this` binding.\n\t     *\n\t     * The =
`_.partial.placeholder` value, which defaults to `_` in monolithic\n\t   =
  * builds, may be used as a placeholder for partially applied =
arguments.\n\t     *\n\t     * **Note:** This method does not set the =
\"length\" property of partially\n\t     * applied functions.\n\t     =
*\n\t     * @static\n\t     * @memberOf _\n\t     * @category =
Function\n\t     * @param {Function} func The function to partially =
apply arguments to.\n\t     * @param {...*} [partials] The arguments to =
be partially applied.\n\t     * @returns {Function} Returns the new =
partially applied function.\n\t     * @example\n\t     *\n\t     * var =
greet =3D function(greeting, name) {\n\t     *   return greeting + ' ' + =
name;\n\t     * };\n\t     *\n\t     * var sayHelloTo =3D =
_.partial(greet, 'hello');\n\t     * sayHelloTo('fred');\n\t     * // =
=3D&gt; 'hello fred'\n\t     *\n\t     * // using placeholders\n\t     * =
var greetFred =3D _.partial(greet, _, 'fred');\n\t     * =
greetFred('hi');\n\t     * // =3D&gt; 'hi fred'\n\t     */\n\t    var =
partial =3D createPartial(PARTIAL_FLAG);\n\n\t    /**\n\t     * This =
method is like `_.partial` except that partially applied arguments\n\t   =
  * are appended to those provided to the new function.\n\t     *\n\t    =
 * The `_.partialRight.placeholder` value, which defaults to `_` in =
monolithic\n\t     * builds, may be used as a placeholder for partially =
applied arguments.\n\t     *\n\t     * **Note:** This method does not =
set the \"length\" property of partially\n\t     * applied =
functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * =
@category Function\n\t     * @param {Function} func The function to =
partially apply arguments to.\n\t     * @param {...*} [partials] The =
arguments to be partially applied.\n\t     * @returns {Function} Returns =
the new partially applied function.\n\t     * @example\n\t     *\n\t     =
* var greet =3D function(greeting, name) {\n\t     *   return greeting + =
' ' + name;\n\t     * };\n\t     *\n\t     * var greetFred =3D =
_.partialRight(greet, 'fred');\n\t     * greetFred('hi');\n\t     * // =
=3D&gt; 'hi fred'\n\t     *\n\t     * // using placeholders\n\t     * =
var sayHelloTo =3D _.partialRight(greet, 'hello', _);\n\t     * =
sayHelloTo('fred');\n\t     * // =3D&gt; 'hello fred'\n\t     */\n\t    =
var partialRight =3D createPartial(PARTIAL_RIGHT_FLAG);\n\n\t    /**\n\t =
    * Creates a function that invokes `func` with arguments arranged =
according\n\t     * to the specified indexes where the argument value at =
the first index is\n\t     * provided as the first argument, the =
argument value at the second index is\n\t     * provided as the second =
argument, and so on.\n\t     *\n\t     * @static\n\t     * @memberOf =
_\n\t     * @category Function\n\t     * @param {Function} func The =
function to rearrange arguments for.\n\t     * @param =
{...(number|number[])} indexes The arranged argument indexes,\n\t     *  =
specified as individual indexes or arrays of indexes.\n\t     * @returns =
{Function} Returns the new function.\n\t     * @example\n\t     *\n\t    =
 * var rearged =3D _.rearg(function(a, b, c) {\n\t     *   return [a, b, =
c];\n\t     * }, 2, 0, 1);\n\t     *\n\t     * rearged('b', 'c', =
'a')\n\t     * // =3D&gt; ['a', 'b', 'c']\n\t     *\n\t     * var map =
=3D _.rearg(_.map, [1, 0]);\n\t     * map(function(n) {\n\t     *   =
return n * 3;\n\t     * }, [1, 2, 3]);\n\t     * // =3D&gt; [3, 6, =
9]\n\t     */\n\t    var rearg =3D restParam(function(func, indexes) =
{\n\t      return createWrapper(func, REARG_FLAG, undefined, undefined, =
undefined, baseFlatten(indexes));\n\t    });\n\n\t    /**\n\t     * =
Creates a function that invokes `func` with the `this` binding of =
the\n\t     * created function and arguments from `start` and beyond =
provided as an array.\n\t     *\n\t     * **Note:** This method is based =
on the [rest =
parameter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Refere=
nce/Functions/rest_parameters).\n\t     *\n\t     * @static\n\t     * =
@memberOf _\n\t     * @category Function\n\t     * @param {Function} =
func The function to apply a rest parameter to.\n\t     * @param =
{number} [start=3Dfunc.length-1] The start position of the rest =
parameter.\n\t     * @returns {Function} Returns the new function.\n\t   =
  * @example\n\t     *\n\t     * var say =3D _.restParam(function(what, =
names) {\n\t     *   return what + ' ' + _.initial(names).join(', ') =
+\n\t     *     (_.size(names) &gt; 1 ? ', &amp; ' : '') + =
_.last(names);\n\t     * });\n\t     *\n\t     * say('hello', 'fred', =
'barney', 'pebbles');\n\t     * // =3D&gt; 'hello fred, barney, &amp; =
pebbles'\n\t     */\n\t    function restParam(func, start) {\n\t      if =
(typeof func !=3D 'function') {\n\t        throw new =
TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      start =3D =
nativeMax(start =3D=3D=3D undefined ? (func.length - 1) : (+start || 0), =
0);\n\t      return function() {\n\t        var args =3D arguments,\n\t  =
          index =3D -1,\n\t            length =3D nativeMax(args.length =
- start, 0),\n\t            rest =3D Array(length);\n\n\t        while =
(++index &lt; length) {\n\t          rest[index] =3D args[start + =
index];\n\t        }\n\t        switch (start) {\n\t          case 0: =
return func.call(this, rest);\n\t          case 1: return =
func.call(this, args[0], rest);\n\t          case 2: return =
func.call(this, args[0], args[1], rest);\n\t        }\n\t        var =
otherArgs =3D Array(start + 1);\n\t        index =3D -1;\n\t        =
while (++index &lt; start) {\n\t          otherArgs[index] =3D =
args[index];\n\t        }\n\t        otherArgs[start] =3D rest;\n\t      =
  return func.apply(this, otherArgs);\n\t      };\n\t    }\n\n\t    =
/**\n\t     * Creates a function that invokes `func` with the `this` =
binding of the created\n\t     * function and an array of arguments much =
like [`Function#apply`](https://es5.github.io/#x15.3.4.3).\n\t     *\n\t =
    * **Note:** This method is based on the [spread =
operator](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Referen=
ce/Operators/Spread_operator).\n\t     *\n\t     * @static\n\t     * =
@memberOf _\n\t     * @category Function\n\t     * @param {Function} =
func The function to spread arguments over.\n\t     * @returns =
{Function} Returns the new function.\n\t     * @example\n\t     *\n\t    =
 * var say =3D _.spread(function(who, what) {\n\t     *   return who + ' =
says ' + what;\n\t     * });\n\t     *\n\t     * say(['fred', =
'hello']);\n\t     * // =3D&gt; 'fred says hello'\n\t     *\n\t     * // =
with a Promise\n\t     * var numbers =3D Promise.all([\n\t     *   =
Promise.resolve(40),\n\t     *   Promise.resolve(36)\n\t     * ]);\n\t   =
  *\n\t     * numbers.then(_.spread(function(x, y) {\n\t     *   return =
x + y;\n\t     * }));\n\t     * // =3D&gt; a Promise of 76\n\t     =
*/\n\t    function spread(func) {\n\t      if (typeof func !=3D =
'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      =
}\n\t      return function(array) {\n\t        return func.apply(this, =
array);\n\t      };\n\t    }\n\n\t    /**\n\t     * Creates a throttled =
function that only invokes `func` at most once per\n\t     * every =
`wait` milliseconds. The throttled function comes with a `cancel`\n\t    =
 * method to cancel delayed invocations. Provide an options object to =
indicate\n\t     * that `func` should be invoked on the leading and/or =
trailing edge of the\n\t     * `wait` timeout. Subsequent calls to the =
throttled function return the\n\t     * result of the last `func` =
call.\n\t     *\n\t     * **Note:** If `leading` and `trailing` options =
are `true`, `func` is invoked\n\t     * on the trailing edge of the =
timeout only if the the throttled function is\n\t     * invoked more =
than once during the `wait` timeout.\n\t     *\n\t     * See [David =
Corbacho's =
article](http://drupalmotion.com/article/debounce-and-throttle-visual-exp=
lanation)\n\t     * for details over the differences between =
`_.throttle` and `_.debounce`.\n\t     *\n\t     * @static\n\t     * =
@memberOf _\n\t     * @category Function\n\t     * @param {Function} =
func The function to throttle.\n\t     * @param {number} [wait=3D0] The =
number of milliseconds to throttle invocations to.\n\t     * @param =
{Object} [options] The options object.\n\t     * @param {boolean} =
[options.leading=3Dtrue] Specify invoking on the leading\n\t     *  edge =
of the timeout.\n\t     * @param {boolean} [options.trailing=3Dtrue] =
Specify invoking on the trailing\n\t     *  edge of the timeout.\n\t     =
* @returns {Function} Returns the new throttled function.\n\t     * =
@example\n\t     *\n\t     * // avoid excessively updating the position =
while scrolling\n\t     * jQuery(window).on('scroll', =
_.throttle(updatePosition, 100));\n\t     *\n\t     * // invoke =
`renewToken` when the click event is fired, but not more than once every =
5 minutes\n\t     * jQuery('.interactive').on('click', =
_.throttle(renewToken, 300000, {\n\t     *   'trailing': false\n\t     * =
}));\n\t     *\n\t     * // cancel a trailing throttled call\n\t     * =
jQuery(window).on('popstate', throttled.cancel);\n\t     */\n\t    =
function throttle(func, wait, options) {\n\t      var leading =3D =
true,\n\t          trailing =3D true;\n\n\t      if (typeof func !=3D =
'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      =
}\n\t      if (options =3D=3D=3D false) {\n\t        leading =3D =
false;\n\t      } else if (isObject(options)) {\n\t        leading =3D =
'leading' in options ? !!options.leading : leading;\n\t        trailing =
=3D 'trailing' in options ? !!options.trailing : trailing;\n\t      =
}\n\t      return debounce(func, wait, { 'leading': leading, 'maxWait': =
+wait, 'trailing': trailing });\n\t    }\n\n\t    /**\n\t     * Creates =
a function that provides `value` to the wrapper function as its\n\t     =
* first argument. Any additional arguments provided to the function =
are\n\t     * appended to those provided to the wrapper function. The =
wrapper is invoked\n\t     * with the `this` binding of the created =
function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * =
@category Function\n\t     * @param {*} value The value to wrap.\n\t     =
* @param {Function} wrapper The wrapper function.\n\t     * @returns =
{Function} Returns the new function.\n\t     * @example\n\t     *\n\t    =
 * var p =3D _.wrap(_.escape, function(func, text) {\n\t     *   return =
'&lt;p&gt;' + func(text) + '&lt;/p&gt;';\n\t     * });\n\t     *\n\t     =
* p('fred, barney, &amp; pebbles');\n\t     * // =3D&gt; '&lt;p&gt;fred, =
barney, &amp;amp; pebbles&lt;/p&gt;'\n\t     */\n\t    function =
wrap(value, wrapper) {\n\t      wrapper =3D wrapper =3D=3D null ? =
identity : wrapper;\n\t      return createWrapper(wrapper, PARTIAL_FLAG, =
undefined, [value], []);\n\t    }\n\n\t    =
/*-----------------------------------------------------------------------=
-*/\n\n\t    /**\n\t     * Creates a clone of `value`. If `isDeep` is =
`true` nested objects are cloned,\n\t     * otherwise they are assigned =
by reference. If `customizer` is provided it is\n\t     * invoked to =
produce the cloned values. If `customizer` returns `undefined`\n\t     * =
cloning is handled by the method instead. The `customizer` is bound =
to\n\t     * `thisArg` and invoked with two argument; (value [, =
index|key, object]).\n\t     *\n\t     * **Note:** This method is =
loosely based on the\n\t     * [structured clone =
algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-struct=
ured-cloning-algorithm).\n\t     * The enumerable properties of =
`arguments` objects and objects created by\n\t     * constructors other =
than `Object` are cloned to plain `Object` objects. An\n\t     * empty =
object is returned for uncloneable values such as functions, DOM =
nodes,\n\t     * Maps, Sets, and WeakMaps.\n\t     *\n\t     * =
@static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param =
{*} value The value to clone.\n\t     * @param {boolean} [isDeep] =
Specify a deep clone.\n\t     * @param {Function} [customizer] The =
function to customize cloning values.\n\t     * @param {*} [thisArg] The =
`this` binding of `customizer`.\n\t     * @returns {*} Returns the =
cloned value.\n\t     * @example\n\t     *\n\t     * var users =3D [\n\t =
    *   { 'user': 'barney' },\n\t     *   { 'user': 'fred' }\n\t     * =
];\n\t     *\n\t     * var shallow =3D _.clone(users);\n\t     * =
shallow[0] =3D=3D=3D users[0];\n\t     * // =3D&gt; true\n\t     *\n\t   =
  * var deep =3D _.clone(users, true);\n\t     * deep[0] =3D=3D=3D =
users[0];\n\t     * // =3D&gt; false\n\t     *\n\t     * // using a =
customizer callback\n\t     * var el =3D _.clone(document.body, =
function(value) {\n\t     *   if (_.isElement(value)) {\n\t     *     =
return value.cloneNode(false);\n\t     *   }\n\t     * });\n\t     *\n\t =
    * el =3D=3D=3D document.body\n\t     * // =3D&gt; false\n\t     * =
el.nodeName\n\t     * // =3D&gt; BODY\n\t     * =
el.childNodes.length;\n\t     * // =3D&gt; 0\n\t     */\n\t    function =
clone(value, isDeep, customizer, thisArg) {\n\t      if (isDeep =
&amp;&amp; typeof isDeep !=3D 'boolean' &amp;&amp; isIterateeCall(value, =
isDeep, customizer)) {\n\t        isDeep =3D false;\n\t      }\n\t      =
else if (typeof isDeep =3D=3D 'function') {\n\t        thisArg =3D =
customizer;\n\t        customizer =3D isDeep;\n\t        isDeep =3D =
false;\n\t      }\n\t      return typeof customizer =3D=3D =
'function'\n\t        ? baseClone(value, isDeep, =
bindCallback(customizer, thisArg, 1))\n\t        : baseClone(value, =
isDeep);\n\t    }\n\n\t    /**\n\t     * Creates a deep clone of =
`value`. If `customizer` is provided it is invoked\n\t     * to produce =
the cloned values. If `customizer` returns `undefined` cloning\n\t     * =
is handled by the method instead. The `customizer` is bound to =
`thisArg`\n\t     * and invoked with two argument; (value [, index|key, =
object]).\n\t     *\n\t     * **Note:** This method is loosely based on =
the\n\t     * [structured clone =
algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-struct=
ured-cloning-algorithm).\n\t     * The enumerable properties of =
`arguments` objects and objects created by\n\t     * constructors other =
than `Object` are cloned to plain `Object` objects. An\n\t     * empty =
object is returned for uncloneable values such as functions, DOM =
nodes,\n\t     * Maps, Sets, and WeakMaps.\n\t     *\n\t     * =
@static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param =
{*} value The value to deep clone.\n\t     * @param {Function} =
[customizer] The function to customize cloning values.\n\t     * @param =
{*} [thisArg] The `this` binding of `customizer`.\n\t     * @returns {*} =
Returns the deep cloned value.\n\t     * @example\n\t     *\n\t     * =
var users =3D [\n\t     *   { 'user': 'barney' },\n\t     *   { 'user': =
'fred' }\n\t     * ];\n\t     *\n\t     * var deep =3D =
_.cloneDeep(users);\n\t     * deep[0] =3D=3D=3D users[0];\n\t     * // =
=3D&gt; false\n\t     *\n\t     * // using a customizer callback\n\t     =
* var el =3D _.cloneDeep(document.body, function(value) {\n\t     *   if =
(_.isElement(value)) {\n\t     *     return value.cloneNode(true);\n\t   =
  *   }\n\t     * });\n\t     *\n\t     * el =3D=3D=3D document.body\n\t =
    * // =3D&gt; false\n\t     * el.nodeName\n\t     * // =3D&gt; =
BODY\n\t     * el.childNodes.length;\n\t     * // =3D&gt; 20\n\t     =
*/\n\t    function cloneDeep(value, customizer, thisArg) {\n\t      =
return typeof customizer =3D=3D 'function'\n\t        ? baseClone(value, =
true, bindCallback(customizer, thisArg, 1))\n\t        : =
baseClone(value, true);\n\t    }\n\n\t    /**\n\t     * Checks if =
`value` is greater than `other`.\n\t     *\n\t     * @static\n\t     * =
@memberOf _\n\t     * @category Lang\n\t     * @param {*} value The =
value to compare.\n\t     * @param {*} other The other value to =
compare.\n\t     * @returns {boolean} Returns `true` if `value` is =
greater than `other`, else `false`.\n\t     * @example\n\t     *\n\t     =
* _.gt(3, 1);\n\t     * // =3D&gt; true\n\t     *\n\t     * _.gt(3, =
3);\n\t     * // =3D&gt; false\n\t     *\n\t     * _.gt(1, 3);\n\t     * =
// =3D&gt; false\n\t     */\n\t    function gt(value, other) {\n\t      =
return value &gt; other;\n\t    }\n\n\t    /**\n\t     * Checks if =
`value` is greater than or equal to `other`.\n\t     *\n\t     * =
@static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param =
{*} value The value to compare.\n\t     * @param {*} other The other =
value to compare.\n\t     * @returns {boolean} Returns `true` if `value` =
is greater than or equal to `other`, else `false`.\n\t     * =
@example\n\t     *\n\t     * _.gte(3, 1);\n\t     * // =3D&gt; true\n\t  =
   *\n\t     * _.gte(3, 3);\n\t     * // =3D&gt; true\n\t     *\n\t     =
* _.gte(1, 3);\n\t     * // =3D&gt; false\n\t     */\n\t    function =
gte(value, other) {\n\t      return value &gt;=3D other;\n\t    }\n\n\t  =
  /**\n\t     * Checks if `value` is classified as an `arguments` =
object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * =
@category Lang\n\t     * @param {*} value The value to check.\n\t     * =
@returns {boolean} Returns `true` if `value` is correctly classified, =
else `false`.\n\t     * @example\n\t     *\n\t     * =
_.isArguments(function() { return arguments; }());\n\t     * // =3D&gt; =
true\n\t     *\n\t     * _.isArguments([1, 2, 3]);\n\t     * // =3D&gt; =
false\n\t     */\n\t    function isArguments(value) {\n\t      return =
isObjectLike(value) &amp;&amp; isArrayLike(value) &amp;&amp;\n\t        =
hasOwnProperty.call(value, 'callee') &amp;&amp; =
!propertyIsEnumerable.call(value, 'callee');\n\t    }\n\n\t    /**\n\t   =
  * Checks if `value` is classified as an `Array` object.\n\t     *\n\t  =
   * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * =
@param {*} value The value to check.\n\t     * @returns {boolean} =
Returns `true` if `value` is correctly classified, else `false`.\n\t     =
* @example\n\t     *\n\t     * _.isArray([1, 2, 3]);\n\t     * // =
=3D&gt; true\n\t     *\n\t     * _.isArray(function() { return =
arguments; }());\n\t     * // =3D&gt; false\n\t     */\n\t    var =
isArray =3D nativeIsArray || function(value) {\n\t      return =
isObjectLike(value) &amp;&amp; isLength(value.length) &amp;&amp; =
objToString.call(value) =3D=3D arrayTag;\n\t    };\n\n\t    /**\n\t     =
* Checks if `value` is classified as a boolean primitive or object.\n\t  =
   *\n\t     * @static\n\t     * @memberOf _\n\t     * @category =
Lang\n\t     * @param {*} value The value to check.\n\t     * @returns =
{boolean} Returns `true` if `value` is correctly classified, else =
`false`.\n\t     * @example\n\t     *\n\t     * _.isBoolean(false);\n\t  =
   * // =3D&gt; true\n\t     *\n\t     * _.isBoolean(null);\n\t     * // =
=3D&gt; false\n\t     */\n\t    function isBoolean(value) {\n\t      =
return value =3D=3D=3D true || value =3D=3D=3D false || =
(isObjectLike(value) &amp;&amp; objToString.call(value) =3D=3D =
boolTag);\n\t    }\n\n\t    /**\n\t     * Checks if `value` is =
classified as a `Date` object.\n\t     *\n\t     * @static\n\t     * =
@memberOf _\n\t     * @category Lang\n\t     * @param {*} value The =
value to check.\n\t     * @returns {boolean} Returns `true` if `value` =
is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t  =
   * _.isDate(new Date);\n\t     * // =3D&gt; true\n\t     *\n\t     * =
_.isDate('Mon April 23 2012');\n\t     * // =3D&gt; false\n\t     */\n\t =
   function isDate(value) {\n\t      return isObjectLike(value) =
&amp;&amp; objToString.call(value) =3D=3D dateTag;\n\t    }\n\n\t    =
/**\n\t     * Checks if `value` is a DOM element.\n\t     *\n\t     * =
@static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param =
{*} value The value to check.\n\t     * @returns {boolean} Returns =
`true` if `value` is a DOM element, else `false`.\n\t     * @example\n\t =
    *\n\t     * _.isElement(document.body);\n\t     * // =3D&gt; =
true\n\t     *\n\t     * _.isElement('&lt;body&gt;');\n\t     * // =
=3D&gt; false\n\t     */\n\t    function isElement(value) {\n\t      =
return !!value &amp;&amp; value.nodeType =3D=3D=3D 1 &amp;&amp; =
isObjectLike(value) &amp;&amp; !isPlainObject(value);\n\t    }\n\n\t    =
/**\n\t     * Checks if `value` is empty. A value is considered empty =
unless it is an\n\t     * `arguments` object, array, string, or =
jQuery-like collection with a length\n\t     * greater than `0` or an =
object with own enumerable properties.\n\t     *\n\t     * @static\n\t   =
  * @memberOf _\n\t     * @category Lang\n\t     * @param =
{Array|Object|string} value The value to inspect.\n\t     * @returns =
{boolean} Returns `true` if `value` is empty, else `false`.\n\t     * =
@example\n\t     *\n\t     * _.isEmpty(null);\n\t     * // =3D&gt; =
true\n\t     *\n\t     * _.isEmpty(true);\n\t     * // =3D&gt; true\n\t  =
   *\n\t     * _.isEmpty(1);\n\t     * // =3D&gt; true\n\t     *\n\t     =
* _.isEmpty([1, 2, 3]);\n\t     * // =3D&gt; false\n\t     *\n\t     * =
_.isEmpty({ 'a': 1 });\n\t     * // =3D&gt; false\n\t     */\n\t    =
function isEmpty(value) {\n\t      if (value =3D=3D null) {\n\t        =
return true;\n\t      }\n\t      if (isArrayLike(value) &amp;&amp; =
(isArray(value) || isString(value) || isArguments(value) ||\n\t          =
(isObjectLike(value) &amp;&amp; isFunction(value.splice)))) {\n\t        =
return !value.length;\n\t      }\n\t      return =
!keys(value).length;\n\t    }\n\n\t    /**\n\t     * Performs a deep =
comparison between two values to determine if they are\n\t     * =
equivalent. If `customizer` is provided it is invoked to compare =
values.\n\t     * If `customizer` returns `undefined` comparisons are =
handled by the method\n\t     * instead. The `customizer` is bound to =
`thisArg` and invoked with three\n\t     * arguments: (value, other [, =
index|key]).\n\t     *\n\t     * **Note:** This method supports =
comparing arrays, booleans, `Date` objects,\n\t     * numbers, `Object` =
objects, regexes, and strings. Objects are compared by\n\t     * their =
own, not inherited, enumerable properties. Functions and DOM nodes\n\t   =
  * are **not** supported. Provide a customizer function to extend =
support\n\t     * for comparing other values.\n\t     *\n\t     * =
@static\n\t     * @memberOf _\n\t     * @alias eq\n\t     * @category =
Lang\n\t     * @param {*} value The value to compare.\n\t     * @param =
{*} other The other value to compare.\n\t     * @param {Function} =
[customizer] The function to customize value comparisons.\n\t     * =
@param {*} [thisArg] The `this` binding of `customizer`.\n\t     * =
@returns {boolean} Returns `true` if the values are equivalent, else =
`false`.\n\t     * @example\n\t     *\n\t     * var object =3D { 'user': =
'fred' };\n\t     * var other =3D { 'user': 'fred' };\n\t     *\n\t     =
* object =3D=3D other;\n\t     * // =3D&gt; false\n\t     *\n\t     * =
_.isEqual(object, other);\n\t     * // =3D&gt; true\n\t     *\n\t     * =
// using a customizer callback\n\t     * var array =3D ['hello', =
'goodbye'];\n\t     * var other =3D ['hi', 'goodbye'];\n\t     *\n\t     =
* _.isEqual(array, other, function(value, other) {\n\t     *   if =
(_.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/)) {\n\t  =
   *     return true;\n\t     *   }\n\t     * });\n\t     * // =3D&gt; =
true\n\t     */\n\t    function isEqual(value, other, customizer, =
thisArg) {\n\t      customizer =3D typeof customizer =3D=3D 'function' ? =
bindCallback(customizer, thisArg, 3) : undefined;\n\t      var result =
=3D customizer ? customizer(value, other) : undefined;\n\t      return  =
result =3D=3D=3D undefined ? baseIsEqual(value, other, customizer) : =
!!result;\n\t    }\n\n\t    /**\n\t     * Checks if `value` is an =
`Error`, `EvalError`, `RangeError`, `ReferenceError`,\n\t     * =
`SyntaxError`, `TypeError`, or `URIError` object.\n\t     *\n\t     * =
@static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param =
{*} value The value to check.\n\t     * @returns {boolean} Returns =
`true` if `value` is an error object, else `false`.\n\t     * =
@example\n\t     *\n\t     * _.isError(new Error);\n\t     * // =3D&gt; =
true\n\t     *\n\t     * _.isError(Error);\n\t     * // =3D&gt; =
false\n\t     */\n\t    function isError(value) {\n\t      return =
isObjectLike(value) &amp;&amp; typeof value.message =3D=3D 'string' =
&amp;&amp; objToString.call(value) =3D=3D errorTag;\n\t    }\n\n\t    =
/**\n\t     * Checks if `value` is a finite primitive number.\n\t     =
*\n\t     * **Note:** This method is based on =
[`Number.isFinite`](http://ecma-international.org/ecma-262/6.0/#sec-numbe=
r.isfinite).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * =
@category Lang\n\t     * @param {*} value The value to check.\n\t     * =
@returns {boolean} Returns `true` if `value` is a finite number, else =
`false`.\n\t     * @example\n\t     *\n\t     * _.isFinite(10);\n\t     =
* // =3D&gt; true\n\t     *\n\t     * _.isFinite('10');\n\t     * // =
=3D&gt; false\n\t     *\n\t     * _.isFinite(true);\n\t     * // =3D&gt; =
false\n\t     *\n\t     * _.isFinite(Object(10));\n\t     * // =3D&gt; =
false\n\t     *\n\t     * _.isFinite(Infinity);\n\t     * // =3D&gt; =
false\n\t     */\n\t    function isFinite(value) {\n\t      return =
typeof value =3D=3D 'number' &amp;&amp; nativeIsFinite(value);\n\t    =
}\n\n\t    /**\n\t     * Checks if `value` is classified as a `Function` =
object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * =
@category Lang\n\t     * @param {*} value The value to check.\n\t     * =
@returns {boolean} Returns `true` if `value` is correctly classified, =
else `false`.\n\t     * @example\n\t     *\n\t     * =
_.isFunction(_);\n\t     * // =3D&gt; true\n\t     *\n\t     * =
_.isFunction(/abc/);\n\t     * // =3D&gt; false\n\t     */\n\t    =
function isFunction(value) {\n\t      // The use of `Object#toString` =
avoids issues with the `typeof` operator\n\t      // in older versions =
of Chrome and Safari which return 'function' for regexes\n\t      // and =
Safari 8 equivalents which return 'object' for typed array =
constructors.\n\t      return isObject(value) &amp;&amp; =
objToString.call(value) =3D=3D funcTag;\n\t    }\n\n\t    /**\n\t     * =
Checks if `value` is the [language type](https://es5.github.io/#x8) of =
`Object`.\n\t     * (e.g. arrays, functions, objects, regexes, `new =
Number(0)`, and `new String('')`)\n\t     *\n\t     * @static\n\t     * =
@memberOf _\n\t     * @category Lang\n\t     * @param {*} value The =
value to check.\n\t     * @returns {boolean} Returns `true` if `value` =
is an object, else `false`.\n\t     * @example\n\t     *\n\t     * =
_.isObject({});\n\t     * // =3D&gt; true\n\t     *\n\t     * =
_.isObject([1, 2, 3]);\n\t     * // =3D&gt; true\n\t     *\n\t     * =
_.isObject(1);\n\t     * // =3D&gt; false\n\t     */\n\t    function =
isObject(value) {\n\t      // Avoid a V8 JIT bug in Chrome 19-20.\n\t    =
  // See https://code.google.com/p/v8/issues/detail?id=3D2291 for more =
details.\n\t      var type =3D typeof value;\n\t      return !!value =
&amp;&amp; (type =3D=3D 'object' || type =3D=3D 'function');\n\t    =
}\n\n\t    /**\n\t     * Performs a deep comparison between `object` and =
`source` to determine if\n\t     * `object` contains equivalent property =
values. If `customizer` is provided\n\t     * it is invoked to compare =
values. If `customizer` returns `undefined`\n\t     * comparisons are =
handled by the method instead. The `customizer` is bound\n\t     * to =
`thisArg` and invoked with three arguments: (value, other, =
index|key).\n\t     *\n\t     * **Note:** This method supports comparing =
properties of arrays, booleans,\n\t     * `Date` objects, numbers, =
`Object` objects, regexes, and strings. Functions\n\t     * and DOM =
nodes are **not** supported. Provide a customizer function to extend\n\t =
    * support for comparing other values.\n\t     *\n\t     * =
@static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param =
{Object} object The object to inspect.\n\t     * @param {Object} source =
The object of property values to match.\n\t     * @param {Function} =
[customizer] The function to customize value comparisons.\n\t     * =
@param {*} [thisArg] The `this` binding of `customizer`.\n\t     * =
@returns {boolean} Returns `true` if `object` is a match, else =
`false`.\n\t     * @example\n\t     *\n\t     * var object =3D { 'user': =
'fred', 'age': 40 };\n\t     *\n\t     * _.isMatch(object, { 'age': 40 =
});\n\t     * // =3D&gt; true\n\t     *\n\t     * _.isMatch(object, { =
'age': 36 });\n\t     * // =3D&gt; false\n\t     *\n\t     * // using a =
customizer callback\n\t     * var object =3D { 'greeting': 'hello' =
};\n\t     * var source =3D { 'greeting': 'hi' };\n\t     *\n\t     * =
_.isMatch(object, source, function(value, other) {\n\t     *   return =
_.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/) || =
undefined;\n\t     * });\n\t     * // =3D&gt; true\n\t     */\n\t    =
function isMatch(object, source, customizer, thisArg) {\n\t      =
customizer =3D typeof customizer =3D=3D 'function' ? =
bindCallback(customizer, thisArg, 3) : undefined;\n\t      return =
baseIsMatch(object, getMatchData(source), customizer);\n\t    }\n\n\t    =
/**\n\t     * Checks if `value` is `NaN`.\n\t     *\n\t     * **Note:** =
This method is not the same as =
[`isNaN`](https://es5.github.io/#x15.1.2.4)\n\t     * which returns =
`true` for `undefined` and other non-numeric values.\n\t     *\n\t     * =
@static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param =
{*} value The value to check.\n\t     * @returns {boolean} Returns =
`true` if `value` is `NaN`, else `false`.\n\t     * @example\n\t     =
*\n\t     * _.isNaN(NaN);\n\t     * // =3D&gt; true\n\t     *\n\t     * =
_.isNaN(new Number(NaN));\n\t     * // =3D&gt; true\n\t     *\n\t     * =
isNaN(undefined);\n\t     * // =3D&gt; true\n\t     *\n\t     * =
_.isNaN(undefined);\n\t     * // =3D&gt; false\n\t     */\n\t    =
function isNaN(value) {\n\t      // An `NaN` primitive is the only value =
that is not equal to itself.\n\t      // Perform the `toStringTag` check =
first to avoid errors with some host objects in IE.\n\t      return =
isNumber(value) &amp;&amp; value !=3D +value;\n\t    }\n\n\t    /**\n\t  =
   * Checks if `value` is a native function.\n\t     *\n\t     * =
@static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param =
{*} value The value to check.\n\t     * @returns {boolean} Returns =
`true` if `value` is a native function, else `false`.\n\t     * =
@example\n\t     *\n\t     * _.isNative(Array.prototype.push);\n\t     * =
// =3D&gt; true\n\t     *\n\t     * _.isNative(_);\n\t     * // =3D&gt; =
false\n\t     */\n\t    function isNative(value) {\n\t      if (value =
=3D=3D null) {\n\t        return false;\n\t      }\n\t      if =
(isFunction(value)) {\n\t        return =
reIsNative.test(fnToString.call(value));\n\t      }\n\t      return =
isObjectLike(value) &amp;&amp; reIsHostCtor.test(value);\n\t    }\n\n\t  =
  /**\n\t     * Checks if `value` is `null`.\n\t     *\n\t     * =
@static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param =
{*} value The value to check.\n\t     * @returns {boolean} Returns =
`true` if `value` is `null`, else `false`.\n\t     * @example\n\t     =
*\n\t     * _.isNull(null);\n\t     * // =3D&gt; true\n\t     *\n\t     =
* _.isNull(void 0);\n\t     * // =3D&gt; false\n\t     */\n\t    =
function isNull(value) {\n\t      return value =3D=3D=3D null;\n\t    =
}\n\n\t    /**\n\t     * Checks if `value` is classified as a `Number` =
primitive or object.\n\t     *\n\t     * **Note:** To exclude =
`Infinity`, `-Infinity`, and `NaN`, which are classified\n\t     * as =
numbers, use the `_.isFinite` method.\n\t     *\n\t     * @static\n\t    =
 * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The =
value to check.\n\t     * @returns {boolean} Returns `true` if `value` =
is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t  =
   * _.isNumber(8.4);\n\t     * // =3D&gt; true\n\t     *\n\t     * =
_.isNumber(NaN);\n\t     * // =3D&gt; true\n\t     *\n\t     * =
_.isNumber('8.4');\n\t     * // =3D&gt; false\n\t     */\n\t    function =
isNumber(value) {\n\t      return typeof value =3D=3D 'number' || =
(isObjectLike(value) &amp;&amp; objToString.call(value) =3D=3D =
numberTag);\n\t    }\n\n\t    /**\n\t     * Checks if `value` is a plain =
object, that is, an object created by the\n\t     * `Object` constructor =
or one with a `[[Prototype]]` of `null`.\n\t     *\n\t     * **Note:** =
This method assumes objects created by the `Object` constructor\n\t     =
* have no inherited enumerable properties.\n\t     *\n\t     * =
@static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param =
{*} value The value to check.\n\t     * @returns {boolean} Returns =
`true` if `value` is a plain object, else `false`.\n\t     * =
@example\n\t     *\n\t     * function Foo() {\n\t     *   this.a =3D =
1;\n\t     * }\n\t     *\n\t     * _.isPlainObject(new Foo);\n\t     * =
// =3D&gt; false\n\t     *\n\t     * _.isPlainObject([1, 2, 3]);\n\t     =
* // =3D&gt; false\n\t     *\n\t     * _.isPlainObject({ 'x': 0, 'y': 0 =
});\n\t     * // =3D&gt; true\n\t     *\n\t     * =
_.isPlainObject(Object.create(null));\n\t     * // =3D&gt; true\n\t     =
*/\n\t    function isPlainObject(value) {\n\t      var Ctor;\n\n\t      =
// Exit early for non `Object` objects.\n\t      if =
(!(isObjectLike(value) &amp;&amp; objToString.call(value) =3D=3D =
objectTag &amp;&amp; !isArguments(value)) ||\n\t          =
(!hasOwnProperty.call(value, 'constructor') &amp;&amp; (Ctor =3D =
value.constructor, typeof Ctor =3D=3D 'function' &amp;&amp; !(Ctor =
instanceof Ctor)))) {\n\t        return false;\n\t      }\n\t      // IE =
&lt; 9 iterates inherited properties before own properties. If the =
first\n\t      // iterated property is an object's own property then =
there are no inherited\n\t      // enumerable properties.\n\t      var =
result;\n\t      // In most environments an object's own properties are =
iterated before\n\t      // its inherited properties. If the last =
iterated property is an object's\n\t      // own property then there are =
no inherited enumerable properties.\n\t      baseForIn(value, =
function(subValue, key) {\n\t        result =3D key;\n\t      });\n\t    =
  return result =3D=3D=3D undefined || hasOwnProperty.call(value, =
result);\n\t    }\n\n\t    /**\n\t     * Checks if `value` is classified =
as a `RegExp` object.\n\t     *\n\t     * @static\n\t     * @memberOf =
_\n\t     * @category Lang\n\t     * @param {*} value The value to =
check.\n\t     * @returns {boolean} Returns `true` if `value` is =
correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     =
* _.isRegExp(/abc/);\n\t     * // =3D&gt; true\n\t     *\n\t     * =
_.isRegExp('/abc/');\n\t     * // =3D&gt; false\n\t     */\n\t    =
function isRegExp(value) {\n\t      return isObject(value) &amp;&amp; =
objToString.call(value) =3D=3D regexpTag;\n\t    }\n\n\t    /**\n\t     =
* Checks if `value` is classified as a `String` primitive or object.\n\t =
    *\n\t     * @static\n\t     * @memberOf _\n\t     * @category =
Lang\n\t     * @param {*} value The value to check.\n\t     * @returns =
{boolean} Returns `true` if `value` is correctly classified, else =
`false`.\n\t     * @example\n\t     *\n\t     * _.isString('abc');\n\t   =
  * // =3D&gt; true\n\t     *\n\t     * _.isString(1);\n\t     * // =
=3D&gt; false\n\t     */\n\t    function isString(value) {\n\t      =
return typeof value =3D=3D 'string' || (isObjectLike(value) &amp;&amp; =
objToString.call(value) =3D=3D stringTag);\n\t    }\n\n\t    /**\n\t     =
* Checks if `value` is classified as a typed array.\n\t     *\n\t     * =
@static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param =
{*} value The value to check.\n\t     * @returns {boolean} Returns =
`true` if `value` is correctly classified, else `false`.\n\t     * =
@example\n\t     *\n\t     * _.isTypedArray(new Uint8Array);\n\t     * =
// =3D&gt; true\n\t     *\n\t     * _.isTypedArray([]);\n\t     * // =
=3D&gt; false\n\t     */\n\t    function isTypedArray(value) {\n\t      =
return isObjectLike(value) &amp;&amp; isLength(value.length) &amp;&amp; =
!!typedArrayTags[objToString.call(value)];\n\t    }\n\n\t    /**\n\t     =
* Checks if `value` is `undefined`.\n\t     *\n\t     * @static\n\t     =
* @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The =
value to check.\n\t     * @returns {boolean} Returns `true` if `value` =
is `undefined`, else `false`.\n\t     * @example\n\t     *\n\t     * =
_.isUndefined(void 0);\n\t     * // =3D&gt; true\n\t     *\n\t     * =
_.isUndefined(null);\n\t     * // =3D&gt; false\n\t     */\n\t    =
function isUndefined(value) {\n\t      return value =3D=3D=3D =
undefined;\n\t    }\n\n\t    /**\n\t     * Checks if `value` is less =
than `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     =
* @category Lang\n\t     * @param {*} value The value to compare.\n\t    =
 * @param {*} other The other value to compare.\n\t     * @returns =
{boolean} Returns `true` if `value` is less than `other`, else =
`false`.\n\t     * @example\n\t     *\n\t     * _.lt(1, 3);\n\t     * // =
=3D&gt; true\n\t     *\n\t     * _.lt(3, 3);\n\t     * // =3D&gt; =
false\n\t     *\n\t     * _.lt(3, 1);\n\t     * // =3D&gt; false\n\t     =
*/\n\t    function lt(value, other) {\n\t      return value &lt; =
other;\n\t    }\n\n\t    /**\n\t     * Checks if `value` is less than or =
equal to `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t  =
   * @category Lang\n\t     * @param {*} value The value to compare.\n\t =
    * @param {*} other The other value to compare.\n\t     * @returns =
{boolean} Returns `true` if `value` is less than or equal to `other`, =
else `false`.\n\t     * @example\n\t     *\n\t     * _.lte(1, 3);\n\t    =
 * // =3D&gt; true\n\t     *\n\t     * _.lte(3, 3);\n\t     * // =3D&gt; =
true\n\t     *\n\t     * _.lte(3, 1);\n\t     * // =3D&gt; false\n\t     =
*/\n\t    function lte(value, other) {\n\t      return value &lt;=3D =
other;\n\t    }\n\n\t    /**\n\t     * Converts `value` to an array.\n\t =
    *\n\t     * @static\n\t     * @memberOf _\n\t     * @category =
Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns =
{Array} Returns the converted array.\n\t     * @example\n\t     *\n\t    =
 * (function() {\n\t     *   return _.toArray(arguments).slice(1);\n\t   =
  * }(1, 2, 3));\n\t     * // =3D&gt; [2, 3]\n\t     */\n\t    function =
toArray(value) {\n\t      var length =3D value ? getLength(value) : =
0;\n\t      if (!isLength(length)) {\n\t        return =
values(value);\n\t      }\n\t      if (!length) {\n\t        return =
[];\n\t      }\n\t      return arrayCopy(value);\n\t    }\n\n\t    =
/**\n\t     * Converts `value` to a plain object flattening inherited =
enumerable\n\t     * properties of `value` to own properties of the =
plain object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     =
* @category Lang\n\t     * @param {*} value The value to convert.\n\t    =
 * @returns {Object} Returns the converted plain object.\n\t     * =
@example\n\t     *\n\t     * function Foo() {\n\t     *   this.b =3D =
2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c =3D 3;\n\t     *\n\t  =
   * _.assign({ 'a': 1 }, new Foo);\n\t     * // =3D&gt; { 'a': 1, 'b': =
2 }\n\t     *\n\t     * _.assign({ 'a': 1 }, _.toPlainObject(new =
Foo));\n\t     * // =3D&gt; { 'a': 1, 'b': 2, 'c': 3 }\n\t     */\n\t    =
function toPlainObject(value) {\n\t      return baseCopy(value, =
keysIn(value));\n\t    }\n\n\t    =
/*-----------------------------------------------------------------------=
-*/\n\n\t    /**\n\t     * Recursively merges own enumerable properties =
of the source object(s), that\n\t     * don't resolve to `undefined` =
into the destination object. Subsequent sources\n\t     * overwrite =
property assignments of previous sources. If `customizer` is\n\t     * =
provided it is invoked to produce the merged values of the destination =
and\n\t     * source properties. If `customizer` returns `undefined` =
merging is handled\n\t     * by the method instead. The `customizer` is =
bound to `thisArg` and invoked\n\t     * with five arguments: =
(objectValue, sourceValue, key, object, source).\n\t     *\n\t     * =
@static\n\t     * @memberOf _\n\t     * @category Object\n\t     * =
@param {Object} object The destination object.\n\t     * @param =
{...Object} [sources] The source objects.\n\t     * @param {Function} =
[customizer] The function to customize assigned values.\n\t     * @param =
{*} [thisArg] The `this` binding of `customizer`.\n\t     * @returns =
{Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var =
users =3D {\n\t     *   'data': [{ 'user': 'barney' }, { 'user': 'fred' =
}]\n\t     * };\n\t     *\n\t     * var ages =3D {\n\t     *   'data': =
[{ 'age': 36 }, { 'age': 40 }]\n\t     * };\n\t     *\n\t     * =
_.merge(users, ages);\n\t     * // =3D&gt; { 'data': [{ 'user': =
'barney', 'age': 36 }, { 'user': 'fred', 'age': 40 }] }\n\t     *\n\t    =
 * // using a customizer callback\n\t     * var object =3D {\n\t     *   =
'fruits': ['apple'],\n\t     *   'vegetables': ['beet']\n\t     * };\n\t =
    *\n\t     * var other =3D {\n\t     *   'fruits': ['banana'],\n\t    =
 *   'vegetables': ['carrot']\n\t     * };\n\t     *\n\t     * =
_.merge(object, other, function(a, b) {\n\t     *   if (_.isArray(a)) =
{\n\t     *     return a.concat(b);\n\t     *   }\n\t     * });\n\t     =
* // =3D&gt; { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', =
'carrot'] }\n\t     */\n\t    var merge =3D =
createAssigner(baseMerge);\n\n\t    /**\n\t     * Assigns own enumerable =
properties of source object(s) to the destination\n\t     * object. =
Subsequent sources overwrite property assignments of previous =
sources.\n\t     * If `customizer` is provided it is invoked to produce =
the assigned values.\n\t     * The `customizer` is bound to `thisArg` =
and invoked with five arguments:\n\t     * (objectValue, sourceValue, =
key, object, source).\n\t     *\n\t     * **Note:** This method mutates =
`object` and is based on\n\t     * =
[`Object.assign`](http://ecma-international.org/ecma-262/6.0/#sec-object.=
assign).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * =
@alias extend\n\t     * @category Object\n\t     * @param {Object} =
object The destination object.\n\t     * @param {...Object} [sources] =
The source objects.\n\t     * @param {Function} [customizer] The =
function to customize assigned values.\n\t     * @param {*} [thisArg] =
The `this` binding of `customizer`.\n\t     * @returns {Object} Returns =
`object`.\n\t     * @example\n\t     *\n\t     * _.assign({ 'user': =
'barney' }, { 'age': 40 }, { 'user': 'fred' });\n\t     * // =3D&gt; { =
'user': 'fred', 'age': 40 }\n\t     *\n\t     * // using a customizer =
callback\n\t     * var defaults =3D _.partialRight(_.assign, =
function(value, other) {\n\t     *   return _.isUndefined(value) ? other =
: value;\n\t     * });\n\t     *\n\t     * defaults({ 'user': 'barney' =
}, { 'age': 36 }, { 'user': 'fred' });\n\t     * // =3D&gt; { 'user': =
'barney', 'age': 36 }\n\t     */\n\t    var assign =3D =
createAssigner(function(object, source, customizer) {\n\t      return =
customizer\n\t        ? assignWith(object, source, customizer)\n\t       =
 : baseAssign(object, source);\n\t    });\n\n\t    /**\n\t     * Creates =
an object that inherits from the given `prototype` object. If a\n\t     =
* `properties` object is provided its own enumerable properties are =
assigned\n\t     * to the created object.\n\t     *\n\t     * =
@static\n\t     * @memberOf _\n\t     * @category Object\n\t     * =
@param {Object} prototype The object to inherit from.\n\t     * @param =
{Object} [properties] The properties to assign to the object.\n\t     * =
@param- {Object} [guard] Enables use as a callback for functions like =
`_.map`.\n\t     * @returns {Object} Returns the new object.\n\t     * =
@example\n\t     *\n\t     * function Shape() {\n\t     *   this.x =3D =
0;\n\t     *   this.y =3D 0;\n\t     * }\n\t     *\n\t     * function =
Circle() {\n\t     *   Shape.call(this);\n\t     * }\n\t     *\n\t     * =
Circle.prototype =3D _.create(Shape.prototype, {\n\t     *   =
'constructor': Circle\n\t     * });\n\t     *\n\t     * var circle =3D =
new Circle;\n\t     * circle instanceof Circle;\n\t     * // =3D&gt; =
true\n\t     *\n\t     * circle instanceof Shape;\n\t     * // =3D&gt; =
true\n\t     */\n\t    function create(prototype, properties, guard) =
{\n\t      var result =3D baseCreate(prototype);\n\t      if (guard =
&amp;&amp; isIterateeCall(prototype, properties, guard)) {\n\t        =
properties =3D undefined;\n\t      }\n\t      return properties ? =
baseAssign(result, properties) : result;\n\t    }\n\n\t    /**\n\t     * =
Assigns own enumerable properties of source object(s) to the =
destination\n\t     * object for all destination properties that resolve =
to `undefined`. Once a\n\t     * property is set, additional values of =
the same property are ignored.\n\t     *\n\t     * **Note:** This method =
mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t  =
   * @category Object\n\t     * @param {Object} object The destination =
object.\n\t     * @param {...Object} [sources] The source objects.\n\t   =
  * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t =
    * _.defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' =
});\n\t     * // =3D&gt; { 'user': 'barney', 'age': 36 }\n\t     */\n\t  =
  var defaults =3D createDefaults(assign, assignDefaults);\n\n\t    =
/**\n\t     * This method is like `_.defaults` except that it =
recursively assigns\n\t     * default properties.\n\t     *\n\t     * =
**Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t  =
   * @memberOf _\n\t     * @category Object\n\t     * @param {Object} =
object The destination object.\n\t     * @param {...Object} [sources] =
The source objects.\n\t     * @returns {Object} Returns `object`.\n\t    =
 * @example\n\t     *\n\t     * _.defaultsDeep({ 'user': { 'name': =
'barney' } }, { 'user': { 'name': 'fred', 'age': 36 } });\n\t     * // =
=3D&gt; { 'user': { 'name': 'barney', 'age': 36 } }\n\t     *\n\t     =
*/\n\t    var defaultsDeep =3D createDefaults(merge, =
mergeDefaults);\n\n\t    /**\n\t     * This method is like `_.find` =
except that it returns the key of the first\n\t     * element =
`predicate` returns truthy for instead of the element itself.\n\t     =
*\n\t     * If a property name is provided for `predicate` the created =
`_.property`\n\t     * style callback returns the property value of the =
given element.\n\t     *\n\t     * If a value is also provided for =
`thisArg` the created `_.matchesProperty`\n\t     * style callback =
returns `true` for elements that have a matching property\n\t     * =
value, else `false`.\n\t     *\n\t     * If an object is provided for =
`predicate` the created `_.matches` style\n\t     * callback returns =
`true` for elements that have the properties of the given\n\t     * =
object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf =
_\n\t     * @category Object\n\t     * @param {Object} object The object =
to search.\n\t     * @param {Function|Object|string} =
[predicate=3D_.identity] The function invoked\n\t     *  per =
iteration.\n\t     * @param {*} [thisArg] The `this` binding of =
`predicate`.\n\t     * @returns {string|undefined} Returns the key of =
the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t  =
   * var users =3D {\n\t     *   'barney':  { 'age': 36, 'active': true =
},\n\t     *   'fred':    { 'age': 40, 'active': false },\n\t     *   =
'pebbles': { 'age': 1,  'active': true }\n\t     * };\n\t     *\n\t     =
* _.findKey(users, function(chr) {\n\t     *   return chr.age &lt; =
40;\n\t     * });\n\t     * // =3D&gt; 'barney' (iteration order is not =
guaranteed)\n\t     *\n\t     * // using the `_.matches` callback =
shorthand\n\t     * _.findKey(users, { 'age': 1, 'active': true });\n\t  =
   * // =3D&gt; 'pebbles'\n\t     *\n\t     * // using the =
`_.matchesProperty` callback shorthand\n\t     * _.findKey(users, =
'active', false);\n\t     * // =3D&gt; 'fred'\n\t     *\n\t     * // =
using the `_.property` callback shorthand\n\t     * _.findKey(users, =
'active');\n\t     * // =3D&gt; 'barney'\n\t     */\n\t    var findKey =
=3D createFindKey(baseForOwn);\n\n\t    /**\n\t     * This method is =
like `_.findKey` except that it iterates over elements of\n\t     * a =
collection in the opposite order.\n\t     *\n\t     * If a property name =
is provided for `predicate` the created `_.property`\n\t     * style =
callback returns the property value of the given element.\n\t     *\n\t  =
   * If a value is also provided for `thisArg` the created =
`_.matchesProperty`\n\t     * style callback returns `true` for elements =
that have a matching property\n\t     * value, else `false`.\n\t     =
*\n\t     * If an object is provided for `predicate` the created =
`_.matches` style\n\t     * callback returns `true` for elements that =
have the properties of the given\n\t     * object, else `false`.\n\t     =
*\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t =
    * @param {Object} object The object to search.\n\t     * @param =
{Function|Object|string} [predicate=3D_.identity] The function =
invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The =
`this` binding of `predicate`.\n\t     * @returns {string|undefined} =
Returns the key of the matched element, else `undefined`.\n\t     * =
@example\n\t     *\n\t     * var users =3D {\n\t     *   'barney':  { =
'age': 36, 'active': true },\n\t     *   'fred':    { 'age': 40, =
'active': false },\n\t     *   'pebbles': { 'age': 1,  'active': true =
}\n\t     * };\n\t     *\n\t     * _.findLastKey(users, function(chr) =
{\n\t     *   return chr.age &lt; 40;\n\t     * });\n\t     * // =3D&gt; =
returns `pebbles` assuming `_.findKey` returns `barney`\n\t     *\n\t    =
 * // using the `_.matches` callback shorthand\n\t     * =
_.findLastKey(users, { 'age': 36, 'active': true });\n\t     * // =
=3D&gt; 'barney'\n\t     *\n\t     * // using the `_.matchesProperty` =
callback shorthand\n\t     * _.findLastKey(users, 'active', false);\n\t  =
   * // =3D&gt; 'fred'\n\t     *\n\t     * // using the `_.property` =
callback shorthand\n\t     * _.findLastKey(users, 'active');\n\t     * =
// =3D&gt; 'pebbles'\n\t     */\n\t    var findLastKey =3D =
createFindKey(baseForOwnRight);\n\n\t    /**\n\t     * Iterates over own =
and inherited enumerable properties of an object invoking\n\t     * =
`iteratee` for each property. The `iteratee` is bound to `thisArg` and =
invoked\n\t     * with three arguments: (value, key, object). Iteratee =
functions may exit\n\t     * iteration early by explicitly returning =
`false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * =
@category Object\n\t     * @param {Object} object The object to iterate =
over.\n\t     * @param {Function} [iteratee=3D_.identity] The function =
invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding =
of `iteratee`.\n\t     * @returns {Object} Returns `object`.\n\t     * =
@example\n\t     *\n\t     * function Foo() {\n\t     *   this.a =3D =
1;\n\t     *   this.b =3D 2;\n\t     * }\n\t     *\n\t     * =
Foo.prototype.c =3D 3;\n\t     *\n\t     * _.forIn(new Foo, =
function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t   =
  * // =3D&gt; logs 'a', 'b', and 'c' (iteration order is not =
guaranteed)\n\t     */\n\t    var forIn =3D createForIn(baseFor);\n\n\t  =
  /**\n\t     * This method is like `_.forIn` except that it iterates =
over properties of\n\t     * `object` in the opposite order.\n\t     =
*\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t =
    * @param {Object} object The object to iterate over.\n\t     * =
@param {Function} [iteratee=3D_.identity] The function invoked per =
iteration.\n\t     * @param {*} [thisArg] The `this` binding of =
`iteratee`.\n\t     * @returns {Object} Returns `object`.\n\t     * =
@example\n\t     *\n\t     * function Foo() {\n\t     *   this.a =3D =
1;\n\t     *   this.b =3D 2;\n\t     * }\n\t     *\n\t     * =
Foo.prototype.c =3D 3;\n\t     *\n\t     * _.forInRight(new Foo, =
function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t   =
  * // =3D&gt; logs 'c', 'b', and 'a' assuming `_.forIn ` logs 'a', 'b', =
and 'c'\n\t     */\n\t    var forInRight =3D =
createForIn(baseForRight);\n\n\t    /**\n\t     * Iterates over own =
enumerable properties of an object invoking `iteratee`\n\t     * for =
each property. The `iteratee` is bound to `thisArg` and invoked with\n\t =
    * three arguments: (value, key, object). Iteratee functions may exit =
iteration\n\t     * early by explicitly returning `false`.\n\t     *\n\t =
    * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * =
@param {Object} object The object to iterate over.\n\t     * @param =
{Function} [iteratee=3D_.identity] The function invoked per =
iteration.\n\t     * @param {*} [thisArg] The `this` binding of =
`iteratee`.\n\t     * @returns {Object} Returns `object`.\n\t     * =
@example\n\t     *\n\t     * function Foo() {\n\t     *   this.a =3D =
1;\n\t     *   this.b =3D 2;\n\t     * }\n\t     *\n\t     * =
Foo.prototype.c =3D 3;\n\t     *\n\t     * _.forOwn(new Foo, =
function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t   =
  * // =3D&gt; logs 'a' and 'b' (iteration order is not guaranteed)\n\t  =
   */\n\t    var forOwn =3D createForOwn(baseForOwn);\n\n\t    /**\n\t   =
  * This method is like `_.forOwn` except that it iterates over =
properties of\n\t     * `object` in the opposite order.\n\t     *\n\t    =
 * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * =
@param {Object} object The object to iterate over.\n\t     * @param =
{Function} [iteratee=3D_.identity] The function invoked per =
iteration.\n\t     * @param {*} [thisArg] The `this` binding of =
`iteratee`.\n\t     * @returns {Object} Returns `object`.\n\t     * =
@example\n\t     *\n\t     * function Foo() {\n\t     *   this.a =3D =
1;\n\t     *   this.b =3D 2;\n\t     * }\n\t     *\n\t     * =
Foo.prototype.c =3D 3;\n\t     *\n\t     * _.forOwnRight(new Foo, =
function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t   =
  * // =3D&gt; logs 'b' and 'a' assuming `_.forOwn` logs 'a' and 'b'\n\t =
    */\n\t    var forOwnRight =3D createForOwn(baseForOwnRight);\n\n\t   =
 /**\n\t     * Creates an array of function property names from all =
enumerable properties,\n\t     * own and inherited, of `object`.\n\t     =
*\n\t     * @static\n\t     * @memberOf _\n\t     * @alias methods\n\t   =
  * @category Object\n\t     * @param {Object} object The object to =
inspect.\n\t     * @returns {Array} Returns the new array of property =
names.\n\t     * @example\n\t     *\n\t     * _.functions(_);\n\t     * =
// =3D&gt; ['after', 'ary', 'assign', ...]\n\t     */\n\t    function =
functions(object) {\n\t      return baseFunctions(object, =
keysIn(object));\n\t    }\n\n\t    /**\n\t     * Gets the property value =
at `path` of `object`. If the resolved value is\n\t     * `undefined` =
the `defaultValue` is used in its place.\n\t     *\n\t     * @static\n\t =
    * @memberOf _\n\t     * @category Object\n\t     * @param {Object} =
object The object to query.\n\t     * @param {Array|string} path The =
path of the property to get.\n\t     * @param {*} [defaultValue] The =
value returned if the resolved value is `undefined`.\n\t     * @returns =
{*} Returns the resolved value.\n\t     * @example\n\t     *\n\t     * =
var object =3D { 'a': [{ 'b': { 'c': 3 } }] };\n\t     *\n\t     * =
_.get(object, 'a[0].b.c');\n\t     * // =3D&gt; 3\n\t     *\n\t     * =
_.get(object, ['a', '0', 'b', 'c']);\n\t     * // =3D&gt; 3\n\t     =
*\n\t     * _.get(object, 'a.b.c', 'default');\n\t     * // =3D&gt; =
'default'\n\t     */\n\t    function get(object, path, defaultValue) =
{\n\t      var result =3D object =3D=3D null ? undefined : =
baseGet(object, toPath(path), path + '');\n\t      return result =
=3D=3D=3D undefined ? defaultValue : result;\n\t    }\n\n\t    /**\n\t   =
  * Checks if `path` is a direct property.\n\t     *\n\t     * =
@static\n\t     * @memberOf _\n\t     * @category Object\n\t     * =
@param {Object} object The object to query.\n\t     * @param =
{Array|string} path The path to check.\n\t     * @returns {boolean} =
Returns `true` if `path` is a direct property, else `false`.\n\t     * =
@example\n\t     *\n\t     * var object =3D { 'a': { 'b': { 'c': 3 } } =
};\n\t     *\n\t     * _.has(object, 'a');\n\t     * // =3D&gt; true\n\t =
    *\n\t     * _.has(object, 'a.b.c');\n\t     * // =3D&gt; true\n\t    =
 *\n\t     * _.has(object, ['a', 'b', 'c']);\n\t     * // =3D&gt; =
true\n\t     */\n\t    function has(object, path) {\n\t      if (object =
=3D=3D null) {\n\t        return false;\n\t      }\n\t      var result =
=3D hasOwnProperty.call(object, path);\n\t      if (!result &amp;&amp; =
!isKey(path)) {\n\t        path =3D toPath(path);\n\t        object =3D =
path.length =3D=3D 1 ? object : baseGet(object, baseSlice(path, 0, =
-1));\n\t        if (object =3D=3D null) {\n\t          return =
false;\n\t        }\n\t        path =3D last(path);\n\t        result =
=3D hasOwnProperty.call(object, path);\n\t      }\n\t      return result =
|| (isLength(object.length) &amp;&amp; isIndex(path, object.length) =
&amp;&amp;\n\t        (isArray(object) || isArguments(object)));\n\t    =
}\n\n\t    /**\n\t     * Creates an object composed of the inverted keys =
and values of `object`.\n\t     * If `object` contains duplicate values, =
subsequent values overwrite property\n\t     * assignments of previous =
values unless `multiValue` is `true`.\n\t     *\n\t     * @static\n\t    =
 * @memberOf _\n\t     * @category Object\n\t     * @param {Object} =
object The object to invert.\n\t     * @param {boolean} [multiValue] =
Allow multiple values per key.\n\t     * @param- {Object} [guard] =
Enables use as a callback for functions like `_.map`.\n\t     * @returns =
{Object} Returns the new inverted object.\n\t     * @example\n\t     =
*\n\t     * var object =3D { 'a': 1, 'b': 2, 'c': 1 };\n\t     *\n\t     =
* _.invert(object);\n\t     * // =3D&gt; { '1': 'c', '2': 'b' }\n\t     =
*\n\t     * // with `multiValue`\n\t     * _.invert(object, true);\n\t   =
  * // =3D&gt; { '1': ['a', 'c'], '2': ['b'] }\n\t     */\n\t    =
function invert(object, multiValue, guard) {\n\t      if (guard =
&amp;&amp; isIterateeCall(object, multiValue, guard)) {\n\t        =
multiValue =3D undefined;\n\t      }\n\t      var index =3D -1,\n\t      =
    props =3D keys(object),\n\t          length =3D props.length,\n\t    =
      result =3D {};\n\n\t      while (++index &lt; length) {\n\t        =
var key =3D props[index],\n\t            value =3D object[key];\n\n\t    =
    if (multiValue) {\n\t          if (hasOwnProperty.call(result, =
value)) {\n\t            result[value].push(key);\n\t          } else =
{\n\t            result[value] =3D [key];\n\t          }\n\t        =
}\n\t        else {\n\t          result[value] =3D key;\n\t        }\n\t =
     }\n\t      return result;\n\t    }\n\n\t    /**\n\t     * Creates =
an array of the own enumerable property names of `object`.\n\t     *\n\t =
    * **Note:** Non-object values are coerced to objects. See the\n\t    =
 * [ES =
spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)\n\t   =
  * for more details.\n\t     *\n\t     * @static\n\t     * @memberOf =
_\n\t     * @category Object\n\t     * @param {Object} object The object =
to query.\n\t     * @returns {Array} Returns the array of property =
names.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     * =
  this.a =3D 1;\n\t     *   this.b =3D 2;\n\t     * }\n\t     *\n\t     =
* Foo.prototype.c =3D 3;\n\t     *\n\t     * _.keys(new Foo);\n\t     * =
// =3D&gt; ['a', 'b'] (iteration order is not guaranteed)\n\t     *\n\t  =
   * _.keys('hi');\n\t     * // =3D&gt; ['0', '1']\n\t     */\n\t    var =
keys =3D !nativeKeys ? shimKeys : function(object) {\n\t      var Ctor =
=3D object =3D=3D null ? undefined : object.constructor;\n\t      if =
((typeof Ctor =3D=3D 'function' &amp;&amp; Ctor.prototype =3D=3D=3D =
object) ||\n\t          (typeof object !=3D 'function' &amp;&amp; =
isArrayLike(object))) {\n\t        return shimKeys(object);\n\t      =
}\n\t      return isObject(object) ? nativeKeys(object) : [];\n\t    =
};\n\n\t    /**\n\t     * Creates an array of the own and inherited =
enumerable property names of `object`.\n\t     *\n\t     * **Note:** =
Non-object values are coerced to objects.\n\t     *\n\t     * =
@static\n\t     * @memberOf _\n\t     * @category Object\n\t     * =
@param {Object} object The object to query.\n\t     * @returns {Array} =
Returns the array of property names.\n\t     * @example\n\t     *\n\t    =
 * function Foo() {\n\t     *   this.a =3D 1;\n\t     *   this.b =3D =
2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c =3D 3;\n\t     *\n\t  =
   * _.keysIn(new Foo);\n\t     * // =3D&gt; ['a', 'b', 'c'] (iteration =
order is not guaranteed)\n\t     */\n\t    function keysIn(object) {\n\t =
     if (object =3D=3D null) {\n\t        return [];\n\t      }\n\t      =
if (!isObject(object)) {\n\t        object =3D Object(object);\n\t      =
}\n\t      var length =3D object.length;\n\t      length =3D (length =
&amp;&amp; isLength(length) &amp;&amp;\n\t        (isArray(object) || =
isArguments(object)) &amp;&amp; length) || 0;\n\n\t      var Ctor =3D =
object.constructor,\n\t          index =3D -1,\n\t          isProto =3D =
typeof Ctor =3D=3D 'function' &amp;&amp; Ctor.prototype =3D=3D=3D =
object,\n\t          result =3D Array(length),\n\t          skipIndexes =
=3D length &gt; 0;\n\n\t      while (++index &lt; length) {\n\t        =
result[index] =3D (index + '');\n\t      }\n\t      for (var key in =
object) {\n\t        if (!(skipIndexes &amp;&amp; isIndex(key, length)) =
&amp;&amp;\n\t            !(key =3D=3D 'constructor' &amp;&amp; (isProto =
|| !hasOwnProperty.call(object, key)))) {\n\t          =
result.push(key);\n\t        }\n\t      }\n\t      return result;\n\t    =
}\n\n\t    /**\n\t     * The opposite of `_.mapValues`; this method =
creates an object with the\n\t     * same values as `object` and keys =
generated by running each own enumerable\n\t     * property of `object` =
through `iteratee`.\n\t     *\n\t     * @static\n\t     * @memberOf =
_\n\t     * @category Object\n\t     * @param {Object} object The object =
to iterate over.\n\t     * @param {Function|Object|string} =
[iteratee=3D_.identity] The function invoked\n\t     *  per =
iteration.\n\t     * @param {*} [thisArg] The `this` binding of =
`iteratee`.\n\t     * @returns {Object} Returns the new mapped =
object.\n\t     * @example\n\t     *\n\t     * _.mapKeys({ 'a': 1, 'b': =
2 }, function(value, key) {\n\t     *   return key + value;\n\t     * =
});\n\t     * // =3D&gt; { 'a1': 1, 'b2': 2 }\n\t     */\n\t    var =
mapKeys =3D createObjectMapper(true);\n\n\t    /**\n\t     * Creates an =
object with the same keys as `object` and values generated by\n\t     * =
running each own enumerable property of `object` through `iteratee`. =
The\n\t     * iteratee function is bound to `thisArg` and invoked with =
three arguments:\n\t     * (value, key, object).\n\t     *\n\t     * If =
a property name is provided for `iteratee` the created `_.property`\n\t  =
   * style callback returns the property value of the given element.\n\t =
    *\n\t     * If a value is also provided for `thisArg` the created =
`_.matchesProperty`\n\t     * style callback returns `true` for elements =
that have a matching property\n\t     * value, else `false`.\n\t     =
*\n\t     * If an object is provided for `iteratee` the created =
`_.matches` style\n\t     * callback returns `true` for elements that =
have the properties of the given\n\t     * object, else `false`.\n\t     =
*\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t =
    * @param {Object} object The object to iterate over.\n\t     * =
@param {Function|Object|string} [iteratee=3D_.identity] The function =
invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The =
`this` binding of `iteratee`.\n\t     * @returns {Object} Returns the =
new mapped object.\n\t     * @example\n\t     *\n\t     * _.mapValues({ =
'a': 1, 'b': 2 }, function(n) {\n\t     *   return n * 3;\n\t     * =
});\n\t     * // =3D&gt; { 'a': 3, 'b': 6 }\n\t     *\n\t     * var =
users =3D {\n\t     *   'fred':    { 'user': 'fred',    'age': 40 },\n\t =
    *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n\t     * };\n\t     =
*\n\t     * // using the `_.property` callback shorthand\n\t     * =
_.mapValues(users, 'age');\n\t     * // =3D&gt; { 'fred': 40, 'pebbles': =
1 } (iteration order is not guaranteed)\n\t     */\n\t    var mapValues =
=3D createObjectMapper();\n\n\t    /**\n\t     * The opposite of =
`_.pick`; this method creates an object composed of the\n\t     * own =
and inherited enumerable properties of `object` that are not =
omitted.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * =
@category Object\n\t     * @param {Object} object The source object.\n\t =
    * @param {Function|...(string|string[])} [predicate] The function =
invoked per\n\t     *  iteration or property names to omit, specified as =
individual property\n\t     *  names or arrays of property names.\n\t    =
 * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * =
@returns {Object} Returns the new object.\n\t     * @example\n\t     =
*\n\t     * var object =3D { 'user': 'fred', 'age': 40 };\n\t     *\n\t  =
   * _.omit(object, 'age');\n\t     * // =3D&gt; { 'user': 'fred' }\n\t  =
   *\n\t     * _.omit(object, _.isNumber);\n\t     * // =3D&gt; { =
'user': 'fred' }\n\t     */\n\t    var omit =3D =
restParam(function(object, props) {\n\t      if (object =3D=3D null) =
{\n\t        return {};\n\t      }\n\t      if (typeof props[0] !=3D =
'function') {\n\t        var props =3D arrayMap(baseFlatten(props), =
String);\n\t        return pickByArray(object, =
baseDifference(keysIn(object), props));\n\t      }\n\t      var =
predicate =3D bindCallback(props[0], props[1], 3);\n\t      return =
pickByCallback(object, function(value, key, object) {\n\t        return =
!predicate(value, key, object);\n\t      });\n\t    });\n\n\t    /**\n\t =
    * Creates a two dimensional array of the key-value pairs for =
`object`,\n\t     * e.g. `[[key1, value1], [key2, value2]]`.\n\t     =
*\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t =
    * @param {Object} object The object to query.\n\t     * @returns =
{Array} Returns the new array of key-value pairs.\n\t     * @example\n\t =
    *\n\t     * _.pairs({ 'barney': 36, 'fred': 40 });\n\t     * // =
=3D&gt; [['barney', 36], ['fred', 40]] (iteration order is not =
guaranteed)\n\t     */\n\t    function pairs(object) {\n\t      object =
=3D toObject(object);\n\n\t      var index =3D -1,\n\t          props =
=3D keys(object),\n\t          length =3D props.length,\n\t          =
result =3D Array(length);\n\n\t      while (++index &lt; length) {\n\t   =
     var key =3D props[index];\n\t        result[index] =3D [key, =
object[key]];\n\t      }\n\t      return result;\n\t    }\n\n\t    =
/**\n\t     * Creates an object composed of the picked `object` =
properties. Property\n\t     * names may be specified as individual =
arguments or as arrays of property\n\t     * names. If `predicate` is =
provided it is invoked for each property of `object`\n\t     * picking =
the properties `predicate` returns truthy for. The predicate is\n\t     =
* bound to `thisArg` and invoked with three arguments: (value, key, =
object).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * =
@category Object\n\t     * @param {Object} object The source object.\n\t =
    * @param {Function|...(string|string[])} [predicate] The function =
invoked per\n\t     *  iteration or property names to pick, specified as =
individual property\n\t     *  names or arrays of property names.\n\t    =
 * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * =
@returns {Object} Returns the new object.\n\t     * @example\n\t     =
*\n\t     * var object =3D { 'user': 'fred', 'age': 40 };\n\t     *\n\t  =
   * _.pick(object, 'user');\n\t     * // =3D&gt; { 'user': 'fred' }\n\t =
    *\n\t     * _.pick(object, _.isString);\n\t     * // =3D&gt; { =
'user': 'fred' }\n\t     */\n\t    var pick =3D =
restParam(function(object, props) {\n\t      if (object =3D=3D null) =
{\n\t        return {};\n\t      }\n\t      return typeof props[0] =
=3D=3D 'function'\n\t        ? pickByCallback(object, =
bindCallback(props[0], props[1], 3))\n\t        : pickByArray(object, =
baseFlatten(props));\n\t    });\n\n\t    /**\n\t     * This method is =
like `_.get` except that if the resolved value is a function\n\t     * =
it is invoked with the `this` binding of its parent object and its =
result\n\t     * is returned.\n\t     *\n\t     * @static\n\t     * =
@memberOf _\n\t     * @category Object\n\t     * @param {Object} object =
The object to query.\n\t     * @param {Array|string} path The path of =
the property to resolve.\n\t     * @param {*} [defaultValue] The value =
returned if the resolved value is `undefined`.\n\t     * @returns {*} =
Returns the resolved value.\n\t     * @example\n\t     *\n\t     * var =
object =3D { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n\t     =
*\n\t     * _.result(object, 'a[0].b.c1');\n\t     * // =3D&gt; 3\n\t    =
 *\n\t     * _.result(object, 'a[0].b.c2');\n\t     * // =3D&gt; 4\n\t   =
  *\n\t     * _.result(object, 'a.b.c', 'default');\n\t     * // =3D&gt; =
'default'\n\t     *\n\t     * _.result(object, 'a.b.c', =
_.constant('default'));\n\t     * // =3D&gt; 'default'\n\t     */\n\t    =
function result(object, path, defaultValue) {\n\t      var result =3D =
object =3D=3D null ? undefined : object[path];\n\t      if (result =
=3D=3D=3D undefined) {\n\t        if (object !=3D null &amp;&amp; =
!isKey(path, object)) {\n\t          path =3D toPath(path);\n\t          =
object =3D path.length =3D=3D 1 ? object : baseGet(object, =
baseSlice(path, 0, -1));\n\t          result =3D object =3D=3D null ? =
undefined : object[last(path)];\n\t        }\n\t        result =3D =
result =3D=3D=3D undefined ? defaultValue : result;\n\t      }\n\t      =
return isFunction(result) ? result.call(object) : result;\n\t    }\n\n\t =
   /**\n\t     * Sets the property value of `path` on `object`. If a =
portion of `path`\n\t     * does not exist it is created.\n\t     *\n\t  =
   * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * =
@param {Object} object The object to augment.\n\t     * @param =
{Array|string} path The path of the property to set.\n\t     * @param =
{*} value The value to set.\n\t     * @returns {Object} Returns =
`object`.\n\t     * @example\n\t     *\n\t     * var object =3D { 'a': =
[{ 'b': { 'c': 3 } }] };\n\t     *\n\t     * _.set(object, 'a[0].b.c', =
4);\n\t     * console.log(object.a[0].b.c);\n\t     * // =3D&gt; 4\n\t   =
  *\n\t     * _.set(object, 'x[0].y.z', 5);\n\t     * =
console.log(object.x[0].y.z);\n\t     * // =3D&gt; 5\n\t     */\n\t    =
function set(object, path, value) {\n\t      if (object =3D=3D null) =
{\n\t        return object;\n\t      }\n\t      var pathKey =3D (path + =
'');\n\t      path =3D (object[pathKey] !=3D null || isKey(path, =
object)) ? [pathKey] : toPath(path);\n\n\t      var index =3D -1,\n\t    =
      length =3D path.length,\n\t          lastIndex =3D length - 1,\n\t =
         nested =3D object;\n\n\t      while (nested !=3D null =
&amp;&amp; ++index &lt; length) {\n\t        var key =3D =
path[index];\n\t        if (isObject(nested)) {\n\t          if (index =
=3D=3D lastIndex) {\n\t            nested[key] =3D value;\n\t          } =
else if (nested[key] =3D=3D null) {\n\t            nested[key] =3D =
isIndex(path[index + 1]) ? [] : {};\n\t          }\n\t        }\n\t      =
  nested =3D nested[key];\n\t      }\n\t      return object;\n\t    =
}\n\n\t    /**\n\t     * An alternative to `_.reduce`; this method =
transforms `object` to a new\n\t     * `accumulator` object which is the =
result of running each of its own enumerable\n\t     * properties =
through `iteratee`, with each invocation potentially mutating\n\t     * =
the `accumulator` object. The `iteratee` is bound to `thisArg` and =
invoked\n\t     * with four arguments: (accumulator, value, key, =
object). Iteratee functions\n\t     * may exit iteration early by =
explicitly returning `false`.\n\t     *\n\t     * @static\n\t     * =
@memberOf _\n\t     * @category Object\n\t     * @param {Array|Object} =
object The object to iterate over.\n\t     * @param {Function} =
[iteratee=3D_.identity] The function invoked per iteration.\n\t     * =
@param {*} [accumulator] The custom accumulator value.\n\t     * @param =
{*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {*} =
Returns the accumulated value.\n\t     * @example\n\t     *\n\t     * =
_.transform([2, 3, 4], function(result, n) {\n\t     *   result.push(n =
*=3D n);\n\t     *   return n % 2 =3D=3D 0;\n\t     * });\n\t     * // =
=3D&gt; [4, 9]\n\t     *\n\t     * _.transform({ 'a': 1, 'b': 2 }, =
function(result, n, key) {\n\t     *   result[key] =3D n * 3;\n\t     * =
});\n\t     * // =3D&gt; { 'a': 3, 'b': 6 }\n\t     */\n\t    function =
transform(object, iteratee, accumulator, thisArg) {\n\t      var isArr =
=3D isArray(object) || isTypedArray(object);\n\t      iteratee =3D =
getCallback(iteratee, thisArg, 4);\n\n\t      if (accumulator =3D=3D =
null) {\n\t        if (isArr || isObject(object)) {\n\t          var =
Ctor =3D object.constructor;\n\t          if (isArr) {\n\t            =
accumulator =3D isArray(object) ? new Ctor : [];\n\t          } else =
{\n\t            accumulator =3D baseCreate(isFunction(Ctor) ? =
Ctor.prototype : undefined);\n\t          }\n\t        } else {\n\t      =
    accumulator =3D {};\n\t        }\n\t      }\n\t      (isArr ? =
arrayEach : baseForOwn)(object, function(value, index, object) {\n\t     =
   return iteratee(accumulator, value, index, object);\n\t      });\n\t  =
    return accumulator;\n\t    }\n\n\t    /**\n\t     * Creates an array =
of the own enumerable property values of `object`.\n\t     *\n\t     * =
**Note:** Non-object values are coerced to objects.\n\t     *\n\t     * =
@static\n\t     * @memberOf _\n\t     * @category Object\n\t     * =
@param {Object} object The object to query.\n\t     * @returns {Array} =
Returns the array of property values.\n\t     * @example\n\t     *\n\t   =
  * function Foo() {\n\t     *   this.a =3D 1;\n\t     *   this.b =3D =
2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c =3D 3;\n\t     *\n\t  =
   * _.values(new Foo);\n\t     * // =3D&gt; [1, 2] (iteration order is =
not guaranteed)\n\t     *\n\t     * _.values('hi');\n\t     * // =3D&gt; =
['h', 'i']\n\t     */\n\t    function values(object) {\n\t      return =
baseValues(object, keys(object));\n\t    }\n\n\t    /**\n\t     * =
Creates an array of the own and inherited enumerable property values\n\t =
    * of `object`.\n\t     *\n\t     * **Note:** Non-object values are =
coerced to objects.\n\t     *\n\t     * @static\n\t     * @memberOf =
_\n\t     * @category Object\n\t     * @param {Object} object The object =
to query.\n\t     * @returns {Array} Returns the array of property =
values.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     =
*   this.a =3D 1;\n\t     *   this.b =3D 2;\n\t     * }\n\t     *\n\t    =
 * Foo.prototype.c =3D 3;\n\t     *\n\t     * _.valuesIn(new Foo);\n\t   =
  * // =3D&gt; [1, 2, 3] (iteration order is not guaranteed)\n\t     =
*/\n\t    function valuesIn(object) {\n\t      return baseValues(object, =
keysIn(object));\n\t    }\n\n\t    =
/*-----------------------------------------------------------------------=
-*/\n\n\t    /**\n\t     * Checks if `n` is between `start` and up to =
but not including, `end`. If\n\t     * `end` is not specified it is set =
to `start` with `start` then set to `0`.\n\t     *\n\t     * @static\n\t =
    * @memberOf _\n\t     * @category Number\n\t     * @param {number} n =
The number to check.\n\t     * @param {number} [start=3D0] The start of =
the range.\n\t     * @param {number} end The end of the range.\n\t     * =
@returns {boolean} Returns `true` if `n` is in the range, else =
`false`.\n\t     * @example\n\t     *\n\t     * _.inRange(3, 2, 4);\n\t  =
   * // =3D&gt; true\n\t     *\n\t     * _.inRange(4, 8);\n\t     * // =
=3D&gt; true\n\t     *\n\t     * _.inRange(4, 2);\n\t     * // =3D&gt; =
false\n\t     *\n\t     * _.inRange(2, 2);\n\t     * // =3D&gt; =
false\n\t     *\n\t     * _.inRange(1.2, 2);\n\t     * // =3D&gt; =
true\n\t     *\n\t     * _.inRange(5.2, 4);\n\t     * // =3D&gt; =
false\n\t     */\n\t    function inRange(value, start, end) {\n\t      =
start =3D +start || 0;\n\t      if (end =3D=3D=3D undefined) {\n\t       =
 end =3D start;\n\t        start =3D 0;\n\t      } else {\n\t        end =
=3D +end || 0;\n\t      }\n\t      return value &gt;=3D nativeMin(start, =
end) &amp;&amp; value &lt; nativeMax(start, end);\n\t    }\n\n\t    =
/**\n\t     * Produces a random number between `min` and `max` =
(inclusive). If only one\n\t     * argument is provided a number between =
`0` and the given number is returned.\n\t     * If `floating` is `true`, =
or either `min` or `max` are floats, a floating-point\n\t     * number =
is returned instead of an integer.\n\t     *\n\t     * @static\n\t     * =
@memberOf _\n\t     * @category Number\n\t     * @param {number} =
[min=3D0] The minimum possible value.\n\t     * @param {number} =
[max=3D1] The maximum possible value.\n\t     * @param {boolean} =
[floating] Specify returning a floating-point number.\n\t     * @returns =
{number} Returns the random number.\n\t     * @example\n\t     *\n\t     =
* _.random(0, 5);\n\t     * // =3D&gt; an integer between 0 and 5\n\t    =
 *\n\t     * _.random(5);\n\t     * // =3D&gt; also an integer between 0 =
and 5\n\t     *\n\t     * _.random(5, true);\n\t     * // =3D&gt; a =
floating-point number between 0 and 5\n\t     *\n\t     * _.random(1.2, =
5.2);\n\t     * // =3D&gt; a floating-point number between 1.2 and =
5.2\n\t     */\n\t    function random(min, max, floating) {\n\t      if =
(floating &amp;&amp; isIterateeCall(min, max, floating)) {\n\t        =
max =3D floating =3D undefined;\n\t      }\n\t      var noMin =3D min =
=3D=3D null,\n\t          noMax =3D max =3D=3D null;\n\n\t      if =
(floating =3D=3D null) {\n\t        if (noMax &amp;&amp; typeof min =
=3D=3D 'boolean') {\n\t          floating =3D min;\n\t          min =3D =
1;\n\t        }\n\t        else if (typeof max =3D=3D 'boolean') {\n\t   =
       floating =3D max;\n\t          noMax =3D true;\n\t        }\n\t   =
   }\n\t      if (noMin &amp;&amp; noMax) {\n\t        max =3D 1;\n\t    =
    noMax =3D false;\n\t      }\n\t      min =3D +min || 0;\n\t      if =
(noMax) {\n\t        max =3D min;\n\t        min =3D 0;\n\t      } else =
{\n\t        max =3D +max || 0;\n\t      }\n\t      if (floating || min =
% 1 || max % 1) {\n\t        var rand =3D nativeRandom();\n\t        =
return nativeMin(min + (rand * (max - min + parseFloat('1e-' + ((rand + =
'').length - 1)))), max);\n\t      }\n\t      return baseRandom(min, =
max);\n\t    }\n\n\t    =
/*-----------------------------------------------------------------------=
-*/\n\n\t    /**\n\t     * Converts `string` to [camel =
case](https://en.wikipedia.org/wiki/CamelCase).\n\t     *\n\t     * =
@static\n\t     * @memberOf _\n\t     * @category String\n\t     * =
@param {string} [string=3D''] The string to convert.\n\t     * @returns =
{string} Returns the camel cased string.\n\t     * @example\n\t     =
*\n\t     * _.camelCase('Foo Bar');\n\t     * // =3D&gt; 'fooBar'\n\t    =
 *\n\t     * _.camelCase('--foo-bar');\n\t     * // =3D&gt; 'fooBar'\n\t =
    *\n\t     * _.camelCase('__foo_bar__');\n\t     * // =3D&gt; =
'fooBar'\n\t     */\n\t    var camelCase =3D =
createCompounder(function(result, word, index) {\n\t      word =3D =
word.toLowerCase();\n\t      return result + (index ? =
(word.charAt(0).toUpperCase() + word.slice(1)) : word);\n\t    });\n\n\t =
   /**\n\t     * Capitalizes the first character of `string`.\n\t     =
*\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t =
    * @param {string} [string=3D''] The string to capitalize.\n\t     * =
@returns {string} Returns the capitalized string.\n\t     * @example\n\t =
    *\n\t     * _.capitalize('fred');\n\t     * // =3D&gt; 'Fred'\n\t    =
 */\n\t    function capitalize(string) {\n\t      string =3D =
baseToString(string);\n\t      return string &amp;&amp; =
(string.charAt(0).toUpperCase() + string.slice(1));\n\t    }\n\n\t    =
/**\n\t     * Deburrs `string` by converting [latin-1 supplementary =
letters](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)=
#Character_table)\n\t     * to basic latin letters and removing =
[combining diacritical =
marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n\t   =
  *\n\t     * @static\n\t     * @memberOf _\n\t     * @category =
String\n\t     * @param {string} [string=3D''] The string to deburr.\n\t =
    * @returns {string} Returns the deburred string.\n\t     * =
@example\n\t     *\n\t     * _.deburr('d=C3=A9j=C3=A0 vu');\n\t     * // =
=3D&gt; 'deja vu'\n\t     */\n\t    function deburr(string) {\n\t      =
string =3D baseToString(string);\n\t      return string &amp;&amp; =
string.replace(reLatin1, deburrLetter).replace(reComboMark, '');\n\t    =
}\n\n\t    /**\n\t     * Checks if `string` ends with the given target =
string.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * =
@category String\n\t     * @param {string} [string=3D''] The string to =
search.\n\t     * @param {string} [target] The string to search for.\n\t =
    * @param {number} [position=3Dstring.length] The position to search =
from.\n\t     * @returns {boolean} Returns `true` if `string` ends with =
`target`, else `false`.\n\t     * @example\n\t     *\n\t     * =
_.endsWith('abc', 'c');\n\t     * // =3D&gt; true\n\t     *\n\t     * =
_.endsWith('abc', 'b');\n\t     * // =3D&gt; false\n\t     *\n\t     * =
_.endsWith('abc', 'b', 2);\n\t     * // =3D&gt; true\n\t     */\n\t    =
function endsWith(string, target, position) {\n\t      string =3D =
baseToString(string);\n\t      target =3D (target + '');\n\n\t      var =
length =3D string.length;\n\t      position =3D position =3D=3D=3D =
undefined\n\t        ? length\n\t        : nativeMin(position &lt; 0 ? 0 =
: (+position || 0), length);\n\n\t      position -=3D target.length;\n\t =
     return position &gt;=3D 0 &amp;&amp; string.indexOf(target, =
position) =3D=3D position;\n\t    }\n\n\t    /**\n\t     * Converts the =
characters \"&amp;\", \"&lt;\", \"&gt;\", '\"', \"'\", and \"\\`\", in =
`string` to\n\t     * their corresponding HTML entities.\n\t     *\n\t   =
  * **Note:** No other characters are escaped. To escape additional =
characters\n\t     * use a third-party library like =
[_he_](https://mths.be/he).\n\t     *\n\t     * Though the \"&gt;\" =
character is escaped for symmetry, characters like\n\t     * \"&gt;\" =
and \"/\" don't need escaping in HTML and have no special meaning\n\t    =
 * unless they're part of a tag or unquoted attribute value.\n\t     * =
See [Mathias Bynens's =
article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n\t     * =
(under \"semi-related fun fact\") for more details.\n\t     *\n\t     * =
Backticks are escaped because in Internet Explorer &lt; 9, they can =
break out\n\t     * of attribute values or HTML comments. See =
[#59](https://html5sec.org/#59),\n\t     * =
[#102](https://html5sec.org/#102), [#108](https://html5sec.org/#108), =
and\n\t     * [#133](https://html5sec.org/#133) of the [HTML5 Security =
Cheatsheet](https://html5sec.org/)\n\t     * for more details.\n\t     =
*\n\t     * When working with HTML you should always [quote attribute =
values](http://wonko.com/post/html-escaping)\n\t     * to reduce XSS =
vectors.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * =
@category String\n\t     * @param {string} [string=3D''] The string to =
escape.\n\t     * @returns {string} Returns the escaped string.\n\t     =
* @example\n\t     *\n\t     * _.escape('fred, barney, &amp; =
pebbles');\n\t     * // =3D&gt; 'fred, barney, &amp;amp; pebbles'\n\t    =
 */\n\t    function escape(string) {\n\t      // Reset `lastIndex` =
because in IE &lt; 9 `String#replace` does not.\n\t      string =3D =
baseToString(string);\n\t      return (string &amp;&amp; =
reHasUnescapedHtml.test(string))\n\t        ? =
string.replace(reUnescapedHtml, escapeHtmlChar)\n\t        : string;\n\t =
   }\n\n\t    /**\n\t     * Escapes the `RegExp` special characters =
\"\\\", \"/\", \"^\", \"$\", \".\", \"|\", \"?\",\n\t     * \"*\", =
\"+\", \"(\", \")\", \"[\", \"]\", \"{\" and \"}\" in `string`.\n\t     =
*\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t =
    * @param {string} [string=3D''] The string to escape.\n\t     * =
@returns {string} Returns the escaped string.\n\t     * @example\n\t     =
*\n\t     * _.escapeRegExp('[lodash](https://lodash.com/)');\n\t     * =
// =3D&gt; '\\[lodash\\]\\(https:\\/\\/lodash\\.com\\/\\)'\n\t     =
*/\n\t    function escapeRegExp(string) {\n\t      string =3D =
baseToString(string);\n\t      return (string &amp;&amp; =
reHasRegExpChars.test(string))\n\t        ? =
string.replace(reRegExpChars, escapeRegExpChar)\n\t        : (string || =
'(?:)');\n\t    }\n\n\t    /**\n\t     * Converts `string` to [kebab =
case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n\t=
     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category =
String\n\t     * @param {string} [string=3D''] The string to =
convert.\n\t     * @returns {string} Returns the kebab cased string.\n\t =
    * @example\n\t     *\n\t     * _.kebabCase('Foo Bar');\n\t     * // =
=3D&gt; 'foo-bar'\n\t     *\n\t     * _.kebabCase('fooBar');\n\t     * =
// =3D&gt; 'foo-bar'\n\t     *\n\t     * _.kebabCase('__foo_bar__');\n\t =
    * // =3D&gt; 'foo-bar'\n\t     */\n\t    var kebabCase =3D =
createCompounder(function(result, word, index) {\n\t      return result =
+ (index ? '-' : '') + word.toLowerCase();\n\t    });\n\n\t    /**\n\t   =
  * Pads `string` on the left and right sides if it's shorter than =
`length`.\n\t     * Padding characters are truncated if they can't be =
evenly divided by `length`.\n\t     *\n\t     * @static\n\t     * =
@memberOf _\n\t     * @category String\n\t     * @param {string} =
[string=3D''] The string to pad.\n\t     * @param {number} [length=3D0] =
The padding length.\n\t     * @param {string} [chars=3D' '] The string =
used as padding.\n\t     * @returns {string} Returns the padded =
string.\n\t     * @example\n\t     *\n\t     * _.pad('abc', 8);\n\t     =
* // =3D&gt; '  abc   '\n\t     *\n\t     * _.pad('abc', 8, '_-');\n\t   =
  * // =3D&gt; '_-abc_-_'\n\t     *\n\t     * _.pad('abc', 3);\n\t     * =
// =3D&gt; 'abc'\n\t     */\n\t    function pad(string, length, chars) =
{\n\t      string =3D baseToString(string);\n\t      length =3D =
+length;\n\n\t      var strLength =3D string.length;\n\t      if =
(strLength &gt;=3D length || !nativeIsFinite(length)) {\n\t        =
return string;\n\t      }\n\t      var mid =3D (length - strLength) / =
2,\n\t          leftLength =3D nativeFloor(mid),\n\t          =
rightLength =3D nativeCeil(mid);\n\n\t      chars =3D createPadding('', =
rightLength, chars);\n\t      return chars.slice(0, leftLength) + string =
+ chars;\n\t    }\n\n\t    /**\n\t     * Pads `string` on the left side =
if it's shorter than `length`. Padding\n\t     * characters are =
truncated if they exceed `length`.\n\t     *\n\t     * @static\n\t     * =
@memberOf _\n\t     * @category String\n\t     * @param {string} =
[string=3D''] The string to pad.\n\t     * @param {number} [length=3D0] =
The padding length.\n\t     * @param {string} [chars=3D' '] The string =
used as padding.\n\t     * @returns {string} Returns the padded =
string.\n\t     * @example\n\t     *\n\t     * _.padLeft('abc', 6);\n\t  =
   * // =3D&gt; '   abc'\n\t     *\n\t     * _.padLeft('abc', 6, =
'_-');\n\t     * // =3D&gt; '_-_abc'\n\t     *\n\t     * =
_.padLeft('abc', 3);\n\t     * // =3D&gt; 'abc'\n\t     */\n\t    var =
padLeft =3D createPadDir();\n\n\t    /**\n\t     * Pads `string` on the =
right side if it's shorter than `length`. Padding\n\t     * characters =
are truncated if they exceed `length`.\n\t     *\n\t     * @static\n\t   =
  * @memberOf _\n\t     * @category String\n\t     * @param {string} =
[string=3D''] The string to pad.\n\t     * @param {number} [length=3D0] =
The padding length.\n\t     * @param {string} [chars=3D' '] The string =
used as padding.\n\t     * @returns {string} Returns the padded =
string.\n\t     * @example\n\t     *\n\t     * _.padRight('abc', 6);\n\t =
    * // =3D&gt; 'abc   '\n\t     *\n\t     * _.padRight('abc', 6, =
'_-');\n\t     * // =3D&gt; 'abc_-_'\n\t     *\n\t     * =
_.padRight('abc', 3);\n\t     * // =3D&gt; 'abc'\n\t     */\n\t    var =
padRight =3D createPadDir(true);\n\n\t    /**\n\t     * Converts =
`string` to an integer of the specified radix. If `radix` is\n\t     * =
`undefined` or `0`, a `radix` of `10` is used unless `value` is a =
hexadecimal,\n\t     * in which case a `radix` of `16` is used.\n\t     =
*\n\t     * **Note:** This method aligns with the [ES5 =
implementation](https://es5.github.io/#E)\n\t     * of `parseInt`.\n\t   =
  *\n\t     * @static\n\t     * @memberOf _\n\t     * @category =
String\n\t     * @param {string} string The string to convert.\n\t     * =
@param {number} [radix] The radix to interpret `value` by.\n\t     * =
@param- {Object} [guard] Enables use as a callback for functions like =
`_.map`.\n\t     * @returns {number} Returns the converted integer.\n\t  =
   * @example\n\t     *\n\t     * _.parseInt('08');\n\t     * // =3D&gt; =
8\n\t     *\n\t     * _.map(['6', '08', '10'], _.parseInt);\n\t     * // =
=3D&gt; [6, 8, 10]\n\t     */\n\t    function parseInt(string, radix, =
guard) {\n\t      // Firefox &lt; 21 and Opera &lt; 15 follow ES3 for =
`parseInt`.\n\t      // Chrome fails to trim leading &lt;BOM&gt; =
whitespace characters.\n\t      // See =
https://code.google.com/p/v8/issues/detail?id=3D3109 for more =
details.\n\t      if (guard ? isIterateeCall(string, radix, guard) : =
radix =3D=3D null) {\n\t        radix =3D 0;\n\t      } else if (radix) =
{\n\t        radix =3D +radix;\n\t      }\n\t      string =3D =
trim(string);\n\t      return nativeParseInt(string, radix || =
(reHasHexPrefix.test(string) ? 16 : 10));\n\t    }\n\n\t    /**\n\t     =
* Repeats the given string `n` times.\n\t     *\n\t     * @static\n\t    =
 * @memberOf _\n\t     * @category String\n\t     * @param {string} =
[string=3D''] The string to repeat.\n\t     * @param {number} [n=3D0] =
The number of times to repeat the string.\n\t     * @returns {string} =
Returns the repeated string.\n\t     * @example\n\t     *\n\t     * =
_.repeat('*', 3);\n\t     * // =3D&gt; '***'\n\t     *\n\t     * =
_.repeat('abc', 2);\n\t     * // =3D&gt; 'abcabc'\n\t     *\n\t     * =
_.repeat('abc', 0);\n\t     * // =3D&gt; ''\n\t     */\n\t    function =
repeat(string, n) {\n\t      var result =3D '';\n\t      string =3D =
baseToString(string);\n\t      n =3D +n;\n\t      if (n &lt; 1 || =
!string || !nativeIsFinite(n)) {\n\t        return result;\n\t      =
}\n\t      // Leverage the exponentiation by squaring algorithm for a =
faster repeat.\n\t      // See =
https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more =
details.\n\t      do {\n\t        if (n % 2) {\n\t          result +=3D =
string;\n\t        }\n\t        n =3D nativeFloor(n / 2);\n\t        =
string +=3D string;\n\t      } while (n);\n\n\t      return result;\n\t  =
  }\n\n\t    /**\n\t     * Converts `string` to [snake =
case](https://en.wikipedia.org/wiki/Snake_case).\n\t     *\n\t     * =
@static\n\t     * @memberOf _\n\t     * @category String\n\t     * =
@param {string} [string=3D''] The string to convert.\n\t     * @returns =
{string} Returns the snake cased string.\n\t     * @example\n\t     =
*\n\t     * _.snakeCase('Foo Bar');\n\t     * // =3D&gt; 'foo_bar'\n\t   =
  *\n\t     * _.snakeCase('fooBar');\n\t     * // =3D&gt; 'foo_bar'\n\t  =
   *\n\t     * _.snakeCase('--foo-bar');\n\t     * // =3D&gt; =
'foo_bar'\n\t     */\n\t    var snakeCase =3D =
createCompounder(function(result, word, index) {\n\t      return result =
+ (index ? '_' : '') + word.toLowerCase();\n\t    });\n\n\t    /**\n\t   =
  * Converts `string` to [start =
case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_=
usage).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * =
@category String\n\t     * @param {string} [string=3D''] The string to =
convert.\n\t     * @returns {string} Returns the start cased string.\n\t =
    * @example\n\t     *\n\t     * _.startCase('--foo-bar');\n\t     * =
// =3D&gt; 'Foo Bar'\n\t     *\n\t     * _.startCase('fooBar');\n\t     =
* // =3D&gt; 'Foo Bar'\n\t     *\n\t     * =
_.startCase('__foo_bar__');\n\t     * // =3D&gt; 'Foo Bar'\n\t     =
*/\n\t    var startCase =3D createCompounder(function(result, word, =
index) {\n\t      return result + (index ? ' ' : '') + =
(word.charAt(0).toUpperCase() + word.slice(1));\n\t    });\n\n\t    =
/**\n\t     * Checks if `string` starts with the given target =
string.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * =
@category String\n\t     * @param {string} [string=3D''] The string to =
search.\n\t     * @param {string} [target] The string to search for.\n\t =
    * @param {number} [position=3D0] The position to search from.\n\t    =
 * @returns {boolean} Returns `true` if `string` starts with `target`, =
else `false`.\n\t     * @example\n\t     *\n\t     * _.startsWith('abc', =
'a');\n\t     * // =3D&gt; true\n\t     *\n\t     * _.startsWith('abc', =
'b');\n\t     * // =3D&gt; false\n\t     *\n\t     * _.startsWith('abc', =
'b', 1);\n\t     * // =3D&gt; true\n\t     */\n\t    function =
startsWith(string, target, position) {\n\t      string =3D =
baseToString(string);\n\t      position =3D position =3D=3D null\n\t     =
   ? 0\n\t        : nativeMin(position &lt; 0 ? 0 : (+position || 0), =
string.length);\n\n\t      return string.lastIndexOf(target, position) =
=3D=3D position;\n\t    }\n\n\t    /**\n\t     * Creates a compiled =
template function that can interpolate data properties\n\t     * in =
\"interpolate\" delimiters, HTML-escape interpolated data properties =
in\n\t     * \"escape\" delimiters, and execute JavaScript in =
\"evaluate\" delimiters. Data\n\t     * properties may be accessed as =
free variables in the template. If a setting\n\t     * object is =
provided it takes precedence over `_.templateSettings` values.\n\t     =
*\n\t     * **Note:** In the development build `_.template` utilizes\n\t =
    * =
[sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/source=
maps/#toc-sourceurl)\n\t     * for easier debugging.\n\t     *\n\t     * =
For more information on precompiling templates see\n\t     * [lodash's =
custom builds documentation](https://lodash.com/custom-builds).\n\t     =
*\n\t     * For more information on Chrome extension sandboxes see\n\t   =
  * [Chrome's extensions =
documentation](https://developer.chrome.com/extensions/sandboxingEval).\n=
\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category =
String\n\t     * @param {string} [string=3D''] The template string.\n\t  =
   * @param {Object} [options] The options object.\n\t     * @param =
{RegExp} [options.escape] The HTML \"escape\" delimiter.\n\t     * =
@param {RegExp} [options.evaluate] The \"evaluate\" delimiter.\n\t     * =
@param {Object} [options.imports] An object to import into the template =
as free variables.\n\t     * @param {RegExp} [options.interpolate] The =
\"interpolate\" delimiter.\n\t     * @param {string} [options.sourceURL] =
The sourceURL of the template's compiled source.\n\t     * @param =
{string} [options.variable] The data object variable name.\n\t     * =
@param- {Object} [otherOptions] Enables the legacy `options` param =
signature.\n\t     * @returns {Function} Returns the compiled template =
function.\n\t     * @example\n\t     *\n\t     * // using the =
\"interpolate\" delimiter to create a compiled template\n\t     * var =
compiled =3D _.template('hello &lt;%=3D user %&gt;!');\n\t     * =
compiled({ 'user': 'fred' });\n\t     * // =3D&gt; 'hello fred!'\n\t     =
*\n\t     * // using the HTML \"escape\" delimiter to escape data =
property values\n\t     * var compiled =3D _.template('&lt;b&gt;&lt;%- =
value %&gt;&lt;/b&gt;');\n\t     * compiled({ 'value': '&lt;script&gt;' =
});\n\t     * // =3D&gt; '&lt;b&gt;&amp;lt;script&amp;gt;&lt;/b&gt;'\n\t =
    *\n\t     * // using the \"evaluate\" delimiter to execute =
JavaScript and generate HTML\n\t     * var compiled =3D =
_.template('&lt;% _.forEach(users, function(user) { =
%&gt;&lt;li&gt;&lt;%- user %&gt;&lt;/li&gt;&lt;% }); %&gt;');\n\t     * =
compiled({ 'users': ['fred', 'barney'] });\n\t     * // =3D&gt; =
'&lt;li&gt;fred&lt;/li&gt;&lt;li&gt;barney&lt;/li&gt;'\n\t     *\n\t     =
* // using the internal `print` function in \"evaluate\" delimiters\n\t  =
   * var compiled =3D _.template('&lt;% print(\"hello \" + user); =
%&gt;!');\n\t     * compiled({ 'user': 'barney' });\n\t     * // =3D&gt; =
'hello barney!'\n\t     *\n\t     * // using the ES delimiter as an =
alternative to the default \"interpolate\" delimiter\n\t     * var =
compiled =3D _.template('hello ${ user }!');\n\t     * compiled({ =
'user': 'pebbles' });\n\t     * // =3D&gt; 'hello pebbles!'\n\t     =
*\n\t     * // using custom template delimiters\n\t     * =
_.templateSettings.interpolate =3D /{{([\\s\\S]+?)}}/g;\n\t     * var =
compiled =3D _.template('hello {{ user }}!');\n\t     * compiled({ =
'user': 'mustache' });\n\t     * // =3D&gt; 'hello mustache!'\n\t     =
*\n\t     * // using backslashes to treat delimiters as plain text\n\t   =
  * var compiled =3D _.template('&lt;%=3D \"\\\\&lt;%- value %\\\\&gt;\" =
%&gt;');\n\t     * compiled({ 'value': 'ignored' });\n\t     * // =
=3D&gt; '&lt;%- value %&gt;'\n\t     *\n\t     * // using the `imports` =
option to import `jQuery` as `jq`\n\t     * var text =3D '&lt;% =
jq.each(users, function(user) { %&gt;&lt;li&gt;&lt;%- user =
%&gt;&lt;/li&gt;&lt;% }); %&gt;';\n\t     * var compiled =3D =
_.template(text, { 'imports': { 'jq': jQuery } });\n\t     * compiled({ =
'users': ['fred', 'barney'] });\n\t     * // =3D&gt; =
'&lt;li&gt;fred&lt;/li&gt;&lt;li&gt;barney&lt;/li&gt;'\n\t     *\n\t     =
* // using the `sourceURL` option to specify a custom sourceURL for the =
template\n\t     * var compiled =3D _.template('hello &lt;%=3D user =
%&gt;!', { 'sourceURL': '/basic/greeting.jst' });\n\t     * =
compiled(data);\n\t     * // =3D&gt; find the source of \"greeting.jst\" =
under the Sources tab or Resources panel of the web inspector\n\t     =
*\n\t     * // using the `variable` option to ensure a with-statement =
isn't used in the compiled template\n\t     * var compiled =3D =
_.template('hi &lt;%=3D data.user %&gt;!', { 'variable': 'data' });\n\t  =
   * compiled.source;\n\t     * // =3D&gt; function(data) {\n\t     * // =
  var __t, __p =3D '';\n\t     * //   __p +=3D 'hi ' + ((__t =3D ( =
data.user )) =3D=3D null ? '' : __t) + '!';\n\t     * //   return =
__p;\n\t     * // }\n\t     *\n\t     * // using the `source` property =
to inline compiled templates for meaningful\n\t     * // line numbers in =
error messages and a stack trace\n\t     * =
fs.writeFileSync(path.join(cwd, 'jst.js'), '\\\n\t     *   var JST =3D =
{\\\n\t     *     \"main\": ' + _.template(mainText).source + '\\\n\t    =
 *   };\\\n\t     * ');\n\t     */\n\t    function template(string, =
options, otherOptions) {\n\t      // Based on John Resig's `tmpl` =
implementation (http://ejohn.org/blog/javascript-micro-templating/)\n\t  =
    // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n\t  =
    var settings =3D lodash.templateSettings;\n\n\t      if =
(otherOptions &amp;&amp; isIterateeCall(string, options, otherOptions)) =
{\n\t        options =3D otherOptions =3D undefined;\n\t      }\n\t      =
string =3D baseToString(string);\n\t      options =3D =
assignWith(baseAssign({}, otherOptions || options), settings, =
assignOwnDefaults);\n\n\t      var imports =3D assignWith(baseAssign({}, =
options.imports), settings.imports, assignOwnDefaults),\n\t          =
importsKeys =3D keys(imports),\n\t          importsValues =3D =
baseValues(imports, importsKeys);\n\n\t      var isEscaping,\n\t         =
 isEvaluating,\n\t          index =3D 0,\n\t          interpolate =3D =
options.interpolate || reNoMatch,\n\t          source =3D \"__p +=3D =
'\";\n\n\t      // Compile the regexp to match each delimiter.\n\t      =
var reDelimiters =3D RegExp(\n\t        (options.escape || =
reNoMatch).source + '|' +\n\t        interpolate.source + '|' +\n\t      =
  (interpolate =3D=3D=3D reInterpolate ? reEsTemplate : =
reNoMatch).source + '|' +\n\t        (options.evaluate || =
reNoMatch).source + '|$'\n\t      , 'g');\n\n\t      // Use a sourceURL =
for easier debugging.\n\t      var sourceURL =3D '//# sourceURL=3D' =
+\n\t        ('sourceURL' in options\n\t          ? =
options.sourceURL\n\t          : ('lodash.templateSources[' + =
(++templateCounter) + ']')\n\t        ) + '\\n';\n\n\t      =
string.replace(reDelimiters, function(match, escapeValue, =
interpolateValue, esTemplateValue, evaluateValue, offset) {\n\t        =
interpolateValue || (interpolateValue =3D esTemplateValue);\n\n\t        =
// Escape characters that can't be included in string literals.\n\t      =
  source +=3D string.slice(index, offset).replace(reUnescapedString, =
escapeStringChar);\n\n\t        // Replace delimiters with snippets.\n\t =
       if (escapeValue) {\n\t          isEscaping =3D true;\n\t          =
source +=3D \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n\t        }\n\t =
       if (evaluateValue) {\n\t          isEvaluating =3D true;\n\t      =
    source +=3D \"';\\n\" + evaluateValue + \";\\n__p +=3D '\";\n\t      =
  }\n\t        if (interpolateValue) {\n\t          source +=3D \"' =
+\\n((__t =3D (\" + interpolateValue + \")) =3D=3D null ? '' : __t) =
+\\n'\";\n\t        }\n\t        index =3D offset + match.length;\n\n\t  =
      // The JS engine embedded in Adobe products requires returning the =
`match`\n\t        // string in order to produce the correct `offset` =
value.\n\t        return match;\n\t      });\n\n\t      source +=3D =
\"';\\n\";\n\n\t      // If `variable` is not specified wrap a =
with-statement around the generated\n\t      // code to add the data =
object to the top of the scope chain.\n\t      var variable =3D =
options.variable;\n\t      if (!variable) {\n\t        source =3D 'with =
(obj) {\\n' + source + '\\n}\\n';\n\t      }\n\t      // Cleanup code by =
stripping empty strings.\n\t      source =3D (isEvaluating ? =
source.replace(reEmptyStringLeading, '') : source)\n\t        =
.replace(reEmptyStringMiddle, '$1')\n\t        =
.replace(reEmptyStringTrailing, '$1;');\n\n\t      // Frame code as the =
function body.\n\t      source =3D 'function(' + (variable || 'obj') + =
') {\\n' +\n\t        (variable\n\t          ? ''\n\t          : 'obj || =
(obj =3D {});\\n'\n\t        ) +\n\t        \"var __t, __p =3D ''\" =
+\n\t        (isEscaping\n\t           ? ', __e =3D _.escape'\n\t        =
   : ''\n\t        ) +\n\t        (isEvaluating\n\t          ? ', __j =
=3D Array.prototype.join;\\n' +\n\t            \"function print() { __p =
+=3D __j.call(arguments, '') }\\n\"\n\t          : ';\\n'\n\t        ) =
+\n\t        source +\n\t        'return __p\\n}';\n\n\t      var result =
=3D attempt(function() {\n\t        return Function(importsKeys, =
sourceURL + 'return ' + source).apply(undefined, importsValues);\n\t     =
 });\n\n\t      // Provide the compiled function's source by its =
`toString` method or\n\t      // the `source` property as a convenience =
for inlining compiled templates.\n\t      result.source =3D source;\n\t  =
    if (isError(result)) {\n\t        throw result;\n\t      }\n\t      =
return result;\n\t    }\n\n\t    /**\n\t     * Removes leading and =
trailing whitespace or specified characters from `string`.\n\t     *\n\t =
    * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * =
@param {string} [string=3D''] The string to trim.\n\t     * @param =
{string} [chars=3Dwhitespace] The characters to trim.\n\t     * @param- =
{Object} [guard] Enables use as a callback for functions like =
`_.map`.\n\t     * @returns {string} Returns the trimmed string.\n\t     =
* @example\n\t     *\n\t     * _.trim('  abc  ');\n\t     * // =3D&gt; =
'abc'\n\t     *\n\t     * _.trim('-_-abc-_-', '_-');\n\t     * // =
=3D&gt; 'abc'\n\t     *\n\t     * _.map(['  foo  ', '  bar  '], =
_.trim);\n\t     * // =3D&gt; ['foo', 'bar']\n\t     */\n\t    function =
trim(string, chars, guard) {\n\t      var value =3D string;\n\t      =
string =3D baseToString(string);\n\t      if (!string) {\n\t        =
return string;\n\t      }\n\t      if (guard ? isIterateeCall(value, =
chars, guard) : chars =3D=3D null) {\n\t        return =
string.slice(trimmedLeftIndex(string), trimmedRightIndex(string) + =
1);\n\t      }\n\t      chars =3D (chars + '');\n\t      return =
string.slice(charsLeftIndex(string, chars), charsRightIndex(string, =
chars) + 1);\n\t    }\n\n\t    /**\n\t     * Removes leading whitespace =
or specified characters from `string`.\n\t     *\n\t     * @static\n\t   =
  * @memberOf _\n\t     * @category String\n\t     * @param {string} =
[string=3D''] The string to trim.\n\t     * @param {string} =
[chars=3Dwhitespace] The characters to trim.\n\t     * @param- {Object} =
[guard] Enables use as a callback for functions like `_.map`.\n\t     * =
@returns {string} Returns the trimmed string.\n\t     * @example\n\t     =
*\n\t     * _.trimLeft('  abc  ');\n\t     * // =3D&gt; 'abc  '\n\t     =
*\n\t     * _.trimLeft('-_-abc-_-', '_-');\n\t     * // =3D&gt; =
'abc-_-'\n\t     */\n\t    function trimLeft(string, chars, guard) {\n\t =
     var value =3D string;\n\t      string =3D baseToString(string);\n\t =
     if (!string) {\n\t        return string;\n\t      }\n\t      if =
(guard ? isIterateeCall(value, chars, guard) : chars =3D=3D null) {\n\t  =
      return string.slice(trimmedLeftIndex(string));\n\t      }\n\t      =
return string.slice(charsLeftIndex(string, (chars + '')));\n\t    =
}\n\n\t    /**\n\t     * Removes trailing whitespace or specified =
characters from `string`.\n\t     *\n\t     * @static\n\t     * =
@memberOf _\n\t     * @category String\n\t     * @param {string} =
[string=3D''] The string to trim.\n\t     * @param {string} =
[chars=3Dwhitespace] The characters to trim.\n\t     * @param- {Object} =
[guard] Enables use as a callback for functions like `_.map`.\n\t     * =
@returns {string} Returns the trimmed string.\n\t     * @example\n\t     =
*\n\t     * _.trimRight('  abc  ');\n\t     * // =3D&gt; '  abc'\n\t     =
*\n\t     * _.trimRight('-_-abc-_-', '_-');\n\t     * // =3D&gt; =
'-_-abc'\n\t     */\n\t    function trimRight(string, chars, guard) =
{\n\t      var value =3D string;\n\t      string =3D =
baseToString(string);\n\t      if (!string) {\n\t        return =
string;\n\t      }\n\t      if (guard ? isIterateeCall(value, chars, =
guard) : chars =3D=3D null) {\n\t        return string.slice(0, =
trimmedRightIndex(string) + 1);\n\t      }\n\t      return =
string.slice(0, charsRightIndex(string, (chars + '')) + 1);\n\t    =
}\n\n\t    /**\n\t     * Truncates `string` if it's longer than the =
given maximum string length.\n\t     * The last characters of the =
truncated string are replaced with the omission\n\t     * string which =
defaults to \"...\".\n\t     *\n\t     * @static\n\t     * @memberOf =
_\n\t     * @category String\n\t     * @param {string} [string=3D''] The =
string to truncate.\n\t     * @param {Object|number} [options] The =
options object or maximum string length.\n\t     * @param {number} =
[options.length=3D30] The maximum string length.\n\t     * @param =
{string} [options.omission=3D'...'] The string to indicate text is =
omitted.\n\t     * @param {RegExp|string} [options.separator] The =
separator pattern to truncate to.\n\t     * @param- {Object} [guard] =
Enables use as a callback for functions like `_.map`.\n\t     * @returns =
{string} Returns the truncated string.\n\t     * @example\n\t     *\n\t  =
   * _.trunc('hi-diddly-ho there, neighborino');\n\t     * // =3D&gt; =
'hi-diddly-ho there, neighbo...'\n\t     *\n\t     * =
_.trunc('hi-diddly-ho there, neighborino', 24);\n\t     * // =3D&gt; =
'hi-diddly-ho there, n...'\n\t     *\n\t     * _.trunc('hi-diddly-ho =
there, neighborino', {\n\t     *   'length': 24,\n\t     *   =
'separator': ' '\n\t     * });\n\t     * // =3D&gt; 'hi-diddly-ho =
there,...'\n\t     *\n\t     * _.trunc('hi-diddly-ho there, =
neighborino', {\n\t     *   'length': 24,\n\t     *   'separator': /,? =
+/\n\t     * });\n\t     * // =3D&gt; 'hi-diddly-ho there...'\n\t     =
*\n\t     * _.trunc('hi-diddly-ho there, neighborino', {\n\t     *   =
'omission': ' [...]'\n\t     * });\n\t     * // =3D&gt; 'hi-diddly-ho =
there, neig [...]'\n\t     */\n\t    function trunc(string, options, =
guard) {\n\t      if (guard &amp;&amp; isIterateeCall(string, options, =
guard)) {\n\t        options =3D undefined;\n\t      }\n\t      var =
length =3D DEFAULT_TRUNC_LENGTH,\n\t          omission =3D =
DEFAULT_TRUNC_OMISSION;\n\n\t      if (options !=3D null) {\n\t        =
if (isObject(options)) {\n\t          var separator =3D 'separator' in =
options ? options.separator : separator;\n\t          length =3D =
'length' in options ? (+options.length || 0) : length;\n\t          =
omission =3D 'omission' in options ? baseToString(options.omission) : =
omission;\n\t        } else {\n\t          length =3D +options || 0;\n\t =
       }\n\t      }\n\t      string =3D baseToString(string);\n\t      =
if (length &gt;=3D string.length) {\n\t        return string;\n\t      =
}\n\t      var end =3D length - omission.length;\n\t      if (end &lt; =
1) {\n\t        return omission;\n\t      }\n\t      var result =3D =
string.slice(0, end);\n\t      if (separator =3D=3D null) {\n\t        =
return result + omission;\n\t      }\n\t      if (isRegExp(separator)) =
{\n\t        if (string.slice(end).search(separator)) {\n\t          var =
match,\n\t              newEnd,\n\t              substring =3D =
string.slice(0, end);\n\n\t          if (!separator.global) {\n\t        =
    separator =3D RegExp(separator.source, (reFlags.exec(separator) || =
'') + 'g');\n\t          }\n\t          separator.lastIndex =3D 0;\n\t   =
       while ((match =3D separator.exec(substring))) {\n\t            =
newEnd =3D match.index;\n\t          }\n\t          result =3D =
result.slice(0, newEnd =3D=3D null ? end : newEnd);\n\t        }\n\t     =
 } else if (string.indexOf(separator, end) !=3D end) {\n\t        var =
index =3D result.lastIndexOf(separator);\n\t        if (index &gt; -1) =
{\n\t          result =3D result.slice(0, index);\n\t        }\n\t      =
}\n\t      return result + omission;\n\t    }\n\n\t    /**\n\t     * The =
inverse of `_.escape`; this method converts the HTML entities\n\t     * =
`&amp;amp;`, `&amp;lt;`, `&amp;gt;`, `&amp;quot;`, `&amp;#39;`, and =
`&amp;#96;` in `string` to their\n\t     * corresponding characters.\n\t =
    *\n\t     * **Note:** No other HTML entities are unescaped. To =
unescape additional HTML\n\t     * entities use a third-party library =
like [_he_](https://mths.be/he).\n\t     *\n\t     * @static\n\t     * =
@memberOf _\n\t     * @category String\n\t     * @param {string} =
[string=3D''] The string to unescape.\n\t     * @returns {string} =
Returns the unescaped string.\n\t     * @example\n\t     *\n\t     * =
_.unescape('fred, barney, &amp;amp; pebbles');\n\t     * // =3D&gt; =
'fred, barney, &amp; pebbles'\n\t     */\n\t    function =
unescape(string) {\n\t      string =3D baseToString(string);\n\t      =
return (string &amp;&amp; reHasEscapedHtml.test(string))\n\t        ? =
string.replace(reEscapedHtml, unescapeHtmlChar)\n\t        : string;\n\t =
   }\n\n\t    /**\n\t     * Splits `string` into an array of its =
words.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * =
@category String\n\t     * @param {string} [string=3D''] The string to =
inspect.\n\t     * @param {RegExp|string} [pattern] The pattern to match =
words.\n\t     * @param- {Object} [guard] Enables use as a callback for =
functions like `_.map`.\n\t     * @returns {Array} Returns the words of =
`string`.\n\t     * @example\n\t     *\n\t     * _.words('fred, barney, =
&amp; pebbles');\n\t     * // =3D&gt; ['fred', 'barney', 'pebbles']\n\t  =
   *\n\t     * _.words('fred, barney, &amp; pebbles', /[^, ]+/g);\n\t    =
 * // =3D&gt; ['fred', 'barney', '&amp;', 'pebbles']\n\t     */\n\t    =
function words(string, pattern, guard) {\n\t      if (guard &amp;&amp; =
isIterateeCall(string, pattern, guard)) {\n\t        pattern =3D =
undefined;\n\t      }\n\t      string =3D baseToString(string);\n\t      =
return string.match(pattern || reWords) || [];\n\t    }\n\n\t    =
/*-----------------------------------------------------------------------=
-*/\n\n\t    /**\n\t     * Attempts to invoke `func`, returning either =
the result or the caught error\n\t     * object. Any additional =
arguments are provided to `func` when it is invoked.\n\t     *\n\t     * =
@static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * =
@param {Function} func The function to attempt.\n\t     * @returns {*} =
Returns the `func` result or error object.\n\t     * @example\n\t     =
*\n\t     * // avoid throwing errors for invalid selectors\n\t     * var =
elements =3D _.attempt(function(selector) {\n\t     *   return =
document.querySelectorAll(selector);\n\t     * }, '&gt;_&gt;');\n\t     =
*\n\t     * if (_.isError(elements)) {\n\t     *   elements =3D [];\n\t  =
   * }\n\t     */\n\t    var attempt =3D restParam(function(func, args) =
{\n\t      try {\n\t        return func.apply(undefined, args);\n\t      =
} catch(e) {\n\t        return isError(e) ? e : new Error(e);\n\t      =
}\n\t    });\n\n\t    /**\n\t     * Creates a function that invokes =
`func` with the `this` binding of `thisArg`\n\t     * and arguments of =
the created function. If `func` is a property name the\n\t     * created =
callback returns the property value for a given element. If `func`\n\t   =
  * is an object the created callback returns `true` for elements that =
contain\n\t     * the equivalent object properties, otherwise it returns =
`false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * =
@alias iteratee\n\t     * @category Utility\n\t     * @param {*} =
[func=3D_.identity] The value to convert to a callback.\n\t     * @param =
{*} [thisArg] The `this` binding of `func`.\n\t     * @param- {Object} =
[guard] Enables use as a callback for functions like `_.map`.\n\t     * =
@returns {Function} Returns the callback.\n\t     * @example\n\t     =
*\n\t     * var users =3D [\n\t     *   { 'user': 'barney', 'age': 36 =
},\n\t     *   { 'user': 'fred',   'age': 40 }\n\t     * ];\n\t     =
*\n\t     * // wrap to create custom callback shorthands\n\t     * =
_.callback =3D _.wrap(_.callback, function(callback, func, thisArg) =
{\n\t     *   var match =3D /^(.+?)__([gl]t)(.+)$/.exec(func);\n\t     * =
  if (!match) {\n\t     *     return callback(func, thisArg);\n\t     *  =
 }\n\t     *   return function(object) {\n\t     *     return match[2] =
=3D=3D 'gt'\n\t     *       ? object[match[1]] &gt; match[3]\n\t     *   =
    : object[match[1]] &lt; match[3];\n\t     *   };\n\t     * });\n\t   =
  *\n\t     * _.filter(users, 'age__gt36');\n\t     * // =3D&gt; [{ =
'user': 'fred', 'age': 40 }]\n\t     */\n\t    function callback(func, =
thisArg, guard) {\n\t      if (guard &amp;&amp; isIterateeCall(func, =
thisArg, guard)) {\n\t        thisArg =3D undefined;\n\t      }\n\t      =
return isObjectLike(func)\n\t        ? matches(func)\n\t        : =
baseCallback(func, thisArg);\n\t    }\n\n\t    /**\n\t     * Creates a =
function that returns `value`.\n\t     *\n\t     * @static\n\t     * =
@memberOf _\n\t     * @category Utility\n\t     * @param {*} value The =
value to return from the new function.\n\t     * @returns {Function} =
Returns the new function.\n\t     * @example\n\t     *\n\t     * var =
object =3D { 'user': 'fred' };\n\t     * var getter =3D =
_.constant(object);\n\t     *\n\t     * getter() =3D=3D=3D object;\n\t   =
  * // =3D&gt; true\n\t     */\n\t    function constant(value) {\n\t     =
 return function() {\n\t        return value;\n\t      };\n\t    }\n\n\t =
   /**\n\t     * This method returns the first argument provided to =
it.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * =
@category Utility\n\t     * @param {*} value Any value.\n\t     * =
@returns {*} Returns `value`.\n\t     * @example\n\t     *\n\t     * var =
object =3D { 'user': 'fred' };\n\t     *\n\t     * _.identity(object) =
=3D=3D=3D object;\n\t     * // =3D&gt; true\n\t     */\n\t    function =
identity(value) {\n\t      return value;\n\t    }\n\n\t    /**\n\t     * =
Creates a function that performs a deep comparison between a given =
object\n\t     * and `source`, returning `true` if the given object has =
equivalent property\n\t     * values, else `false`.\n\t     *\n\t     * =
**Note:** This method supports comparing arrays, booleans, `Date` =
objects,\n\t     * numbers, `Object` objects, regexes, and strings. =
Objects are compared by\n\t     * their own, not inherited, enumerable =
properties. For comparing a single\n\t     * own or inherited property =
value see `_.matchesProperty`.\n\t     *\n\t     * @static\n\t     * =
@memberOf _\n\t     * @category Utility\n\t     * @param {Object} source =
The object of property values to match.\n\t     * @returns {Function} =
Returns the new function.\n\t     * @example\n\t     *\n\t     * var =
users =3D [\n\t     *   { 'user': 'barney', 'age': 36, 'active': true =
},\n\t     *   { 'user': 'fred',   'age': 40, 'active': false }\n\t     =
* ];\n\t     *\n\t     * _.filter(users, _.matches({ 'age': 40, =
'active': false }));\n\t     * // =3D&gt; [{ 'user': 'fred', 'age': 40, =
'active': false }]\n\t     */\n\t    function matches(source) {\n\t      =
return baseMatches(baseClone(source, true));\n\t    }\n\n\t    /**\n\t   =
  * Creates a function that compares the property value of `path` on a =
given\n\t     * object to `value`.\n\t     *\n\t     * **Note:** This =
method supports comparing arrays, booleans, `Date` objects,\n\t     * =
numbers, `Object` objects, regexes, and strings. Objects are compared =
by\n\t     * their own, not inherited, enumerable properties.\n\t     =
*\n\t     * @static\n\t     * @memberOf _\n\t     * @category =
Utility\n\t     * @param {Array|string} path The path of the property to =
get.\n\t     * @param {*} srcValue The value to match.\n\t     * =
@returns {Function} Returns the new function.\n\t     * @example\n\t     =
*\n\t     * var users =3D [\n\t     *   { 'user': 'barney' },\n\t     *  =
 { 'user': 'fred' }\n\t     * ];\n\t     *\n\t     * _.find(users, =
_.matchesProperty('user', 'fred'));\n\t     * // =3D&gt; { 'user': =
'fred' }\n\t     */\n\t    function matchesProperty(path, srcValue) =
{\n\t      return baseMatchesProperty(path, baseClone(srcValue, =
true));\n\t    }\n\n\t    /**\n\t     * Creates a function that invokes =
the method at `path` on a given object.\n\t     * Any additional =
arguments are provided to the invoked method.\n\t     *\n\t     * =
@static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * =
@param {Array|string} path The path of the method to invoke.\n\t     * =
@param {...*} [args] The arguments to invoke the method with.\n\t     * =
@returns {Function} Returns the new function.\n\t     * @example\n\t     =
*\n\t     * var objects =3D [\n\t     *   { 'a': { 'b': { 'c': =
_.constant(2) } } },\n\t     *   { 'a': { 'b': { 'c': _.constant(1) } } =
}\n\t     * ];\n\t     *\n\t     * _.map(objects, =
_.method('a.b.c'));\n\t     * // =3D&gt; [2, 1]\n\t     *\n\t     * =
_.invoke(_.sortBy(objects, _.method(['a', 'b', 'c'])), 'a.b.c');\n\t     =
* // =3D&gt; [1, 2]\n\t     */\n\t    var method =3D =
restParam(function(path, args) {\n\t      return function(object) {\n\t  =
      return invokePath(object, path, args);\n\t      };\n\t    =
});\n\n\t    /**\n\t     * The opposite of `_.method`; this method =
creates a function that invokes\n\t     * the method at a given path on =
`object`. Any additional arguments are\n\t     * provided to the invoked =
method.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * =
@category Utility\n\t     * @param {Object} object The object to =
query.\n\t     * @param {...*} [args] The arguments to invoke the method =
with.\n\t     * @returns {Function} Returns the new function.\n\t     * =
@example\n\t     *\n\t     * var array =3D _.times(3, _.constant),\n\t   =
  *     object =3D { 'a': array, 'b': array, 'c': array };\n\t     *\n\t =
    * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n\t     * // =3D&gt; =
[2, 0]\n\t     *\n\t     * _.map([['a', '2'], ['c', '0']], =
_.methodOf(object));\n\t     * // =3D&gt; [2, 0]\n\t     */\n\t    var =
methodOf =3D restParam(function(object, args) {\n\t      return =
function(path) {\n\t        return invokePath(object, path, args);\n\t   =
   };\n\t    });\n\n\t    /**\n\t     * Adds all own enumerable function =
properties of a source object to the\n\t     * destination object. If =
`object` is a function then methods are added to\n\t     * its prototype =
as well.\n\t     *\n\t     * **Note:** Use `_.runInContext` to create a =
pristine `lodash` function to\n\t     * avoid conflicts caused by =
modifying the original.\n\t     *\n\t     * @static\n\t     * @memberOf =
_\n\t     * @category Utility\n\t     * @param {Function|Object} =
[object=3Dlodash] The destination object.\n\t     * @param {Object} =
source The object of functions to add.\n\t     * @param {Object} =
[options] The options object.\n\t     * @param {boolean} =
[options.chain=3Dtrue] Specify whether the functions added\n\t     *  =
are chainable.\n\t     * @returns {Function|Object} Returns =
`object`.\n\t     * @example\n\t     *\n\t     * function vowels(string) =
{\n\t     *   return _.filter(string, function(v) {\n\t     *     return =
/[aeiou]/i.test(v);\n\t     *   });\n\t     * }\n\t     *\n\t     * =
_.mixin({ 'vowels': vowels });\n\t     * _.vowels('fred');\n\t     * // =
=3D&gt; ['e']\n\t     *\n\t     * _('fred').vowels().value();\n\t     * =
// =3D&gt; ['e']\n\t     *\n\t     * _.mixin({ 'vowels': vowels }, { =
'chain': false });\n\t     * _('fred').vowels();\n\t     * // =3D&gt; =
['e']\n\t     */\n\t    function mixin(object, source, options) {\n\t    =
  if (options =3D=3D null) {\n\t        var isObj =3D =
isObject(source),\n\t            props =3D isObj ? keys(source) : =
undefined,\n\t            methodNames =3D (props &amp;&amp; =
props.length) ? baseFunctions(source, props) : undefined;\n\n\t        =
if (!(methodNames ? methodNames.length : isObj)) {\n\t          =
methodNames =3D false;\n\t          options =3D source;\n\t          =
source =3D object;\n\t          object =3D this;\n\t        }\n\t      =
}\n\t      if (!methodNames) {\n\t        methodNames =3D =
baseFunctions(source, keys(source));\n\t      }\n\t      var chain =3D =
true,\n\t          index =3D -1,\n\t          isFunc =3D =
isFunction(object),\n\t          length =3D methodNames.length;\n\n\t    =
  if (options =3D=3D=3D false) {\n\t        chain =3D false;\n\t      } =
else if (isObject(options) &amp;&amp; 'chain' in options) {\n\t        =
chain =3D options.chain;\n\t      }\n\t      while (++index &lt; length) =
{\n\t        var methodName =3D methodNames[index],\n\t            func =
=3D source[methodName];\n\n\t        object[methodName] =3D func;\n\t    =
    if (isFunc) {\n\t          object.prototype[methodName] =3D =
(function(func) {\n\t            return function() {\n\t              =
var chainAll =3D this.__chain__;\n\t              if (chain || chainAll) =
{\n\t                var result =3D object(this.__wrapped__),\n\t        =
            actions =3D result.__actions__ =3D =
arrayCopy(this.__actions__);\n\n\t                actions.push({ 'func': =
func, 'args': arguments, 'thisArg': object });\n\t                =
result.__chain__ =3D chainAll;\n\t                return result;\n\t     =
         }\n\t              return func.apply(object, =
arrayPush([this.value()], arguments));\n\t            };\n\t          =
}(func));\n\t        }\n\t      }\n\t      return object;\n\t    }\n\n\t =
   /**\n\t     * Reverts the `_` variable to its previous value and =
returns a reference to\n\t     * the `lodash` function.\n\t     *\n\t    =
 * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * =
@returns {Function} Returns the `lodash` function.\n\t     * =
@example\n\t     *\n\t     * var lodash =3D _.noConflict();\n\t     =
*/\n\t    function noConflict() {\n\t      root._ =3D oldDash;\n\t      =
return this;\n\t    }\n\n\t    /**\n\t     * A no-operation function =
that returns `undefined` regardless of the\n\t     * arguments it =
receives.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * =
@category Utility\n\t     * @example\n\t     *\n\t     * var object =3D =
{ 'user': 'fred' };\n\t     *\n\t     * _.noop(object) =3D=3D=3D =
undefined;\n\t     * // =3D&gt; true\n\t     */\n\t    function noop() =
{\n\t      // No operation performed.\n\t    }\n\n\t    /**\n\t     * =
Creates a function that returns the property value at `path` on a\n\t    =
 * given object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t   =
  * @category Utility\n\t     * @param {Array|string} path The path of =
the property to get.\n\t     * @returns {Function} Returns the new =
function.\n\t     * @example\n\t     *\n\t     * var objects =3D [\n\t   =
  *   { 'a': { 'b': { 'c': 2 } } },\n\t     *   { 'a': { 'b': { 'c': 1 } =
} }\n\t     * ];\n\t     *\n\t     * _.map(objects, =
_.property('a.b.c'));\n\t     * // =3D&gt; [2, 1]\n\t     *\n\t     * =
_.pluck(_.sortBy(objects, _.property(['a', 'b', 'c'])), 'a.b.c');\n\t    =
 * // =3D&gt; [1, 2]\n\t     */\n\t    function property(path) {\n\t     =
 return isKey(path) ? baseProperty(path) : basePropertyDeep(path);\n\t   =
 }\n\n\t    /**\n\t     * The opposite of `_.property`; this method =
creates a function that returns\n\t     * the property value at a given =
path on `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t  =
   * @category Utility\n\t     * @param {Object} object The object to =
query.\n\t     * @returns {Function} Returns the new function.\n\t     * =
@example\n\t     *\n\t     * var array =3D [0, 1, 2],\n\t     *     =
object =3D { 'a': array, 'b': array, 'c': array };\n\t     *\n\t     * =
_.map(['a[2]', 'c[0]'], _.propertyOf(object));\n\t     * // =3D&gt; [2, =
0]\n\t     *\n\t     * _.map([['a', '2'], ['c', '0']], =
_.propertyOf(object));\n\t     * // =3D&gt; [2, 0]\n\t     */\n\t    =
function propertyOf(object) {\n\t      return function(path) {\n\t       =
 return baseGet(object, toPath(path), path + '');\n\t      };\n\t    =
}\n\n\t    /**\n\t     * Creates an array of numbers (positive and/or =
negative) progressing from\n\t     * `start` up to, but not including, =
`end`. If `end` is not specified it is\n\t     * set to `start` with =
`start` then set to `0`. If `end` is less than `start`\n\t     * a =
zero-length range is created unless a negative `step` is specified.\n\t  =
   *\n\t     * @static\n\t     * @memberOf _\n\t     * @category =
Utility\n\t     * @param {number} [start=3D0] The start of the =
range.\n\t     * @param {number} end The end of the range.\n\t     * =
@param {number} [step=3D1] The value to increment or decrement by.\n\t   =
  * @returns {Array} Returns the new array of numbers.\n\t     * =
@example\n\t     *\n\t     * _.range(4);\n\t     * // =3D&gt; [0, 1, 2, =
3]\n\t     *\n\t     * _.range(1, 5);\n\t     * // =3D&gt; [1, 2, 3, =
4]\n\t     *\n\t     * _.range(0, 20, 5);\n\t     * // =3D&gt; [0, 5, =
10, 15]\n\t     *\n\t     * _.range(0, -4, -1);\n\t     * // =3D&gt; [0, =
-1, -2, -3]\n\t     *\n\t     * _.range(1, 4, 0);\n\t     * // =3D&gt; =
[1, 1, 1]\n\t     *\n\t     * _.range(0);\n\t     * // =3D&gt; []\n\t    =
 */\n\t    function range(start, end, step) {\n\t      if (step =
&amp;&amp; isIterateeCall(start, end, step)) {\n\t        end =3D step =
=3D undefined;\n\t      }\n\t      start =3D +start || 0;\n\t      step =
=3D step =3D=3D null ? 1 : (+step || 0);\n\n\t      if (end =3D=3D null) =
{\n\t        end =3D start;\n\t        start =3D 0;\n\t      } else =
{\n\t        end =3D +end || 0;\n\t      }\n\t      // Use =
`Array(length)` so engines like Chakra and V8 avoid slower modes.\n\t    =
  // See https://youtu.be/XAqIpGU8ZZk#t=3D17m25s for more details.\n\t   =
   var index =3D -1,\n\t          length =3D nativeMax(nativeCeil((end - =
start) / (step || 1)), 0),\n\t          result =3D Array(length);\n\n\t  =
    while (++index &lt; length) {\n\t        result[index] =3D =
start;\n\t        start +=3D step;\n\t      }\n\t      return =
result;\n\t    }\n\n\t    /**\n\t     * Invokes the iteratee function =
`n` times, returning an array of the results\n\t     * of each =
invocation. The `iteratee` is bound to `thisArg` and invoked with\n\t    =
 * one argument; (index).\n\t     *\n\t     * @static\n\t     * =
@memberOf _\n\t     * @category Utility\n\t     * @param {number} n The =
number of times to invoke `iteratee`.\n\t     * @param {Function} =
[iteratee=3D_.identity] The function invoked per iteration.\n\t     * =
@param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * =
@returns {Array} Returns the array of results.\n\t     * @example\n\t    =
 *\n\t     * var diceRolls =3D _.times(3, _.partial(_.random, 1, 6, =
false));\n\t     * // =3D&gt; [3, 6, 4]\n\t     *\n\t     * _.times(3, =
function(n) {\n\t     *   mage.castSpell(n);\n\t     * });\n\t     * // =
=3D&gt; invokes `mage.castSpell(n)` three times with `n` of `0`, `1`, =
and `2`\n\t     *\n\t     * _.times(3, function(n) {\n\t     *   =
this.cast(n);\n\t     * }, mage);\n\t     * // =3D&gt; also invokes =
`mage.castSpell(n)` three times\n\t     */\n\t    function times(n, =
iteratee, thisArg) {\n\t      n =3D nativeFloor(n);\n\n\t      // Exit =
early to avoid a JSC JIT bug in Safari 8\n\t      // where `Array(0)` is =
treated as `Array(1)`.\n\t      if (n &lt; 1 || !nativeIsFinite(n)) =
{\n\t        return [];\n\t      }\n\t      var index =3D -1,\n\t        =
  result =3D Array(nativeMin(n, MAX_ARRAY_LENGTH));\n\n\t      iteratee =
=3D bindCallback(iteratee, thisArg, 1);\n\t      while (++index &lt; n) =
{\n\t        if (index &lt; MAX_ARRAY_LENGTH) {\n\t          =
result[index] =3D iteratee(index);\n\t        } else {\n\t          =
iteratee(index);\n\t        }\n\t      }\n\t      return result;\n\t    =
}\n\n\t    /**\n\t     * Generates a unique ID. If `prefix` is provided =
the ID is appended to it.\n\t     *\n\t     * @static\n\t     * =
@memberOf _\n\t     * @category Utility\n\t     * @param {string} =
[prefix] The value to prefix the ID with.\n\t     * @returns {string} =
Returns the unique ID.\n\t     * @example\n\t     *\n\t     * =
_.uniqueId('contact_');\n\t     * // =3D&gt; 'contact_104'\n\t     *\n\t =
    * _.uniqueId();\n\t     * // =3D&gt; '105'\n\t     */\n\t    =
function uniqueId(prefix) {\n\t      var id =3D ++idCounter;\n\t      =
return baseToString(prefix) + id;\n\t    }\n\n\t    =
/*-----------------------------------------------------------------------=
-*/\n\n\t    /**\n\t     * Adds two numbers.\n\t     *\n\t     * =
@static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param =
{number} augend The first number to add.\n\t     * @param {number} =
addend The second number to add.\n\t     * @returns {number} Returns the =
sum.\n\t     * @example\n\t     *\n\t     * _.add(6, 4);\n\t     * // =
=3D&gt; 10\n\t     */\n\t    function add(augend, addend) {\n\t      =
return (+augend || 0) + (+addend || 0);\n\t    }\n\n\t    /**\n\t     * =
Calculates `n` rounded up to `precision`.\n\t     *\n\t     * =
@static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param =
{number} n The number to round up.\n\t     * @param {number} =
[precision=3D0] The precision to round up to.\n\t     * @returns =
{number} Returns the rounded up number.\n\t     * @example\n\t     *\n\t =
    * _.ceil(4.006);\n\t     * // =3D&gt; 5\n\t     *\n\t     * =
_.ceil(6.004, 2);\n\t     * // =3D&gt; 6.01\n\t     *\n\t     * =
_.ceil(6040, -2);\n\t     * // =3D&gt; 6100\n\t     */\n\t    var ceil =
=3D createRound('ceil');\n\n\t    /**\n\t     * Calculates `n` rounded =
down to `precision`.\n\t     *\n\t     * @static\n\t     * @memberOf =
_\n\t     * @category Math\n\t     * @param {number} n The number to =
round down.\n\t     * @param {number} [precision=3D0] The precision to =
round down to.\n\t     * @returns {number} Returns the rounded down =
number.\n\t     * @example\n\t     *\n\t     * _.floor(4.006);\n\t     * =
// =3D&gt; 4\n\t     *\n\t     * _.floor(0.046, 2);\n\t     * // =3D&gt; =
0.04\n\t     *\n\t     * _.floor(4060, -2);\n\t     * // =3D&gt; =
4000\n\t     */\n\t    var floor =3D createRound('floor');\n\n\t    =
/**\n\t     * Gets the maximum value of `collection`. If `collection` is =
empty or falsey\n\t     * `-Infinity` is returned. If an iteratee =
function is provided it is invoked\n\t     * for each value in =
`collection` to generate the criterion by which the value\n\t     * is =
ranked. The `iteratee` is bound to `thisArg` and invoked with three\n\t  =
   * arguments: (value, index, collection).\n\t     *\n\t     * If a =
property name is provided for `iteratee` the created `_.property`\n\t    =
 * style callback returns the property value of the given element.\n\t   =
  *\n\t     * If a value is also provided for `thisArg` the created =
`_.matchesProperty`\n\t     * style callback returns `true` for elements =
that have a matching property\n\t     * value, else `false`.\n\t     =
*\n\t     * If an object is provided for `iteratee` the created =
`_.matches` style\n\t     * callback returns `true` for elements that =
have the properties of the given\n\t     * object, else `false`.\n\t     =
*\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t   =
  * @param {Array|Object|string} collection The collection to iterate =
over.\n\t     * @param {Function|Object|string} [iteratee] The function =
invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding =
of `iteratee`.\n\t     * @returns {*} Returns the maximum value.\n\t     =
* @example\n\t     *\n\t     * _.max([4, 2, 8, 6]);\n\t     * // =3D&gt; =
8\n\t     *\n\t     * _.max([]);\n\t     * // =3D&gt; -Infinity\n\t     =
*\n\t     * var users =3D [\n\t     *   { 'user': 'barney', 'age': 36 =
},\n\t     *   { 'user': 'fred',   'age': 40 }\n\t     * ];\n\t     =
*\n\t     * _.max(users, function(chr) {\n\t     *   return chr.age;\n\t =
    * });\n\t     * // =3D&gt; { 'user': 'fred', 'age': 40 }\n\t     =
*\n\t     * // using the `_.property` callback shorthand\n\t     * =
_.max(users, 'age');\n\t     * // =3D&gt; { 'user': 'fred', 'age': 40 =
}\n\t     */\n\t    var max =3D createExtremum(gt, =
NEGATIVE_INFINITY);\n\n\t    /**\n\t     * Gets the minimum value of =
`collection`. If `collection` is empty or falsey\n\t     * `Infinity` is =
returned. If an iteratee function is provided it is invoked\n\t     * =
for each value in `collection` to generate the criterion by which the =
value\n\t     * is ranked. The `iteratee` is bound to `thisArg` and =
invoked with three\n\t     * arguments: (value, index, collection).\n\t  =
   *\n\t     * If a property name is provided for `iteratee` the created =
`_.property`\n\t     * style callback returns the property value of the =
given element.\n\t     *\n\t     * If a value is also provided for =
`thisArg` the created `_.matchesProperty`\n\t     * style callback =
returns `true` for elements that have a matching property\n\t     * =
value, else `false`.\n\t     *\n\t     * If an object is provided for =
`iteratee` the created `_.matches` style\n\t     * callback returns =
`true` for elements that have the properties of the given\n\t     * =
object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf =
_\n\t     * @category Math\n\t     * @param {Array|Object|string} =
collection The collection to iterate over.\n\t     * @param =
{Function|Object|string} [iteratee] The function invoked per =
iteration.\n\t     * @param {*} [thisArg] The `this` binding of =
`iteratee`.\n\t     * @returns {*} Returns the minimum value.\n\t     * =
@example\n\t     *\n\t     * _.min([4, 2, 8, 6]);\n\t     * // =3D&gt; =
2\n\t     *\n\t     * _.min([]);\n\t     * // =3D&gt; Infinity\n\t     =
*\n\t     * var users =3D [\n\t     *   { 'user': 'barney', 'age': 36 =
},\n\t     *   { 'user': 'fred',   'age': 40 }\n\t     * ];\n\t     =
*\n\t     * _.min(users, function(chr) {\n\t     *   return chr.age;\n\t =
    * });\n\t     * // =3D&gt; { 'user': 'barney', 'age': 36 }\n\t     =
*\n\t     * // using the `_.property` callback shorthand\n\t     * =
_.min(users, 'age');\n\t     * // =3D&gt; { 'user': 'barney', 'age': 36 =
}\n\t     */\n\t    var min =3D createExtremum(lt, =
POSITIVE_INFINITY);\n\n\t    /**\n\t     * Calculates `n` rounded to =
`precision`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * =
@category Math\n\t     * @param {number} n The number to round.\n\t     =
* @param {number} [precision=3D0] The precision to round to.\n\t     * =
@returns {number} Returns the rounded number.\n\t     * @example\n\t     =
*\n\t     * _.round(4.006);\n\t     * // =3D&gt; 4\n\t     *\n\t     * =
_.round(4.006, 2);\n\t     * // =3D&gt; 4.01\n\t     *\n\t     * =
_.round(4060, -2);\n\t     * // =3D&gt; 4100\n\t     */\n\t    var round =
=3D createRound('round');\n\n\t    /**\n\t     * Gets the sum of the =
values in `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf =
_\n\t     * @category Math\n\t     * @param {Array|Object|string} =
collection The collection to iterate over.\n\t     * @param =
{Function|Object|string} [iteratee] The function invoked per =
iteration.\n\t     * @param {*} [thisArg] The `this` binding of =
`iteratee`.\n\t     * @returns {number} Returns the sum.\n\t     * =
@example\n\t     *\n\t     * _.sum([4, 6]);\n\t     * // =3D&gt; 10\n\t  =
   *\n\t     * _.sum({ 'a': 4, 'b': 6 });\n\t     * // =3D&gt; 10\n\t    =
 *\n\t     * var objects =3D [\n\t     *   { 'n': 4 },\n\t     *   { =
'n': 6 }\n\t     * ];\n\t     *\n\t     * _.sum(objects, =
function(object) {\n\t     *   return object.n;\n\t     * });\n\t     * =
// =3D&gt; 10\n\t     *\n\t     * // using the `_.property` callback =
shorthand\n\t     * _.sum(objects, 'n');\n\t     * // =3D&gt; 10\n\t     =
*/\n\t    function sum(collection, iteratee, thisArg) {\n\t      if =
(thisArg &amp;&amp; isIterateeCall(collection, iteratee, thisArg)) {\n\t =
       iteratee =3D undefined;\n\t      }\n\t      iteratee =3D =
getCallback(iteratee, thisArg, 3);\n\t      return iteratee.length =
=3D=3D 1\n\t        ? arraySum(isArray(collection) ? collection : =
toIterable(collection), iteratee)\n\t        : baseSum(collection, =
iteratee);\n\t    }\n\n\t    =
/*-----------------------------------------------------------------------=
-*/\n\n\t    // Ensure wrappers are instances of `baseLodash`.\n\t    =
lodash.prototype =3D baseLodash.prototype;\n\n\t    =
LodashWrapper.prototype =3D baseCreate(baseLodash.prototype);\n\t    =
LodashWrapper.prototype.constructor =3D LodashWrapper;\n\n\t    =
LazyWrapper.prototype =3D baseCreate(baseLodash.prototype);\n\t    =
LazyWrapper.prototype.constructor =3D LazyWrapper;\n\n\t    // Add =
functions to the `Map` cache.\n\t    MapCache.prototype['delete'] =3D =
mapDelete;\n\t    MapCache.prototype.get =3D mapGet;\n\t    =
MapCache.prototype.has =3D mapHas;\n\t    MapCache.prototype.set =3D =
mapSet;\n\n\t    // Add functions to the `Set` cache.\n\t    =
SetCache.prototype.push =3D cachePush;\n\n\t    // Assign cache to =
`_.memoize`.\n\t    memoize.Cache =3D MapCache;\n\n\t    // Add =
functions that return wrapped values when chaining.\n\t    lodash.after =
=3D after;\n\t    lodash.ary =3D ary;\n\t    lodash.assign =3D =
assign;\n\t    lodash.at =3D at;\n\t    lodash.before =3D before;\n\t    =
lodash.bind =3D bind;\n\t    lodash.bindAll =3D bindAll;\n\t    =
lodash.bindKey =3D bindKey;\n\t    lodash.callback =3D callback;\n\t    =
lodash.chain =3D chain;\n\t    lodash.chunk =3D chunk;\n\t    =
lodash.compact =3D compact;\n\t    lodash.constant =3D constant;\n\t    =
lodash.countBy =3D countBy;\n\t    lodash.create =3D create;\n\t    =
lodash.curry =3D curry;\n\t    lodash.curryRight =3D curryRight;\n\t    =
lodash.debounce =3D debounce;\n\t    lodash.defaults =3D defaults;\n\t   =
 lodash.defaultsDeep =3D defaultsDeep;\n\t    lodash.defer =3D =
defer;\n\t    lodash.delay =3D delay;\n\t    lodash.difference =3D =
difference;\n\t    lodash.drop =3D drop;\n\t    lodash.dropRight =3D =
dropRight;\n\t    lodash.dropRightWhile =3D dropRightWhile;\n\t    =
lodash.dropWhile =3D dropWhile;\n\t    lodash.fill =3D fill;\n\t    =
lodash.filter =3D filter;\n\t    lodash.flatten =3D flatten;\n\t    =
lodash.flattenDeep =3D flattenDeep;\n\t    lodash.flow =3D flow;\n\t    =
lodash.flowRight =3D flowRight;\n\t    lodash.forEach =3D forEach;\n\t   =
 lodash.forEachRight =3D forEachRight;\n\t    lodash.forIn =3D =
forIn;\n\t    lodash.forInRight =3D forInRight;\n\t    lodash.forOwn =3D =
forOwn;\n\t    lodash.forOwnRight =3D forOwnRight;\n\t    =
lodash.functions =3D functions;\n\t    lodash.groupBy =3D groupBy;\n\t   =
 lodash.indexBy =3D indexBy;\n\t    lodash.initial =3D initial;\n\t    =
lodash.intersection =3D intersection;\n\t    lodash.invert =3D =
invert;\n\t    lodash.invoke =3D invoke;\n\t    lodash.keys =3D =
keys;\n\t    lodash.keysIn =3D keysIn;\n\t    lodash.map =3D map;\n\t    =
lodash.mapKeys =3D mapKeys;\n\t    lodash.mapValues =3D mapValues;\n\t   =
 lodash.matches =3D matches;\n\t    lodash.matchesProperty =3D =
matchesProperty;\n\t    lodash.memoize =3D memoize;\n\t    lodash.merge =
=3D merge;\n\t    lodash.method =3D method;\n\t    lodash.methodOf =3D =
methodOf;\n\t    lodash.mixin =3D mixin;\n\t    lodash.modArgs =3D =
modArgs;\n\t    lodash.negate =3D negate;\n\t    lodash.omit =3D =
omit;\n\t    lodash.once =3D once;\n\t    lodash.pairs =3D pairs;\n\t    =
lodash.partial =3D partial;\n\t    lodash.partialRight =3D =
partialRight;\n\t    lodash.partition =3D partition;\n\t    lodash.pick =
=3D pick;\n\t    lodash.pluck =3D pluck;\n\t    lodash.property =3D =
property;\n\t    lodash.propertyOf =3D propertyOf;\n\t    lodash.pull =
=3D pull;\n\t    lodash.pullAt =3D pullAt;\n\t    lodash.range =3D =
range;\n\t    lodash.rearg =3D rearg;\n\t    lodash.reject =3D =
reject;\n\t    lodash.remove =3D remove;\n\t    lodash.rest =3D =
rest;\n\t    lodash.restParam =3D restParam;\n\t    lodash.set =3D =
set;\n\t    lodash.shuffle =3D shuffle;\n\t    lodash.slice =3D =
slice;\n\t    lodash.sortBy =3D sortBy;\n\t    lodash.sortByAll =3D =
sortByAll;\n\t    lodash.sortByOrder =3D sortByOrder;\n\t    =
lodash.spread =3D spread;\n\t    lodash.take =3D take;\n\t    =
lodash.takeRight =3D takeRight;\n\t    lodash.takeRightWhile =3D =
takeRightWhile;\n\t    lodash.takeWhile =3D takeWhile;\n\t    lodash.tap =
=3D tap;\n\t    lodash.throttle =3D throttle;\n\t    lodash.thru =3D =
thru;\n\t    lodash.times =3D times;\n\t    lodash.toArray =3D =
toArray;\n\t    lodash.toPlainObject =3D toPlainObject;\n\t    =
lodash.transform =3D transform;\n\t    lodash.union =3D union;\n\t    =
lodash.uniq =3D uniq;\n\t    lodash.unzip =3D unzip;\n\t    =
lodash.unzipWith =3D unzipWith;\n\t    lodash.values =3D values;\n\t    =
lodash.valuesIn =3D valuesIn;\n\t    lodash.where =3D where;\n\t    =
lodash.without =3D without;\n\t    lodash.wrap =3D wrap;\n\t    =
lodash.xor =3D xor;\n\t    lodash.zip =3D zip;\n\t    lodash.zipObject =
=3D zipObject;\n\t    lodash.zipWith =3D zipWith;\n\n\t    // Add =
aliases.\n\t    lodash.backflow =3D flowRight;\n\t    lodash.collect =3D =
map;\n\t    lodash.compose =3D flowRight;\n\t    lodash.each =3D =
forEach;\n\t    lodash.eachRight =3D forEachRight;\n\t    lodash.extend =
=3D assign;\n\t    lodash.iteratee =3D callback;\n\t    lodash.methods =
=3D functions;\n\t    lodash.object =3D zipObject;\n\t    lodash.select =
=3D filter;\n\t    lodash.tail =3D rest;\n\t    lodash.unique =3D =
uniq;\n\n\t    // Add functions to `lodash.prototype`.\n\t    =
mixin(lodash, lodash);\n\n\t    =
/*-----------------------------------------------------------------------=
-*/\n\n\t    // Add functions that return unwrapped values when =
chaining.\n\t    lodash.add =3D add;\n\t    lodash.attempt =3D =
attempt;\n\t    lodash.camelCase =3D camelCase;\n\t    lodash.capitalize =
=3D capitalize;\n\t    lodash.ceil =3D ceil;\n\t    lodash.clone =3D =
clone;\n\t    lodash.cloneDeep =3D cloneDeep;\n\t    lodash.deburr =3D =
deburr;\n\t    lodash.endsWith =3D endsWith;\n\t    lodash.escape =3D =
escape;\n\t    lodash.escapeRegExp =3D escapeRegExp;\n\t    lodash.every =
=3D every;\n\t    lodash.find =3D find;\n\t    lodash.findIndex =3D =
findIndex;\n\t    lodash.findKey =3D findKey;\n\t    lodash.findLast =3D =
findLast;\n\t    lodash.findLastIndex =3D findLastIndex;\n\t    =
lodash.findLastKey =3D findLastKey;\n\t    lodash.findWhere =3D =
findWhere;\n\t    lodash.first =3D first;\n\t    lodash.floor =3D =
floor;\n\t    lodash.get =3D get;\n\t    lodash.gt =3D gt;\n\t    =
lodash.gte =3D gte;\n\t    lodash.has =3D has;\n\t    lodash.identity =
=3D identity;\n\t    lodash.includes =3D includes;\n\t    lodash.indexOf =
=3D indexOf;\n\t    lodash.inRange =3D inRange;\n\t    =
lodash.isArguments =3D isArguments;\n\t    lodash.isArray =3D =
isArray;\n\t    lodash.isBoolean =3D isBoolean;\n\t    lodash.isDate =3D =
isDate;\n\t    lodash.isElement =3D isElement;\n\t    lodash.isEmpty =3D =
isEmpty;\n\t    lodash.isEqual =3D isEqual;\n\t    lodash.isError =3D =
isError;\n\t    lodash.isFinite =3D isFinite;\n\t    lodash.isFunction =
=3D isFunction;\n\t    lodash.isMatch =3D isMatch;\n\t    lodash.isNaN =
=3D isNaN;\n\t    lodash.isNative =3D isNative;\n\t    lodash.isNull =3D =
isNull;\n\t    lodash.isNumber =3D isNumber;\n\t    lodash.isObject =3D =
isObject;\n\t    lodash.isPlainObject =3D isPlainObject;\n\t    =
lodash.isRegExp =3D isRegExp;\n\t    lodash.isString =3D isString;\n\t   =
 lodash.isTypedArray =3D isTypedArray;\n\t    lodash.isUndefined =3D =
isUndefined;\n\t    lodash.kebabCase =3D kebabCase;\n\t    lodash.last =
=3D last;\n\t    lodash.lastIndexOf =3D lastIndexOf;\n\t    lodash.lt =
=3D lt;\n\t    lodash.lte =3D lte;\n\t    lodash.max =3D max;\n\t    =
lodash.min =3D min;\n\t    lodash.noConflict =3D noConflict;\n\t    =
lodash.noop =3D noop;\n\t    lodash.now =3D now;\n\t    lodash.pad =3D =
pad;\n\t    lodash.padLeft =3D padLeft;\n\t    lodash.padRight =3D =
padRight;\n\t    lodash.parseInt =3D parseInt;\n\t    lodash.random =3D =
random;\n\t    lodash.reduce =3D reduce;\n\t    lodash.reduceRight =3D =
reduceRight;\n\t    lodash.repeat =3D repeat;\n\t    lodash.result =3D =
result;\n\t    lodash.round =3D round;\n\t    lodash.runInContext =3D =
runInContext;\n\t    lodash.size =3D size;\n\t    lodash.snakeCase =3D =
snakeCase;\n\t    lodash.some =3D some;\n\t    lodash.sortedIndex =3D =
sortedIndex;\n\t    lodash.sortedLastIndex =3D sortedLastIndex;\n\t    =
lodash.startCase =3D startCase;\n\t    lodash.startsWith =3D =
startsWith;\n\t    lodash.sum =3D sum;\n\t    lodash.template =3D =
template;\n\t    lodash.trim =3D trim;\n\t    lodash.trimLeft =3D =
trimLeft;\n\t    lodash.trimRight =3D trimRight;\n\t    lodash.trunc =3D =
trunc;\n\t    lodash.unescape =3D unescape;\n\t    lodash.uniqueId =3D =
uniqueId;\n\t    lodash.words =3D words;\n\n\t    // Add aliases.\n\t    =
lodash.all =3D every;\n\t    lodash.any =3D some;\n\t    lodash.contains =
=3D includes;\n\t    lodash.eq =3D isEqual;\n\t    lodash.detect =3D =
find;\n\t    lodash.foldl =3D reduce;\n\t    lodash.foldr =3D =
reduceRight;\n\t    lodash.head =3D first;\n\t    lodash.include =3D =
includes;\n\t    lodash.inject =3D reduce;\n\n\t    mixin(lodash, =
(function() {\n\t      var source =3D {};\n\t      baseForOwn(lodash, =
function(func, methodName) {\n\t        if =
(!lodash.prototype[methodName]) {\n\t          source[methodName] =3D =
func;\n\t        }\n\t      });\n\t      return source;\n\t    }()), =
false);\n\n\t    =
/*-----------------------------------------------------------------------=
-*/\n\n\t    // Add functions capable of returning wrapped and unwrapped =
values when chaining.\n\t    lodash.sample =3D sample;\n\n\t    =
lodash.prototype.sample =3D function(n) {\n\t      if (!this.__chain__ =
&amp;&amp; n =3D=3D null) {\n\t        return sample(this.value());\n\t  =
    }\n\t      return this.thru(function(value) {\n\t        return =
sample(value, n);\n\t      });\n\t    };\n\n\t    =
/*-----------------------------------------------------------------------=
-*/\n\n\t    /**\n\t     * The semantic version number.\n\t     *\n\t    =
 * @static\n\t     * @memberOf _\n\t     * @type string\n\t     */\n\t   =
 lodash.VERSION =3D VERSION;\n\n\t    // Assign default =
placeholders.\n\t    arrayEach(['bind', 'bindKey', 'curry', =
'curryRight', 'partial', 'partialRight'], function(methodName) {\n\t     =
 lodash[methodName].placeholder =3D lodash;\n\t    });\n\n\t    // Add =
`LazyWrapper` methods for `_.drop` and `_.take` variants.\n\t    =
arrayEach(['drop', 'take'], function(methodName, index) {\n\t      =
LazyWrapper.prototype[methodName] =3D function(n) {\n\t        var =
filtered =3D this.__filtered__;\n\t        if (filtered &amp;&amp; =
!index) {\n\t          return new LazyWrapper(this);\n\t        }\n\t    =
    n =3D n =3D=3D null ? 1 : nativeMax(nativeFloor(n) || 0, 0);\n\n\t   =
     var result =3D this.clone();\n\t        if (filtered) {\n\t         =
 result.__takeCount__ =3D nativeMin(result.__takeCount__, n);\n\t        =
} else {\n\t          result.__views__.push({ 'size': n, 'type': =
methodName + (result.__dir__ &lt; 0 ? 'Right' : '') });\n\t        }\n\t =
       return result;\n\t      };\n\n\t      =
LazyWrapper.prototype[methodName + 'Right'] =3D function(n) {\n\t        =
return this.reverse()[methodName](n).reverse();\n\t      };\n\t    =
});\n\n\t    // Add `LazyWrapper` methods that accept an `iteratee` =
value.\n\t    arrayEach(['filter', 'map', 'takeWhile'], =
function(methodName, index) {\n\t      var type =3D index + 1,\n\t       =
   isFilter =3D type !=3D LAZY_MAP_FLAG;\n\n\t      =
LazyWrapper.prototype[methodName] =3D function(iteratee, thisArg) {\n\t  =
      var result =3D this.clone();\n\t        =
result.__iteratees__.push({ 'iteratee': getCallback(iteratee, thisArg, =
1), 'type': type });\n\t        result.__filtered__ =3D =
result.__filtered__ || isFilter;\n\t        return result;\n\t      =
};\n\t    });\n\n\t    // Add `LazyWrapper` methods for `_.first` and =
`_.last`.\n\t    arrayEach(['first', 'last'], function(methodName, =
index) {\n\t      var takeName =3D 'take' + (index ? 'Right' : =
'');\n\n\t      LazyWrapper.prototype[methodName] =3D function() {\n\t   =
     return this[takeName](1).value()[0];\n\t      };\n\t    });\n\n\t   =
 // Add `LazyWrapper` methods for `_.initial` and `_.rest`.\n\t    =
arrayEach(['initial', 'rest'], function(methodName, index) {\n\t      =
var dropName =3D 'drop' + (index ? '' : 'Right');\n\n\t      =
LazyWrapper.prototype[methodName] =3D function() {\n\t        return =
this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n\t      =
};\n\t    });\n\n\t    // Add `LazyWrapper` methods for `_.pluck` and =
`_.where`.\n\t    arrayEach(['pluck', 'where'], function(methodName, =
index) {\n\t      var operationName =3D index ? 'filter' : 'map',\n\t    =
      createCallback =3D index ? baseMatches : property;\n\n\t      =
LazyWrapper.prototype[methodName] =3D function(value) {\n\t        =
return this[operationName](createCallback(value));\n\t      };\n\t    =
});\n\n\t    LazyWrapper.prototype.compact =3D function() {\n\t      =
return this.filter(identity);\n\t    };\n\n\t    =
LazyWrapper.prototype.reject =3D function(predicate, thisArg) {\n\t      =
predicate =3D getCallback(predicate, thisArg, 1);\n\t      return =
this.filter(function(value) {\n\t        return !predicate(value);\n\t   =
   });\n\t    };\n\n\t    LazyWrapper.prototype.slice =3D =
function(start, end) {\n\t      start =3D start =3D=3D null ? 0 : =
(+start || 0);\n\n\t      var result =3D this;\n\t      if =
(result.__filtered__ &amp;&amp; (start &gt; 0 || end &lt; 0)) {\n\t      =
  return new LazyWrapper(result);\n\t      }\n\t      if (start &lt; 0) =
{\n\t        result =3D result.takeRight(-start);\n\t      } else if =
(start) {\n\t        result =3D result.drop(start);\n\t      }\n\t      =
if (end !=3D=3D undefined) {\n\t        end =3D (+end || 0);\n\t        =
result =3D end &lt; 0 ? result.dropRight(-end) : result.take(end - =
start);\n\t      }\n\t      return result;\n\t    };\n\n\t    =
LazyWrapper.prototype.takeRightWhile =3D function(predicate, thisArg) =
{\n\t      return this.reverse().takeWhile(predicate, =
thisArg).reverse();\n\t    };\n\n\t    LazyWrapper.prototype.toArray =3D =
function() {\n\t      return this.take(POSITIVE_INFINITY);\n\t    =
};\n\n\t    // Add `LazyWrapper` methods to `lodash.prototype`.\n\t    =
baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n\t      =
var checkIteratee =3D =
/^(?:filter|map|reject)|While$/.test(methodName),\n\t          =
retUnwrapped =3D /^(?:first|last)$/.test(methodName),\n\t          =
lodashFunc =3D lodash[retUnwrapped ? ('take' + (methodName =3D=3D 'last' =
? 'Right' : '')) : methodName];\n\n\t      if (!lodashFunc) {\n\t        =
return;\n\t      }\n\t      lodash.prototype[methodName] =3D function() =
{\n\t        var args =3D retUnwrapped ? [1] : arguments,\n\t            =
chainAll =3D this.__chain__,\n\t            value =3D =
this.__wrapped__,\n\t            isHybrid =3D =
!!this.__actions__.length,\n\t            isLazy =3D value instanceof =
LazyWrapper,\n\t            iteratee =3D args[0],\n\t            useLazy =
=3D isLazy || isArray(value);\n\n\t        if (useLazy &amp;&amp; =
checkIteratee &amp;&amp; typeof iteratee =3D=3D 'function' &amp;&amp; =
iteratee.length !=3D 1) {\n\t          // Avoid lazy use if the iteratee =
has a \"length\" value other than `1`.\n\t          isLazy =3D useLazy =
=3D false;\n\t        }\n\t        var interceptor =3D function(value) =
{\n\t          return (retUnwrapped &amp;&amp; chainAll)\n\t            =
? lodashFunc(value, 1)[0]\n\t            : lodashFunc.apply(undefined, =
arrayPush([value], args));\n\t        };\n\n\t        var action =3D { =
'func': thru, 'args': [interceptor], 'thisArg': undefined },\n\t         =
   onlyLazy =3D isLazy &amp;&amp; !isHybrid;\n\n\t        if =
(retUnwrapped &amp;&amp; !chainAll) {\n\t          if (onlyLazy) {\n\t   =
         value =3D value.clone();\n\t            =
value.__actions__.push(action);\n\t            return =
func.call(value);\n\t          }\n\t          return =
lodashFunc.call(undefined, this.value())[0];\n\t        }\n\t        if =
(!retUnwrapped &amp;&amp; useLazy) {\n\t          value =3D onlyLazy ? =
value : new LazyWrapper(this);\n\t          var result =3D =
func.apply(value, args);\n\t          =
result.__actions__.push(action);\n\t          return new =
LodashWrapper(result, chainAll);\n\t        }\n\t        return =
this.thru(interceptor);\n\t      };\n\t    });\n\n\t    // Add `Array` =
and `String` methods to `lodash.prototype`.\n\t    arrayEach(['join', =
'pop', 'push', 'replace', 'shift', 'sort', 'splice', 'split', =
'unshift'], function(methodName) {\n\t      var func =3D =
(/^(?:replace|split)$/.test(methodName) ? stringProto : =
arrayProto)[methodName],\n\t          chainName =3D =
/^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n\t         =
 retUnwrapped =3D /^(?:join|pop|replace|shift)$/.test(methodName);\n\n\t =
     lodash.prototype[methodName] =3D function() {\n\t        var args =
=3D arguments;\n\t        if (retUnwrapped &amp;&amp; !this.__chain__) =
{\n\t          return func.apply(this.value(), args);\n\t        }\n\t   =
     return this[chainName](function(value) {\n\t          return =
func.apply(value, args);\n\t        });\n\t      };\n\t    });\n\n\t    =
// Map minified function names to their real names.\n\t    =
baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n\t      =
var lodashFunc =3D lodash[methodName];\n\t      if (lodashFunc) {\n\t    =
    var key =3D lodashFunc.name,\n\t            names =3D realNames[key] =
|| (realNames[key] =3D []);\n\n\t        names.push({ 'name': =
methodName, 'func': lodashFunc });\n\t      }\n\t    });\n\n\t    =
realNames[createHybridWrapper(undefined, BIND_KEY_FLAG).name] =3D [{ =
'name': 'wrapper', 'func': undefined }];\n\n\t    // Add functions to =
the lazy wrapper.\n\t    LazyWrapper.prototype.clone =3D lazyClone;\n\t  =
  LazyWrapper.prototype.reverse =3D lazyReverse;\n\t    =
LazyWrapper.prototype.value =3D lazyValue;\n\n\t    // Add chaining =
functions to the `lodash` wrapper.\n\t    lodash.prototype.chain =3D =
wrapperChain;\n\t    lodash.prototype.commit =3D wrapperCommit;\n\t    =
lodash.prototype.concat =3D wrapperConcat;\n\t    lodash.prototype.plant =
=3D wrapperPlant;\n\t    lodash.prototype.reverse =3D =
wrapperReverse;\n\t    lodash.prototype.toString =3D =
wrapperToString;\n\t    lodash.prototype.run =3D lodash.prototype.toJSON =
=3D lodash.prototype.valueOf =3D lodash.prototype.value =3D =
wrapperValue;\n\n\t    // Add function aliases to the `lodash` =
wrapper.\n\t    lodash.prototype.collect =3D lodash.prototype.map;\n\t   =
 lodash.prototype.head =3D lodash.prototype.first;\n\t    =
lodash.prototype.select =3D lodash.prototype.filter;\n\t    =
lodash.prototype.tail =3D lodash.prototype.rest;\n\n\t    return =
lodash;\n\t  }\n\n\t  =
/*-----------------------------------------------------------------------=
---*/\n\n\t  // Export lodash.\n\t  var _ =3D runInContext();\n\n\t  // =
Some AMD build optimizers like r.js check for condition patterns like =
the following:\n\t  if (true) {\n\t    // Expose lodash to the global =
object when an AMD loader is present to avoid\n\t    // errors in cases =
where lodash is loaded by a script tag and not intended\n\t    // as an =
AMD module. See http://requirejs.org/docs/errors.html#mismatch for\n\t   =
 // more details.\n\t    root._ =3D _;\n\n\t    // Define as an =
anonymous module so, through path mapping, it can be\n\t    // =
referenced as the \"underscore\" module.\n\t    =
!(__WEBPACK_AMD_DEFINE_RESULT__ =3D function() {\n\t      return _;\n\t  =
  }.call(exports, __webpack_require__, exports, module), =
__WEBPACK_AMD_DEFINE_RESULT__ !=3D=3D undefined &amp;&amp; =
(module.exports =3D __WEBPACK_AMD_DEFINE_RESULT__));\n\t  }\n\t  // =
Check for `exports` after `define` in case a build optimizer adds an =
`exports` object.\n\t  else if (freeExports &amp;&amp; freeModule) {\n\t =
   // Export for Node.js or RingoJS.\n\t    if (moduleExports) {\n\t     =
 (freeModule.exports =3D _)._ =3D _;\n\t    }\n\t    // Export for Rhino =
with CommonJS support.\n\t    else {\n\t      freeExports._ =3D _;\n\t   =
 }\n\t  }\n\t  else {\n\t    // Export for a browser or Rhino.\n\t    =
root._ =3D _;\n\t  }\n\t}.call(this));\n\n\t/* WEBPACK VAR INJECTION =
*/}.call(exports, __webpack_require__(8)(module), (function() { return =
this; }())))\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) =
{\n\n\tmodule.exports =3D function(module) =
{\r\n\t\tif(!module.webpackPolyfill) {\r\n\t\t\tmodule.deprecate =3D =
function() {};\r\n\t\t\tmodule.paths =3D [];\r\n\t\t\t// module.parent =
=3D undefined by default\r\n\t\t\tmodule.children =3D =
[];\r\n\t\t\tmodule.webpackPolyfill =3D 1;\r\n\t\t}\r\n\t\treturn =
module;\r\n\t}\r\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, =
__webpack_require__) {\n\n\t/* jslint node: true */\n\t'use =
strict';\n\n\tvar _ =3D __webpack_require__(7);\n\tvar FontWrapper =3D =
__webpack_require__(10);\n\n\t_.noConflict();\n\n\tfunction =
typeName(bold, italics){\n\t\tvar type =3D 'normal';\n\t\tif (bold =
&amp;&amp; italics) type =3D 'bolditalics';\n\t\telse if (bold) type =3D =
'bold';\n\t\telse if (italics) type =3D 'italics';\n\t\treturn =
type;\n\t}\n\n\tfunction FontProvider(fontDescriptors, pdfDoc) =
{\n\t\tthis.fonts =3D {};\n\t\tthis.pdfDoc =3D =
pdfDoc;\n\t\tthis.fontWrappers =3D {};\n\n\t\tfor(var font in =
fontDescriptors) {\n\t\t\tif (fontDescriptors.hasOwnProperty(font)) =
{\n\t\t\t\tvar fontDef =3D =
fontDescriptors[font];\n\n\t\t\t\tthis.fonts[font] =3D =
{\n\t\t\t\t\tnormal: fontDef.normal,\n\t\t\t\t\tbold: =
fontDef.bold,\n\t\t\t\t\titalics: =
fontDef.italics,\n\t\t\t\t\tbolditalics: =
fontDef.bolditalics\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n\n\tFontProvider.pr=
ototype.provideFont =3D function(familyName, bold, italics) {\n\t\tvar =
type =3D typeName(bold, italics);\n\t  if (!this.fonts[familyName] || =
!this.fonts[familyName][type]) {\n\t\t\tthrow new Error('Font \\''+ =
familyName + '\\' in style \\''+type+ '\\' is not defined in the font =
section of the document definition.');\n\t\t}\n\n\t  =
this.fontWrappers[familyName] =3D this.fontWrappers[familyName] || =
{};\n\n\t  if (!this.fontWrappers[familyName][type]) =
{\n\t\t\tthis.fontWrappers[familyName][type] =3D new =
FontWrapper(this.pdfDoc, this.fonts[familyName][type], familyName + '(' =
+ type + ')');\n\t\t}\n\n\t  return =
this.fontWrappers[familyName][type];\n\t};\n\n\tFontProvider.prototype.se=
tFontRefsToPdfDoc =3D function(){\n\t  var self =3D this;\n\n\t  =
_.each(self.fontWrappers, function(fontFamily) {\n\t    =
_.each(fontFamily, function(fontWrapper){\n\t      =
_.each(fontWrapper.pdfFonts, function(font){\n\t        if =
(!self.pdfDoc.page.fonts[font.id]) {\n\t          =
self.pdfDoc.page.fonts[font.id] =3D font.ref();\n\t        }\n\t      =
});\n\t    });\n\t  });\n\t};\n\n\tmodule.exports =3D =
FontProvider;\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, =
__webpack_require__) {\n\n\t/* jslint node: true */\n\t'use =
strict';\n\n\tvar _ =3D =
__webpack_require__(7);\n\n\t_.noConflict();\n\n\tfunction =
FontWrapper(pdfkitDoc, path, fontName){\n\t\tthis.MAX_CHAR_TYPES =3D =
92;\n\n\t\tthis.pdfkitDoc =3D pdfkitDoc;\n\t\tthis.path =3D =
path;\n\t\tthis.pdfFonts =3D [];\n\t\tthis.charCatalogue =3D =
[];\n\t\tthis.name =3D fontName;\n\n\t  Object.defineProperty(this, =
'ascender', {\n\t    get: function () {\n\t      var font =3D =
this.getFont(0);\n\t      return font.ascender;\n\t    }\n\t  });\n\t  =
Object.defineProperty(this, 'decender', {\n\t    get: function () {\n\t  =
    var font =3D this.getFont(0);\n\t      return font.decender;\n\t    =
}\n\t  });\n\n\t}\n\t// private\n\n\tFontWrapper.prototype.getFont =3D =
function(index){\n\t\tif(!this.pdfFonts[index]){\n\n\t\t\tvar pseudoName =
=3D this.name + index;\n\n\t\t\tif(this.postscriptName){\n\t\t\t\tdelete =
this.pdfkitDoc._fontFamilies[this.postscriptName];\n\t\t\t}\n\n\t\t\tthis=
.pdfFonts[index] =3D this.pdfkitDoc.font(this.path, =
pseudoName)._font;\n\t\t\tif(!this.postscriptName){\n\t\t\t\tthis.postscr=
iptName =3D this.pdfFonts[index].name;\n\t\t\t}\n\t\t}\n\n\t\treturn =
this.pdfFonts[index];\n\t};\n\n\t// =
public\n\tFontWrapper.prototype.widthOfString =3D function(){\n\t\tvar =
font =3D this.getFont(0);\n\t\treturn font.widthOfString.apply(font, =
arguments);\n\t};\n\n\tFontWrapper.prototype.lineHeight =3D =
function(){\n\t\tvar font =3D this.getFont(0);\n\t\treturn =
font.lineHeight.apply(font, =
arguments);\n\t};\n\n\tFontWrapper.prototype.ref =3D =
function(){\n\t\tvar font =3D this.getFont(0);\n\t\treturn =
font.ref.apply(font, arguments);\n\t};\n\n\tvar toCharCode =3D =
function(char){\n\t  return =
char.charCodeAt(0);\n\t};\n\n\tFontWrapper.prototype.encode =3D =
function(text){\n\t  var self =3D this;\n\n\t  var charTypesInInline =3D =
_.chain(text.split('')).map(toCharCode).uniq().value();\n\t\tif =
(charTypesInInline.length &gt; self.MAX_CHAR_TYPES) {\n\t\t\tthrow new =
Error('Inline has more than '+ self.MAX_CHAR_TYPES + ': ' + text + ' =
different character types and therefore cannot be properly embedded into =
pdf.');\n\t\t}\n\n\n\t  var characterFitInFontWithIndex =3D function =
(charCatalogue) {\n\t    return =
_.uniq(charCatalogue.concat(charTypesInInline)).length &lt;=3D =
self.MAX_CHAR_TYPES;\n\t  };\n\n\t  var index =3D =
_.findIndex(self.charCatalogue, characterFitInFontWithIndex);\n\n\t  =
if(index &lt; 0){\n\t    index =3D self.charCatalogue.length;\n\t    =
self.charCatalogue[index] =3D [];\n\t  }\n\n\t\tvar font =3D =
self.getFont(index);\n\t\tfont.use(text);\n\n\t  =
_.each(charTypesInInline, function(charCode){\n\t    =
if(!_.includes(self.charCatalogue[index], charCode)){\n\t      =
self.charCatalogue[index].push(charCode);\n\t    }\n\t  });\n\n\t  var =
encodedText =3D _.map(font.encode(text), function (char) {\n\t    return =
char.charCodeAt(0).toString(16);\n\t  }).join('');\n\n\t  return {\n\t   =
 encodedText: encodedText,\n\t    fontId: font.id\n\t  =
};\n\t};\n\n\n\tmodule.exports =3D FontWrapper;\n\n\n/***/ },\n/* 11 =
*/\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* =
jslint node: true */\n\t'use strict';\n\n\tvar _ =3D =
__webpack_require__(7);\n\tvar TraversalTracker =3D =
__webpack_require__(12);\n\tvar DocMeasure =3D =
__webpack_require__(13);\n\tvar DocumentContext =3D =
__webpack_require__(19);\n\tvar PageElementWriter =3D =
__webpack_require__(20);\n\tvar ColumnCalculator =3D =
__webpack_require__(16);\n\tvar TableProcessor =3D =
__webpack_require__(23);\n\tvar Line =3D __webpack_require__(22);\n\tvar =
pack =3D __webpack_require__(17).pack;\n\tvar offsetVector =3D =
__webpack_require__(17).offsetVector;\n\tvar fontStringify =3D =
__webpack_require__(17).fontStringify;\n\tvar isFunction =3D =
__webpack_require__(17).isFunction;\n\tvar TextTools =3D =
__webpack_require__(14);\n\tvar StyleContextStack =3D =
__webpack_require__(15);\n\n\tfunction addAll(target, otherArray){\n\t  =
_.each(otherArray, function(item){\n\t    target.push(item);\n\t  =
});\n\t}\n\n\t/**\n\t * Creates an instance of LayoutBuilder - layout =
engine which turns document-definition-object\n\t * into a set of pages, =
lines, inlines and vectors ready to be rendered into a PDF\n\t *\n\t * =
@param {Object} pageSize - an object defining page width and height\n\t =
* @param {Object} pageMargins - an object defining top, left, right and =
bottom margins\n\t */\n\tfunction LayoutBuilder(pageSize, pageMargins, =
imageMeasure) {\n\t\tthis.pageSize =3D pageSize;\n\t\tthis.pageMargins =
=3D pageMargins;\n\t\tthis.tracker =3D new TraversalTracker();\n\t    =
this.imageMeasure =3D imageMeasure;\n\t    this.tableLayouts =3D =
{};\n\t}\n\n\tLayoutBuilder.prototype.registerTableLayouts =3D function =
(tableLayouts) {\n\t  this.tableLayouts =3D pack(this.tableLayouts, =
tableLayouts);\n\t};\n\n\t/**\n\t * Executes layout engine on =
document-definition-object and creates an array of pages\n\t * =
containing positioned Blocks, Lines and inlines\n\t *\n\t * @param =
{Object} docStructure document-definition-object\n\t * @param {Object} =
fontProvider font provider\n\t * @param {Object} styleDictionary =
dictionary with style definitions\n\t * @param {Object} defaultStyle =
default style definition\n\t * @return {Array} an array of pages\n\t =
*/\n\tLayoutBuilder.prototype.layoutDocument =3D function (docStructure, =
fontProvider, styleDictionary, defaultStyle, background, header, footer, =
images, watermark, pageBreakBeforeFct) {\n\n\t  function =
addPageBreaksIfNecessary(linearNodeList, pages) =
{\n\n\t\t\tif(!isFunction(pageBreakBeforeFct)){\n\t\t\t\treturn =
false;\n\t\t\t}\n\n\t    linearNodeList =3D _.reject(linearNodeList, =
function(node){\n\t      return _.isEmpty(node.positions);\n\t    =
});\n\n\t    _.each(linearNodeList, function(node) {\n\t      var =
nodeInfo =3D _.pick(node, [\n\t        'id', 'text', 'ul', 'ol', =
'table', 'image', 'qr', 'canvas', 'columns',\n\t        'headlineLevel', =
'style', 'pageBreak', 'pageOrientation',\n\t        'width', =
'height'\n\t      ]);\n\t      nodeInfo.startPosition =3D =
_.first(node.positions);\n\t      nodeInfo.pageNumbers =3D =
_.chain(node.positions).map('pageNumber').uniq().value();\n\t      =
nodeInfo.pages =3D pages.length;\n\t      nodeInfo.stack =3D =
_.isArray(node.stack);\n\n\t      node.nodeInfo =3D nodeInfo;\n\t    =
});\n\n\t    return _.any(linearNodeList, function (node, index, =
followingNodeList) {\n\t      if (node.pageBreak !=3D=3D 'before' =
&amp;&amp; !node.pageBreakCalculated) {\n\t        =
node.pageBreakCalculated =3D true;\n\t        var pageNumber =3D =
_.first(node.nodeInfo.pageNumbers);\n\n\t\t\t\t\tvar =
followingNodesOnPage =3D _.chain(followingNodeList).drop(index + =
1).filter(function (node0) {\n\t          return =
_.contains(node0.nodeInfo.pageNumbers, pageNumber);\n\t        =
}).value();\n\n\t        var nodesOnNextPage =3D =
_.chain(followingNodeList).drop(index + 1).filter(function (node0) {\n\t =
         return _.contains(node0.nodeInfo.pageNumbers, pageNumber + =
1);\n\t        }).value();\n\n\t        var previousNodesOnPage =3D =
_.chain(followingNodeList).take(index).filter(function (node0) {\n\t     =
     return _.contains(node0.nodeInfo.pageNumbers, pageNumber);\n\t      =
  }).value();\n\n\t        if (pageBreakBeforeFct(node.nodeInfo,\n\t     =
     _.map(followingNodesOnPage, 'nodeInfo'),\n\t          =
_.map(nodesOnNextPage, 'nodeInfo'),\n\t          =
_.map(previousNodesOnPage, 'nodeInfo'))) {\n\t          node.pageBreak =
=3D 'before';\n\t          return true;\n\t        }\n\t      }\n\t    =
});\n\t  }\n\n\t  this.docMeasure =3D new DocMeasure(fontProvider, =
styleDictionary, defaultStyle, this.imageMeasure, this.tableLayouts, =
images);\n\n\n\t  function resetXYs(result) {\n\t    =
_.each(result.linearNodeList, function (node) {\n\t      =
node.resetXY();\n\t    });\n\t  }\n\n\t  var result =3D =
this.tryLayoutDocument(docStructure, fontProvider, styleDictionary, =
defaultStyle, background, header, footer, images, watermark);\n\t  =
while(addPageBreaksIfNecessary(result.linearNodeList, =
result.pages)){\n\t    resetXYs(result);\n\t    result =3D =
this.tryLayoutDocument(docStructure, fontProvider, styleDictionary, =
defaultStyle, background, header, footer, images, watermark);\n\t  =
}\n\n\t\treturn =
result.pages;\n\t};\n\n\tLayoutBuilder.prototype.tryLayoutDocument =3D =
function (docStructure, fontProvider, styleDictionary, defaultStyle, =
background, header, footer, images, watermark, pageBreakBeforeFct) =
{\n\n\t  this.linearNodeList =3D [];\n\t  docStructure =3D =
this.docMeasure.measureDocument(docStructure);\n\n\t  this.writer =3D =
new PageElementWriter(\n\t    new DocumentContext(this.pageSize, =
this.pageMargins), this.tracker);\n\n\t  var _this =3D this;\n\t  =
this.writer.context().tracker.startTracking('pageAdded', function() =
{\n\t    _this.addBackground(background);\n\t  });\n\n\t  =
this.addBackground(background);\n\t  this.processNode(docStructure);\n\t =
 this.addHeadersAndFooters(header, footer);\n\t  /* jshint eqnull:true =
*/\n\t  if(watermark !=3D null)\n\t    this.addWatermark(watermark, =
fontProvider);\n\n\t  return {pages: this.writer.context().pages, =
linearNodeList: =
this.linearNodeList};\n\t};\n\n\n\tLayoutBuilder.prototype.addBackground =
=3D function(background) {\n\t    var backgroundGetter =3D =
isFunction(background) ? background : function() { return background; =
};\n\n\t    var pageBackground =3D =
backgroundGetter(this.writer.context().page + 1);\n\n\t    if =
(pageBackground) {\n\t      var pageSize =3D =
this.writer.context().getCurrentPage().pageSize;\n\t      =
this.writer.beginUnbreakableBlock(pageSize.width, pageSize.height);\n\t  =
    =
this.processNode(this.docMeasure.measureDocument(pageBackground));\n\t   =
   this.writer.commitUnbreakableBlock(0, 0);\n\t    =
}\n\t};\n\n\tLayoutBuilder.prototype.addStaticRepeatable =3D =
function(headerOrFooter, sizeFunction) {\n\t  =
this.addDynamicRepeatable(function() { return headerOrFooter; }, =
sizeFunction);\n\t};\n\n\tLayoutBuilder.prototype.addDynamicRepeatable =
=3D function(nodeGetter, sizeFunction) {\n\t  var pages =3D =
this.writer.context().pages;\n\n\t  for(var pageIndex =3D 0, l =3D =
pages.length; pageIndex &lt; l; pageIndex++) {\n\t    =
this.writer.context().page =3D pageIndex;\n\n\t    var node =3D =
nodeGetter(pageIndex + 1, l);\n\n\t    if (node) {\n\t      var sizes =
=3D sizeFunction(this.writer.context().getCurrentPage().pageSize, =
this.pageMargins);\n\t      =
this.writer.beginUnbreakableBlock(sizes.width, sizes.height);\n\t      =
this.processNode(this.docMeasure.measureDocument(node));\n\t      =
this.writer.commitUnbreakableBlock(sizes.x, sizes.y);\n\t    }\n\t  =
}\n\t};\n\n\tLayoutBuilder.prototype.addHeadersAndFooters =3D =
function(header, footer) {\n\t  var headerSizeFct =3D function(pageSize, =
pageMargins){\n\t    return {\n\t      x: 0,\n\t      y: 0,\n\t      =
width: pageSize.width,\n\t      height: pageMargins.top\n\t    };\n\t  =
};\n\n\t  var footerSizeFct =3D function (pageSize, pageMargins) {\n\t   =
 return {\n\t      x: 0,\n\t      y: pageSize.height - =
pageMargins.bottom,\n\t      width: pageSize.width,\n\t      height: =
pageMargins.bottom\n\t    };\n\t  };\n\n\t  if(isFunction(header)) {\n\t =
   this.addDynamicRepeatable(header, headerSizeFct);\n\t  } else =
if(header) {\n\t    this.addStaticRepeatable(header, headerSizeFct);\n\t =
 }\n\n\t  if(isFunction(footer)) {\n\t    =
this.addDynamicRepeatable(footer, footerSizeFct);\n\t  } else if(footer) =
{\n\t    this.addStaticRepeatable(footer, footerSizeFct);\n\t  =
}\n\t};\n\n\tLayoutBuilder.prototype.addWatermark =3D =
function(watermark, fontProvider){\n\t  var defaultFont =3D =
Object.getOwnPropertyNames(fontProvider.fonts)[0]; // TODO allow =
selection of other font\n\t  var watermarkObject =3D {\n\t    text: =
watermark,\n\t    font: =
fontProvider.provideFont(fontProvider[defaultFont], false, false),\n\t   =
 size: getSize(this.pageSize, watermark, fontProvider)\n\t  };\n\n\t  =
var pages =3D this.writer.context().pages;\n\t  for(var i =3D 0, l =3D =
pages.length; i &lt; l; i++) {\n\t    pages[i].watermark =3D =
watermarkObject;\n\t  }\n\n\t  function getSize(pageSize, watermark, =
fontProvider){\n\t    var width =3D pageSize.width;\n\t    var height =
=3D pageSize.height;\n\t    var targetWidth =3D Math.sqrt(width*width + =
height*height)*0.8; /* page diagnoal * sample factor */\n\t    var =
textTools =3D new TextTools(fontProvider);\n\t    var styleContextStack =
=3D new StyleContextStack();\n\t    var size;\n\n\t    /**\n\t     * =
Binary search the best font size.\n\t     * Initial bounds [0, 1000]\n\t =
    * Break when range &lt; 1\n\t     */\n\t    var a =3D 0;\n\t    var =
b =3D 1000;\n\t    var c =3D (a+b)/2;\n\t    while(Math.abs(a - b) &gt; =
1){\n\t      styleContextStack.push({\n\t        fontSize: c\n\t      =
});\n\t      size =3D textTools.sizeOfString(watermark, =
styleContextStack);\n\t      if(size.width &gt; targetWidth){\n\t        =
b =3D c;\n\t        c =3D (a+b)/2;\n\t      }\n\t      else =
if(size.width &lt; targetWidth){\n\t        a =3D c;\n\t        c =3D =
(a+b)/2;\n\t      }\n\t      styleContextStack.pop();\n\t    }\n\t    =
/*\n\t      End binary search\n\t     */\n\t    return {size: size, =
fontSize: c};\n\t  }\n\t};\n\n\tfunction decorateNode(node){\n\t  var x =
=3D node.x, y =3D node.y;\n\t  node.positions =3D [];\n\n\t  =
_.each(node.canvas, function(vector){\n\t    var x =3D vector.x, y =3D =
vector.y, x1 =3D vector.x1, y1 =3D vector.y1, x2 =3D vector.x2, y2 =3D =
vector.y2;\n\t    vector.resetXY =3D function(){\n\t      vector.x =3D =
x;\n\t      vector.y =3D y;\n\t\t\t\tvector.x1 =3D =
x1;\n\t\t\t\tvector.y1 =3D y1;\n\t\t\t\tvector.x2 =3D =
x2;\n\t\t\t\tvector.y2 =3D y2;\n\t    };\n\t  });\n\n\t  node.resetXY =
=3D function(){\n\t    node.x =3D x;\n\t    node.y =3D y;\n\t    =
_.each(node.canvas, function(vector){\n\t      vector.resetXY();\n\t    =
});\n\t  };\n\t}\n\n\tLayoutBuilder.prototype.processNode =3D =
function(node) {\n\t  var self =3D this;\n\n\t  =
this.linearNodeList.push(node);\n\t  decorateNode(node);\n\n\t  =
applyMargins(function() {\n\t    var absPosition =3D =
node.absolutePosition;\n\t    if(absPosition){\n\t      =
self.writer.context().beginDetachedBlock();\n\t      =
self.writer.context().moveTo(absPosition.x || 0, absPosition.y || =
0);\n\t    }\n\n\t    if (node.stack) {\n\t      =
self.processVerticalContainer(node);\n\t    } else if (node.columns) =
{\n\t      self.processColumns(node);\n\t    } else if (node.ul) {\n\t   =
   self.processList(false, node);\n\t    } else if (node.ol) {\n\t      =
self.processList(true, node);\n\t    } else if (node.table) {\n\t      =
self.processTable(node);\n\t    } else if (node.text !=3D=3D undefined) =
{\n\t      self.processLeaf(node);\n\t    } else if (node.image) {\n\t   =
   self.processImage(node);\n\t    } else if (node.canvas) {\n\t      =
self.processCanvas(node);\n\t    } else if (node.qr) {\n\t      =
self.processQr(node);\n\t    }else if (!node._span) {\n\t\t\tthrow =
'Unrecognized document structure: ' + JSON.stringify(node, =
fontStringify);\n\t\t\t}\n\n\t    if(absPosition){\n\t      =
self.writer.context().endDetachedBlock();\n\t    =
}\n\t\t});\n\n\t\tfunction applyMargins(callback) {\n\t\t\tvar margin =
=3D node._margin;\n\n\t    if (node.pageBreak =3D=3D=3D 'before') {\n\t  =
      self.writer.moveToNextPage(node.pageOrientation);\n\t    =
}\n\n\t\t\tif (margin) =
{\n\t\t\t\tself.writer.context().moveDown(margin[1]);\n\t\t\t\tself.write=
r.context().addMargin(margin[0], =
margin[2]);\n\t\t\t}\n\n\t\t\tcallback();\n\n\t\t\tif(margin) =
{\n\t\t\t\tself.writer.context().addMargin(-margin[0], =
-margin[2]);\n\t\t\t\tself.writer.context().moveDown(margin[3]);\n\t\t\t}=
\n\n\t    if (node.pageBreak =3D=3D=3D 'after') {\n\t        =
self.writer.moveToNextPage(node.pageOrientation);\n\t    =
}\n\t\t}\n\t};\n\n\t// vertical =
container\n\tLayoutBuilder.prototype.processVerticalContainer =3D =
function(node) {\n\t\tvar self =3D =
this;\n\t\tnode.stack.forEach(function(item) =
{\n\t\t\tself.processNode(item);\n\t\t\taddAll(node.positions, =
item.positions);\n\n\t\t\t//TODO: paragraph gap\n\t\t});\n\t};\n\n\t// =
columns\n\tLayoutBuilder.prototype.processColumns =3D =
function(columnNode) {\n\t\tvar columns =3D columnNode.columns;\n\t\tvar =
availableWidth =3D this.writer.context().availableWidth;\n\t\tvar gaps =
=3D gapArray(columnNode._gap);\n\n\t\tif (gaps) availableWidth -=3D =
(gaps.length - 1) * =
columnNode._gap;\n\n\t\tColumnCalculator.buildColumnWidths(columns, =
availableWidth);\n\t\tvar result =3D this.processRow(columns, columns, =
gaps);\n\t    addAll(columnNode.positions, =
result.positions);\n\n\n\t\tfunction gapArray(gap) {\n\t\t\tif (!gap) =
return null;\n\n\t\t\tvar gaps =3D =
[];\n\t\t\tgaps.push(0);\n\n\t\t\tfor(var i =3D columns.length - 1; i =
&gt; 0; i--) {\n\t\t\t\tgaps.push(gap);\n\t\t\t}\n\n\t\t\treturn =
gaps;\n\t\t}\n\t};\n\n\tLayoutBuilder.prototype.processRow =3D =
function(columns, widths, gaps, tableBody, tableRow) {\n\t  var self =3D =
this;\n\t  var pageBreaks =3D [], positions =3D [];\n\n\t  =
this.tracker.auto('pageChanged', storePageBreakData, function() {\n\t    =
widths =3D widths || columns;\n\n\t    =
self.writer.context().beginColumnGroup();\n\n\t    for(var i =3D 0, l =
=3D columns.length; i &lt; l; i++) {\n\t      var column =3D =
columns[i];\n\t      var width =3D widths[i]._calcWidth;\n\t      var =
leftOffset =3D colLeftOffset(i);\n\n\t      if (column.colSpan =
&amp;&amp; column.colSpan &gt; 1) {\n\t          for(var j =3D 1; j &lt; =
column.colSpan; j++) {\n\t              width +=3D =
widths[++i]._calcWidth + gaps[i];\n\t          }\n\t      }\n\n\t      =
self.writer.context().beginColumn(width, leftOffset, =
getEndingCell(column, i));\n\t      if (!column._span) {\n\t        =
self.processNode(column);\n\t        addAll(positions, =
column.positions);\n\t      } else if (column._columnEndingContext) =
{\n\t        // row-span ending\n\t        =
self.writer.context().markEnding(column);\n\t      }\n\t    }\n\n\t    =
self.writer.context().completeColumnGroup();\n\t  });\n\n\t  return =
{pageBreaks: pageBreaks, positions: positions};\n\n\t  function =
storePageBreakData(data) {\n\t    var pageDesc;\n\n\t    for(var i =3D =
0, l =3D pageBreaks.length; i &lt; l; i++) {\n\t      var desc =3D =
pageBreaks[i];\n\t      if (desc.prevPage =3D=3D=3D data.prevPage) {\n\t =
       pageDesc =3D desc;\n\t        break;\n\t      }\n\t    }\n\n\t    =
if (!pageDesc) {\n\t      pageDesc =3D data;\n\t      =
pageBreaks.push(pageDesc);\n\t    }\n\t    pageDesc.prevY =3D =
Math.max(pageDesc.prevY, data.prevY);\n\t    pageDesc.y =3D =
Math.min(pageDesc.y, data.y);\n\t  }\n\n\t\tfunction colLeftOffset(i) =
{\n\t\t\tif (gaps &amp;&amp; gaps.length &gt; i) return =
gaps[i];\n\t\t\treturn 0;\n\t\t}\n\n\t  function getEndingCell(column, =
columnIndex) {\n\t    if (column.rowSpan &amp;&amp; column.rowSpan &gt; =
1) {\n\t      var endingRow =3D tableRow + column.rowSpan - 1;\n\t      =
if (endingRow &gt;=3D tableBody.length) throw 'Row span for column ' + =
columnIndex + ' (with indexes starting from 0) exceeded row count';\n\t  =
    return tableBody[endingRow][columnIndex];\n\t    }\n\n\t    return =
null;\n\t  }\n\t};\n\n\t// lists\n\tLayoutBuilder.prototype.processList =
=3D function(orderedList, node) {\n\t\tvar self =3D this,\n\t      items =
=3D orderedList ? node.ol : node.ul,\n\t      gapSize =3D =
node._gapSize;\n\n\t\tthis.writer.context().addMargin(gapSize.width);\n\n=
\t\tvar nextMarker;\n\t\tthis.tracker.auto('lineAdded', =
addMarkerToFirstLeaf, function() {\n\t\t\titems.forEach(function(item) =
{\n\t\t\t\tnextMarker =3D =
item.listMarker;\n\t\t\t\tself.processNode(item);\n\t            =
addAll(node.positions, =
item.positions);\n\t\t\t});\n\t\t});\n\n\t\tthis.writer.context().addMarg=
in(-gapSize.width);\n\n\t\tfunction addMarkerToFirstLeaf(line) =
{\n\t\t\t// I'm not very happy with the way list processing is =
implemented\n\t\t\t// (both code and algorithm should be =
rethinked)\n\t\t\tif (nextMarker) {\n\t\t\t\tvar marker =3D =
nextMarker;\n\t\t\t\tnextMarker =3D null;\n\n\t\t\t\tif (marker.canvas) =
{\n\t\t\t\t\tvar vector =3D =
marker.canvas[0];\n\n\t\t\t\t\toffsetVector(vector, -marker._minWidth, =
0);\n\t\t\t\t\tself.writer.addVector(vector);\n\t\t\t\t} else =
{\n\t\t\t\t\tvar markerLine =3D new =
Line(self.pageSize.width);\n\t\t\t\t\tmarkerLine.addInline(marker._inline=
s[0]);\n\t\t\t\t\tmarkerLine.x =3D =
-marker._minWidth;\n\t\t\t\t\tmarkerLine.y =3D line.getAscenderHeight() =
- =
markerLine.getAscenderHeight();\n\t\t\t\t\tself.writer.addLine(markerLine=
, true);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t// =
tables\n\tLayoutBuilder.prototype.processTable =3D function(tableNode) =
{\n\t  var processor =3D new TableProcessor(tableNode);\n\n\t  =
processor.beginTable(this.writer);\n\n\t  for(var i =3D 0, l =3D =
tableNode.table.body.length; i &lt; l; i++) {\n\t    =
processor.beginRow(i, this.writer);\n\n\t    var result =3D =
this.processRow(tableNode.table.body[i], tableNode.table.widths, =
tableNode._offsets.offsets, tableNode.table.body, i);\n\t    =
addAll(tableNode.positions, result.positions);\n\n\t    =
processor.endRow(i, this.writer, result.pageBreaks);\n\t  }\n\n\t  =
processor.endTable(this.writer);\n\t};\n\n\t// leafs =
(texts)\n\tLayoutBuilder.prototype.processLeaf =3D function(node) =
{\n\t\tvar line =3D this.buildNextLine(node);\n\t  var currentHeight =3D =
(line) ? line.getHeight() : 0;\n\t  var maxHeight =3D node.maxHeight || =
-1;\n\n\t  while (line &amp;&amp; (maxHeight =3D=3D=3D -1 || =
currentHeight &lt; maxHeight)) {\n\t    var positions =3D =
this.writer.addLine(line);\n\t    node.positions.push(positions);\n\t    =
line =3D this.buildNextLine(node);\n\t    if (line) {\n\t      =
currentHeight +=3D line.getHeight();\n\t    =
}\n\t\t}\n\t};\n\n\tLayoutBuilder.prototype.buildNextLine =3D =
function(textNode) {\n\t\tif (!textNode._inlines || =
textNode._inlines.length =3D=3D=3D 0) return null;\n\n\t\tvar line =3D =
new =
Line(this.writer.context().availableWidth);\n\n\t\twhile(textNode._inline=
s &amp;&amp; textNode._inlines.length &gt; 0 &amp;&amp; =
line.hasEnoughSpaceForInline(textNode._inlines[0])) =
{\n\t\t\tline.addInline(textNode._inlines.shift());\n\t\t}\n\n\t\tline.la=
stLineInParagraph =3D textNode._inlines.length =3D=3D=3D =
0;\n\n\t\treturn line;\n\t};\n\n\t// =
images\n\tLayoutBuilder.prototype.processImage =3D function(node) {\n\t  =
  var position =3D this.writer.addImage(node);\n\t    =
node.positions.push(position);\n\t};\n\n\tLayoutBuilder.prototype.process=
Canvas =3D function(node) {\n\t\tvar height =3D =
node._minHeight;\n\n\t\tif (this.writer.context().availableHeight &lt; =
height) {\n\t\t\t// TODO: support for canvas larger than a =
page\n\t\t\t// TODO: support for other overflow =
methods\n\n\t\t\tthis.writer.moveToNextPage();\n\t\t}\n\n\t\tnode.canvas.=
forEach(function(vector) {\n\t\t\tvar position =3D =
this.writer.addVector(vector);\n\t        =
node.positions.push(position);\n\t\t}, =
this);\n\n\t\tthis.writer.context().moveDown(height);\n\t};\n\n\tLayoutBu=
ilder.prototype.processQr =3D function(node) {\n\t\tvar position =3D =
this.writer.addQr(node);\n\t    =
node.positions.push(position);\n\t};\n\n\tmodule.exports =3D =
LayoutBuilder;\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) =
{\n\n\t/* jslint node: true */\n\t'use strict';\n\n\t/**\n\t* Creates an =
instance of TraversalTracker\n\t*\n\t* @constructor\n\t*/\n\tfunction =
TraversalTracker() {\n\t\tthis.events =3D =
{};\n\t}\n\n\tTraversalTracker.prototype.startTracking =3D =
function(event, cb) {\n\t\tvar callbacks =3D (this.events[event] || =
(this.events[event] =3D []));\n\n\t\tif (callbacks.indexOf(cb) &lt; 0) =
{\n\t\t\tcallbacks.push(cb);\n\t\t}\n\t};\n\n\tTraversalTracker.prototype=
.stopTracking =3D function(event, cb) {\n\t\tvar callbacks =3D =
this.events[event];\n\n\t\tif (callbacks) {\n\t\t\tvar index =3D =
callbacks.indexOf(cb);\n\t\t\tif (index &gt;=3D 0) =
{\n\t\t\t\tcallbacks.splice(index, =
1);\n\t\t\t}\n\t\t}\n\t};\n\n\tTraversalTracker.prototype.emit =3D =
function(event) {\n\t\tvar args =3D =
Array.prototype.slice.call(arguments, 1);\n\n\t\tvar callbacks =3D =
this.events[event];\n\n\t\tif (callbacks) =
{\n\t\t\tcallbacks.forEach(function(cb) {\n\t\t\t\tcb.apply(this, =
args);\n\t\t\t});\n\t\t}\n\t};\n\n\tTraversalTracker.prototype.auto =3D =
function(event, cb, innerBlock) {\n\t\tthis.startTracking(event, =
cb);\n\t\tinnerBlock();\n\t\tthis.stopTracking(event, =
cb);\n\t};\n\n\tmodule.exports =3D TraversalTracker;\n\n\n/***/ },\n/* =
13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* =
jslint node: true */\n\t'use strict';\n\n\tvar TextTools =3D =
__webpack_require__(14);\n\tvar StyleContextStack =3D =
__webpack_require__(15);\n\tvar ColumnCalculator =3D =
__webpack_require__(16);\n\tvar fontStringify =3D =
__webpack_require__(17).fontStringify;\n\tvar pack =3D =
__webpack_require__(17).pack;\n\tvar qrEncoder =3D =
__webpack_require__(18);\n\n\t/**\n\t* @private\n\t*/\n\tfunction =
DocMeasure(fontProvider, styleDictionary, defaultStyle, imageMeasure, =
tableLayouts, images) {\n\t\tthis.textTools =3D new =
TextTools(fontProvider);\n\t\tthis.styleStack =3D new =
StyleContextStack(styleDictionary, defaultStyle);\n\t\tthis.imageMeasure =
=3D imageMeasure;\n\t\tthis.tableLayouts =3D =
tableLayouts;\n\t\tthis.images =3D images;\n\t\tthis.autoImageIndex =3D =
1;\n\t}\n\n\t/**\n\t* Measures all nodes and sets min/max-width =
properties required for the second\n\t* layout-pass.\n\t* @param  =
{Object} docStructure document-definition-object\n\t* @return {Object}   =
           =
document-measurement-object\n\t*/\n\tDocMeasure.prototype.measureDocument=
 =3D function(docStructure) {\n\t\treturn =
this.measureNode(docStructure);\n\t};\n\n\tDocMeasure.prototype.measureNo=
de =3D function(node) {\n\t\t// expand shortcuts\n\t\tif (node =
instanceof Array) {\n\t\t\tnode =3D { stack: node };\n\t\t} else if =
(typeof node =3D=3D 'string' || node instanceof String) {\n\t\t\tnode =
=3D { text: node };\n\t\t}\n\t\t\n\t\t// Deal with empty nodes to =
prevent crash in getNodeMargin\n\t\tif (Object.keys(node).length =
=3D=3D=3D 0) {\n\t\t\t// A warning could be logged: =
console.warn('pdfmake: Empty node, ignoring it');\n\t\t\tnode =3D { =
text: '' };\n\t\t}\n\n\t\tvar self =3D this;\n\n\t\treturn =
this.styleStack.auto(node, function() {\n\t\t\t// TODO: refactor + =
rethink whether this is the proper way to handle =
margins\n\t\t\tnode._margin =3D getNodeMargin(node);\n\n\t\t\tif =
(node.columns) {\n\t\t\t\treturn =
extendMargins(self.measureColumns(node));\n\t\t\t} else if (node.stack) =
{\n\t\t\t\treturn =
extendMargins(self.measureVerticalContainer(node));\n\t\t\t} else if =
(node.ul) {\n\t\t\t\treturn extendMargins(self.measureList(false, =
node));\n\t\t\t} else if (node.ol) {\n\t\t\t\treturn =
extendMargins(self.measureList(true, node));\n\t\t\t} else if =
(node.table) {\n\t\t\t\treturn =
extendMargins(self.measureTable(node));\n\t\t\t} else if (node.text =
!=3D=3D undefined) {\n\t\t\t\treturn =
extendMargins(self.measureLeaf(node));\n\t\t\t} else if (node.image) =
{\n\t\t\t\treturn extendMargins(self.measureImage(node));\n\t\t\t} else =
if (node.canvas) {\n\t\t\t\treturn =
extendMargins(self.measureCanvas(node));\n\t\t\t} else if (node.qr) =
{\n\t\t\t\treturn extendMargins(self.measureQr(node));\n\t\t\t} else =
{\n\t\t\t\tthrow 'Unrecognized document structure: ' + =
JSON.stringify(node, fontStringify);\n\t\t\t}\n\t\t});\n\n\t\tfunction =
extendMargins(node) {\n\t\t\tvar margin =3D node._margin;\n\n\t\t\tif =
(margin) {\n\t\t\t\tnode._minWidth +=3D margin[0] + =
margin[2];\n\t\t\t\tnode._maxWidth +=3D margin[0] + =
margin[2];\n\t\t\t}\n\n\t\t\treturn node;\n\t\t}\n\n\t\tfunction =
getNodeMargin() {\n\n\t\t\tfunction processSingleMargins(node, =
currentMargin){\n\t\t\t\tif (node.marginLeft || node.marginTop || =
node.marginRight || node.marginBottom) {\n\t\t\t\t\treturn =
[\n\t\t\t\t\t\tnode.marginLeft || currentMargin[0] || =
0,\n\t\t\t\t\t\tnode.marginTop || currentMargin[1] || =
0,\n\t\t\t\t\t\tnode.marginRight || currentMargin[2]  || =
0,\n\t\t\t\t\t\tnode.marginBottom || currentMargin[3]  || =
0\n\t\t\t\t\t];\n\t\t\t\t}\n\t\t\t\treturn =
currentMargin;\n\t\t\t}\n\n\t\t\tfunction =
flattenStyleArray(styleArray){\n\t\t\t\tvar flattenedStyles =3D =
{};\n\t\t\t\tfor (var i =3D styleArray.length - 1; i &gt;=3D 0; i--) =
{\n\t\t\t\t\tvar styleName =3D styleArray[i];\n\t\t\t\t\tvar style =3D =
self.styleStack.styleDictionary[styleName];\n\t\t\t\t\tfor(var key in =
style){\n\t\t\t\t\t\tif(style.hasOwnProperty(key)){\n\t\t\t\t\t\t\tflatte=
nedStyles[key] =3D =
style[key];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn =
flattenedStyles;\n\t\t\t}\n\n\t\t\tfunction convertMargin(margin) =
{\n\t\t\t\tif (typeof margin =3D=3D=3D 'number' || margin instanceof =
Number) {\n\t\t\t\t\tmargin =3D [ margin, margin, margin, margin =
];\n\t\t\t\t} else if (margin instanceof Array) {\n\t\t\t\t\tif =
(margin.length =3D=3D=3D 2) {\n\t\t\t\t\t\tmargin =3D [ margin[0], =
margin[1], margin[0], margin[1] =
];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn margin;\n\t\t\t}\n\n\t\t\tvar =
margin =3D [undefined, undefined, undefined, =
undefined];\n\n\t\t\tif(node.style) {\n\t\t\t\tvar styleArray =3D =
(node.style instanceof Array) ? node.style : [node.style];\n\t\t\t\tvar =
flattenedStyleArray =3D =
flattenStyleArray(styleArray);\n\n\t\t\t\tif(flattenedStyleArray) =
{\n\t\t\t\t\tmargin =3D processSingleMargins(flattenedStyleArray, =
margin);\n\t\t\t\t}\n\n\t\t\t\tif(flattenedStyleArray.margin){\n\t\t\t\t\=
tmargin =3D =
convertMargin(flattenedStyleArray.margin);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\=
t\t\tmargin =3D processSingleMargins(node, =
margin);\n\n\t\t\tif(node.margin){\n\t\t\t\tmargin =3D =
convertMargin(node.margin);\n\t\t\t}\n\n\t\t\tif(margin[0] =3D=3D=3D =
undefined &amp;&amp; margin[1] =3D=3D=3D undefined &amp;&amp; margin[2] =
=3D=3D=3D undefined &amp;&amp; margin[3] =3D=3D=3D undefined) =
{\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\treturn =
margin;\n\t\t\t}\n\t\t}\n\t};\n\n\tDocMeasure.prototype.convertIfBase64Im=
age =3D function(node) {\n\t\tif =
(/^data:image\\/(jpeg|jpg|png);base64,/.test(node.image)) {\n\t\t\tvar =
label =3D '$$pdfmake$$' + =
this.autoImageIndex++;\n\t\t\tthis.images[label] =3D =
node.image;\n\t\t\tnode.image =3D =
label;\n\t}\n\t};\n\n\tDocMeasure.prototype.measureImage =3D =
function(node) {\n\t\tif (this.images) =
{\n\t\t\tthis.convertIfBase64Image(node);\n\t\t}\n\n\t\tvar imageSize =
=3D this.imageMeasure.measureImage(node.image);\n\n\t\tif (node.fit) =
{\n\t\t\tvar factor =3D (imageSize.width / imageSize.height &gt; =
node.fit[0] / node.fit[1]) ? node.fit[0] / imageSize.width : node.fit[1] =
/ imageSize.height;\n\t\t\tnode._width =3D node._minWidth =3D =
node._maxWidth =3D imageSize.width * factor;\n\t\t\tnode._height =3D =
imageSize.height * factor;\n\t\t} else {\n\t\t\tnode._width =3D =
node._minWidth =3D node._maxWidth =3D node.width || =
imageSize.width;\n\t\t\tnode._height =3D node.height || =
(imageSize.height * node._width / =
imageSize.width);\n\t\t}\n\n\t\tnode._alignment =3D =
this.styleStack.getProperty('alignment');\n\t\treturn =
node;\n\t};\n\n\tDocMeasure.prototype.measureLeaf =3D function(node) =
{\n\n\t\t// Make sure style properties of the node itself are considered =
when building inlines.\n\t\t// We could also just pass [node] to =
buildInlines, but that fails for bullet points.\n\t\tvar styleStack =3D =
this.styleStack.clone();\n\t\tstyleStack.push(node);\n\n\t\tvar data =3D =
this.textTools.buildInlines(node.text, styleStack);\n\n\t\tnode._inlines =
=3D data.items;\n\t\tnode._minWidth =3D =
data.minWidth;\n\t\tnode._maxWidth =3D data.maxWidth;\n\n\t\treturn =
node;\n\t};\n\n\tDocMeasure.prototype.measureVerticalContainer =3D =
function(node) {\n\t\tvar items =3D node.stack;\n\n\t\tnode._minWidth =
=3D 0;\n\t\tnode._maxWidth =3D 0;\n\n\t\tfor(var i =3D 0, l =3D =
items.length; i &lt; l; i++) {\n\t\t\titems[i] =3D =
this.measureNode(items[i]);\n\n\t\t\tnode._minWidth =3D =
Math.max(node._minWidth, items[i]._minWidth);\n\t\t\tnode._maxWidth =3D =
Math.max(node._maxWidth, items[i]._maxWidth);\n\t\t}\n\n\t\treturn =
node;\n\t};\n\n\tDocMeasure.prototype.gapSizeForList =3D =
function(isOrderedList, listItems) {\n\t\tif (isOrderedList) =
{\n\t\t\tvar longestNo =3D (listItems.length).toString().replace(/./g, =
'9');\n\t\t\treturn this.textTools.sizeOfString(longestNo + '. ', =
this.styleStack);\n\t\t} else {\n\t\t\treturn =
this.textTools.sizeOfString('9. ', =
this.styleStack);\n\t\t}\n\t};\n\n\tDocMeasure.prototype.buildMarker =3D =
function(isOrderedList, counter, styleStack, gapSize) {\n\t\tvar =
marker;\n\n\t\tif (isOrderedList) {\n\t\t\tmarker =3D { _inlines: =
this.textTools.buildInlines(counter, styleStack).items =
};\n\t\t}\n\t\telse {\n\t\t\t// TODO: ascender-based =
calculations\n\t\t\tvar radius =3D gapSize.fontSize / 6;\n\t\t\tmarker =
=3D {\n\t\t\t\tcanvas: [ {\n\t\t\t\t\tx: radius,\n\t\t\t\t\ty: =
(gapSize.height / gapSize.lineHeight) + gapSize.decender - =
gapSize.fontSize / 3,//0,// gapSize.fontSize * 2 / 3,\n\t\t\t\t\tr1: =
radius,\n\t\t\t\t\tr2: radius,\n\t\t\t\t\ttype: =
'ellipse',\n\t\t\t\t\tcolor: 'black'\n\t\t\t\t} =
]\n\t\t\t};\n\t\t}\n\n\t\tmarker._minWidth =3D marker._maxWidth =3D =
gapSize.width;\n\t\tmarker._minHeight =3D marker._maxHeight =3D =
gapSize.height;\n\n\t\treturn =
marker;\n\t};\n\n\tDocMeasure.prototype.measureList =3D =
function(isOrdered, node) {\n\t\tvar style =3D =
this.styleStack.clone();\n\n\t\tvar items =3D isOrdered ? node.ol : =
node.ul;\n\t\tnode._gapSize =3D this.gapSizeForList(isOrdered, =
items);\n\t\tnode._minWidth =3D 0;\n\t\tnode._maxWidth =3D 0;\n\n\t\tvar =
counter =3D 1;\n\n\t\tfor(var i =3D 0, l =3D items.length; i &lt; l; =
i++) {\n\t\t\tvar nextItem =3D items[i] =3D =
this.measureNode(items[i]);\n\n\t\t\tvar marker =3D counter++ + '. =
';\n\n\t\t\tif (!nextItem.ol &amp;&amp; !nextItem.ul) =
{\n\t\t\t\tnextItem.listMarker =3D this.buildMarker(isOrdered, =
nextItem.counter || marker, style, node._gapSize);\n\t\t\t}  // TODO: =
else - nested lists numbering\n\n\t\t\tnode._minWidth =3D =
Math.max(node._minWidth, items[i]._minWidth + =
node._gapSize.width);\n\t\t\tnode._maxWidth =3D Math.max(node._maxWidth, =
items[i]._maxWidth + node._gapSize.width);\n\t\t}\n\n\t\treturn =
node;\n\t};\n\n\tDocMeasure.prototype.measureColumns =3D function(node) =
{\n\t\tvar columns =3D node.columns;\n\t\tnode._gap =3D =
this.styleStack.getProperty('columnGap') || 0;\n\n\t\tfor(var i =3D 0, l =
=3D columns.length; i &lt; l; i++) {\n\t\t\tcolumns[i] =3D =
this.measureNode(columns[i]);\n\t\t}\n\n\t\tvar measures =3D =
ColumnCalculator.measureMinMax(columns);\n\n\t\tnode._minWidth =3D =
measures.min + node._gap * (columns.length - 1);\n\t\tnode._maxWidth =3D =
measures.max + node._gap * (columns.length - 1);\n\n\t\treturn =
node;\n\t};\n\n\tDocMeasure.prototype.measureTable =3D function(node) =
{\n\t\textendTableWidths(node);\n\t\tnode._layout =3D =
getLayout(this.tableLayouts);\n\t\tnode._offsets =3D =
getOffsets(node._layout);\n\n\t\tvar colSpans =3D [];\n\t\tvar col, row, =
cols, rows;\n\n\t\tfor(col =3D 0, cols =3D node.table.body[0].length; =
col &lt; cols; col++) {\n\t\t\tvar c =3D =
node.table.widths[col];\n\t\t\tc._minWidth =3D 0;\n\t\t\tc._maxWidth =3D =
0;\n\n\t\t\tfor(row =3D 0, rows =3D node.table.body.length; row &lt; =
rows; row++) {\n\t\t\t\tvar rowData =3D =
node.table.body[row];\n\t\t\t\tvar data =3D rowData[col];\n\t\t\t\tif =
(!data._span) {\n\t\t\t\t\tvar _this =3D this;\n\t\t\t\t\tdata =3D =
rowData[col] =3D this.styleStack.auto(data, measureCb(this, =
data));\n\n\t\t\t\t\tif (data.colSpan &amp;&amp; data.colSpan &gt; 1) =
{\n\t\t\t\t\t\tmarkSpans(rowData, col, =
data.colSpan);\n\t\t\t\t\t\tcolSpans.push({ col: col, span: =
data.colSpan, minWidth: data._minWidth, maxWidth: data._maxWidth =
});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tc._minWidth =3D =
Math.max(c._minWidth, data._minWidth);\n\t\t\t\t\t\tc._maxWidth =3D =
Math.max(c._maxWidth, =
data._maxWidth);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (data.rowSpan =
&amp;&amp; data.rowSpan &gt; 1) {\n\t\t\t\t\tmarkVSpans(node.table, row, =
col, =
data.rowSpan);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\textendWidthsForColSpans(=
);\n\n\t\tvar measures =3D =
ColumnCalculator.measureMinMax(node.table.widths);\n\n\t\tnode._minWidth =
=3D measures.min + node._offsets.total;\n\t\tnode._maxWidth =3D =
measures.max + node._offsets.total;\n\n\t\treturn node;\n\n\t\tfunction =
measureCb(_this, data) {\n\t\t\treturn function() {\n\t\t\t\tif (data =
!=3D=3D null &amp;&amp; typeof data =3D=3D=3D 'object') =
{\n\t\t\t\t\tdata.fillColor =3D =
_this.styleStack.getProperty('fillColor');\n\t\t\t\t}\n\t\t\t\treturn =
_this.measureNode(data);\n\t\t\t};\n\t\t}\n\n\t\tfunction =
getLayout(tableLayouts) {\n\t\t\tvar layout =3D node.layout;\n\n\t\t\tif =
(typeof node.layout =3D=3D=3D 'string' || node instanceof String) =
{\n\t\t\t\tlayout =3D tableLayouts[layout];\n\t\t\t}\n\n\t\t\tvar =
defaultLayout =3D {\n\t\t\t\thLineWidth: function(i, node) { return 1; =
}, //return node.table.headerRows &amp;&amp; i =3D=3D=3D =
node.table.headerRows &amp;&amp; 3 || 0; },\n\t\t\t\tvLineWidth: =
function(i, node) { return 1; },\n\t\t\t\thLineColor: function(i, node) =
{ return 'black'; },\n\t\t\t\tvLineColor: function(i, node) { return =
'black'; },\n\t\t\t\tpaddingLeft: function(i, node) { return 4; }, //i =
&amp;&amp; 4 || 0; },\n\t\t\t\tpaddingRight: function(i, node) { return =
4; }, //(i &lt; node.table.widths.length - 1) ? 4 : 0; =
},\n\t\t\t\tpaddingTop: function(i, node) { return 2; =
},\n\t\t\t\tpaddingBottom: function(i, node) { return 2; =
}\n\t\t\t};\n\n\t\t\treturn pack(defaultLayout, =
layout);\n\t\t}\n\n\t\tfunction getOffsets(layout) {\n\t\t\tvar offsets =
=3D [];\n\t\t\tvar totalOffset =3D 0;\n\t\t\tvar prevRightPadding =3D =
0;\n\n\t\t\tfor(var i =3D 0, l =3D node.table.widths.length; i &lt; l; =
i++) {\n\t\t\t\tvar lOffset =3D prevRightPadding + layout.vLineWidth(i, =
node) + layout.paddingLeft(i, =
node);\n\t\t\t\toffsets.push(lOffset);\n\t\t\t\ttotalOffset +=3D =
lOffset;\n\t\t\t\tprevRightPadding =3D layout.paddingRight(i, =
node);\n\t\t\t}\n\n\t\t\ttotalOffset +=3D prevRightPadding + =
layout.vLineWidth(node.table.widths.length, node);\n\n\t\t\treturn =
{\n\t\t\t\ttotal: totalOffset,\n\t\t\t\toffsets: =
offsets\n\t\t\t};\n\t\t}\n\n\t\tfunction extendWidthsForColSpans() =
{\n\t\t\tvar q, j;\n\n\t\t\tfor (var i =3D 0, l =3D colSpans.length; i =
&lt; l; i++) {\n\t\t\t\tvar span =3D colSpans[i];\n\n\t\t\t\tvar =
currentMinMax =3D getMinMax(span.col, span.span, =
node._offsets);\n\t\t\t\tvar minDifference =3D span.minWidth - =
currentMinMax.minWidth;\n\t\t\t\tvar maxDifference =3D span.maxWidth - =
currentMinMax.maxWidth;\n\n\t\t\t\tif (minDifference &gt; 0) =
{\n\t\t\t\t\tq =3D minDifference / span.span;\n\n\t\t\t\t\tfor(j =3D 0; =
j &lt; span.span; j++) {\n\t\t\t\t\t\tnode.table.widths[span.col + =
j]._minWidth +=3D q;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif =
(maxDifference &gt; 0) {\n\t\t\t\t\tq =3D maxDifference / =
span.span;\n\n\t\t\t\t\tfor(j =3D 0; j &lt; span.span; j++) =
{\n\t\t\t\t\t\tnode.table.widths[span.col + j]._maxWidth +=3D =
q;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction =
getMinMax(col, span, offsets) {\n\t\t\tvar result =3D { minWidth: 0, =
maxWidth: 0 };\n\n\t\t\tfor(var i =3D 0; i &lt; span; i++) =
{\n\t\t\t\tresult.minWidth +=3D node.table.widths[col + i]._minWidth + =
(i? offsets.offsets[col + i] : 0);\n\t\t\t\tresult.maxWidth +=3D =
node.table.widths[col + i]._maxWidth + (i? offsets.offsets[col + i] : =
0);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t\tfunction =
markSpans(rowData, col, span) {\n\t\t\tfor (var i =3D 1; i &lt; span; =
i++) {\n\t\t\t\trowData[col + i] =3D {\n\t\t\t\t\t_span: =
true,\n\t\t\t\t\t_minWidth: 0,\n\t\t\t\t\t_maxWidth: =
0,\n\t\t\t\t\trowSpan: =
rowData[col].rowSpan\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tfunction =
markVSpans(table, row, col, span) {\n\t\t\tfor (var i =3D 1; i &lt; =
span; i++) {\n\t\t\t\ttable.body[row + i][col] =3D {\n\t\t\t\t\t_span: =
true,\n\t\t\t\t\t_minWidth: 0,\n\t\t\t\t\t_maxWidth: =
0,\n\t\t\t\t\tfillColor: =
table.body[row][col].fillColor\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tfunctio=
n extendTableWidths(node) {\n\t\t\tif (!node.table.widths) =
{\n\t\t\t\tnode.table.widths =3D 'auto';\n\t\t\t}\n\n\t\t\tif (typeof =
node.table.widths =3D=3D=3D 'string' || node.table.widths instanceof =
String) {\n\t\t\t\tnode.table.widths =3D [ node.table.widths =
];\n\n\t\t\t\twhile(node.table.widths.length &lt; =
node.table.body[0].length) =
{\n\t\t\t\t\tnode.table.widths.push(node.table.widths[node.table.widths.l=
ength - 1]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor(var i =3D 0, l =3D =
node.table.widths.length; i &lt; l; i++) {\n\t\t\t\tvar w =3D =
node.table.widths[i];\n\t\t\t\tif (typeof w =3D=3D=3D 'number' || w =
instanceof Number || typeof w =3D=3D=3D 'string' || w instanceof String) =
{\n\t\t\t\t\tnode.table.widths[i] =3D { width: w =
};\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tDocMeasure.prototype.measureCanv=
as =3D function(node) {\n\t\tvar w =3D 0, h =3D 0;\n\n\t\tfor(var i =3D =
0, l =3D node.canvas.length; i &lt; l; i++) {\n\t\t\tvar vector =3D =
node.canvas[i];\n\n\t\t\tswitch(vector.type) {\n\t\t\tcase =
'ellipse':\n\t\t\t\tw =3D Math.max(w, vector.x + vector.r1);\n\t\t\t\th =
=3D Math.max(h, vector.y + vector.r2);\n\t\t\t\tbreak;\n\t\t\tcase =
'rect':\n\t\t\t\tw =3D Math.max(w, vector.x + vector.w);\n\t\t\t\th =3D =
Math.max(h, vector.y + vector.h);\n\t\t\t\tbreak;\n\t\t\tcase =
'line':\n\t\t\t\tw =3D Math.max(w, vector.x1, vector.x2);\n\t\t\t\th =3D =
Math.max(h, vector.y1, vector.y2);\n\t\t\t\tbreak;\n\t\t\tcase =
'polyline':\n\t\t\t\tfor(var i2 =3D 0, l2 =3D vector.points.length; i2 =
&lt; l2; i2++) {\n\t\t\t\t\tw =3D Math.max(w, =
vector.points[i2].x);\n\t\t\t\t\th =3D Math.max(h, =
vector.points[i2].y);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tn=
ode._minWidth =3D node._maxWidth =3D w;\n\t\tnode._minHeight =3D =
node._maxHeight =3D h;\n\n\t\treturn =
node;\n\t};\n\n\tDocMeasure.prototype.measureQr =3D function(node) =
{\n\t\tnode =3D qrEncoder.measure(node);\n\t\tnode._alignment =3D =
this.styleStack.getProperty('alignment');\n\t\treturn =
node;\n\t};\n\n\tmodule.exports =3D DocMeasure;\n\n\n/***/ },\n/* 14 =
*/\n/***/ function(module, exports) {\n\n\t/* jslint node: true =
*/\n\t'use strict';\n\n\tvar WORD_RE =3D /([^ ,\\/!.?:;\\-\\n]*[ =
,\\/!.?:;\\-]*)|\\n/g;\n\t// /\\S*\\s*/g to be considered (I'm not sure =
however - we shouldn't split 'aaa !!!!')\n\n\tvar LEADING =3D =
/^(\\s)+/g;\n\tvar TRAILING =3D /(\\s)+$/g;\n\n\t/**\n\t* Creates an =
instance of TextTools - text measurement utility\n\t*\n\t* =
@constructor\n\t* @param {FontProvider} fontProvider\n\t*/\n\tfunction =
TextTools(fontProvider) {\n\t\tthis.fontProvider =3D =
fontProvider;\n\t}\n\n\t/**\n\t * Converts an array of strings (or =
inline-definition-objects) into a collection\n\t * of inlines and =
calculated minWidth/maxWidth.\n\t* and their min/max widths\n\t* @param  =
{Object} textArray - an array of inline-definition-objects (or =
strings)\n\t* @param  {Object} styleContextStack current style =
stack\n\t* @return {Object}                   collection of inlines, =
minWidth, maxWidth\n\t*/\n\tTextTools.prototype.buildInlines =3D =
function(textArray, styleContextStack) {\n\t\tvar measured =3D =
measure(this.fontProvider, textArray, styleContextStack);\n\n\t\tvar =
minWidth =3D 0,\n\t\t\tmaxWidth =3D =
0,\n\t\t\tcurrentLineWidth;\n\n\t\tmeasured.forEach(function (inline) =
{\n\t\t\tminWidth =3D Math.max(minWidth, inline.width - =
inline.leadingCut - inline.trailingCut);\n\n\t\t\tif (!currentLineWidth) =
{\n\t\t\t\tcurrentLineWidth =3D { width: 0, leadingCut: =
inline.leadingCut, trailingCut: 0 =
};\n\t\t\t}\n\n\t\t\tcurrentLineWidth.width +=3D =
inline.width;\n\t\t\tcurrentLineWidth.trailingCut =3D =
inline.trailingCut;\n\n\t\t\tmaxWidth =3D Math.max(maxWidth, =
getTrimmedWidth(currentLineWidth));\n\n\t\t\tif (inline.lineEnd) =
{\n\t\t\t\tcurrentLineWidth =3D null;\n\t\t\t}\n\t\t});\n\n\t\tif =
(getStyleProperty({}, styleContextStack, 'noWrap', false)) =
{\n\t\t\tminWidth =3D maxWidth;\n\t\t}\n\n\t\treturn {\n\t\t\titems: =
measured,\n\t\t\tminWidth: minWidth,\n\t\t\tmaxWidth: =
maxWidth\n\t\t};\n\n\t\tfunction getTrimmedWidth(item) {\n\t\t\treturn =
Math.max(0, item.width - item.leadingCut - =
item.trailingCut);\n\t\t}\n\t};\n\n\t/**\n\t* Returns size of the =
specified string (without breaking it) using the current style\n\t* =
@param  {String} text              text to be measured\n\t* @param  =
{Object} styleContextStack current style stack\n\t* @return {Object}     =
              size of the specified =
string\n\t*/\n\tTextTools.prototype.sizeOfString =3D function(text, =
styleContextStack) {\n\t\ttext =3D text.replace('\\t', '    =
');\n\n\t\t//TODO: refactor - extract from measure\n\t\tvar fontName =3D =
getStyleProperty({}, styleContextStack, 'font', 'Roboto');\n\t\tvar =
fontSize =3D getStyleProperty({}, styleContextStack, 'fontSize', =
12);\n\t\tvar bold =3D getStyleProperty({}, styleContextStack, 'bold', =
false);\n\t\tvar italics =3D getStyleProperty({}, styleContextStack, =
'italics', false);\n\t\tvar lineHeight =3D getStyleProperty({}, =
styleContextStack, 'lineHeight', 1);\n\n\t\tvar font =3D =
this.fontProvider.provideFont(fontName, bold, italics);\n\n\t\treturn =
{\n\t\t\twidth: font.widthOfString(removeDiacritics(text), =
fontSize),\n\t\t\theight: font.lineHeight(fontSize) * =
lineHeight,\n\t\t\tfontSize: fontSize,\n\t\t\tlineHeight: =
lineHeight,\n\t\t\tascender: font.ascender / 1000 * =
fontSize,\n\t\t\tdecender: font.decender / 1000 * =
fontSize\n\t\t};\n\t};\n\n\tfunction splitWords(text, noWrap) {\n\t\tvar =
results =3D [];\n\t\ttext =3D text.replace('\\t', '    ');\n\n\t\tvar =
array;\n\t\tif (noWrap) {\n\t\t\tarray =3D [ text, \"\" ];\n\t\t} else =
{\n\t\t\tarray =3D text.match(WORD_RE);\n\t\t}\n\t\t// i &lt; l - 1, =
because the last match is always an empty string\n\t\t// other empty =
strings however are treated as new-lines\n\t\tfor(var i =3D 0, l =3D =
array.length; i &lt; l - 1; i++) {\n\t\t\tvar item =3D =
array[i];\n\n\t\t\tvar isNewLine =3D item.length =3D=3D=3D =
0;\n\n\t\t\tif (!isNewLine) {\n\t\t\t\tresults.push({text: =
item});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvar shouldAddLine =3D =
(results.length =3D=3D=3D 0 || results[results.length - =
1].lineEnd);\n\n\t\t\t\tif (shouldAddLine) {\n\t\t\t\t\tresults.push({ =
text: '', lineEnd: true });\n\t\t\t\t}\n\t\t\t\telse =
{\n\t\t\t\t\tresults[results.length - 1].lineEnd =3D =
true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn results;\n\t}\n\n\tfunction =
copyStyle(source, destination) {\n\t\tdestination =3D destination || =
{};\n\t\tsource =3D source || {}; //TODO: default style\n\n\t\tfor(var =
key in source) {\n\t\t\tif (key !=3D 'text' &amp;&amp; =
source.hasOwnProperty(key)) {\n\t\t\t\tdestination[key] =3D =
source[key];\n\t\t\t}\n\t\t}\n\n\t\treturn =
destination;\n\t}\n\n\tfunction normalizeTextArray(array) {\n\t\tvar =
results =3D [];\n\n\t\tif (typeof array =3D=3D 'string' || array =
instanceof String) {\n\t\t\tarray =3D [ array ];\n\t\t}\n\n\t\tfor(var i =
=3D 0, l =3D array.length; i &lt; l; i++) {\n\t\t\tvar item =3D =
array[i];\n\t\t\tvar style =3D null;\n\t\t\tvar words;\n\n\t\t\tif =
(typeof item =3D=3D 'string' || item instanceof String) {\n\t\t\t\twords =
=3D splitWords(item);\n\t\t\t} else {\n\t\t\t\twords =3D =
splitWords(item.text, item.noWrap);\n\t\t\t\tstyle =3D =
copyStyle(item);\n\t\t\t}\n\n\t\t\tfor(var i2 =3D 0, l2 =3D =
words.length; i2 &lt; l2; i2++) {\n\t\t\t\tvar result =3D =
{\n\t\t\t\t\ttext: words[i2].text\n\t\t\t\t};\n\n\t\t\t\tif =
(words[i2].lineEnd) {\n\t\t\t\t\tresult.lineEnd =3D =
true;\n\t\t\t\t}\n\n\t\t\t\tcopyStyle(style, =
result);\n\n\t\t\t\tresults.push(result);\n\t\t\t}\n\t\t}\n\n\t\treturn =
results;\n\t}\n\n\t//TODO: support for other languages (currently only =
polish is supported)\n\tvar diacriticsMap =3D { '=C4=84': 'A', '=C4=86': =
'C', '=C4=98': 'E', '=C5=81': 'L', '=C5=83': 'N', '=C3=93': 'O', =
'=C5=9A': 'S', '=C5=B9': 'Z', '=C5=BB': 'Z', '=C4=85': 'a', '=C4=87': =
'c', '=C4=99': 'e', '=C5=82': 'l', '=C5=84': 'n', '=C3=B3': 'o', =
'=C5=9B': 's', '=C5=BA': 'z', '=C5=BC': 'z' };\n\t// '  &lt;&lt; atom.io =
workaround\n\n\tfunction removeDiacritics(text) {\n\t\treturn =
text.replace(/[^A-Za-z0-9\\[\\] ]/g, function(a) {\n\t\t\treturn =
diacriticsMap[a] || a;\n\t\t});\n\t}\n\n\tfunction =
getStyleProperty(item, styleContextStack, property, defaultValue) =
{\n\t\tvar value;\n\n\t\tif (item[property] !=3D=3D undefined &amp;&amp; =
item[property] !=3D=3D null) {\n\t\t\t// item defines this =
property\n\t\t\treturn item[property];\n\t\t}\n\n\t\tif =
(!styleContextStack) return =
defaultValue;\n\n\t\tstyleContextStack.auto(item, function() =
{\n\t\t\tvalue =3D =
styleContextStack.getProperty(property);\n\t\t});\n\n\t\tif (value =
!=3D=3D null &amp;&amp; value !=3D=3D undefined) {\n\t\t\treturn =
value;\n\t\t} else {\n\t\t\treturn =
defaultValue;\n\t\t}\n\t}\n\n\tfunction measure(fontProvider, textArray, =
styleContextStack) {\n\t\tvar normalized =3D =
normalizeTextArray(textArray);\n\n\t\tnormalized.forEach(function(item) =
{\n\t\t\tvar fontName =3D getStyleProperty(item, styleContextStack, =
'font', 'Roboto');\n\t\t\tvar fontSize =3D getStyleProperty(item, =
styleContextStack, 'fontSize', 12);\n\t\t\tvar bold =3D =
getStyleProperty(item, styleContextStack, 'bold', false);\n\t\t\tvar =
italics =3D getStyleProperty(item, styleContextStack, 'italics', =
false);\n\t\t\tvar color =3D getStyleProperty(item, styleContextStack, =
'color', 'black');\n\t\t\tvar decoration =3D getStyleProperty(item, =
styleContextStack, 'decoration', null);\n\t\t\tvar decorationColor =3D =
getStyleProperty(item, styleContextStack, 'decorationColor', =
null);\n\t\t\tvar decorationStyle =3D getStyleProperty(item, =
styleContextStack, 'decorationStyle', null);\n\t\t\tvar background =3D =
getStyleProperty(item, styleContextStack, 'background', =
null);\n\t\t\tvar lineHeight =3D getStyleProperty(item, =
styleContextStack, 'lineHeight', 1);\n\n\t\t\tvar font =3D =
fontProvider.provideFont(fontName, bold, italics);\n\n\t\t\t// TODO: =
character spacing\n\t\t\titem.width =3D =
font.widthOfString(removeDiacritics(item.text), =
fontSize);\n\t\t\titem.height =3D font.lineHeight(fontSize) * =
lineHeight;\n\n\t\t\tvar leadingSpaces =3D =
item.text.match(LEADING);\n\t\t\tvar trailingSpaces =3D =
item.text.match(TRAILING);\n\t\t\tif (leadingSpaces) =
{\n\t\t\t\titem.leadingCut =3D font.widthOfString(leadingSpaces[0], =
fontSize);\n\t\t\t}\n\t\t\telse {\n\t\t\t\titem.leadingCut =3D =
0;\n\t\t\t}\n\n\t\t\tif (trailingSpaces) {\n\t\t\t\titem.trailingCut =3D =
font.widthOfString(trailingSpaces[0], fontSize);\n\t\t\t}\n\t\t\telse =
{\n\t\t\t\titem.trailingCut =3D 0;\n\t\t\t}\n\n\t\t\titem.alignment =3D =
getStyleProperty(item, styleContextStack, 'alignment', =
'left');\n\t\t\titem.font =3D font;\n\t\t\titem.fontSize =3D =
fontSize;\n\t\t\titem.color =3D color;\n\t\t\titem.decoration =3D =
decoration;\n\t\t\titem.decorationColor =3D =
decorationColor;\n\t\t\titem.decorationStyle =3D =
decorationStyle;\n\t\t\titem.background =3D =
background;\n\t\t});\n\n\t\treturn normalized;\n\t}\n\n\t/****TESTS**** =
(add a leading '/' to uncomment)\n\tTextTools.prototype.splitWords =3D =
splitWords;\n\tTextTools.prototype.normalizeTextArray =3D =
normalizeTextArray;\n\tTextTools.prototype.measure =3D measure;\n\t// =
*/\n\n\n\tmodule.exports =3D TextTools;\n\n\n/***/ },\n/* 15 */\n/***/ =
function(module, exports) {\n\n\t/* jslint node: true */\n\t'use =
strict';\n\n\t/**\n\t* Creates an instance of StyleContextStack used for =
style inheritance and style overrides\n\t*\n\t* @constructor\n\t* @this =
{StyleContextStack}\n\t* @param {Object} named styles dictionary\n\t* =
@param {Object} optional default style definition\n\t*/\n\tfunction =
StyleContextStack (styleDictionary, defaultStyle) =
{\n\t\tthis.defaultStyle =3D defaultStyle || =
{};\n\t\tthis.styleDictionary =3D =
styleDictionary;\n\t\tthis.styleOverrides =3D [];\n\t}\n\n\t/**\n\t* =
Creates cloned version of current stack\n\t* @return {StyleContextStack} =
current stack snapshot\n\t*/\n\tStyleContextStack.prototype.clone =3D =
function() {\n\t\tvar stack =3D new =
StyleContextStack(this.styleDictionary, =
this.defaultStyle);\n\n\t\tthis.styleOverrides.forEach(function(item) =
{\n\t\t\tstack.styleOverrides.push(item);\n\t\t});\n\n\t\treturn =
stack;\n\t};\n\n\t/**\n\t* Pushes style-name or style-overrides-object =
onto the stack for future evaluation\n\t*\n\t* @param {String|Object} =
styleNameOrOverride style-name (referring to styleDictionary) or\n\t*    =
                                        a new dictionary defining =
overriding properties\n\t*/\n\tStyleContextStack.prototype.push =3D =
function(styleNameOrOverride) =
{\n\t\tthis.styleOverrides.push(styleNameOrOverride);\n\t};\n\n\t/**\n\t*=
 Removes last style-name or style-overrides-object from the =
stack\n\t*\n\t* @param {Number} howMany - optional number of elements to =
be popped (if not specified,\n\t*                           one element =
will be removed from the stack)\n\t*/\n\tStyleContextStack.prototype.pop =
=3D function(howMany) {\n\t\thowMany =3D howMany || =
1;\n\n\t\twhile(howMany-- &gt; 0) =
{\n\t\t\tthis.styleOverrides.pop();\n\t\t}\n\t};\n\n\t/**\n\t* Creates a =
set of named styles or/and a style-overrides-object based on the =
item,\n\t* pushes those elements onto the stack for future evaluation =
and returns the number\n\t* of elements pushed, so they can be easily =
poped then.\n\t*\n\t* @param {Object} item - an object with optional =
style property and/or style overrides\n\t* @return the number of items =
pushed onto the stack\n\t*/\n\tStyleContextStack.prototype.autopush =3D =
function(item) {\n\t\tif (typeof item =3D=3D=3D 'string' || item =
instanceof String) return 0;\n\n\t\tvar styleNames =3D [];\n\n\t\tif =
(item.style) {\n\t\t\tif (item.style instanceof Array) =
{\n\t\t\t\tstyleNames =3D item.style;\n\t\t\t} else =
{\n\t\t\t\tstyleNames =3D [ item.style ];\n\t\t\t}\n\t\t}\n\n\t\tfor(var =
i =3D 0, l =3D styleNames.length; i &lt; l; i++) =
{\n\t\t\tthis.push(styleNames[i]);\n\t\t}\n\n\t\tvar styleOverrideObject =
=3D {};\n\t\tvar pushSOO =3D =
false;\n\n\t\t[\n\t\t\t'font',\n\t\t\t'fontSize',\n\t\t\t'bold',\n\t\t\t'=
italics',\n\t\t\t'alignment',\n\t\t\t'color',\n\t\t\t'columnGap',\n\t\t\t=
'fillColor',\n\t\t\t'decoration',\n\t\t\t'decorationStyle',\n\t\t\t'decor=
ationColor',\n\t\t\t'background',\n\t\t\t'lineHeight',\n\t\t\t'noWrap'\n\=
t\t\t//'tableCellPadding'\n\t\t\t// 'cellBorder',\n\t\t\t// =
'headerCellBorder',\n\t\t\t// 'oddRowCellBorder',\n\t\t\t// =
'evenRowCellBorder',\n\t\t\t// =
'tableBorder'\n\t\t].forEach(function(key) {\n\t\t\tif (item[key] =
!=3D=3D undefined &amp;&amp; item[key] !=3D=3D null) =
{\n\t\t\t\tstyleOverrideObject[key] =3D item[key];\n\t\t\t\tpushSOO =3D =
true;\n\t\t\t}\n\t\t});\n\n\t\tif (pushSOO) =
{\n\t\t\tthis.push(styleOverrideObject);\n\t\t}\n\n\t\treturn =
styleNames.length + (pushSOO ? 1 : 0);\n\t};\n\n\t/**\n\t* Automatically =
pushes elements onto the stack, using autopush based on item,\n\t* =
executes callback and then pops elements back. Returns value returned by =
callback\n\t*\n\t* @param  {Object}   item - an object with optional =
style property and/or style overrides\n\t* @param  {Function} function =
to be called between autopush and pop\n\t* @return {Object} value =
returned by callback\n\t*/\n\tStyleContextStack.prototype.auto =3D =
function(item, callback) {\n\t\tvar pushedItems =3D =
this.autopush(item);\n\t\tvar result =3D callback();\n\n\t\tif =
(pushedItems &gt; 0) =
{\n\t\t\tthis.pop(pushedItems);\n\t\t}\n\n\t\treturn =
result;\n\t};\n\n\t/**\n\t* Evaluates stack and returns value of a named =
property\n\t*\n\t* @param {String} property - property name\n\t* @return =
property value or null if not =
found\n\t*/\n\tStyleContextStack.prototype.getProperty =3D =
function(property) {\n\t\tif (this.styleOverrides) {\n\t\t\tfor(var i =
=3D this.styleOverrides.length - 1; i &gt;=3D 0; i--) {\n\t\t\t\tvar =
item =3D this.styleOverrides[i];\n\n\t\t\t\tif (typeof item =3D=3D =
'string' || item instanceof String) {\n\t\t\t\t\t// =
named-style-override\n\n\t\t\t\t\tvar style =3D =
this.styleDictionary[item];\n\t\t\t\t\tif (style &amp;&amp; =
style[property] !=3D=3D null &amp;&amp; style[property] !=3D=3D =
undefined) {\n\t\t\t\t\t\treturn =
style[property];\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// =
style-overrides-object\n\t\t\t\t\tif (item[property] !=3D=3D undefined =
&amp;&amp; item[property] !=3D=3D null) {\n\t\t\t\t\t\treturn =
item[property];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn =
this.defaultStyle &amp;&amp; =
this.defaultStyle[property];\n\t};\n\n\tmodule.exports =3D =
StyleContextStack;\n\n\n/***/ },\n/* 16 */\n/***/ function(module, =
exports) {\n\n\t/* jslint node: true */\n\t'use strict';\n\n\tfunction =
buildColumnWidths(columns, availableWidth) {\n\t\tvar autoColumns =3D =
[],\n\t\t\tautoMin =3D 0, autoMax =3D 0,\n\t\t\tstarColumns =3D =
[],\n\t\t\tstarMaxMin =3D 0,\n\t\t\tstarMaxMax =3D =
0,\n\t\t\tfixedColumns =3D [],\n\t\t\tinitial_availableWidth =3D =
availableWidth;\n\n\t\tcolumns.forEach(function(column) {\n\t\t\tif =
(isAutoColumn(column)) =
{\n\t\t\t\tautoColumns.push(column);\n\t\t\t\tautoMin +=3D =
column._minWidth;\n\t\t\t\tautoMax +=3D column._maxWidth;\n\t\t\t} else =
if (isStarColumn(column)) =
{\n\t\t\t\tstarColumns.push(column);\n\t\t\t\tstarMaxMin =3D =
Math.max(starMaxMin, column._minWidth);\n\t\t\t\tstarMaxMax =3D =
Math.max(starMaxMax, column._maxWidth);\n\t\t\t} else =
{\n\t\t\t\tfixedColumns.push(column);\n\t\t\t}\n\t\t});\n\n\t\tfixedColum=
ns.forEach(function(col) {\n\t\t\t// width specified as %\n\t\t\tif =
(typeof col.width =3D=3D=3D 'string' &amp;&amp; /\\d+%/.test(col.width) =
) {\n\t\t\t\tcol.width =3D =
parseFloat(col.width)*initial_availableWidth/100;\n\t\t\t}\n\t\t\tif =
(col.width &lt; (col._minWidth) &amp;&amp; col.elasticWidth) =
{\n\t\t\t\tcol._calcWidth =3D col._minWidth;\n\t\t\t} else =
{\n\t\t\t\tcol._calcWidth =3D =
col.width;\n\t\t\t}\n\n\t\t\tavailableWidth -=3D =
col._calcWidth;\n\t\t});\n\n\t\t// =
http://www.freesoft.org/CIE/RFC/1942/18.htm\n\t\t// =
http://www.w3.org/TR/CSS2/tables.html#width-layout\n\t\t// =
http://dev.w3.org/csswg/css3-tables-algorithms/Overview.src.htm\n\t\tvar =
minW =3D autoMin + starMaxMin * starColumns.length;\n\t\tvar maxW =3D =
autoMax + starMaxMax * starColumns.length;\n\t\tif (minW &gt;=3D =
availableWidth) {\n\t\t\t// case 1 - there's no way to fit all columns =
within available width\n\t\t\t// that's actually pretty bad situation =
with PDF as we have no horizontal scroll\n\t\t\t// no easy workaround =
(unless we decide, in the future, to split single words)\n\t\t\t// =
currently we simply use minWidths for all =
columns\n\t\t\tautoColumns.forEach(function(col) =
{\n\t\t\t\tcol._calcWidth =3D =
col._minWidth;\n\t\t\t});\n\n\t\t\tstarColumns.forEach(function(col) =
{\n\t\t\t\tcol._calcWidth =3D starMaxMin; // starMaxMin already contains =
padding\n\t\t\t});\n\t\t} else {\n\t\t\tif (maxW &lt; availableWidth) =
{\n\t\t\t\t// case 2 - we can fit rest of the table within available =
space\n\t\t\t\tautoColumns.forEach(function(col) =
{\n\t\t\t\t\tcol._calcWidth =3D col._maxWidth;\n\t\t\t\t\tavailableWidth =
-=3D col._calcWidth;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// maxW is =
too large, but minW fits within available width\n\t\t\t\tvar W =3D =
availableWidth - minW;\n\t\t\t\tvar D =3D maxW - =
minW;\n\n\t\t\t\tautoColumns.forEach(function(col) {\n\t\t\t\t\tvar d =
=3D col._maxWidth - col._minWidth;\n\t\t\t\t\tcol._calcWidth =3D =
col._minWidth + d * W / D;\n\t\t\t\t\tavailableWidth -=3D =
col._calcWidth;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (starColumns.length =
&gt; 0) {\n\t\t\t\tvar starSize =3D availableWidth / =
starColumns.length;\n\n\t\t\t\tstarColumns.forEach(function(col) =
{\n\t\t\t\t\tcol._calcWidth =3D =
starSize;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction =
isAutoColumn(column) {\n\t\treturn column.width =3D=3D=3D =
'auto';\n\t}\n\n\tfunction isStarColumn(column) {\n\t\treturn =
column.width =3D=3D=3D null || column.width =3D=3D=3D undefined || =
column.width =3D=3D=3D '*' || column.width =3D=3D=3D =
'star';\n\t}\n\n\t//TODO: refactor and reuse in measureTable\n\tfunction =
measureMinMax(columns) {\n\t\tvar result =3D { min: 0, max: 0 =
};\n\n\t\tvar maxStar =3D { min: 0, max: 0 };\n\t\tvar starCount =3D =
0;\n\n\t\tfor(var i =3D 0, l =3D columns.length; i &lt; l; i++) =
{\n\t\t\tvar c =3D columns[i];\n\n\t\t\tif (isStarColumn(c)) =
{\n\t\t\t\tmaxStar.min =3D Math.max(maxStar.min, =
c._minWidth);\n\t\t\t\tmaxStar.max =3D Math.max(maxStar.max, =
c._maxWidth);\n\t\t\t\tstarCount++;\n\t\t\t} else if (isAutoColumn(c)) =
{\n\t\t\t\tresult.min +=3D c._minWidth;\n\t\t\t\tresult.max +=3D =
c._maxWidth;\n\t\t\t} else {\n\t\t\t\tresult.min +=3D ((c.width !=3D=3D =
undefined &amp;&amp; c.width) || c._minWidth);\n\t\t\t\tresult.max +=3D =
((c.width  !=3D=3D undefined &amp;&amp; c.width) || =
c._maxWidth);\n\t\t\t}\n\t\t}\n\n\t\tif (starCount) {\n\t\t\tresult.min =
+=3D starCount * maxStar.min;\n\t\t\tresult.max +=3D starCount * =
maxStar.max;\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t* Calculates =
column widths\n\t* @private\n\t*/\n\tmodule.exports =3D =
{\n\t\tbuildColumnWidths: buildColumnWidths,\n\t\tmeasureMinMax: =
measureMinMax,\n\t\tisAutoColumn: isAutoColumn,\n\t\tisStarColumn: =
isStarColumn\n\t};\n\n\n/***/ },\n/* 17 */\n/***/ function(module, =
exports) {\n\n\t/* jslint node: true */\n\t'use strict';\n\n\tfunction =
pack() {\n\t\tvar result =3D {};\n\n\t\tfor(var i =3D 0, l =3D =
arguments.length; i &lt; l; i++) {\n\t\t\tvar obj =3D =
arguments[i];\n\n\t\t\tif (obj) {\n\t\t\t\tfor(var key in obj) =
{\n\t\t\t\t\tif (obj.hasOwnProperty(key)) {\n\t\t\t\t\t\tresult[key] =3D =
obj[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn =
result;\n\t}\n\n\tfunction offsetVector(vector, x, y) =
{\n\t\tswitch(vector.type) {\n\t\tcase 'ellipse':\n\t\tcase =
'rect':\n\t\t\tvector.x +=3D x;\n\t\t\tvector.y +=3D =
y;\n\t\t\tbreak;\n\t\tcase 'line':\n\t\t\tvector.x1 +=3D =
x;\n\t\t\tvector.x2 +=3D x;\n\t\t\tvector.y1 +=3D y;\n\t\t\tvector.y2 =
+=3D y;\n\t\t\tbreak;\n\t\tcase 'polyline':\n\t\t\tfor(var i =3D 0, l =
=3D vector.points.length; i &lt; l; i++) {\n\t\t\t\tvector.points[i].x =
+=3D x;\n\t\t\t\tvector.points[i].y +=3D =
y;\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tfunction fontStringify(key, =
val) {\n\t\tif (key =3D=3D=3D 'font') {\n\t\t\treturn =
'font';\n\t\t}\n\t\treturn val;\n\t}\n\n\tfunction =
isFunction(functionToCheck) {\n\t\tvar getType =3D {};\n\t\treturn =
functionToCheck &amp;&amp; getType.toString.call(functionToCheck) =
=3D=3D=3D '[object Function]';\n\t}\n\n\n\tmodule.exports =3D =
{\n\t\tpack: pack,\n\t\tfontStringify: fontStringify,\n\t\toffsetVector: =
offsetVector,\n\t\tisFunction: isFunction\n\t};\n\n\n/***/ },\n/* 18 =
*/\n/***/ function(module, exports) {\n\n\t/* jslint node: true =
*/\n\t'use strict';\n\t/*jshint -W004 */\n\t/* qr.js -- QR code =
generator in Javascript (revision 2011-01-19)\n\t * Written by Kang =
Seonghoon &lt;public+qrjs@mearie.org&gt;.\n\t *\n\t * This source code =
is in the public domain; if your jurisdiction does not\n\t * recognize =
the public domain the terms of Creative Commons CC0 license\n\t * apply. =
In the other words, you can always do what you want.\n\t */\n\n\n\t// =
per-version information (cf. JIS X 0510:2004 pp. 30--36, 71)\n\t//\n\t// =
[0]: the degree of generator polynomial by ECC levels\n\t// [1]: # of =
code blocks by ECC levels\n\t// [2]: left-top positions of alignment =
patterns\n\t//\n\t// the number in this table (in particular, [0]) does =
not exactly match with\n\t// the numbers in the specficiation. see =
augumenteccs below for the reason.\n\tvar VERSIONS =3D =
[\n\t\tnull,\n\t\t[[10, 7,17,13], [ 1, 1, 1, 1], =
[]],\n\t\t[[16,10,28,22], [ 1, 1, 1, 1], [4,16]],\n\t\t[[26,15,22,18], [ =
1, 1, 2, 2], [4,20]],\n\t\t[[18,20,16,26], [ 2, 1, 4, 2], =
[4,24]],\n\t\t[[24,26,22,18], [ 2, 1, 4, 4], =
[4,28]],\n\t\t[[16,18,28,24], [ 4, 2, 4, 4], =
[4,32]],\n\t\t[[18,20,26,18], [ 4, 2, 5, 6], =
[4,20,36]],\n\t\t[[22,24,26,22], [ 4, 2, 6, 6], =
[4,22,40]],\n\t\t[[22,30,24,20], [ 5, 2, 8, 8], =
[4,24,44]],\n\t\t[[26,18,28,24], [ 5, 4, 8, 8], =
[4,26,48]],\n\t\t[[30,20,24,28], [ 5, 4,11, 8], =
[4,28,52]],\n\t\t[[22,24,28,26], [ 8, 4,11,10], =
[4,30,56]],\n\t\t[[22,26,22,24], [ 9, 4,16,12], =
[4,32,60]],\n\t\t[[24,30,24,20], [ 9, 4,16,16], =
[4,24,44,64]],\n\t\t[[24,22,24,30], [10, 6,18,12], =
[4,24,46,68]],\n\t\t[[28,24,30,24], [10, 6,16,17], =
[4,24,48,72]],\n\t\t[[28,28,28,28], [11, 6,19,16], =
[4,28,52,76]],\n\t\t[[26,30,28,28], [13, 6,21,18], =
[4,28,54,80]],\n\t\t[[26,28,26,26], [14, 7,25,21], =
[4,28,56,84]],\n\t\t[[26,28,28,30], [16, 8,25,20], =
[4,32,60,88]],\n\t\t[[26,28,30,28], [17, 8,25,23], =
[4,26,48,70,92]],\n\t\t[[28,28,24,30], [17, 9,34,23], =
[4,24,48,72,96]],\n\t\t[[28,30,30,30], [18, 9,30,25], =
[4,28,52,76,100]],\n\t\t[[28,30,30,30], [20,10,32,27], =
[4,26,52,78,104]],\n\t\t[[28,26,30,30], [21,12,35,29], =
[4,30,56,82,108]],\n\t\t[[28,28,30,28], [23,12,37,34], =
[4,28,56,84,112]],\n\t\t[[28,30,30,30], [25,12,40,34], =
[4,32,60,88,116]],\n\t\t[[28,30,30,30], [26,13,42,35], =
[4,24,48,72,96,120]],\n\t\t[[28,30,30,30], [28,14,45,38], =
[4,28,52,76,100,124]],\n\t\t[[28,30,30,30], [29,15,48,40], =
[4,24,50,76,102,128]],\n\t\t[[28,30,30,30], [31,16,51,43], =
[4,28,54,80,106,132]],\n\t\t[[28,30,30,30], [33,17,54,45], =
[4,32,58,84,110,136]],\n\t\t[[28,30,30,30], [35,18,57,48], =
[4,28,56,84,112,140]],\n\t\t[[28,30,30,30], [37,19,60,51], =
[4,32,60,88,116,144]],\n\t\t[[28,30,30,30], [38,19,63,53], =
[4,28,52,76,100,124,148]],\n\t\t[[28,30,30,30], [40,20,66,56], =
[4,22,48,74,100,126,152]],\n\t\t[[28,30,30,30], [43,21,70,59], =
[4,26,52,78,104,130,156]],\n\t\t[[28,30,30,30], [45,22,74,62], =
[4,30,56,82,108,134,160]],\n\t\t[[28,30,30,30], [47,24,77,65], =
[4,24,52,80,108,136,164]],\n\t\t[[28,30,30,30], [49,25,81,68], =
[4,28,56,84,112,140,168]]];\n\n\t// mode constants (cf. Table 2 in JIS X =
0510:2004 p. 16)\n\tvar MODE_TERMINATOR =3D 0;\n\tvar MODE_NUMERIC =3D =
1, MODE_ALPHANUMERIC =3D 2, MODE_OCTET =3D 4, MODE_KANJI =3D 8;\n\n\t// =
validation regexps\n\tvar NUMERIC_REGEXP =3D /^\\d*$/;\n\tvar =
ALPHANUMERIC_REGEXP =3D /^[A-Za-z0-9 $%*+\\-./:]*$/;\n\tvar =
ALPHANUMERIC_OUT_REGEXP =3D /^[A-Z0-9 $%*+\\-./:]*$/;\n\n\t// ECC levels =
(cf. Table 22 in JIS X 0510:2004 p. 45)\n\tvar ECCLEVEL_L =3D 1, =
ECCLEVEL_M =3D 0, ECCLEVEL_Q =3D 3, ECCLEVEL_H =3D 2;\n\n\t// =
GF(2^8)-to-integer mapping with a reducing polynomial =
x^8+x^4+x^3+x^2+1\n\t// invariant: GF256_MAP[GF256_INVMAP[i]] =3D=3D i =
for all i in [1,256)\n\tvar GF256_MAP =3D [], GF256_INVMAP =3D =
[-1];\n\tfor (var i =3D 0, v =3D 1; i &lt; 255; ++i) =
{\n\t\tGF256_MAP.push(v);\n\t\tGF256_INVMAP[v] =3D i;\n\t\tv =3D (v * 2) =
^ (v &gt;=3D 128 ? 0x11d : 0);\n\t}\n\n\t// generator polynomials up to =
degree 30\n\t// (should match with polynomials in JIS X 0510:2004 =
Appendix A)\n\t//\n\t// generator polynomial of degree K is product of =
(x-\\alpha^0), (x-\\alpha^1),\n\t// ..., (x-\\alpha^(K-1)). by =
convention, we omit the K-th coefficient (always 1)\n\t// from the =
result; also other coefficients are written in terms of the =
exponent\n\t// to \\alpha to avoid the redundant calculation. (see also =
calculateecc below.)\n\tvar GF256_GENPOLY =3D [[]];\n\tfor (var i =3D 0; =
i &lt; 30; ++i) {\n\t\tvar prevpoly =3D GF256_GENPOLY[i], poly =3D =
[];\n\t\tfor (var j =3D 0; j &lt;=3D i; ++j) {\n\t\t\tvar a =3D (j &lt; =
i ? GF256_MAP[prevpoly[j]] : 0);\n\t\t\tvar b =3D GF256_MAP[(i + =
(prevpoly[j-1] || 0)) % 255];\n\t\t\tpoly.push(GF256_INVMAP[a ^ =
b]);\n\t\t}\n\t\tGF256_GENPOLY.push(poly);\n\t}\n\n\t// alphanumeric =
character mapping (cf. Table 5 in JIS X 0510:2004 p. 19)\n\tvar =
ALPHANUMERIC_MAP =3D {};\n\tfor (var i =3D 0; i &lt; 45; ++i) =
{\n\t\tALPHANUMERIC_MAP['0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ =
$%*+-./:'.charAt(i)] =3D i;\n\t}\n\n\t// mask functions in terms of row =
# and column #\n\t// (cf. Table 20 in JIS X 0510:2004 p. 42)\n\tvar =
MASKFUNCS =3D [\n\t\tfunction(i,j) { return (i+j) % 2 =3D=3D=3D 0; =
},\n\t\tfunction(i,j) { return i % 2 =3D=3D=3D 0; },\n\t\tfunction(i,j) =
{ return j % 3 =3D=3D=3D 0; },\n\t\tfunction(i,j) { return (i+j) % 3 =
=3D=3D=3D 0; },\n\t\tfunction(i,j) { return (((i/2)|0) + ((j/3)|0)) % 2 =
=3D=3D=3D 0; },\n\t\tfunction(i,j) { return (i*j) % 2 + (i*j) % 3 =
=3D=3D=3D 0; },\n\t\tfunction(i,j) { return ((i*j) % 2 + (i*j) % 3) % 2 =
=3D=3D=3D 0; },\n\t\tfunction(i,j) { return ((i+j) % 2 + (i*j) % 3) % 2 =
=3D=3D=3D 0; }];\n\n\t// returns true when the version information has =
to be embeded.\n\tvar needsverinfo =3D function(ver) { return ver &gt; =
6; };\n\n\t// returns the size of entire QR code for given =
version.\n\tvar getsizebyver =3D function(ver) { return 4 * ver + 17; =
};\n\n\t// returns the number of bits available for code words in this =
version.\n\tvar nfullbits =3D function(ver) {\n\t\t/*\n\t\t * =
|&lt;--------------- n ---------------&gt;|\n\t\t * |        |&lt;----- =
n-17 ----&gt;|        |\n\t\t * +-------+                ///+-------+ =
----\n\t\t * |       |                ///|       |    ^\n\t\t * |  9x9  =
|       @@@@@    ///|  9x8  |    |\n\t\t * |       | # # # @5x5@ # # # | =
      |    |\n\t\t * +-------+       @@@@@       +-------+    |\n\t\t *  =
     #                               ---|\n\t\t *                        =
                ^ |\n\t\t *       #                                =
|\n\t\t *     @@@@@       @@@@@       @@@@@      | n\n\t\t *     @5x5@   =
    @5x5@       @5x5@   n-17\n\t\t *     @@@@@       @@@@@       @@@@@   =
   | |\n\t\t *       #                                | |\n\t\t * ////// =
                                v |\n\t\t * //////#                      =
         ---|\n\t\t * +-------+       @@@@@       @@@@@        |\n\t\t * =
|       |       @5x5@       @5x5@        |\n\t\t * |  8x9  |       @@@@@ =
      @@@@@        |\n\t\t * |       |                                =
v\n\t\t * +-------+                             ----\n\t\t *\n\t\t * =
when the entire code has n^2 modules and there are m^2-3 alignment\n\t\t =
* patterns, we have:\n\t\t * - 225 (=3D 9x9 + 9x8 + 8x9) modules for =
finder patterns and\n\t\t *   format information;\n\t\t * - 2n-34 (=3D =
2(n-17)) modules for timing patterns;\n\t\t * - 36 (=3D 3x6 + 6x3) =
modules for version information, if any;\n\t\t * - 25m^2-75 (=3D =
(m^2-3)(5x5)) modules for alignment patterns\n\t\t *   if any, but =
10m-20 (=3D 2(m-2)x5) of them overlaps with\n\t\t *   timing =
patterns.\n\t\t */\n\t\tvar v =3D VERSIONS[ver];\n\t\tvar nbits =3D =
16*ver*ver + 128*ver + 64; // finder, timing and format info.\n\t\tif =
(needsverinfo(ver)) nbits -=3D 36; // version information\n\t\tif =
(v[2].length) { // alignment patterns\n\t\t\tnbits -=3D 25 * v[2].length =
* v[2].length - 10 * v[2].length - 55;\n\t\t}\n\t\treturn =
nbits;\n\t};\n\n\t// returns the number of bits available for data =
portions (i.e. excludes ECC\n\t// bits but includes mode and length =
bits) in this version and ECC level.\n\tvar ndatabits =3D function(ver, =
ecclevel) {\n\t\tvar nbits =3D nfullbits(ver) &amp; ~7; // no sub-octet =
code words\n\t\tvar v =3D VERSIONS[ver];\n\t\tnbits -=3D 8 * =
v[0][ecclevel] * v[1][ecclevel]; // ecc bits\n\t\treturn =
nbits;\n\t};\n\n\t// returns the number of bits required for the length =
of data.\n\t// (cf. Table 3 in JIS X 0510:2004 p. 16)\n\tvar =
ndatalenbits =3D function(ver, mode) {\n\t\tswitch (mode) {\n\t\tcase =
MODE_NUMERIC: return (ver &lt; 10 ? 10 : ver &lt; 27 ? 12 : =
14);\n\t\tcase MODE_ALPHANUMERIC: return (ver &lt; 10 ? 9 : ver &lt; 27 =
? 11 : 13);\n\t\tcase MODE_OCTET: return (ver &lt; 10 ? 8 : =
16);\n\t\tcase MODE_KANJI: return (ver &lt; 10 ? 8 : ver &lt; 27 ? 10 : =
12);\n\t\t}\n\t};\n\n\t// returns the maximum length of data possible in =
given configuration.\n\tvar getmaxdatalen =3D function(ver, mode, =
ecclevel) {\n\t\tvar nbits =3D ndatabits(ver, ecclevel) - 4 - =
ndatalenbits(ver, mode); // 4 for mode bits\n\t\tswitch (mode) =
{\n\t\tcase MODE_NUMERIC:\n\t\t\treturn ((nbits/10) | 0) * 3 + (nbits%10 =
&lt; 4 ? 0 : nbits%10 &lt; 7 ? 1 : 2);\n\t\tcase =
MODE_ALPHANUMERIC:\n\t\t\treturn ((nbits/11) | 0) * 2 + (nbits%11 &lt; 6 =
? 0 : 1);\n\t\tcase MODE_OCTET:\n\t\t\treturn (nbits/8) | 0;\n\t\tcase =
MODE_KANJI:\n\t\t\treturn (nbits/13) | 0;\n\t\t}\n\t};\n\n\t// checks if =
the given data can be encoded in given mode, and returns\n\t// the =
converted data for the further processing if possible. otherwise\n\t// =
returns null.\n\t//\n\t// this function does not check the length of =
data; it is a duty of\n\t// encode function below (as it depends on the =
version and ECC level too).\n\tvar validatedata =3D function(mode, data) =
{\n\t\tswitch (mode) {\n\t\tcase MODE_NUMERIC:\n\t\t\tif =
(!data.match(NUMERIC_REGEXP)) return null;\n\t\t\treturn =
data;\n\n\t\tcase MODE_ALPHANUMERIC:\n\t\t\tif =
(!data.match(ALPHANUMERIC_REGEXP)) return null;\n\t\t\treturn =
data.toUpperCase();\n\n\t\tcase MODE_OCTET:\n\t\t\tif (typeof data =
=3D=3D=3D 'string') { // encode as utf-8 string\n\t\t\t\tvar newdata =3D =
[];\n\t\t\t\tfor (var i =3D 0; i &lt; data.length; ++i) {\n\t\t\t\t\tvar =
ch =3D data.charCodeAt(i);\n\t\t\t\t\tif (ch &lt; 0x80) =
{\n\t\t\t\t\t\tnewdata.push(ch);\n\t\t\t\t\t} else if (ch &lt; 0x800) =
{\n\t\t\t\t\t\tnewdata.push(0xc0 | (ch &gt;&gt; 6),\n\t\t\t\t\t\t\t0x80 =
| (ch &amp; 0x3f));\n\t\t\t\t\t} else if (ch &lt; 0x10000) =
{\n\t\t\t\t\t\tnewdata.push(0xe0 | (ch &gt;&gt; 12),\n\t\t\t\t\t\t\t0x80 =
| ((ch &gt;&gt; 6) &amp; 0x3f),\n\t\t\t\t\t\t\t0x80 | (ch &amp; =
0x3f));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnewdata.push(0xf0 | (ch =
&gt;&gt; 18),\n\t\t\t\t\t\t\t0x80 | ((ch &gt;&gt; 12) &amp; =
0x3f),\n\t\t\t\t\t\t\t0x80 | ((ch &gt;&gt; 6) &amp; =
0x3f),\n\t\t\t\t\t\t\t0x80 | (ch &amp; =
0x3f));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn newdata;\n\t\t\t} else =
{\n\t\t\t\treturn data;\n\t\t\t}\n\t\t}\n\t};\n\n\t// returns the code =
words (sans ECC bits) for given data and configurations.\n\t// requires =
data to be preprocessed by validatedata. no length check is\n\t// =
performed, and everything has to be checked before calling this =
function.\n\tvar encode =3D function(ver, mode, data, maxbuflen) =
{\n\t\tvar buf =3D [];\n\t\tvar bits =3D 0, remaining =3D 8;\n\t\tvar =
datalen =3D data.length;\n\n\t\t// this function is intentionally no-op =
when n=3D0.\n\t\tvar pack =3D function(x, n) {\n\t\t\tif (n &gt;=3D =
remaining) {\n\t\t\t\tbuf.push(bits | (x &gt;&gt; (n -=3D =
remaining)));\n\t\t\t\twhile (n &gt;=3D 8) buf.push((x &gt;&gt; (n -=3D =
8)) &amp; 255);\n\t\t\t\tbits =3D 0;\n\t\t\t\tremaining =3D =
8;\n\t\t\t}\n\t\t\tif (n &gt; 0) bits |=3D (x &amp; ((1 &lt;&lt; n) - =
1)) &lt;&lt; (remaining -=3D n);\n\t\t};\n\n\t\tvar nlenbits =3D =
ndatalenbits(ver, mode);\n\t\tpack(mode, 4);\n\t\tpack(datalen, =
nlenbits);\n\n\t\tswitch (mode) {\n\t\tcase MODE_NUMERIC:\n\t\t\tfor =
(var i =3D 2; i &lt; datalen; i +=3D 3) =
{\n\t\t\t\tpack(parseInt(data.substring(i-2,i+1), 10), =
10);\n\t\t\t}\n\t\t\tpack(parseInt(data.substring(i-2), 10), =
[0,4,7][datalen%3]);\n\t\t\tbreak;\n\n\t\tcase =
MODE_ALPHANUMERIC:\n\t\t\tfor (var i =3D 1; i &lt; datalen; i +=3D 2) =
{\n\t\t\t\tpack(ALPHANUMERIC_MAP[data.charAt(i-1)] * 45 =
+\n\t\t\t\t\tALPHANUMERIC_MAP[data.charAt(i)], 11);\n\t\t\t}\n\t\t\tif =
(datalen % 2 =3D=3D 1) =
{\n\t\t\t\tpack(ALPHANUMERIC_MAP[data.charAt(i-1)], =
6);\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase MODE_OCTET:\n\t\t\tfor (var i =3D =
0; i &lt; datalen; ++i) {\n\t\t\t\tpack(data[i], =
8);\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\n\t\t// final bits. it is possible =
that adding terminator causes the buffer\n\t\t// to overflow, but then =
the buffer truncated to the maximum size will\n\t\t// be valid as the =
truncated terminator mode bits and padding is\n\t\t// identical in =
appearance (cf. JIS X 0510:2004 sec 8.4.8).\n\t\tpack(MODE_TERMINATOR, =
4);\n\t\tif (remaining &lt; 8) buf.push(bits);\n\n\t\t// the padding to =
fill up the remaining space. we should not add any\n\t\t// words when =
the overflow already occurred.\n\t\twhile (buf.length + 1 &lt; =
maxbuflen) buf.push(0xec, 0x11);\n\t\tif (buf.length &lt; maxbuflen) =
buf.push(0xec);\n\t\treturn buf;\n\t};\n\n\t// calculates ECC code words =
for given code words and generator polynomial.\n\t//\n\t// this is quite =
similar to CRC calculation as both Reed-Solomon and CRC use\n\t// the =
certain kind of cyclic codes, which is effectively the division of\n\t// =
zero-augumented polynomial by the generator polynomial. the only =
difference\n\t// is that Reed-Solomon uses GF(2^8), instead of CRC's =
GF(2), and Reed-Solomon\n\t// uses the different generator polynomial =
than CRC's.\n\tvar calculateecc =3D function(poly, genpoly) {\n\t\tvar =
modulus =3D poly.slice(0);\n\t\tvar polylen =3D poly.length, genpolylen =
=3D genpoly.length;\n\t\tfor (var i =3D 0; i &lt; genpolylen; ++i) =
modulus.push(0);\n\t\tfor (var i =3D 0; i &lt; polylen; ) {\n\t\t\tvar =
quotient =3D GF256_INVMAP[modulus[i++]];\n\t\t\tif (quotient &gt;=3D 0) =
{\n\t\t\t\tfor (var j =3D 0; j &lt; genpolylen; ++j) =
{\n\t\t\t\t\tmodulus[i+j] ^=3D GF256_MAP[(quotient + genpoly[j]) % =
255];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn =
modulus.slice(polylen);\n\t};\n\n\t// auguments ECC code words to given =
code words. the resulting words are\n\t// ready to be encoded in the =
matrix.\n\t//\n\t// the much of actual augumenting procedure follows JIS =
X 0510:2004 sec 8.7.\n\t// the code is simplified using the fact that =
the size of each code &amp; ECC\n\t// blocks is almost same; for =
example, when we have 4 blocks and 46 data words\n\t// the number of =
code words in those blocks are 11, 11, 12, 12 respectively.\n\tvar =
augumenteccs =3D function(poly, nblocks, genpoly) {\n\t\tvar subsizes =
=3D [];\n\t\tvar subsize =3D (poly.length / nblocks) | 0, subsize0 =3D =
0;\n\t\tvar pivot =3D nblocks - poly.length % nblocks;\n\t\tfor (var i =
=3D 0; i &lt; pivot; ++i) =
{\n\t\t\tsubsizes.push(subsize0);\n\t\t\tsubsize0 +=3D =
subsize;\n\t\t}\n\t\tfor (var i =3D pivot; i &lt; nblocks; ++i) =
{\n\t\t\tsubsizes.push(subsize0);\n\t\t\tsubsize0 +=3D =
subsize+1;\n\t\t}\n\t\tsubsizes.push(subsize0);\n\n\t\tvar eccs =3D =
[];\n\t\tfor (var i =3D 0; i &lt; nblocks; ++i) =
{\n\t\t\teccs.push(calculateecc(poly.slice(subsizes[i], subsizes[i+1]), =
genpoly));\n\t\t}\n\n\t\tvar result =3D [];\n\t\tvar nitemsperblock =3D =
(poly.length / nblocks) | 0;\n\t\tfor (var i =3D 0; i &lt; =
nitemsperblock; ++i) {\n\t\t\tfor (var j =3D 0; j &lt; nblocks; ++j) =
{\n\t\t\t\tresult.push(poly[subsizes[j] + i]);\n\t\t\t}\n\t\t}\n\t\tfor =
(var j =3D pivot; j &lt; nblocks; ++j) =
{\n\t\t\tresult.push(poly[subsizes[j+1] - 1]);\n\t\t}\n\t\tfor (var i =
=3D 0; i &lt; genpoly.length; ++i) {\n\t\t\tfor (var j =3D 0; j &lt; =
nblocks; ++j) =
{\n\t\t\t\tresult.push(eccs[j][i]);\n\t\t\t}\n\t\t}\n\t\treturn =
result;\n\t};\n\n\t// auguments BCH(p+q,q) code to the polynomial over =
GF(2), given the proper\n\t// genpoly. the both input and output are in =
binary numbers, and unlike\n\t// calculateecc genpoly should include the =
1 bit for the highest degree.\n\t//\n\t// actual polynomials used for =
this procedure are as follows:\n\t// - p=3D10, q=3D5, =
genpoly=3Dx^10+x^8+x^5+x^4+x^2+x+1 (JIS X 0510:2004 Appendix C)\n\t// - =
p=3D18, q=3D6, genpoly=3Dx^12+x^11+x^10+x^9+x^8+x^5+x^2+1 (ibid. =
Appendix D)\n\tvar augumentbch =3D function(poly, p, genpoly, q) =
{\n\t\tvar modulus =3D poly &lt;&lt; q;\n\t\tfor (var i =3D p - 1; i =
&gt;=3D 0; --i) {\n\t\t\tif ((modulus &gt;&gt; (q+i)) &amp; 1) modulus =
^=3D genpoly &lt;&lt; i;\n\t\t}\n\t\treturn (poly &lt;&lt; q) | =
modulus;\n\t};\n\n\t// creates the base matrix for given version. it =
returns two matrices, one of\n\t// them is the actual one and the =
another represents the \"reserved\" portion\n\t// (e.g. finder and =
timing patterns) of the matrix.\n\t//\n\t// some entries in the matrix =
may be undefined, rather than 0 or 1. this is\n\t// intentional (no =
initialization needed!), and putdata below will fill\n\t// the remaining =
ones.\n\tvar makebasematrix =3D function(ver) {\n\t\tvar v =3D =
VERSIONS[ver], n =3D getsizebyver(ver);\n\t\tvar matrix =3D [], reserved =
=3D [];\n\t\tfor (var i =3D 0; i &lt; n; ++i) =
{\n\t\t\tmatrix.push([]);\n\t\t\treserved.push([]);\n\t\t}\n\n\t\tvar =
blit =3D function(y, x, h, w, bits) {\n\t\t\tfor (var i =3D 0; i &lt; h; =
++i) {\n\t\t\t\tfor (var j =3D 0; j &lt; w; ++j) =
{\n\t\t\t\t\tmatrix[y+i][x+j] =3D (bits[i] &gt;&gt; j) &amp; =
1;\n\t\t\t\t\treserved[y+i][x+j] =3D =
1;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t// finder patterns and a part of =
timing patterns\n\t\t// will also mark the format information area (not =
yet written) as reserved.\n\t\tblit(0, 0, 9, 9, [0x7f, 0x41, 0x5d, 0x5d, =
0x5d, 0x41, 0x17f, 0x00, 0x40]);\n\t\tblit(n-8, 0, 8, 9, [0x100, 0x7f, =
0x41, 0x5d, 0x5d, 0x5d, 0x41, 0x7f]);\n\t\tblit(0, n-8, 9, 8, [0xfe, =
0x82, 0xba, 0xba, 0xba, 0x82, 0xfe, 0x00, 0x00]);\n\n\t\t// the rest of =
timing patterns\n\t\tfor (var i =3D 9; i &lt; n-8; ++i) =
{\n\t\t\tmatrix[6][i] =3D matrix[i][6] =3D ~i &amp; =
1;\n\t\t\treserved[6][i] =3D reserved[i][6] =3D 1;\n\t\t}\n\n\t\t// =
alignment patterns\n\t\tvar aligns =3D v[2], m =3D =
aligns.length;\n\t\tfor (var i =3D 0; i &lt; m; ++i) {\n\t\t\tvar minj =
=3D (i=3D=3D=3D0 || i=3D=3D=3Dm-1 ? 1 : 0), maxj =3D (i=3D=3D=3D0 ? m-1 =
: m);\n\t\t\tfor (var j =3D minj; j &lt; maxj; ++j) =
{\n\t\t\t\tblit(aligns[i], aligns[j], 5, 5, [0x1f, 0x11, 0x15, 0x11, =
0x1f]);\n\t\t\t}\n\t\t}\n\n\t\t// version information\n\t\tif =
(needsverinfo(ver)) {\n\t\t\tvar code =3D augumentbch(ver, 6, 0x1f25, =
12);\n\t\t\tvar k =3D 0;\n\t\t\tfor (var i =3D 0; i &lt; 6; ++i) =
{\n\t\t\t\tfor (var j =3D 0; j &lt; 3; ++j) =
{\n\t\t\t\t\tmatrix[i][(n-11)+j] =3D matrix[(n-11)+j][i] =3D (code =
&gt;&gt; k++) &amp; 1;\n\t\t\t\t\treserved[i][(n-11)+j] =3D =
reserved[(n-11)+j][i] =3D 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn =
{matrix: matrix, reserved: reserved};\n\t};\n\n\t// fills the data =
portion (i.e. unmarked in reserved) of the matrix with given\n\t// code =
words. the size of code words should be no more than available =
bits,\n\t// and remaining bits are padded to 0 (cf. JIS X 0510:2004 sec =
8.7.3).\n\tvar putdata =3D function(matrix, reserved, buf) {\n\t\tvar n =
=3D matrix.length;\n\t\tvar k =3D 0, dir =3D -1;\n\t\tfor (var i =3D =
n-1; i &gt;=3D 0; i -=3D 2) {\n\t\t\tif (i =3D=3D 6) --i; // skip the =
entire timing pattern column\n\t\t\tvar jj =3D (dir &lt; 0 ? n-1 : =
0);\n\t\t\tfor (var j =3D 0; j &lt; n; ++j) {\n\t\t\t\tfor (var ii =3D =
i; ii &gt; i-2; --ii) {\n\t\t\t\t\tif (!reserved[jj][ii]) =
{\n\t\t\t\t\t\t// may overflow, but (undefined &gt;&gt; =
x)\n\t\t\t\t\t\t// is 0 so it will auto-pad to =
zero.\n\t\t\t\t\t\tmatrix[jj][ii] =3D (buf[k &gt;&gt; 3] &gt;&gt; =
(~k&amp;7)) &amp; =
1;\n\t\t\t\t\t\t++k;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tjj +=3D =
dir;\n\t\t\t}\n\t\t\tdir =3D -dir;\n\t\t}\n\t\treturn =
matrix;\n\t};\n\n\t// XOR-masks the data portion of the matrix. =
repeating the call with the same\n\t// arguments will revert the prior =
call (convenient in the matrix evaluation).\n\tvar maskdata =3D =
function(matrix, reserved, mask) {\n\t\tvar maskf =3D =
MASKFUNCS[mask];\n\t\tvar n =3D matrix.length;\n\t\tfor (var i =3D 0; i =
&lt; n; ++i) {\n\t\t\tfor (var j =3D 0; j &lt; n; ++j) {\n\t\t\t\tif =
(!reserved[i][j]) matrix[i][j] ^=3D =
maskf(i,j);\n\t\t\t}\n\t\t}\n\t\treturn matrix;\n\t};\n\n\t// puts the =
format information.\n\tvar putformatinfo =3D function(matrix, reserved, =
ecclevel, mask) {\n\t\tvar n =3D matrix.length;\n\t\tvar code =3D =
augumentbch((ecclevel &lt;&lt; 3) | mask, 5, 0x537, 10) ^ =
0x5412;\n\t\tfor (var i =3D 0; i &lt; 15; ++i) {\n\t\t\tvar r =3D =
[0,1,2,3,4,5,7,8,n-7,n-6,n-5,n-4,n-3,n-2,n-1][i];\n\t\t\tvar c =3D =
[n-1,n-2,n-3,n-4,n-5,n-6,n-7,n-8,7,5,4,3,2,1,0][i];\n\t\t\tmatrix[r][8] =
=3D matrix[8][c] =3D (code &gt;&gt; i) &amp; 1;\n\t\t\t// we don't have =
to mark those bits reserved; always done\n\t\t\t// in makebasematrix =
above.\n\t\t}\n\t\treturn matrix;\n\t};\n\n\t// evaluates the resulting =
matrix and returns the score (lower is better).\n\t// (cf. JIS X =
0510:2004 sec 8.8.2)\n\t//\n\t// the evaluation procedure tries to avoid =
the problematic patterns naturally\n\t// occuring from the original =
matrix. for example, it penaltizes the patterns\n\t// which just look =
like the finder pattern which will confuse the decoder.\n\t// we choose =
the mask which results in the lowest score among 8 possible =
ones.\n\t//\n\t// note: zxing seems to use the same procedure and in =
many cases its choice\n\t// agrees to ours, but sometimes it does not. =
practically it doesn't matter.\n\tvar evaluatematrix =3D =
function(matrix) {\n\t\t// N1+(k-5) points for each consecutive row of k =
same-colored modules,\n\t\t// where k &gt;=3D 5. no overlapping row =
counts.\n\t\tvar PENALTY_CONSECUTIVE =3D 3;\n\t\t// N2 points for each =
2x2 block of same-colored modules.\n\t\t// overlapping block does =
count.\n\t\tvar PENALTY_TWOBYTWO =3D 3;\n\t\t// N3 points for each =
pattern with &gt;4W:1B:1W:3B:1W:1B or\n\t\t// 1B:1W:3B:1W:1B:&gt;4W, or =
their multiples (e.g. highly unlikely,\n\t\t// but 13W:3B:3W:9B:3W:3B =
counts).\n\t\tvar PENALTY_FINDERLIKE =3D 40;\n\t\t// N4*k points for =
every (5*k)% deviation from 50% black density.\n\t\t// i.e. k=3D1 for =
55~60% and 40~45%, k=3D2 for 60~65% and 35~40%, etc.\n\t\tvar =
PENALTY_DENSITY =3D 10;\n\n\t\tvar evaluategroup =3D function(groups) { =
// assumes [W,B,W,B,W,...,B,W]\n\t\t\tvar score =3D 0;\n\t\t\tfor (var i =
=3D 0; i &lt; groups.length; ++i) {\n\t\t\t\tif (groups[i] &gt;=3D 5) =
score +=3D PENALTY_CONSECUTIVE + (groups[i]-5);\n\t\t\t}\n\t\t\tfor (var =
i =3D 5; i &lt; groups.length; i +=3D 2) {\n\t\t\t\tvar p =3D =
groups[i];\n\t\t\t\tif (groups[i-1] =3D=3D p &amp;&amp; groups[i-2] =
=3D=3D 3*p &amp;&amp; groups[i-3] =3D=3D p =
&amp;&amp;\n\t\t\t\t\t\tgroups[i-4] =3D=3D p &amp;&amp; (groups[i-5] =
&gt;=3D 4*p || groups[i+1] &gt;=3D 4*p)) {\n\t\t\t\t\t// this part =
differs from zxing...\n\t\t\t\t\tscore +=3D =
PENALTY_FINDERLIKE;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn =
score;\n\t\t};\n\n\t\tvar n =3D matrix.length;\n\t\tvar score =3D 0, =
nblacks =3D 0;\n\t\tfor (var i =3D 0; i &lt; n; ++i) {\n\t\t\tvar row =
=3D matrix[i];\n\t\t\tvar groups;\n\n\t\t\t// evaluate the current =
row\n\t\t\tgroups =3D [0]; // the first empty group of white\n\t\t\tfor =
(var j =3D 0; j &lt; n; ) {\n\t\t\t\tvar k;\n\t\t\t\tfor (k =3D 0; j =
&lt; n &amp;&amp; row[j]; ++k) =
++j;\n\t\t\t\tgroups.push(k);\n\t\t\t\tfor (k =3D 0; j &lt; n &amp;&amp; =
!row[j]; ++k) ++j;\n\t\t\t\tgroups.push(k);\n\t\t\t}\n\t\t\tscore +=3D =
evaluategroup(groups);\n\n\t\t\t// evaluate the current =
column\n\t\t\tgroups =3D [0];\n\t\t\tfor (var j =3D 0; j &lt; n; ) =
{\n\t\t\t\tvar k;\n\t\t\t\tfor (k =3D 0; j &lt; n &amp;&amp; =
matrix[j][i]; ++k) ++j;\n\t\t\t\tgroups.push(k);\n\t\t\t\tfor (k =3D 0; =
j &lt; n &amp;&amp; !matrix[j][i]; ++k) =
++j;\n\t\t\t\tgroups.push(k);\n\t\t\t}\n\t\t\tscore +=3D =
evaluategroup(groups);\n\n\t\t\t// check the 2x2 box and calculate the =
density\n\t\t\tvar nextrow =3D matrix[i+1] || [];\n\t\t\tnblacks +=3D =
row[0];\n\t\t\tfor (var j =3D 1; j &lt; n; ++j) {\n\t\t\t\tvar p =3D =
row[j];\n\t\t\t\tnblacks +=3D p;\n\t\t\t\t// at least comparison with =
next row should be strict...\n\t\t\t\tif (row[j-1] =3D=3D p &amp;&amp; =
nextrow[j] =3D=3D=3D p &amp;&amp; nextrow[j-1] =3D=3D=3D p) =
{\n\t\t\t\t\tscore +=3D =
PENALTY_TWOBYTWO;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tscore +=3D =
PENALTY_DENSITY * ((Math.abs(nblacks / n / n - 0.5) / 0.05) | =
0);\n\t\treturn score;\n\t};\n\n\t// returns the fully encoded QR code =
matrix which contains given data.\n\t// it also chooses the best mask =
automatically when mask is -1.\n\tvar generate =3D function(data, ver, =
mode, ecclevel, mask) {\n\t\tvar v =3D VERSIONS[ver];\n\t\tvar buf =3D =
encode(ver, mode, data, ndatabits(ver, ecclevel) &gt;&gt; 3);\n\t\tbuf =
=3D augumenteccs(buf, v[1][ecclevel], =
GF256_GENPOLY[v[0][ecclevel]]);\n\n\t\tvar result =3D =
makebasematrix(ver);\n\t\tvar matrix =3D result.matrix, reserved =3D =
result.reserved;\n\t\tputdata(matrix, reserved, buf);\n\n\t\tif (mask =
&lt; 0) {\n\t\t\t// find the best mask\n\t\t\tmaskdata(matrix, reserved, =
0);\n\t\t\tputformatinfo(matrix, reserved, ecclevel, 0);\n\t\t\tvar =
bestmask =3D 0, bestscore =3D =
evaluatematrix(matrix);\n\t\t\tmaskdata(matrix, reserved, 0);\n\t\t\tfor =
(mask =3D 1; mask &lt; 8; ++mask) {\n\t\t\t\tmaskdata(matrix, reserved, =
mask);\n\t\t\t\tputformatinfo(matrix, reserved, ecclevel, =
mask);\n\t\t\t\tvar score =3D evaluatematrix(matrix);\n\t\t\t\tif =
(bestscore &gt; score) {\n\t\t\t\t\tbestscore =3D =
score;\n\t\t\t\t\tbestmask =3D =
mask;\n\t\t\t\t}\n\t\t\t\tmaskdata(matrix, reserved, =
mask);\n\t\t\t}\n\t\t\tmask =3D bestmask;\n\t\t}\n\n\t\tmaskdata(matrix, =
reserved, mask);\n\t\tputformatinfo(matrix, reserved, ecclevel, =
mask);\n\t\treturn matrix;\n\t};\n\n\t// the public interface is =
trivial; the options available are as follows:\n\t//\n\t// - version: an =
integer in [1,40]. when omitted (or -1) the smallest possible\n\t//   =
version is chosen.\n\t// - mode: one of 'numeric', 'alphanumeric', =
'octet'. when omitted the smallest\n\t//   possible mode is =
chosen.\n\t// - eccLevel: one of 'L', 'M', 'Q', 'H'. defaults to =
'L'.\n\t// - mask: an integer in [0,7]. when omitted (or -1) the best =
mask is chosen.\n\t//\n\n\tfunction generateFrame(data, options) =
{\n\t\t\tvar MODES =3D {'numeric': MODE_NUMERIC, 'alphanumeric': =
MODE_ALPHANUMERIC,\n\t\t\t\t'octet': MODE_OCTET};\n\t\t\tvar ECCLEVELS =
=3D {'L': ECCLEVEL_L, 'M': ECCLEVEL_M, 'Q': ECCLEVEL_Q,\n\t\t\t\t'H': =
ECCLEVEL_H};\n\n\t\t\toptions =3D options || {};\n\t\t\tvar ver =3D =
options.version || -1;\n\t\t\tvar ecclevel =3D =
ECCLEVELS[(options.eccLevel || 'L').toUpperCase()];\n\t\t\tvar mode =3D =
options.mode ? MODES[options.mode.toLowerCase()] : -1;\n\t\t\tvar mask =
=3D 'mask' in options ? options.mask : -1;\n\n\t\t\tif (mode &lt; 0) =
{\n\t\t\t\tif (typeof data =3D=3D=3D 'string') {\n\t\t\t\t\tif =
(data.match(NUMERIC_REGEXP)) {\n\t\t\t\t\t\tmode =3D =
MODE_NUMERIC;\n\t\t\t\t\t} else if (data.match(ALPHANUMERIC_OUT_REGEXP)) =
{\n\t\t\t\t\t\t// while encode supports case-insensitive encoding, we =
restrict the data to be uppercased when auto-selecting the =
mode.\n\t\t\t\t\t\tmode =3D MODE_ALPHANUMERIC;\n\t\t\t\t\t} else =
{\n\t\t\t\t\t\tmode =3D MODE_OCTET;\n\t\t\t\t\t}\n\t\t\t\t} else =
{\n\t\t\t\t\tmode =3D MODE_OCTET;\n\t\t\t\t}\n\t\t\t} else if (!(mode =
=3D=3D MODE_NUMERIC || mode =3D=3D MODE_ALPHANUMERIC ||\n\t\t\t\t\tmode =
=3D=3D MODE_OCTET)) {\n\t\t\t\tthrow 'invalid or unsupported =
mode';\n\t\t\t}\n\n\t\t\tdata =3D validatedata(mode, data);\n\t\t\tif =
(data =3D=3D=3D null) throw 'invalid data format';\n\n\t\t\tif (ecclevel =
&lt; 0 || ecclevel &gt; 3) throw 'invalid ECC level';\n\n\t\t\tif (ver =
&lt; 0) {\n\t\t\t\tfor (ver =3D 1; ver &lt;=3D 40; ++ver) =
{\n\t\t\t\t\tif (data.length &lt;=3D getmaxdatalen(ver, mode, ecclevel)) =
break;\n\t\t\t\t}\n\t\t\t\tif (ver &gt; 40) throw 'too large data for =
the Qr format';\n\t\t\t} else if (ver &lt; 1 || ver &gt; 40) =
{\n\t\t\t\tthrow 'invalid Qr version! should be between 1 and =
40';\n\t\t\t}\n\n\t\t\tif (mask !=3D -1 &amp;&amp; (mask &lt; 0 || mask =
&gt; 8)) throw 'invalid mask';\n\t        //console.log('version:', ver, =
'mode:', mode, 'ECC:', ecclevel, 'mask:', mask )\n\t\t\treturn =
generate(data, ver, mode, ecclevel, mask);\n\t\t}\n\n\n\t// =
options\n\t// - modulesize: a number. this is a size of each modules in =
pixels, and\n\t//   defaults to 5px.\n\t// - margin: a number. this is a =
size of margin in *modules*, and defaults to\n\t//   4 (white modules). =
the specficiation mandates the margin no less than 4\n\t//   modules, so =
it is better not to alter this value unless you know what\n\t//   you're =
doing.\n\tfunction buildCanvas(data, options) {\n\t   \n\t    var canvas =
=3D [];\n\t    var background =3D data.background || '#fff';\n\t    var =
foreground =3D data.foreground || '#000';\n\t    //var margin =3D =
options.margin || 4;\n\t\tvar matrix =3D generateFrame(data, =
options);\n\t\tvar n =3D matrix.length;\n\t\tvar modSize =3D Math.floor( =
options.fit ? options.fit/n : 5 );\n\t\tvar size =3D n * =
modSize;\n\t\t\n\t    canvas.push({\n\t      type: 'rect',\n\t      x: =
0, y: 0, w: size, h: size, lineWidth: 0, color: background\n\t    =
});\n\t    \n\t\tfor (var i =3D 0; i &lt; n; ++i) {\n\t\t\tfor (var j =
=3D 0; j &lt; n; ++j) {\n\t            if(matrix[i][j]) {\n\t            =
  canvas.push({\n\t                type: 'rect',\n\t                x: =
modSize * i,\n\t                y: modSize * j,\n\t                w: =
modSize,\n\t                h: modSize,\n\t                lineWidth: =
0,\n\t                color: foreground\n\t              });\n\t         =
   }\n\t        }\n\t    }\n\t    \n\t    return {\n\t        canvas: =
canvas,\n\t        size: size\n\t    };\n\t\t\t\n\t}\n\n\tfunction =
measure(node) {\n\t    var cd =3D buildCanvas(node.qr, node);\n\t    =
node._canvas =3D cd.canvas;\n\t    node._width =3D node._height =3D =
node._minWidth =3D node._maxWidth =3D node._minHeight =3D =
node._maxHeight =3D cd.size;\n\t    return =
node;\n\t}\n\n\tmodule.exports =3D {\n\t  measure: =
measure\n\t};\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, =
__webpack_require__) {\n\n\t/* jslint node: true */\n\t'use =
strict';\n\n\tvar TraversalTracker =3D =
__webpack_require__(12);\n\n\t/**\n\t* Creates an instance of =
DocumentContext - a store for current x, y positions and available =
width/height.\n\t* It facilitates column divisions and vertical =
sync\n\t*/\n\tfunction DocumentContext(pageSize, pageMargins) =
{\n\t\tthis.pages =3D [];\n\n\t\tthis.pageMargins =3D =
pageMargins;\n\n\t\tthis.x =3D =
pageMargins.left;\n\t\tthis.availableWidth =3D pageSize.width - =
pageMargins.left - pageMargins.right;\n\t\tthis.availableHeight =3D =
0;\n\t\tthis.page =3D -1;\n\n\t\tthis.snapshots =3D =
[];\n\n\t\tthis.endingCell =3D null;\n\n\t  this.tracker =3D new =
TraversalTracker();\n\n\t\tthis.addPage(pageSize);\n\t}\n\n\tDocumentCont=
ext.prototype.beginColumnGroup =3D function() =
{\n\t\tthis.snapshots.push({\n\t\t\tx: this.x,\n\t\t\ty: =
this.y,\n\t\t\tavailableHeight: =
this.availableHeight,\n\t\t\tavailableWidth: =
this.availableWidth,\n\t\t\tpage: this.page,\n\t\t\tbottomMost: { y: =
this.y, page: this.page },\n\t\t\tendingCell: =
this.endingCell,\n\t\t\tlastColumnWidth: =
this.lastColumnWidth\n\t\t});\n\n\t\tthis.lastColumnWidth =3D =
0;\n\t};\n\n\tDocumentContext.prototype.beginColumn =3D function(width, =
offset, endingCell) {\n\t\tvar saved =3D =
this.snapshots[this.snapshots.length - =
1];\n\n\t\tthis.calculateBottomMost(saved);\n\n\t  this.endingCell =3D =
endingCell;\n\t\tthis.page =3D saved.page;\n\t\tthis.x =3D this.x + =
this.lastColumnWidth + (offset || 0);\n\t\tthis.y =3D =
saved.y;\n\t\tthis.availableWidth =3D width;\t//saved.availableWidth - =
offset;\n\t\tthis.availableHeight =3D =
saved.availableHeight;\n\n\t\tthis.lastColumnWidth =3D =
width;\n\t};\n\n\tDocumentContext.prototype.calculateBottomMost =3D =
function(destContext) {\n\t\tif (this.endingCell) =
{\n\t\t\tthis.saveContextInEndingCell(this.endingCell);\n\t\t\tthis.endin=
gCell =3D null;\n\t\t} else {\n\t\t\tdestContext.bottomMost =3D =
bottomMostContext(this, =
destContext.bottomMost);\n\t\t}\n\t};\n\n\tDocumentContext.prototype.mark=
Ending =3D function(endingCell) {\n\t\tthis.page =3D =
endingCell._columnEndingContext.page;\n\t\tthis.x =3D =
endingCell._columnEndingContext.x;\n\t\tthis.y =3D =
endingCell._columnEndingContext.y;\n\t\tthis.availableWidth =3D =
endingCell._columnEndingContext.availableWidth;\n\t\tthis.availableHeight=
 =3D =
endingCell._columnEndingContext.availableHeight;\n\t\tthis.lastColumnWidt=
h =3D =
endingCell._columnEndingContext.lastColumnWidth;\n\t};\n\n\tDocumentConte=
xt.prototype.saveContextInEndingCell =3D function(endingCell) =
{\n\t\tendingCell._columnEndingContext =3D {\n\t\t\tpage: =
this.page,\n\t\t\tx: this.x,\n\t\t\ty: this.y,\n\t\t\tavailableHeight: =
this.availableHeight,\n\t\t\tavailableWidth: =
this.availableWidth,\n\t\t\tlastColumnWidth: =
this.lastColumnWidth\n\t\t};\n\t};\n\n\tDocumentContext.prototype.complet=
eColumnGroup =3D function() {\n\t\tvar saved =3D =
this.snapshots.pop();\n\n\t\tthis.calculateBottomMost(saved);\n\n\t\tthis=
.endingCell =3D null;\n\t\tthis.x =3D saved.x;\n\t\tthis.y =3D =
saved.bottomMost.y;\n\t\tthis.page =3D =
saved.bottomMost.page;\n\t\tthis.availableWidth =3D =
saved.availableWidth;\n\t\tthis.availableHeight =3D =
saved.bottomMost.availableHeight;\n\t\tthis.lastColumnWidth =3D =
saved.lastColumnWidth;\n\t};\n\n\tDocumentContext.prototype.addMargin =
=3D function(left, right) {\n\t\tthis.x +=3D =
left;\n\t\tthis.availableWidth -=3D left + (right || =
0);\n\t};\n\n\tDocumentContext.prototype.moveDown =3D function(offset) =
{\n\t\tthis.y +=3D offset;\n\t\tthis.availableHeight -=3D =
offset;\n\n\t\treturn this.availableHeight &gt; =
0;\n\t};\n\n\tDocumentContext.prototype.initializePage =3D function() =
{\n\t\tthis.y =3D this.pageMargins.top;\n\t\tthis.availableHeight =3D =
this.getCurrentPage().pageSize.height - this.pageMargins.top - =
this.pageMargins.bottom;\n\t\tthis.pageSnapshot().availableWidth =3D =
this.getCurrentPage().pageSize.width - this.pageMargins.left - =
this.pageMargins.right;\n\t};\n\n\tDocumentContext.prototype.pageSnapshot=
 =3D function(){\n\t  if(this.snapshots[0]){\n\t    return =
this.snapshots[0];\n\t  } else {\n\t    return this;\n\t  =
}\n\t};\n\n\tDocumentContext.prototype.moveTo =3D function(x,y) =
{\n\t\tif(x !=3D=3D undefined &amp;&amp; x !=3D=3D null) {\n\t\t\tthis.x =
=3D x;\n\t\t\tthis.availableWidth =3D =
this.getCurrentPage().pageSize.width - this.x - =
this.pageMargins.right;\n\t\t}\n\t\tif(y !=3D=3D undefined &amp;&amp; y =
!=3D=3D null){\n\t\t\tthis.y =3D y;\n\t\t\tthis.availableHeight =3D =
this.getCurrentPage().pageSize.height - this.y - =
this.pageMargins.bottom;\n\t\t}\n\t};\n\n\tDocumentContext.prototype.begi=
nDetachedBlock =3D function() {\n\t\tthis.snapshots.push({\n\t\t\tx: =
this.x,\n\t\t\ty: this.y,\n\t\t\tavailableHeight: =
this.availableHeight,\n\t\t\tavailableWidth: =
this.availableWidth,\n\t\t\tpage: this.page,\n\t\t\tendingCell: =
this.endingCell,\n\t\t\tlastColumnWidth: =
this.lastColumnWidth\n\t\t});\n\t};\n\n\tDocumentContext.prototype.endDet=
achedBlock =3D function() {\n\t\tvar saved =3D =
this.snapshots.pop();\n\n\t\tthis.x =3D saved.x;\n\t\tthis.y =3D =
saved.y;\n\t\tthis.availableWidth =3D =
saved.availableWidth;\n\t\tthis.availableHeight =3D =
saved.availableHeight;\n\t\tthis.page =3D =
saved.page;\n\t\tthis.endingCell =3D =
saved.endingCell;\n\t\tthis.lastColumnWidth =3D =
saved.lastColumnWidth;\n\t};\n\n\tfunction =
pageOrientation(pageOrientationString, =
currentPageOrientation){\n\t\tif(pageOrientationString =3D=3D=3D =
undefined) {\n\t\t\treturn currentPageOrientation;\n\t\t} else =
if(pageOrientationString =3D=3D=3D 'landscape'){\n\t\t\treturn =
'landscape';\n\t\t} else {\n\t\t\treturn =
'portrait';\n\t\t}\n\t}\n\n\tvar getPageSize =3D function (currentPage, =
newPageOrientation) {\n\n\t\tnewPageOrientation =3D =
pageOrientation(newPageOrientation, =
currentPage.pageSize.orientation);\n\n\t\tif(newPageOrientation !=3D=3D =
currentPage.pageSize.orientation) {\n\t\t\treturn =
{\n\t\t\t\torientation: newPageOrientation,\n\t\t\t\twidth: =
currentPage.pageSize.height,\n\t\t\t\theight: =
currentPage.pageSize.width\n\t\t\t};\n\t\t} else {\n\t\t\treturn =
{\n\t\t\t\torientation: =
currentPage.pageSize.orientation,\n\t\t\t\twidth: =
currentPage.pageSize.width,\n\t\t\t\theight: =
currentPage.pageSize.height\n\t\t\t};\n\t\t}\n\n\t};\n\n\n\tDocumentConte=
xt.prototype.moveToNextPage =3D function(pageOrientation) {\n\t\tvar =
nextPageIndex =3D this.page + 1;\n\n\t\tvar prevPage =3D =
this.page;\n\t\tvar prevY =3D this.y;\n\n\t\tvar createNewPage =3D =
nextPageIndex &gt;=3D this.pages.length;\n\t\tif (createNewPage) =
{\n\t\t\tthis.addPage(getPageSize(this.getCurrentPage(), =
pageOrientation));\n\t\t} else {\n\t\t\tthis.page =3D =
nextPageIndex;\n\t\t\tthis.initializePage();\n\t\t}\n\n\t  return =
{\n\t\t\tnewPageCreated: createNewPage,\n\t\t\tprevPage: =
prevPage,\n\t\t\tprevY: prevY,\n\t\t\ty: =
this.y\n\t\t};\n\t};\n\n\n\tDocumentContext.prototype.addPage =3D =
function(pageSize) {\n\t\tvar page =3D { items: [], pageSize: pageSize =
};\n\t\tthis.pages.push(page);\n\t\tthis.page =3D this.pages.length - =
1;\n\t\tthis.initializePage();\n\n\t\tthis.tracker.emit('pageAdded');\n\n=
\t\treturn page;\n\t};\n\n\tDocumentContext.prototype.getCurrentPage =3D =
function() {\n\t\tif (this.page &lt; 0 || this.page &gt;=3D =
this.pages.length) return null;\n\n\t\treturn =
this.pages[this.page];\n\t};\n\n\tDocumentContext.prototype.getCurrentPos=
ition =3D function() {\n\t  var pageSize =3D =
this.getCurrentPage().pageSize;\n\t  var innerHeight =3D pageSize.height =
- this.pageMargins.top - this.pageMargins.bottom;\n\t  var innerWidth =
=3D pageSize.width - this.pageMargins.left - =
this.pageMargins.right;\n\n\t  return {\n\t    pageNumber: this.page + =
1,\n\t    pageOrientation: pageSize.orientation,\n\t    pageInnerHeight: =
innerHeight,\n\t    pageInnerWidth: innerWidth,\n\t    left: this.x,\n\t =
   top: this.y,\n\t    verticalRatio: ((this.y - this.pageMargins.top) / =
innerHeight),\n\t    horizontalRatio: ((this.x - this.pageMargins.left) =
/ innerWidth)\n\t  };\n\t};\n\n\tfunction bottomMostContext(c1, c2) =
{\n\t\tvar r;\n\n\t\tif (c1.page &gt; c2.page) r =3D c1;\n\t\telse if =
(c2.page &gt; c1.page) r =3D c2;\n\t\telse r =3D (c1.y &gt; c2.y) ? c1 : =
c2;\n\n\t\treturn {\n\t\t\tpage: r.page,\n\t\t\tx: r.x,\n\t\t\ty: =
r.y,\n\t\t\tavailableHeight: r.availableHeight,\n\t\t\tavailableWidth: =
r.availableWidth\n\t\t};\n\t}\n\n\t/****TESTS**** (add a leading '/' to =
uncomment)\n\tDocumentContext.bottomMostContext =3D =
bottomMostContext;\n\t// */\n\n\tmodule.exports =3D =
DocumentContext;\n\n\n/***/ },\n/* 20 */\n/***/ function(module, =
exports, __webpack_require__) {\n\n\t/* jslint node: true */\n\t'use =
strict';\n\n\tvar ElementWriter =3D =
__webpack_require__(21);\n\n\t/**\n\t* Creates an instance of =
PageElementWriter - an extended ElementWriter\n\t* which can =
handle:\n\t* - page-breaks (it adds new pages when there's not enough =
space left),\n\t* - repeatable fragments (like table-headers, which are =
repeated everytime\n\t*                         a page-break =
occurs)\n\t* - transactions (used for unbreakable-blocks when we want to =
make sure\n\t*                 whole block will be rendered on the same =
page)\n\t*/\n\tfunction PageElementWriter(context, tracker) =
{\n\t\tthis.transactionLevel =3D 0;\n\t\tthis.repeatables =3D =
[];\n\t\tthis.tracker =3D tracker;\n\t\tthis.writer =3D new =
ElementWriter(context, tracker);\n\t}\n\n\tfunction fitOnPage(self, =
addFct){\n\t  var position =3D addFct(self);\n\t  if (!position) {\n\t   =
 self.moveToNextPage();\n\t    position =3D addFct(self);\n\t  }\n\t  =
return position;\n\t}\n\n\tPageElementWriter.prototype.addLine =3D =
function(line, dontUpdateContextPosition, index) {\n\t  return =
fitOnPage(this, function(self){\n\t    return self.writer.addLine(line, =
dontUpdateContextPosition, index);\n\t  =
});\n\t};\n\n\tPageElementWriter.prototype.addImage =3D function(image, =
index) {\n\t  return fitOnPage(this, function(self){\n\t    return =
self.writer.addImage(image, index);\n\t  =
});\n\t};\n\n\tPageElementWriter.prototype.addQr =3D function(qr, index) =
{\n\t  return fitOnPage(this, function(self){\n\t\t\treturn =
self.writer.addQr(qr, =
index);\n\t\t});\n\t};\n\n\tPageElementWriter.prototype.addVector =3D =
function(vector, ignoreContextX, ignoreContextY, index) {\n\t\treturn =
this.writer.addVector(vector, ignoreContextX, ignoreContextY, =
index);\n\t};\n\n\tPageElementWriter.prototype.addFragment =3D =
function(fragment, useBlockXOffset, useBlockYOffset, =
dontUpdateContextPosition) {\n\t\tif (!this.writer.addFragment(fragment, =
useBlockXOffset, useBlockYOffset, dontUpdateContextPosition)) =
{\n\t\t\tthis.moveToNextPage();\n\t\t\tthis.writer.addFragment(fragment, =
useBlockXOffset, useBlockYOffset, =
dontUpdateContextPosition);\n\t\t}\n\t};\n\n\tPageElementWriter.prototype=
.moveToNextPage =3D function(pageOrientation) {\n\t\t\n\t\tvar nextPage =
=3D this.writer.context.moveToNextPage(pageOrientation);\n\t\t\n\t  if =
(nextPage.newPageCreated) =
{\n\t\t\tthis.repeatables.forEach(function(rep) =
{\n\t\t\t\tthis.writer.addFragment(rep, true);\n\t\t\t}, this);\n\t\t} =
else {\n\t\t\tthis.repeatables.forEach(function(rep) =
{\n\t\t\t\tthis.writer.context.moveDown(rep.height);\n\t\t\t}, =
this);\n\t\t}\n\n\t\tthis.writer.tracker.emit('pageChanged', =
{\n\t\t\tprevPage: nextPage.prevPage,\n\t\t\tprevY: =
nextPage.prevY,\n\t\t\ty: =
nextPage.y\n\t\t});\n\t};\n\n\tPageElementWriter.prototype.beginUnbreakab=
leBlock =3D function(width, height) {\n\t\tif (this.transactionLevel++ =
=3D=3D=3D 0) {\n\t\t\tthis.originalX =3D =
this.writer.context.x;\n\t\t\tthis.writer.pushContext(width, =
height);\n\t\t}\n\t};\n\n\tPageElementWriter.prototype.commitUnbreakableB=
lock =3D function(forcedX, forcedY) {\n\t\tif (--this.transactionLevel =
=3D=3D=3D 0) {\n\t\t\tvar unbreakableContext =3D =
this.writer.context;\n\t\t\tthis.writer.popContext();\n\n\t\t\tvar =
nbPages =3D unbreakableContext.pages.length;\n\t\t\tif(nbPages &gt; 0) =
{\n\t\t\t\t// no support for multi-page unbreakableBlocks\n\t\t\t\tvar =
fragment =3D unbreakableContext.pages[0];\n\t\t\t\tfragment.xOffset =3D =
forcedX;\n\t\t\t\tfragment.yOffset =3D forcedY;\n\n\t\t\t\t//TODO: =
vectors can influence height in some situations\n\t\t\t\tif(nbPages &gt; =
1) {\n\t\t\t\t\t// on out-of-context blocs (headers, footers, =
background) height should be the whole DocumentContext =
height\n\t\t\t\t\tif (forcedX !=3D=3D undefined || forcedY !=3D=3D =
undefined) {\n\t\t\t\t\t\tfragment.height =3D =
unbreakableContext.getCurrentPage().pageSize.height - =
unbreakableContext.pageMargins.top - =
unbreakableContext.pageMargins.bottom;\n\t\t\t\t\t} else =
{\n\t\t\t\t\t\tfragment.height =3D =
this.writer.context.getCurrentPage().pageSize.height - =
this.writer.context.pageMargins.top - =
this.writer.context.pageMargins.bottom;\n\t\t\t\t\t\tfor (var i =3D 0, l =
=3D this.repeatables.length; i &lt; l; i++) =
{\n\t\t\t\t\t\t\tfragment.height -=3D =
this.repeatables[i].height;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else =
{\n\t\t\t\t\tfragment.height =3D =
unbreakableContext.y;\n\t\t\t\t}\n\n\t\t\t\tif (forcedX !=3D=3D =
undefined || forcedY !=3D=3D undefined) =
{\n\t\t\t\t\tthis.writer.addFragment(fragment, true, true, =
true);\n\t\t\t\t} else =
{\n\t\t\t\t\tthis.addFragment(fragment);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};=
\n\n\tPageElementWriter.prototype.currentBlockToRepeatable =3D =
function() {\n\t\tvar unbreakableContext =3D =
this.writer.context;\n\t\tvar rep =3D { items: [] };\n\n\t    =
unbreakableContext.pages[0].items.forEach(function(item) {\n\t        =
rep.items.push(item);\n\t    });\n\n\t\trep.xOffset =3D =
this.originalX;\n\n\t\t//TODO: vectors can influence height in some =
situations\n\t\trep.height =3D unbreakableContext.y;\n\n\t\treturn =
rep;\n\t};\n\n\tPageElementWriter.prototype.pushToRepeatables =3D =
function(rep) =
{\n\t\tthis.repeatables.push(rep);\n\t};\n\n\tPageElementWriter.prototype=
.popFromRepeatables =3D function() =
{\n\t\tthis.repeatables.pop();\n\t};\n\n\tPageElementWriter.prototype.con=
text =3D function() {\n\t\treturn =
this.writer.context;\n\t};\n\n\tmodule.exports =3D =
PageElementWriter;\n\n\n/***/ },\n/* 21 */\n/***/ function(module, =
exports, __webpack_require__) {\n\n\t/* jslint node: true */\n\t'use =
strict';\n\n\tvar Line =3D __webpack_require__(22);\n\tvar pack =3D =
__webpack_require__(17).pack;\n\tvar offsetVector =3D =
__webpack_require__(17).offsetVector;\n\tvar DocumentContext =3D =
__webpack_require__(19);\n\n\t/**\n\t* Creates an instance of =
ElementWriter - a line/vector writer, which adds\n\t* elements to =
current page and sets their positions based on the =
context\n\t*/\n\tfunction ElementWriter(context, tracker) =
{\n\t\tthis.context =3D context;\n\t\tthis.contextStack =3D =
[];\n\t\tthis.tracker =3D tracker;\n\t}\n\n\tfunction addPageItem(page, =
item, index) {\n\t\tif(index =3D=3D=3D null || index =3D=3D=3D undefined =
|| index &lt; 0 || index &gt; page.items.length) =
{\n\t\t\tpage.items.push(item);\n\t\t} else =
{\n\t\t\tpage.items.splice(index, 0, =
item);\n\t\t}\n\t}\n\n\tElementWriter.prototype.addLine =3D =
function(line, dontUpdateContextPosition, index) {\n\t\tvar height =3D =
line.getHeight();\n\t\tvar context =3D this.context;\n\t\tvar page =3D =
context.getCurrentPage(),\n\t      position =3D =
this.getCurrentPositionOnPage();\n\n\t\tif (context.availableHeight &lt; =
height || !page) {\n\t\t\treturn false;\n\t\t}\n\n\t\tline.x =3D =
context.x + (line.x || 0);\n\t\tline.y =3D context.y + (line.y || =
0);\n\n\t\tthis.alignLine(line);\n\n\t    addPageItem(page, {\n\t        =
type: 'line',\n\t        item: line\n\t    }, =
index);\n\t\tthis.tracker.emit('lineAdded', line);\n\n\t\tif =
(!dontUpdateContextPosition) context.moveDown(height);\n\n\t\treturn =
position;\n\t};\n\n\tElementWriter.prototype.alignLine =3D =
function(line) {\n\t\tvar width =3D =
this.context.availableWidth;\n\t\tvar lineWidth =3D =
line.getWidth();\n\n\t\tvar alignment =3D line.inlines &amp;&amp; =
line.inlines.length &gt; 0 &amp;&amp; =
line.inlines[0].alignment;\n\n\t\tvar offset =3D =
0;\n\t\tswitch(alignment) {\n\t\t\tcase 'right':\n\t\t\t\toffset =3D =
width - lineWidth;\n\t\t\t\tbreak;\n\t\t\tcase 'center':\n\t\t\t\toffset =
=3D (width - lineWidth) / 2;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (offset) =
{\n\t\t\tline.x =3D (line.x || 0) + offset;\n\t\t}\n\n\t\tif (alignment =
=3D=3D=3D 'justify' &amp;&amp;\n\t\t\t!line.newLineForced =
&amp;&amp;\n\t\t\t!line.lastLineInParagraph =
&amp;&amp;\n\t\t\tline.inlines.length &gt; 1) {\n\t\t\tvar =
additionalSpacing =3D (width - lineWidth) / (line.inlines.length - =
1);\n\n\t\t\tfor(var i =3D 1, l =3D line.inlines.length; i &lt; l; i++) =
{\n\t\t\t\toffset =3D i * =
additionalSpacing;\n\n\t\t\t\tline.inlines[i].x +=3D =
offset;\n\t\t\t}\n\t\t}\n\t};\n\n\tElementWriter.prototype.addImage =3D =
function(image, index) {\n\t\tvar context =3D this.context;\n\t\tvar =
page =3D context.getCurrentPage(),\n\t      position =3D =
this.getCurrentPositionOnPage();\n\n\t\tif (context.availableHeight &lt; =
image._height || !page) {\n\t\t\treturn false;\n\t\t}\n\n\t\timage.x =3D =
context.x + (image.x || 0);\n\t\timage.y =3D =
context.y;\n\n\t\tthis.alignImage(image);\n\n\t\taddPageItem(page, {\n\t =
       type: 'image',\n\t        item: image\n\t    }, =
index);\n\n\t\tcontext.moveDown(image._height);\n\n\t\treturn =
position;\n\t};\n\n\tElementWriter.prototype.addQr =3D function(qr, =
index) {\n\t\tvar context =3D this.context;\n\t\tvar page =3D =
context.getCurrentPage(),\n\t      position =3D =
this.getCurrentPositionOnPage();\n\n\t\tif (context.availableHeight &lt; =
qr._height || !page) {\n\t\t\treturn false;\n\t\t}\n\n\t\tqr.x =3D =
context.x + (qr.x || 0);\n\t\tqr.y =3D =
context.y;\n\n\t\tthis.alignImage(qr);\n\n\t\tfor (var i=3D0, =
l=3Dqr._canvas.length; i &lt; l; i++) {\n\t\t\tvar vector =3D =
qr._canvas[i];\n\t\t\tvector.x +=3D qr.x;\n\t\t\tvector.y +=3D =
qr.y;\n\t\t\tthis.addVector(vector, true, true, =
index);\n\t\t}\n\n\t\tcontext.moveDown(qr._height);\n\n\t\treturn =
position;\n\t};\n\n\tElementWriter.prototype.alignImage =3D =
function(image) {\n\t\tvar width =3D =
this.context.availableWidth;\n\t\tvar imageWidth =3D =
image._minWidth;\n\t\tvar offset =3D 0;\n\t\tswitch(image._alignment) =
{\n\t\t\tcase 'right':\n\t\t\t\toffset =3D width - =
imageWidth;\n\t\t\t\tbreak;\n\t\t\tcase 'center':\n\t\t\t\toffset =3D =
(width - imageWidth) / 2;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (offset) =
{\n\t\t\timage.x =3D (image.x || 0) + =
offset;\n\t\t}\n\t};\n\n\tElementWriter.prototype.addVector =3D =
function(vector, ignoreContextX, ignoreContextY, index) {\n\t\tvar =
context =3D this.context;\n\t\tvar page =3D =
context.getCurrentPage(),\n\t      position =3D =
this.getCurrentPositionOnPage();\n\n\t\tif (page) =
{\n\t\t\toffsetVector(vector, ignoreContextX ? 0 : context.x, =
ignoreContextY ? 0 : context.y);\n\t        addPageItem(page, {\n\t      =
      type: 'vector',\n\t            item: vector\n\t        }, =
index);\n\t\t\treturn position;\n\t\t}\n\t};\n\n\tfunction =
cloneLine(line) {\n\t\tvar result =3D new =
Line(line.maxWidth);\n\n\t\tfor(var key in line) {\n\t\t\tif =
(line.hasOwnProperty(key)) {\n\t\t\t\tresult[key] =3D =
line[key];\n\t\t\t}\n\t\t}\n\n\t\treturn =
result;\n\t}\n\n\tElementWriter.prototype.addFragment =3D =
function(block, useBlockXOffset, useBlockYOffset, =
dontUpdateContextPosition) {\n\t\tvar ctx =3D this.context;\n\t\tvar =
page =3D ctx.getCurrentPage();\n\n\t\tif (!useBlockXOffset &amp;&amp; =
block.height &gt; ctx.availableHeight) return =
false;\n\n\t\tblock.items.forEach(function(item) {\n\t        =
switch(item.type) {\n\t            case 'line':\n\t                var l =
=3D cloneLine(item.item);\n\n\t                l.x =3D (l.x || 0) + =
(useBlockXOffset ? (block.xOffset || 0) : ctx.x);\n\t                l.y =
=3D (l.y || 0) + (useBlockYOffset ? (block.yOffset || 0) : ctx.y);\n\n\t =
               page.items.push({\n\t                    type: =
'line',\n\t                    item: l\n\t                });\n\t        =
        break;\n\n\t            case 'vector':\n\t                var v =
=3D pack(item.item);\n\n\t                offsetVector(v, =
useBlockXOffset ? (block.xOffset || 0) : ctx.x, useBlockYOffset ? =
(block.yOffset || 0) : ctx.y);\n\t                page.items.push({\n\t  =
                  type: 'vector',\n\t                    item: v\n\t     =
           });\n\t                break;\n\n\t            case =
'image':\n\t                var img =3D pack(item.item);\n\n\t           =
     img.x =3D (img.x || 0) + (useBlockXOffset ? (block.xOffset || 0) : =
ctx.x);\n\t                img.y =3D (img.y || 0) + (useBlockYOffset ? =
(block.yOffset || 0) : ctx.y);\n\n\t                =
page.items.push({\n\t                    type: 'image',\n\t              =
      item: img\n\t                });\n\t                break;\n\t     =
   }\n\t\t});\n\n\t\tif (!dontUpdateContextPosition) =
ctx.moveDown(block.height);\n\n\t\treturn true;\n\t};\n\n\t/**\n\t* =
Pushes the provided context onto the stack or creates a new =
one\n\t*\n\t* pushContext(context) - pushes the provided context and =
makes it current\n\t* pushContext(width, height) - creates and pushes a =
new context with the specified width and height\n\t* pushContext() - =
creates a new context for unbreakable blocks (with current =
availableWidth and =
full-page-height)\n\t*/\n\tElementWriter.prototype.pushContext =3D =
function(contextOrWidth, height) {\n\t\tif (contextOrWidth =3D=3D=3D =
undefined) {\n\t\t\theight =3D this.context.getCurrentPage().height - =
this.context.pageMargins.top - =
this.context.pageMargins.bottom;\n\t\t\tcontextOrWidth =3D =
this.context.availableWidth;\n\t\t}\n\n\t\tif (typeof contextOrWidth =
=3D=3D=3D 'number' || contextOrWidth instanceof Number) =
{\n\t\t\tcontextOrWidth =3D new DocumentContext({ width: contextOrWidth, =
height: height }, { left: 0, right: 0, top: 0, bottom: 0 =
});\n\t\t}\n\n\t\tthis.contextStack.push(this.context);\n\t\tthis.context=
 =3D contextOrWidth;\n\t};\n\n\tElementWriter.prototype.popContext =3D =
function() {\n\t\tthis.context =3D =
this.contextStack.pop();\n\t};\n\n\tElementWriter.prototype.getCurrentPos=
itionOnPage =3D function(){\n\t\treturn (this.contextStack[0] || =
this.context).getCurrentPosition();\n\t};\n\n\n\tmodule.exports =3D =
ElementWriter;\n\n\n/***/ },\n/* 22 */\n/***/ function(module, exports) =
{\n\n\t/* jslint node: true */\n\t'use strict';\n\n\t/**\n\t* Creates an =
instance of Line\n\t*\n\t* @constructor\n\t* @this {Line}\n\t* @param =
{Number} Maximum width this line can have\n\t*/\n\tfunction =
Line(maxWidth) {\n\t\tthis.maxWidth =3D maxWidth;\n\t\tthis.leadingCut =
=3D 0;\n\t\tthis.trailingCut =3D 0;\n\t\tthis.inlineWidths =3D =
0;\n\t\tthis.inlines =3D [];\n\t}\n\n\tLine.prototype.getAscenderHeight =
=3D function() {\n\t\tvar y =3D =
0;\n\n\t\tthis.inlines.forEach(function(inline) {\n\t\t\ty =3D =
Math.max(y, inline.font.ascender / 1000 * =
inline.fontSize);\n\t\t});\n\t\treturn =
y;\n\t};\n\n\tLine.prototype.hasEnoughSpaceForInline =3D =
function(inline) {\n\t\tif (this.inlines.length =3D=3D=3D 0) return =
true;\n\t\tif (this.newLineForced) return false;\n\n\t\treturn =
this.inlineWidths + inline.width - this.leadingCut - (inline.trailingCut =
|| 0) &lt;=3D this.maxWidth;\n\t};\n\n\tLine.prototype.addInline =3D =
function(inline) {\n\t\tif (this.inlines.length =3D=3D=3D 0) =
{\n\t\t\tthis.leadingCut =3D inline.leadingCut || =
0;\n\t\t}\n\t\tthis.trailingCut =3D inline.trailingCut || =
0;\n\n\t\tinline.x =3D this.inlineWidths - =
this.leadingCut;\n\n\t\tthis.inlines.push(inline);\n\t\tthis.inlineWidths=
 +=3D inline.width;\n\n\t\tif (inline.lineEnd) =
{\n\t\t\tthis.newLineForced =3D =
true;\n\t\t}\n\t};\n\n\tLine.prototype.getWidth =3D function() =
{\n\t\treturn this.inlineWidths - this.leadingCut - =
this.trailingCut;\n\t};\n\n\t/**\n\t* Returns line height\n\t* @return =
{Number}\n\t*/\n\tLine.prototype.getHeight =3D function() {\n\t\tvar max =
=3D 0;\n\n\t\tthis.inlines.forEach(function(item) {\n\t\t\tmax =3D =
Math.max(max, item.height || 0);\n\t\t});\n\n\t\treturn =
max;\n\t};\n\n\tmodule.exports =3D Line;\n\n\n/***/ },\n/* 23 */\n/***/ =
function(module, exports, __webpack_require__) {\n\n\t/* jslint node: =
true */\n\t'use strict';\n\n\tvar ColumnCalculator =3D =
__webpack_require__(16);\n\n\tfunction TableProcessor(tableNode) {\n\t  =
this.tableNode =3D =
tableNode;\n\t}\n\n\tTableProcessor.prototype.beginTable =3D =
function(writer) {\n\t  var tableNode;\n\t  var availableWidth;\n\t  var =
self =3D this;\n\n\t  tableNode =3D this.tableNode;\n\t  this.offsets =
=3D tableNode._offsets;\n\t  this.layout =3D tableNode._layout;\n\n\t  =
availableWidth =3D writer.context().availableWidth - =
this.offsets.total;\n\t  =
ColumnCalculator.buildColumnWidths(tableNode.table.widths, =
availableWidth);\n\n\t  this.tableWidth =3D tableNode._offsets.total + =
getTableInnerContentWidth();\n\t  this.rowSpanData =3D =
prepareRowSpanData();\n\t  this.cleanUpRepeatables =3D false;\n\n\t  =
this.headerRows =3D tableNode.table.headerRows || 0;\n\t  =
this.rowsWithoutPageBreak =3D this.headerRows + =
(tableNode.table.keepWithHeaderRows || 0);\n\t  this.dontBreakRows =3D =
tableNode.table.dontBreakRows || false;\n\n\t  if =
(this.rowsWithoutPageBreak) {\n\t    writer.beginUnbreakableBlock();\n\t =
 }\n\n\t  this.drawHorizontalLine(0, writer);\n\n\t  function =
getTableInnerContentWidth() {\n\t    var width =3D 0;\n\n\t    =
tableNode.table.widths.forEach(function(w) {\n\t      width +=3D =
w._calcWidth;\n\t    });\n\n\t    return width;\n\t  }\n\n\t  function =
prepareRowSpanData() {\n\t    var rsd =3D [];\n\t    var x =3D 0;\n\t    =
var lastWidth =3D 0;\n\n\t    rsd.push({ left: 0, rowSpan: 0 });\n\n\t   =
 for(var i =3D 0, l =3D self.tableNode.table.body[0].length; i &lt; l; =
i++) {\n\t      var paddings =3D self.layout.paddingLeft(i, =
self.tableNode) + self.layout.paddingRight(i, self.tableNode);\n\t      =
var lBorder =3D self.layout.vLineWidth(i, self.tableNode);\n\t      =
lastWidth =3D paddings + lBorder + =
self.tableNode.table.widths[i]._calcWidth;\n\t      rsd[rsd.length - =
1].width =3D lastWidth;\n\t      x +=3D lastWidth;\n\t      rsd.push({ =
left: x, rowSpan: 0, width: 0 });\n\t    }\n\n\t    return rsd;\n\t  =
}\n\t};\n\n\tTableProcessor.prototype.onRowBreak =3D function(rowIndex, =
writer) {\n\t  var self =3D this;\n\t  return function() {\n\t    =
//console.log('moving by : ', topLineWidth, rowPaddingTop);\n\t    var =
offset =3D self.rowPaddingTop + (!self.headerRows ? self.topLineWidth : =
0);\n\t    writer.context().moveDown(offset);\n\t  =
};\n\n\t};\n\n\tTableProcessor.prototype.beginRow =3D function(rowIndex, =
writer) {\n\t  this.topLineWidth =3D this.layout.hLineWidth(rowIndex, =
this.tableNode);\n\t  this.rowPaddingTop =3D =
this.layout.paddingTop(rowIndex, this.tableNode);\n\t  =
this.bottomLineWidth =3D this.layout.hLineWidth(rowIndex+1, =
this.tableNode);\n\t  this.rowPaddingBottom =3D =
this.layout.paddingBottom(rowIndex, this.tableNode);\n\n\t  =
this.rowCallback =3D this.onRowBreak(rowIndex, writer);\n\t  =
writer.tracker.startTracking('pageChanged', this.rowCallback );\n\t    =
if(this.dontBreakRows) {\n\t        writer.beginUnbreakableBlock();\n\t  =
  }\n\t  this.rowTopY =3D writer.context().y;\n\t  this.reservedAtBottom =
=3D this.bottomLineWidth + this.rowPaddingBottom;\n\n\t  =
writer.context().availableHeight -=3D this.reservedAtBottom;\n\n\t  =
writer.context().moveDown(this.rowPaddingTop);\n\t};\n\n\tTableProcessor.=
prototype.drawHorizontalLine =3D function(lineIndex, writer, overrideY) =
{\n\t  var lineWidth =3D this.layout.hLineWidth(lineIndex, =
this.tableNode);\n\t  if (lineWidth) {\n\t    var offset =3D lineWidth / =
2;\n\t    var currentLine =3D null;\n\n\t    for(var i =3D 0, l =3D =
this.rowSpanData.length; i &lt; l; i++) {\n\t      var data =3D =
this.rowSpanData[i];\n\t      var shouldDrawLine =3D =
!data.rowSpan;\n\n\t      if (!currentLine &amp;&amp; shouldDrawLine) =
{\n\t        currentLine =3D { left: data.left, width: 0 };\n\t      =
}\n\n\t      if (shouldDrawLine) {\n\t        currentLine.width +=3D =
(data.width || 0);\n\t      }\n\n\t      var y =3D (overrideY || 0) + =
offset;\n\n\t      if (!shouldDrawLine || i =3D=3D=3D l - 1) {\n\t       =
 if (currentLine) {\n\t          writer.addVector({\n\t            type: =
'line',\n\t            x1: currentLine.left,\n\t            x2: =
currentLine.left + currentLine.width,\n\t            y1: y,\n\t          =
  y2: y,\n\t            lineWidth: lineWidth,\n\t            lineColor: =
typeof this.layout.hLineColor =3D=3D=3D 'function' ? =
this.layout.hLineColor(lineIndex, this.tableNode) : =
this.layout.hLineColor\n\t          }, false, overrideY);\n\t          =
currentLine =3D null;\n\t        }\n\t      }\n\t    }\n\n\t    =
writer.context().moveDown(lineWidth);\n\t  =
}\n\t};\n\n\tTableProcessor.prototype.drawVerticalLine =3D function(x, =
y0, y1, vLineIndex, writer) {\n\t  var width =3D =
this.layout.vLineWidth(vLineIndex, this.tableNode);\n\t  if (width =
=3D=3D=3D 0) return;\n\t  writer.addVector({\n\t    type: 'line',\n\t    =
x1: x + width/2,\n\t    x2: x + width/2,\n\t    y1: y0,\n\t    y2: =
y1,\n\t    lineWidth: width,\n\t    lineColor: typeof =
this.layout.vLineColor =3D=3D=3D 'function' ? =
this.layout.vLineColor(vLineIndex, this.tableNode) : =
this.layout.vLineColor\n\t  }, false, =
true);\n\t};\n\n\tTableProcessor.prototype.endTable =3D function(writer) =
{\n\t  if (this.cleanUpRepeatables) {\n\t    =
writer.popFromRepeatables();\n\t  =
}\n\t};\n\n\tTableProcessor.prototype.endRow =3D function(rowIndex, =
writer, pageBreaks) {\n\t    var l, i;\n\t    var self =3D this;\n\t    =
writer.tracker.stopTracking('pageChanged', this.rowCallback);\n\t    =
writer.context().moveDown(this.layout.paddingBottom(rowIndex, =
this.tableNode));\n\t    writer.context().availableHeight +=3D =
this.reservedAtBottom;\n\n\t    var endingPage =3D =
writer.context().page;\n\t    var endingY =3D writer.context().y;\n\n\t  =
  var xs =3D getLineXs();\n\n\t    var ys =3D [];\n\n\t    var hasBreaks =
=3D pageBreaks &amp;&amp; pageBreaks.length &gt; 0;\n\n\t    =
ys.push({\n\t      y0: this.rowTopY,\n\t      page: hasBreaks ? =
pageBreaks[0].prevPage : endingPage\n\t    });\n\n\t    if (hasBreaks) =
{\n\t      for(i =3D 0, l =3D pageBreaks.length; i &lt; l; i++) {\n\t    =
    var pageBreak =3D pageBreaks[i];\n\t        ys[ys.length - 1].y1 =3D =
pageBreak.prevY;\n\n\t        ys.push({y0: pageBreak.y, page: =
pageBreak.prevPage + 1});\n\t      }\n\t    }\n\n\t    ys[ys.length - =
1].y1 =3D endingY;\n\n\t    var skipOrphanePadding =3D (ys[0].y1 - =
ys[0].y0 =3D=3D=3D this.rowPaddingTop);\n\t    for(var yi =3D =
(skipOrphanePadding ? 1 : 0), yl =3D ys.length; yi &lt; yl; yi++) {\n\t  =
    var willBreak =3D yi &lt; ys.length - 1;\n\t      var =
rowBreakWithoutHeader =3D (yi &gt; 0 &amp;&amp; !this.headerRows);\n\t   =
   var hzLineOffset =3D  rowBreakWithoutHeader ? 0 : =
this.topLineWidth;\n\t      var y1 =3D ys[yi].y0;\n\t      var y2 =3D =
ys[yi].y1;\n\n\t\t\t\tif(willBreak) {\n\t\t\t\t\ty2 =3D y2 + =
this.rowPaddingBottom;\n\t\t\t\t}\n\n\t      if (writer.context().page =
!=3D ys[yi].page) {\n\t        writer.context().page =3D =
ys[yi].page;\n\n\t        //TODO: buggy, availableHeight should be =
updated on every pageChanged event\n\t        // TableProcessor should =
be pageChanged listener, instead of processRow\n\t        =
this.reservedAtBottom =3D 0;\n\t      }\n\n\t      for(i =3D 0, l =3D =
xs.length; i &lt; l; i++) {\n\t        this.drawVerticalLine(xs[i].x, y1 =
- hzLineOffset, y2 + this.bottomLineWidth, xs[i].index, writer);\n\t     =
   if(i &lt; l-1) {\n\t          var colIndex =3D xs[i].index;\n\t       =
   var fillColor=3D  =
this.tableNode.table.body[rowIndex][colIndex].fillColor;\n\t          =
if(fillColor ) {\n\t            var wBorder =3D =
this.layout.vLineWidth(colIndex, this.tableNode);\n\t            var xf =
=3D xs[i].x+wBorder;\n\t            var yf =3D y1 - hzLineOffset;\n\t    =
        writer.addVector({\n\t              type: 'rect',\n\t            =
  x: xf,\n\t              y: yf,\n\t              w: xs[i+1].x-xf,\n\t   =
           h: y2+this.bottomLineWidth-yf,\n\t              lineWidth: =
0,\n\t              color: fillColor\n\t            }, false, true, =
0);\n\t          }\n\t        }\n\t      }\n\n\t      if (willBreak =
&amp;&amp; this.layout.hLineWhenBroken !=3D=3D false) {\n\t        =
this.drawHorizontalLine(rowIndex + 1, writer, y2);\n\t      }\n\t      =
if(rowBreakWithoutHeader &amp;&amp; this.layout.hLineWhenBroken !=3D=3D =
false) {\n\t        this.drawHorizontalLine(rowIndex, writer, y1);\n\t   =
   }\n\t    }\n\n\t    writer.context().page =3D endingPage;\n\t    =
writer.context().y =3D endingY;\n\n\t    var row =3D =
this.tableNode.table.body[rowIndex];\n\t    for(i =3D 0, l =3D =
row.length; i &lt; l; i++) {\n\t      if (row[i].rowSpan) {\n\t        =
this.rowSpanData[i].rowSpan =3D row[i].rowSpan;\n\n\t        // fix =
colSpans\n\t        if (row[i].colSpan &amp;&amp; row[i].colSpan &gt; 1) =
{\n\t          for(var j =3D 1; j &lt; row[i].rowSpan; j++) {\n\t        =
    this.tableNode.table.body[rowIndex + j][i]._colSpan =3D =
row[i].colSpan;\n\t          }\n\t        }\n\t      }\n\n\t      =
if(this.rowSpanData[i].rowSpan &gt; 0) {\n\t        =
this.rowSpanData[i].rowSpan--;\n\t      }\n\t    }\n\n\t    =
this.drawHorizontalLine(rowIndex + 1, writer);\n\n\t    =
if(this.headerRows &amp;&amp; rowIndex =3D=3D=3D this.headerRows - 1) =
{\n\t      this.headerRepeatable =3D =
writer.currentBlockToRepeatable();\n\t    }\n\n\t    =
if(this.dontBreakRows) {\n\t      writer.tracker.auto('pageChanged',\n\t =
       function() {\n\t          self.drawHorizontalLine(rowIndex, =
writer);\n\t        },\n\t        function() {\n\t          =
writer.commitUnbreakableBlock();\n\t          =
self.drawHorizontalLine(rowIndex, writer);\n\t        }\n\t      );\n\t  =
  }\n\n\t    if(this.headerRepeatable &amp;&amp; (rowIndex =3D=3D=3D =
(this.rowsWithoutPageBreak - 1) || rowIndex =3D=3D=3D =
this.tableNode.table.body.length - 1)) {\n\t      =
writer.commitUnbreakableBlock();\n\t      =
writer.pushToRepeatables(this.headerRepeatable);\n\t      =
this.cleanUpRepeatables =3D true;\n\t      this.headerRepeatable =3D =
null;\n\t    }\n\n\t    function getLineXs() {\n\t      var result =3D =
[];\n\t      var cols =3D 0;\n\n\t      for(var i =3D 0, l =3D =
self.tableNode.table.body[rowIndex].length; i &lt; l; i++) {\n\t        =
if (!cols) {\n\t          result.push({ x: self.rowSpanData[i].left, =
index: i});\n\n\t          var item =3D =
self.tableNode.table.body[rowIndex][i];\n\t          cols =3D =
(item._colSpan || item.colSpan || 0);\n\t        }\n\t        if (cols =
&gt; 0) {\n\t          cols--;\n\t        }\n\t      }\n\n\t      =
result.push({ x: self.rowSpanData[self.rowSpanData.length - 1].left, =
index: self.rowSpanData.length - 1});\n\n\t      return result;\n\t    =
}\n\t};\n\n\tmodule.exports =3D TableProcessor;\n\n\n/***/ },\n/* 24 =
*/\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* =
WEBPACK VAR INJECTION */(function(Buffer) {// Generated by CoffeeScript =
1.7.1\n\n\t/*\n\tPDFDocument - represents an entire PDF document\n\tBy =
Devon Govett\n\t */\n\n\t(function() {\n\t  var PDFDocument, PDFObject, =
PDFPage, PDFReference, fs, stream,\n\t    __hasProp =3D =
{}.hasOwnProperty,\n\t    __extends =3D function(child, parent) { for =
(var key in parent) { if (__hasProp.call(parent, key)) child[key] =3D =
parent[key]; } function ctor() { this.constructor =3D child; } =
ctor.prototype =3D parent.prototype; child.prototype =3D new ctor(); =
child.__super__ =3D parent.prototype; return child; };\n\n\t  stream =3D =
__webpack_require__(25);\n\n\t  fs =3D __webpack_require__(44);\n\n\t  =
PDFObject =3D __webpack_require__(45);\n\n\t  PDFReference =3D =
__webpack_require__(46);\n\n\t  PDFPage =3D =
__webpack_require__(64);\n\n\t  PDFDocument =3D (function(_super) {\n\t  =
  var mixin;\n\n\t    __extends(PDFDocument, _super);\n\n\t    function =
PDFDocument(options) {\n\t      var key, val, _ref, _ref1;\n\t      =
this.options =3D options !=3D null ? options : {};\n\t      =
PDFDocument.__super__.constructor.apply(this, arguments);\n\t      =
this.version =3D 1.3;\n\t      this.compress =3D (_ref =3D =
this.options.compress) !=3D null ? _ref : true;\n\t      =
this._pageBuffer =3D [];\n\t      this._pageBufferStart =3D 0;\n\t      =
this._offsets =3D [];\n\t      this._waiting =3D 0;\n\t      this._ended =
=3D false;\n\t      this._offset =3D 0;\n\t      this._root =3D =
this.ref({\n\t        Type: 'Catalog',\n\t        Pages: this.ref({\n\t  =
        Type: 'Pages',\n\t          Count: 0,\n\t          Kids: []\n\t  =
      })\n\t      });\n\t      this.page =3D null;\n\t      =
this.initColor();\n\t      this.initVector();\n\t      =
this.initFonts();\n\t      this.initText();\n\t      =
this.initImages();\n\t      this.info =3D {\n\t        Producer: =
'PDFKit',\n\t        Creator: 'PDFKit',\n\t        CreationDate: new =
Date()\n\t      };\n\t      if (this.options.info) {\n\t        _ref1 =
=3D this.options.info;\n\t        for (key in _ref1) {\n\t          val =
=3D _ref1[key];\n\t          this.info[key] =3D val;\n\t        }\n\t    =
  }\n\t      this._write(\"%PDF-\" + this.version);\n\t      =
this._write(\"%\\xFF\\xFF\\xFF\\xFF\");\n\t      this.addPage();\n\t    =
}\n\n\t    mixin =3D function(methods) {\n\t      var method, name, =
_results;\n\t      _results =3D [];\n\t      for (name in methods) {\n\t =
       method =3D methods[name];\n\t        =
_results.push(PDFDocument.prototype[name] =3D method);\n\t      }\n\t    =
  return _results;\n\t    };\n\n\t    =
mixin(__webpack_require__(65));\n\n\t    =
mixin(__webpack_require__(67));\n\n\t    =
mixin(__webpack_require__(69));\n\n\t    =
mixin(__webpack_require__(89));\n\n\t    =
mixin(__webpack_require__(96));\n\n\t    =
mixin(__webpack_require__(101));\n\n\t    PDFDocument.prototype.addPage =
=3D function(options) {\n\t      var pages;\n\t      if (options =3D=3D =
null) {\n\t        options =3D this.options;\n\t      }\n\t      if =
(!this.options.bufferPages) {\n\t        this.flushPages();\n\t      =
}\n\t      this.page =3D new PDFPage(this, options);\n\t      =
this._pageBuffer.push(this.page);\n\t      pages =3D =
this._root.data.Pages.data;\n\t      =
pages.Kids.push(this.page.dictionary);\n\t      pages.Count++;\n\t      =
this.x =3D this.page.margins.left;\n\t      this.y =3D =
this.page.margins.top;\n\t      this._ctm =3D [1, 0, 0, 1, 0, 0];\n\t    =
  this.transform(1, 0, 0, -1, 0, this.page.height);\n\t      return =
this;\n\t    };\n\n\t    PDFDocument.prototype.bufferedPageRange =3D =
function() {\n\t      return {\n\t        start: =
this._pageBufferStart,\n\t        count: this._pageBuffer.length\n\t     =
 };\n\t    };\n\n\t    PDFDocument.prototype.switchToPage =3D =
function(n) {\n\t      var page;\n\t      if (!(page =3D =
this._pageBuffer[n - this._pageBufferStart])) {\n\t        throw new =
Error(\"switchToPage(\" + n + \") out of bounds, current buffer covers =
pages \" + this._pageBufferStart + \" to \" + (this._pageBufferStart + =
this._pageBuffer.length - 1));\n\t      }\n\t      return this.page =3D =
page;\n\t    };\n\n\t    PDFDocument.prototype.flushPages =3D function() =
{\n\t      var page, pages, _i, _len;\n\t      pages =3D =
this._pageBuffer;\n\t      this._pageBuffer =3D [];\n\t      =
this._pageBufferStart +=3D pages.length;\n\t      for (_i =3D 0, _len =
=3D pages.length; _i &lt; _len; _i++) {\n\t        page =3D =
pages[_i];\n\t        page.end();\n\t      }\n\t    };\n\n\t    =
PDFDocument.prototype.ref =3D function(data) {\n\t      var ref;\n\t     =
 ref =3D new PDFReference(this, this._offsets.length + 1, data);\n\t     =
 this._offsets.push(null);\n\t      this._waiting++;\n\t      return =
ref;\n\t    };\n\n\t    PDFDocument.prototype._read =3D function() =
{};\n\n\t    PDFDocument.prototype._write =3D function(data) {\n\t      =
if (!Buffer.isBuffer(data)) {\n\t        data =3D new Buffer(data + =
'\\n', 'binary');\n\t      }\n\t      this.push(data);\n\t      return =
this._offset +=3D data.length;\n\t    };\n\n\t    =
PDFDocument.prototype.addContent =3D function(data) {\n\t      =
this.page.write(data);\n\t      return this;\n\t    };\n\n\t    =
PDFDocument.prototype._refEnd =3D function(ref) {\n\t      =
this._offsets[ref.id - 1] =3D ref.offset;\n\t      if (--this._waiting =
=3D=3D=3D 0 &amp;&amp; this._ended) {\n\t        this._finalize();\n\t   =
     return this._ended =3D false;\n\t      }\n\t    };\n\n\t    =
PDFDocument.prototype.write =3D function(filename, fn) {\n\t      var =
err;\n\t      err =3D new Error('PDFDocument#write is deprecated, and =
will be removed in a future version of PDFKit. Please pipe the document =
into a Node stream.');\n\t      console.warn(err.stack);\n\t      =
this.pipe(fs.createWriteStream(filename));\n\t      this.end();\n\t      =
return this.once('end', fn);\n\t    };\n\n\t    =
PDFDocument.prototype.output =3D function(fn) {\n\t      throw new =
Error('PDFDocument#output is deprecated, and has been removed from =
PDFKit. Please pipe the document into a Node stream.');\n\t    };\n\n\t  =
  PDFDocument.prototype.end =3D function() {\n\t      var font, key, =
name, val, _ref, _ref1;\n\t      this.flushPages();\n\t      this._info =
=3D this.ref();\n\t      _ref =3D this.info;\n\t      for (key in _ref) =
{\n\t        val =3D _ref[key];\n\t        if (typeof val =3D=3D=3D =
'string') {\n\t          val =3D new String(val);\n\t        }\n\t       =
 this._info.data[key] =3D val;\n\t      }\n\t      this._info.end();\n\t =
     _ref1 =3D this._fontFamilies;\n\t      for (name in _ref1) {\n\t    =
    font =3D _ref1[name];\n\t        font.embed();\n\t      }\n\t      =
this._root.end();\n\t      this._root.data.Pages.end();\n\t      if =
(this._waiting =3D=3D=3D 0) {\n\t        return this._finalize();\n\t    =
  } else {\n\t        return this._ended =3D true;\n\t      }\n\t    =
};\n\n\t    PDFDocument.prototype._finalize =3D function(fn) {\n\t      =
var offset, xRefOffset, _i, _len, _ref;\n\t      xRefOffset =3D =
this._offset;\n\t      this._write(\"xref\");\n\t      this._write(\"0 =
\" + (this._offsets.length + 1));\n\t      this._write(\"0000000000 =
65535 f \");\n\t      _ref =3D this._offsets;\n\t      for (_i =3D 0, =
_len =3D _ref.length; _i &lt; _len; _i++) {\n\t        offset =3D =
_ref[_i];\n\t        offset =3D ('0000000000' + offset).slice(-10);\n\t  =
      this._write(offset + ' 00000 n ');\n\t      }\n\t      =
this._write('trailer');\n\t      this._write(PDFObject.convert({\n\t     =
   Size: this._offsets.length + 1,\n\t        Root: this._root,\n\t      =
  Info: this._info\n\t      }));\n\t      this._write('startxref');\n\t  =
    this._write(\"\" + xRefOffset);\n\t      this._write('%%EOF');\n\t   =
   return this.push(null);\n\t    };\n\n\t    =
PDFDocument.prototype.toString =3D function() {\n\t      return =
\"[object PDFDocument]\";\n\t    };\n\n\t    return PDFDocument;\n\n\t  =
})(stream.Readable);\n\n\t  module.exports =3D =
PDFDocument;\n\n\t}).call(this);\n\n\t/* WEBPACK VAR INJECTION =
*/}.call(exports, __webpack_require__(2).Buffer))\n\n/***/ },\n/* 25 =
*/\n/***/ function(module, exports, __webpack_require__) {\n\n\t// =
Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// =
Permission is hereby granted, free of charge, to any person obtaining =
a\n\t// copy of this software and associated documentation files =
(the\n\t// \"Software\"), to deal in the Software without restriction, =
including\n\t// without limitation the rights to use, copy, modify, =
merge, publish,\n\t// distribute, sublicense, and/or sell copies of the =
Software, and to permit\n\t// persons to whom the Software is furnished =
to do so, subject to the\n\t// following conditions:\n\t//\n\t// The =
above copyright notice and this permission notice shall be =
included\n\t// in all copies or substantial portions of the =
Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT =
WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT =
LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A =
PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE =
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR =
OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// =
OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR =
THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\tmodule.exports =3D =
Stream;\n\n\tvar EE =3D __webpack_require__(26).EventEmitter;\n\tvar =
inherits =3D __webpack_require__(27);\n\n\tinherits(Stream, =
EE);\n\tStream.Readable =3D __webpack_require__(28);\n\tStream.Writable =
=3D __webpack_require__(40);\n\tStream.Duplex =3D =
__webpack_require__(41);\n\tStream.Transform =3D =
__webpack_require__(42);\n\tStream.PassThrough =3D =
__webpack_require__(43);\n\n\t// Backwards-compat with node =
0.4.x\n\tStream.Stream =3D Stream;\n\n\n\n\t// old-style streams.  Note =
that the pipe method (the only relevant\n\t// part of this class) is =
overridden in the Readable class.\n\n\tfunction Stream() {\n\t  =
EE.call(this);\n\t}\n\n\tStream.prototype.pipe =3D function(dest, =
options) {\n\t  var source =3D this;\n\n\t  function ondata(chunk) {\n\t =
   if (dest.writable) {\n\t      if (false =3D=3D=3D dest.write(chunk) =
&amp;&amp; source.pause) {\n\t        source.pause();\n\t      }\n\t    =
}\n\t  }\n\n\t  source.on('data', ondata);\n\n\t  function ondrain() =
{\n\t    if (source.readable &amp;&amp; source.resume) {\n\t      =
source.resume();\n\t    }\n\t  }\n\n\t  dest.on('drain', ondrain);\n\n\t =
 // If the 'end' option is not supplied, dest.end() will be called =
when\n\t  // source gets the 'end' or 'close' events.  Only dest.end() =
once.\n\t  if (!dest._isStdio &amp;&amp; (!options || options.end =
!=3D=3D false)) {\n\t    source.on('end', onend);\n\t    =
source.on('close', onclose);\n\t  }\n\n\t  var didOnEnd =3D false;\n\t  =
function onend() {\n\t    if (didOnEnd) return;\n\t    didOnEnd =3D =
true;\n\n\t    dest.end();\n\t  }\n\n\n\t  function onclose() {\n\t    =
if (didOnEnd) return;\n\t    didOnEnd =3D true;\n\n\t    if (typeof =
dest.destroy =3D=3D=3D 'function') dest.destroy();\n\t  }\n\n\t  // =
don't leave dangling pipes when there are errors.\n\t  function =
onerror(er) {\n\t    cleanup();\n\t    if (EE.listenerCount(this, =
'error') =3D=3D=3D 0) {\n\t      throw er; // Unhandled stream error in =
pipe.\n\t    }\n\t  }\n\n\t  source.on('error', onerror);\n\t  =
dest.on('error', onerror);\n\n\t  // remove all the event listeners that =
were added.\n\t  function cleanup() {\n\t    =
source.removeListener('data', ondata);\n\t    =
dest.removeListener('drain', ondrain);\n\n\t    =
source.removeListener('end', onend);\n\t    =
source.removeListener('close', onclose);\n\n\t    =
source.removeListener('error', onerror);\n\t    =
dest.removeListener('error', onerror);\n\n\t    =
source.removeListener('end', cleanup);\n\t    =
source.removeListener('close', cleanup);\n\n\t    =
dest.removeListener('close', cleanup);\n\t  }\n\n\t  source.on('end', =
cleanup);\n\t  source.on('close', cleanup);\n\n\t  dest.on('close', =
cleanup);\n\n\t  dest.emit('pipe', source);\n\n\t  // Allow for =
unix-like usage: A.pipe(B).pipe(C)\n\t  return dest;\n\t};\n\n\n/***/ =
},\n/* 26 */\n/***/ function(module, exports) {\n\n\t// Copyright =
Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is =
hereby granted, free of charge, to any person obtaining a\n\t// copy of =
this software and associated documentation files (the\n\t// =
\"Software\"), to deal in the Software without restriction, =
including\n\t// without limitation the rights to use, copy, modify, =
merge, publish,\n\t// distribute, sublicense, and/or sell copies of the =
Software, and to permit\n\t// persons to whom the Software is furnished =
to do so, subject to the\n\t// following conditions:\n\t//\n\t// The =
above copyright notice and this permission notice shall be =
included\n\t// in all copies or substantial portions of the =
Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT =
WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT =
LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A =
PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE =
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR =
OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// =
OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR =
THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\tfunction =
EventEmitter() {\n\t  this._events =3D this._events || {};\n\t  =
this._maxListeners =3D this._maxListeners || =
undefined;\n\t}\n\tmodule.exports =3D EventEmitter;\n\n\t// =
Backwards-compat with node 0.10.x\n\tEventEmitter.EventEmitter =3D =
EventEmitter;\n\n\tEventEmitter.prototype._events =3D =
undefined;\n\tEventEmitter.prototype._maxListeners =3D =
undefined;\n\n\t// By default EventEmitters will print a warning if more =
than 10 listeners are\n\t// added to it. This is a useful default which =
helps finding memory leaks.\n\tEventEmitter.defaultMaxListeners =3D =
10;\n\n\t// Obviously not all Emitters should be limited to 10. This =
function allows\n\t// that to be increased. Set to zero for =
unlimited.\n\tEventEmitter.prototype.setMaxListeners =3D function(n) =
{\n\t  if (!isNumber(n) || n &lt; 0 || isNaN(n))\n\t    throw =
TypeError('n must be a positive number');\n\t  this._maxListeners =3D =
n;\n\t  return this;\n\t};\n\n\tEventEmitter.prototype.emit =3D =
function(type) {\n\t  var er, handler, len, args, i, listeners;\n\n\t  =
if (!this._events)\n\t    this._events =3D {};\n\n\t  // If there is no =
'error' event listener then throw.\n\t  if (type =3D=3D=3D 'error') =
{\n\t    if (!this._events.error ||\n\t        =
(isObject(this._events.error) &amp;&amp; !this._events.error.length)) =
{\n\t      er =3D arguments[1];\n\t      if (er instanceof Error) {\n\t  =
      throw er; // Unhandled 'error' event\n\t      }\n\t      throw =
TypeError('Uncaught, unspecified \"error\" event.');\n\t    }\n\t  =
}\n\n\t  handler =3D this._events[type];\n\n\t  if =
(isUndefined(handler))\n\t    return false;\n\n\t  if =
(isFunction(handler)) {\n\t    switch (arguments.length) {\n\t      // =
fast cases\n\t      case 1:\n\t        handler.call(this);\n\t        =
break;\n\t      case 2:\n\t        handler.call(this, arguments[1]);\n\t =
       break;\n\t      case 3:\n\t        handler.call(this, =
arguments[1], arguments[2]);\n\t        break;\n\t      // slower\n\t    =
  default:\n\t        args =3D Array.prototype.slice.call(arguments, =
1);\n\t        handler.apply(this, args);\n\t    }\n\t  } else if =
(isObject(handler)) {\n\t    args =3D =
Array.prototype.slice.call(arguments, 1);\n\t    listeners =3D =
handler.slice();\n\t    len =3D listeners.length;\n\t    for (i =3D 0; i =
&lt; len; i++)\n\t      listeners[i].apply(this, args);\n\t  }\n\n\t  =
return true;\n\t};\n\n\tEventEmitter.prototype.addListener =3D =
function(type, listener) {\n\t  var m;\n\n\t  if =
(!isFunction(listener))\n\t    throw TypeError('listener must be a =
function');\n\n\t  if (!this._events)\n\t    this._events =3D {};\n\n\t  =
// To avoid recursion in the case that type =3D=3D=3D \"newListener\"! =
Before\n\t  // adding it to the listeners, first emit =
\"newListener\".\n\t  if (this._events.newListener)\n\t    =
this.emit('newListener', type,\n\t              =
isFunction(listener.listener) ?\n\t              listener.listener : =
listener);\n\n\t  if (!this._events[type])\n\t    // Optimize the case =
of one listener. Don't need the extra array object.\n\t    =
this._events[type] =3D listener;\n\t  else if =
(isObject(this._events[type]))\n\t    // If we've already got an array, =
just append.\n\t    this._events[type].push(listener);\n\t  else\n\t    =
// Adding the second element, need to change to array.\n\t    =
this._events[type] =3D [this._events[type], listener];\n\n\t  // Check =
for listener leak\n\t  if (isObject(this._events[type]) &amp;&amp; =
!this._events[type].warned) {\n\t    if =
(!isUndefined(this._maxListeners)) {\n\t      m =3D =
this._maxListeners;\n\t    } else {\n\t      m =3D =
EventEmitter.defaultMaxListeners;\n\t    }\n\n\t    if (m &amp;&amp; m =
&gt; 0 &amp;&amp; this._events[type].length &gt; m) {\n\t      =
this._events[type].warned =3D true;\n\t      console.error('(node) =
warning: possible EventEmitter memory ' +\n\t                    'leak =
detected. %d listeners added. ' +\n\t                    'Use =
emitter.setMaxListeners() to increase limit.',\n\t                    =
this._events[type].length);\n\t      if (typeof console.trace =3D=3D=3D =
'function') {\n\t        // not supported in IE 10\n\t        =
console.trace();\n\t      }\n\t    }\n\t  }\n\n\t  return =
this;\n\t};\n\n\tEventEmitter.prototype.on =3D =
EventEmitter.prototype.addListener;\n\n\tEventEmitter.prototype.once =3D =
function(type, listener) {\n\t  if (!isFunction(listener))\n\t    throw =
TypeError('listener must be a function');\n\n\t  var fired =3D =
false;\n\n\t  function g() {\n\t    this.removeListener(type, g);\n\n\t  =
  if (!fired) {\n\t      fired =3D true;\n\t      listener.apply(this, =
arguments);\n\t    }\n\t  }\n\n\t  g.listener =3D listener;\n\t  =
this.on(type, g);\n\n\t  return this;\n\t};\n\n\t// emits a =
'removeListener' event iff the listener was =
removed\n\tEventEmitter.prototype.removeListener =3D function(type, =
listener) {\n\t  var list, position, length, i;\n\n\t  if =
(!isFunction(listener))\n\t    throw TypeError('listener must be a =
function');\n\n\t  if (!this._events || !this._events[type])\n\t    =
return this;\n\n\t  list =3D this._events[type];\n\t  length =3D =
list.length;\n\t  position =3D -1;\n\n\t  if (list =3D=3D=3D listener =
||\n\t      (isFunction(list.listener) &amp;&amp; list.listener =
=3D=3D=3D listener)) {\n\t    delete this._events[type];\n\t    if =
(this._events.removeListener)\n\t      this.emit('removeListener', type, =
listener);\n\n\t  } else if (isObject(list)) {\n\t    for (i =3D length; =
i-- &gt; 0;) {\n\t      if (list[i] =3D=3D=3D listener ||\n\t          =
(list[i].listener &amp;&amp; list[i].listener =3D=3D=3D listener)) {\n\t =
       position =3D i;\n\t        break;\n\t      }\n\t    }\n\n\t    if =
(position &lt; 0)\n\t      return this;\n\n\t    if (list.length =
=3D=3D=3D 1) {\n\t      list.length =3D 0;\n\t      delete =
this._events[type];\n\t    } else {\n\t      list.splice(position, =
1);\n\t    }\n\n\t    if (this._events.removeListener)\n\t      =
this.emit('removeListener', type, listener);\n\t  }\n\n\t  return =
this;\n\t};\n\n\tEventEmitter.prototype.removeAllListeners =3D =
function(type) {\n\t  var key, listeners;\n\n\t  if (!this._events)\n\t  =
  return this;\n\n\t  // not listening for removeListener, no need to =
emit\n\t  if (!this._events.removeListener) {\n\t    if =
(arguments.length =3D=3D=3D 0)\n\t      this._events =3D {};\n\t    else =
if (this._events[type])\n\t      delete this._events[type];\n\t    =
return this;\n\t  }\n\n\t  // emit removeListener for all listeners on =
all events\n\t  if (arguments.length =3D=3D=3D 0) {\n\t    for (key in =
this._events) {\n\t      if (key =3D=3D=3D 'removeListener') =
continue;\n\t      this.removeAllListeners(key);\n\t    }\n\t    =
this.removeAllListeners('removeListener');\n\t    this._events =3D =
{};\n\t    return this;\n\t  }\n\n\t  listeners =3D =
this._events[type];\n\n\t  if (isFunction(listeners)) {\n\t    =
this.removeListener(type, listeners);\n\t  } else if (listeners) {\n\t   =
 // LIFO order\n\t    while (listeners.length)\n\t      =
this.removeListener(type, listeners[listeners.length - 1]);\n\t  }\n\t  =
delete this._events[type];\n\n\t  return =
this;\n\t};\n\n\tEventEmitter.prototype.listeners =3D function(type) =
{\n\t  var ret;\n\t  if (!this._events || !this._events[type])\n\t    =
ret =3D [];\n\t  else if (isFunction(this._events[type]))\n\t    ret =3D =
[this._events[type]];\n\t  else\n\t    ret =3D =
this._events[type].slice();\n\t  return =
ret;\n\t};\n\n\tEventEmitter.prototype.listenerCount =3D function(type) =
{\n\t  if (this._events) {\n\t    var evlistener =3D =
this._events[type];\n\n\t    if (isFunction(evlistener))\n\t      return =
1;\n\t    else if (evlistener)\n\t      return evlistener.length;\n\t  =
}\n\t  return 0;\n\t};\n\n\tEventEmitter.listenerCount =3D =
function(emitter, type) {\n\t  return =
emitter.listenerCount(type);\n\t};\n\n\tfunction isFunction(arg) {\n\t  =
return typeof arg =3D=3D=3D 'function';\n\t}\n\n\tfunction isNumber(arg) =
{\n\t  return typeof arg =3D=3D=3D 'number';\n\t}\n\n\tfunction =
isObject(arg) {\n\t  return typeof arg =3D=3D=3D 'object' &amp;&amp; arg =
!=3D=3D null;\n\t}\n\n\tfunction isUndefined(arg) {\n\t  return arg =
=3D=3D=3D void 0;\n\t}\n\n\n/***/ },\n/* 27 */\n/***/ function(module, =
exports) {\n\n\tif (typeof Object.create =3D=3D=3D 'function') {\n\t  // =
implementation from standard node.js 'util' module\n\t  module.exports =
=3D function inherits(ctor, superCtor) {\n\t    ctor.super_ =3D =
superCtor\n\t    ctor.prototype =3D Object.create(superCtor.prototype, =
{\n\t      constructor: {\n\t        value: ctor,\n\t        enumerable: =
false,\n\t        writable: true,\n\t        configurable: true\n\t      =
}\n\t    });\n\t  };\n\t} else {\n\t  // old school shim for old =
browsers\n\t  module.exports =3D function inherits(ctor, superCtor) =
{\n\t    ctor.super_ =3D superCtor\n\t    var TempCtor =3D function () =
{}\n\t    TempCtor.prototype =3D superCtor.prototype\n\t    =
ctor.prototype =3D new TempCtor()\n\t    ctor.prototype.constructor =3D =
ctor\n\t  }\n\t}\n\n\n/***/ },\n/* 28 */\n/***/ function(module, =
exports, __webpack_require__) {\n\n\texports =3D module.exports =3D =
__webpack_require__(29);\n\texports.Stream =3D =
__webpack_require__(25);\n\texports.Readable =3D =
exports;\n\texports.Writable =3D =
__webpack_require__(36);\n\texports.Duplex =3D =
__webpack_require__(35);\n\texports.Transform =3D =
__webpack_require__(38);\n\texports.PassThrough =3D =
__webpack_require__(39);\n\n\n/***/ },\n/* 29 */\n/***/ function(module, =
exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION =
*/(function(process) {// Copyright Joyent, Inc. and other Node =
contributors.\n\t//\n\t// Permission is hereby granted, free of charge, =
to any person obtaining a\n\t// copy of this software and associated =
documentation files (the\n\t// \"Software\"), to deal in the Software =
without restriction, including\n\t// without limitation the rights to =
use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or =
sell copies of the Software, and to permit\n\t// persons to whom the =
Software is furnished to do so, subject to the\n\t// following =
conditions:\n\t//\n\t// The above copyright notice and this permission =
notice shall be included\n\t// in all copies or substantial portions of =
the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT =
WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT =
LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A =
PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE =
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR =
OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// =
OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR =
THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\tmodule.exports =3D =
Readable;\n\n\t/*&lt;replacement&gt;*/\n\tvar isArray =3D =
__webpack_require__(31);\n\t/*&lt;/replacement&gt;*/\n\n\n\t/*&lt;replace=
ment&gt;*/\n\tvar Buffer =3D =
__webpack_require__(2).Buffer;\n\t/*&lt;/replacement&gt;*/\n\n\tReadable.=
ReadableState =3D ReadableState;\n\n\tvar EE =3D =
__webpack_require__(26).EventEmitter;\n\n\t/*&lt;replacement&gt;*/\n\tif =
(!EE.listenerCount) EE.listenerCount =3D function(emitter, type) {\n\t  =
return =
emitter.listeners(type).length;\n\t};\n\t/*&lt;/replacement&gt;*/\n\n\tva=
r Stream =3D =
__webpack_require__(25);\n\n\t/*&lt;replacement&gt;*/\n\tvar util =3D =
__webpack_require__(32);\n\tutil.inherits =3D =
__webpack_require__(33);\n\t/*&lt;/replacement&gt;*/\n\n\tvar =
StringDecoder;\n\n\n\t/*&lt;replacement&gt;*/\n\tvar debug =3D =
__webpack_require__(34);\n\tif (debug &amp;&amp; debug.debuglog) {\n\t  =
debug =3D debug.debuglog('stream');\n\t} else {\n\t  debug =3D function =
() {};\n\t}\n\t/*&lt;/replacement&gt;*/\n\n\n\tutil.inherits(Readable, =
Stream);\n\n\tfunction ReadableState(options, stream) {\n\t  var Duplex =
=3D __webpack_require__(35);\n\n\t  options =3D options || {};\n\n\t  // =
the point at which it stops calling _read() to fill the buffer\n\t  // =
Note: 0 is a valid value, means \"don't call _read preemptively =
ever\"\n\t  var hwm =3D options.highWaterMark;\n\t  var defaultHwm =3D =
options.objectMode ? 16 : 16 * 1024;\n\t  this.highWaterMark =3D (hwm || =
hwm =3D=3D=3D 0) ? hwm : defaultHwm;\n\n\t  // cast to ints.\n\t  =
this.highWaterMark =3D ~~this.highWaterMark;\n\n\t  this.buffer =3D =
[];\n\t  this.length =3D 0;\n\t  this.pipes =3D null;\n\t  =
this.pipesCount =3D 0;\n\t  this.flowing =3D null;\n\t  this.ended =3D =
false;\n\t  this.endEmitted =3D false;\n\t  this.reading =3D =
false;\n\n\t  // a flag to be able to tell if the onwrite cb is called =
immediately,\n\t  // or on a later tick.  We set this to true at first, =
because any\n\t  // actions that shouldn't happen until \"later\" should =
generally also\n\t  // not happen before the first write call.\n\t  =
this.sync =3D true;\n\n\t  // whenever we return null, then we set a =
flag to say\n\t  // that we're awaiting a 'readable' event emission.\n\t =
 this.needReadable =3D false;\n\t  this.emittedReadable =3D false;\n\t  =
this.readableListening =3D false;\n\n\n\t  // object stream flag. Used =
to make read(n) ignore n and to\n\t  // make all the buffer merging and =
length checks go away\n\t  this.objectMode =3D =
!!options.objectMode;\n\n\t  if (stream instanceof Duplex)\n\t    =
this.objectMode =3D this.objectMode || =
!!options.readableObjectMode;\n\n\t  // Crypto is kind of old and =
crusty.  Historically, its default string\n\t  // encoding is 'binary' =
so we have to make this configurable.\n\t  // Everything else in the =
universe uses 'utf8', though.\n\t  this.defaultEncoding =3D =
options.defaultEncoding || 'utf8';\n\n\t  // when piping, we only care =
about 'readable' events that happen\n\t  // after read()ing all the =
bytes and not getting any pushback.\n\t  this.ranOut =3D false;\n\n\t  =
// the number of writers that are awaiting a drain event in .pipe()s\n\t =
 this.awaitDrain =3D 0;\n\n\t  // if true, a maybeReadMore has been =
scheduled\n\t  this.readingMore =3D false;\n\n\t  this.decoder =3D =
null;\n\t  this.encoding =3D null;\n\t  if (options.encoding) {\n\t    =
if (!StringDecoder)\n\t      StringDecoder =3D =
__webpack_require__(37).StringDecoder;\n\t    this.decoder =3D new =
StringDecoder(options.encoding);\n\t    this.encoding =3D =
options.encoding;\n\t  }\n\t}\n\n\tfunction Readable(options) {\n\t  var =
Duplex =3D __webpack_require__(35);\n\n\t  if (!(this instanceof =
Readable))\n\t    return new Readable(options);\n\n\t  =
this._readableState =3D new ReadableState(options, this);\n\n\t  // =
legacy\n\t  this.readable =3D true;\n\n\t  =
Stream.call(this);\n\t}\n\n\t// Manually shove something into the read() =
buffer.\n\t// This returns true if the highWaterMark has not been hit =
yet,\n\t// similar to how Writable.write() returns true if you =
should\n\t// write() some more.\n\tReadable.prototype.push =3D =
function(chunk, encoding) {\n\t  var state =3D =
this._readableState;\n\n\t  if (util.isString(chunk) &amp;&amp; =
!state.objectMode) {\n\t    encoding =3D encoding || =
state.defaultEncoding;\n\t    if (encoding !=3D=3D state.encoding) {\n\t =
     chunk =3D new Buffer(chunk, encoding);\n\t      encoding =3D =
'';\n\t    }\n\t  }\n\n\t  return readableAddChunk(this, state, chunk, =
encoding, false);\n\t};\n\n\t// Unshift should *always* be something =
directly out of read()\n\tReadable.prototype.unshift =3D function(chunk) =
{\n\t  var state =3D this._readableState;\n\t  return =
readableAddChunk(this, state, chunk, '', true);\n\t};\n\n\tfunction =
readableAddChunk(stream, state, chunk, encoding, addToFront) {\n\t  var =
er =3D chunkInvalid(state, chunk);\n\t  if (er) {\n\t    =
stream.emit('error', er);\n\t  } else if (util.isNullOrUndefined(chunk)) =
{\n\t    state.reading =3D false;\n\t    if (!state.ended)\n\t      =
onEofChunk(stream, state);\n\t  } else if (state.objectMode || chunk =
&amp;&amp; chunk.length &gt; 0) {\n\t    if (state.ended &amp;&amp; =
!addToFront) {\n\t      var e =3D new Error('stream.push() after =
EOF');\n\t      stream.emit('error', e);\n\t    } else if =
(state.endEmitted &amp;&amp; addToFront) {\n\t      var e =3D new =
Error('stream.unshift() after end event');\n\t      stream.emit('error', =
e);\n\t    } else {\n\t      if (state.decoder &amp;&amp; !addToFront =
&amp;&amp; !encoding)\n\t        chunk =3D =
state.decoder.write(chunk);\n\n\t      if (!addToFront)\n\t        =
state.reading =3D false;\n\n\t      // if we want the data now, just =
emit it.\n\t      if (state.flowing &amp;&amp; state.length =3D=3D=3D 0 =
&amp;&amp; !state.sync) {\n\t        stream.emit('data', chunk);\n\t     =
   stream.read(0);\n\t      } else {\n\t        // update the buffer =
info.\n\t        state.length +=3D state.objectMode ? 1 : =
chunk.length;\n\t        if (addToFront)\n\t          =
state.buffer.unshift(chunk);\n\t        else\n\t          =
state.buffer.push(chunk);\n\n\t        if (state.needReadable)\n\t       =
   emitReadable(stream);\n\t      }\n\n\t      maybeReadMore(stream, =
state);\n\t    }\n\t  } else if (!addToFront) {\n\t    state.reading =3D =
false;\n\t  }\n\n\t  return needMoreData(state);\n\t}\n\n\n\n\t// if =
it's past the high water mark, we can push in some more.\n\t// Also, if =
we have no data yet, we can stand some\n\t// more bytes.  This is to =
work around cases where hwm=3D0,\n\t// such as the repl.  Also, if the =
push() triggered a\n\t// readable event, and the user called =
read(largeNumber) such that\n\t// needReadable was set, then we ought to =
push more, so that another\n\t// 'readable' event will be =
triggered.\n\tfunction needMoreData(state) {\n\t  return !state.ended =
&amp;&amp;\n\t         (state.needReadable ||\n\t          state.length =
&lt; state.highWaterMark ||\n\t          state.length =3D=3D=3D =
0);\n\t}\n\n\t// backwards =
compatibility.\n\tReadable.prototype.setEncoding =3D function(enc) {\n\t =
 if (!StringDecoder)\n\t    StringDecoder =3D =
__webpack_require__(37).StringDecoder;\n\t  this._readableState.decoder =
=3D new StringDecoder(enc);\n\t  this._readableState.encoding =3D =
enc;\n\t  return this;\n\t};\n\n\t// Don't raise the hwm &gt; =
128MB\n\tvar MAX_HWM =3D 0x800000;\n\tfunction roundUpToNextPowerOf2(n) =
{\n\t  if (n &gt;=3D MAX_HWM) {\n\t    n =3D MAX_HWM;\n\t  } else {\n\t  =
  // Get the next highest power of 2\n\t    n--;\n\t    for (var p =3D =
1; p &lt; 32; p &lt;&lt;=3D 1) n |=3D n &gt;&gt; p;\n\t    n++;\n\t  =
}\n\t  return n;\n\t}\n\n\tfunction howMuchToRead(n, state) {\n\t  if =
(state.length =3D=3D=3D 0 &amp;&amp; state.ended)\n\t    return 0;\n\n\t =
 if (state.objectMode)\n\t    return n =3D=3D=3D 0 ? 0 : 1;\n\n\t  if =
(isNaN(n) || util.isNull(n)) {\n\t    // only flow one buffer at a =
time\n\t    if (state.flowing &amp;&amp; state.buffer.length)\n\t      =
return state.buffer[0].length;\n\t    else\n\t      return =
state.length;\n\t  }\n\n\t  if (n &lt;=3D 0)\n\t    return 0;\n\n\t  // =
If we're asking for more than the target buffer level,\n\t  // then =
raise the water mark.  Bump up to the next highest\n\t  // power of 2, =
to prevent increasing it excessively in tiny\n\t  // amounts.\n\t  if (n =
&gt; state.highWaterMark)\n\t    state.highWaterMark =3D =
roundUpToNextPowerOf2(n);\n\n\t  // don't have that much.  return null, =
unless we've ended.\n\t  if (n &gt; state.length) {\n\t    if =
(!state.ended) {\n\t      state.needReadable =3D true;\n\t      return =
0;\n\t    } else\n\t      return state.length;\n\t  }\n\n\t  return =
n;\n\t}\n\n\t// you can override either this method, or the async =
_read(n) below.\n\tReadable.prototype.read =3D function(n) {\n\t  =
debug('read', n);\n\t  var state =3D this._readableState;\n\t  var nOrig =
=3D n;\n\n\t  if (!util.isNumber(n) || n &gt; 0)\n\t    =
state.emittedReadable =3D false;\n\n\t  // if we're doing read(0) to =
trigger a readable event, but we\n\t  // already have a bunch of data in =
the buffer, then just trigger\n\t  // the 'readable' event and move =
on.\n\t  if (n =3D=3D=3D 0 &amp;&amp;\n\t      state.needReadable =
&amp;&amp;\n\t      (state.length &gt;=3D state.highWaterMark || =
state.ended)) {\n\t    debug('read: emitReadable', state.length, =
state.ended);\n\t    if (state.length =3D=3D=3D 0 &amp;&amp; =
state.ended)\n\t      endReadable(this);\n\t    else\n\t      =
emitReadable(this);\n\t    return null;\n\t  }\n\n\t  n =3D =
howMuchToRead(n, state);\n\n\t  // if we've ended, and we're now clear, =
then finish it up.\n\t  if (n =3D=3D=3D 0 &amp;&amp; state.ended) {\n\t  =
  if (state.length =3D=3D=3D 0)\n\t      endReadable(this);\n\t    =
return null;\n\t  }\n\n\t  // All the actual chunk generation logic =
needs to be\n\t  // *below* the call to _read.  The reason is that in =
certain\n\t  // synthetic stream cases, such as passthrough streams, =
_read\n\t  // may be a completely synchronous operation which may =
change\n\t  // the state of the read buffer, providing enough data =
when\n\t  // before there was *not* enough.\n\t  //\n\t  // So, the =
steps are:\n\t  // 1. Figure out what the state of things will be after =
we do\n\t  // a read from the buffer.\n\t  //\n\t  // 2. If that =
resulting state will trigger a _read, then call _read.\n\t  // Note that =
this may be asynchronous, or synchronous.  Yes, it is\n\t  // deeply =
ugly to write APIs this way, but that still doesn't mean\n\t  // that =
the Readable class should behave improperly, as streams are\n\t  // =
designed to be sync/async agnostic.\n\t  // Take note if the _read call =
is sync or async (ie, if the read call\n\t  // has returned yet), so =
that we know whether or not it's safe to emit\n\t  // 'readable' =
etc.\n\t  //\n\t  // 3. Actually pull the requested chunks out of the =
buffer and return.\n\n\t  // if we need a readable event, then we need =
to do some reading.\n\t  var doRead =3D state.needReadable;\n\t  =
debug('need readable', doRead);\n\n\t  // if we currently have less than =
the highWaterMark, then also read some\n\t  if (state.length =3D=3D=3D 0 =
|| state.length - n &lt; state.highWaterMark) {\n\t    doRead =3D =
true;\n\t    debug('length less than watermark', doRead);\n\t  }\n\n\t  =
// however, if we've ended, then there's no point, and if we're =
already\n\t  // reading, then it's unnecessary.\n\t  if (state.ended || =
state.reading) {\n\t    doRead =3D false;\n\t    debug('reading or =
ended', doRead);\n\t  }\n\n\t  if (doRead) {\n\t    debug('do =
read');\n\t    state.reading =3D true;\n\t    state.sync =3D true;\n\t   =
 // if the length is currently zero, then we *need* a readable =
event.\n\t    if (state.length =3D=3D=3D 0)\n\t      state.needReadable =
=3D true;\n\t    // call internal read method\n\t    =
this._read(state.highWaterMark);\n\t    state.sync =3D false;\n\t  =
}\n\n\t  // If _read pushed data synchronously, then `reading` will be =
false,\n\t  // and we need to re-evaluate how much data we can return to =
the user.\n\t  if (doRead &amp;&amp; !state.reading)\n\t    n =3D =
howMuchToRead(nOrig, state);\n\n\t  var ret;\n\t  if (n &gt; 0)\n\t    =
ret =3D fromList(n, state);\n\t  else\n\t    ret =3D null;\n\n\t  if =
(util.isNull(ret)) {\n\t    state.needReadable =3D true;\n\t    n =3D =
0;\n\t  }\n\n\t  state.length -=3D n;\n\n\t  // If we have nothing in =
the buffer, then we want to know\n\t  // as soon as we *do* get =
something into the buffer.\n\t  if (state.length =3D=3D=3D 0 &amp;&amp; =
!state.ended)\n\t    state.needReadable =3D true;\n\n\t  // If we tried =
to read() past the EOF, then emit end on the next tick.\n\t  if (nOrig =
!=3D=3D n &amp;&amp; state.ended &amp;&amp; state.length =3D=3D=3D =
0)\n\t    endReadable(this);\n\n\t  if (!util.isNull(ret))\n\t    =
this.emit('data', ret);\n\n\t  return ret;\n\t};\n\n\tfunction =
chunkInvalid(state, chunk) {\n\t  var er =3D null;\n\t  if =
(!util.isBuffer(chunk) &amp;&amp;\n\t      !util.isString(chunk) =
&amp;&amp;\n\t      !util.isNullOrUndefined(chunk) &amp;&amp;\n\t      =
!state.objectMode) {\n\t    er =3D new TypeError('Invalid =
non-string/buffer chunk');\n\t  }\n\t  return er;\n\t}\n\n\n\tfunction =
onEofChunk(stream, state) {\n\t  if (state.decoder &amp;&amp; =
!state.ended) {\n\t    var chunk =3D state.decoder.end();\n\t    if =
(chunk &amp;&amp; chunk.length) {\n\t      state.buffer.push(chunk);\n\t =
     state.length +=3D state.objectMode ? 1 : chunk.length;\n\t    }\n\t =
 }\n\t  state.ended =3D true;\n\n\t  // emit 'readable' now to make sure =
it gets picked up.\n\t  emitReadable(stream);\n\t}\n\n\t// Don't emit =
readable right away in sync mode, because this can trigger\n\t// another =
read() call =3D&gt; stack overflow.  This way, it might trigger\n\t// a =
nextTick recursion warning, but that's not so bad.\n\tfunction =
emitReadable(stream) {\n\t  var state =3D stream._readableState;\n\t  =
state.needReadable =3D false;\n\t  if (!state.emittedReadable) {\n\t    =
debug('emitReadable', state.flowing);\n\t    state.emittedReadable =3D =
true;\n\t    if (state.sync)\n\t      process.nextTick(function() {\n\t  =
      emitReadable_(stream);\n\t      });\n\t    else\n\t      =
emitReadable_(stream);\n\t  }\n\t}\n\n\tfunction emitReadable_(stream) =
{\n\t  debug('emit readable');\n\t  stream.emit('readable');\n\t  =
flow(stream);\n\t}\n\n\n\t// at this point, the user has presumably seen =
the 'readable' event,\n\t// and called read() to consume some data.  =
that may have triggered\n\t// in turn another _read(n) call, in which =
case reading =3D true if\n\t// it's in progress.\n\t// However, if we're =
not ended, or reading, and the length &lt; hwm,\n\t// then go ahead and =
try to read some more preemptively.\n\tfunction maybeReadMore(stream, =
state) {\n\t  if (!state.readingMore) {\n\t    state.readingMore =3D =
true;\n\t    process.nextTick(function() {\n\t      =
maybeReadMore_(stream, state);\n\t    });\n\t  }\n\t}\n\n\tfunction =
maybeReadMore_(stream, state) {\n\t  var len =3D state.length;\n\t  =
while (!state.reading &amp;&amp; !state.flowing &amp;&amp; !state.ended =
&amp;&amp;\n\t         state.length &lt; state.highWaterMark) {\n\t    =
debug('maybeReadMore read 0');\n\t    stream.read(0);\n\t    if (len =
=3D=3D=3D state.length)\n\t      // didn't get any data, stop =
spinning.\n\t      break;\n\t    else\n\t      len =3D state.length;\n\t =
 }\n\t  state.readingMore =3D false;\n\t}\n\n\t// abstract method.  to =
be overridden in specific implementation classes.\n\t// call cb(er, =
data) where data is &lt;=3D n in length.\n\t// for virtual (non-string, =
non-buffer) streams, \"length\" is somewhat\n\t// arbitrary, and perhaps =
not very meaningful.\n\tReadable.prototype._read =3D function(n) {\n\t  =
this.emit('error', new Error('not =
implemented'));\n\t};\n\n\tReadable.prototype.pipe =3D function(dest, =
pipeOpts) {\n\t  var src =3D this;\n\t  var state =3D =
this._readableState;\n\n\t  switch (state.pipesCount) {\n\t    case =
0:\n\t      state.pipes =3D dest;\n\t      break;\n\t    case 1:\n\t     =
 state.pipes =3D [state.pipes, dest];\n\t      break;\n\t    =
default:\n\t      state.pipes.push(dest);\n\t      break;\n\t  }\n\t  =
state.pipesCount +=3D 1;\n\t  debug('pipe count=3D%d opts=3D%j', =
state.pipesCount, pipeOpts);\n\n\t  var doEnd =3D (!pipeOpts || =
pipeOpts.end !=3D=3D false) &amp;&amp;\n\t              dest !=3D=3D =
process.stdout &amp;&amp;\n\t              dest !=3D=3D =
process.stderr;\n\n\t  var endFn =3D doEnd ? onend : cleanup;\n\t  if =
(state.endEmitted)\n\t    process.nextTick(endFn);\n\t  else\n\t    =
src.once('end', endFn);\n\n\t  dest.on('unpipe', onunpipe);\n\t  =
function onunpipe(readable) {\n\t    debug('onunpipe');\n\t    if =
(readable =3D=3D=3D src) {\n\t      cleanup();\n\t    }\n\t  }\n\n\t  =
function onend() {\n\t    debug('onend');\n\t    dest.end();\n\t  =
}\n\n\t  // when the dest drains, it reduces the awaitDrain counter\n\t  =
// on the source.  This would be more elegant with a .once()\n\t  // =
handler in flow(), but adding and removing repeatedly is\n\t  // too =
slow.\n\t  var ondrain =3D pipeOnDrain(src);\n\t  dest.on('drain', =
ondrain);\n\n\t  function cleanup() {\n\t    debug('cleanup');\n\t    // =
cleanup event handlers once the pipe is broken\n\t    =
dest.removeListener('close', onclose);\n\t    =
dest.removeListener('finish', onfinish);\n\t    =
dest.removeListener('drain', ondrain);\n\t    =
dest.removeListener('error', onerror);\n\t    =
dest.removeListener('unpipe', onunpipe);\n\t    =
src.removeListener('end', onend);\n\t    src.removeListener('end', =
cleanup);\n\t    src.removeListener('data', ondata);\n\n\t    // if the =
reader is waiting for a drain event from this\n\t    // specific writer, =
then it would cause it to never start\n\t    // flowing again.\n\t    // =
So, if this is awaiting a drain, then we just call it now.\n\t    // If =
we don't know, then assume that we are waiting for one.\n\t    if =
(state.awaitDrain &amp;&amp;\n\t        (!dest._writableState || =
dest._writableState.needDrain))\n\t      ondrain();\n\t  }\n\n\t  =
src.on('data', ondata);\n\t  function ondata(chunk) {\n\t    =
debug('ondata');\n\t    var ret =3D dest.write(chunk);\n\t    if (false =
=3D=3D=3D ret) {\n\t      debug('false write response, pause',\n\t       =
     src._readableState.awaitDrain);\n\t      =
src._readableState.awaitDrain++;\n\t      src.pause();\n\t    }\n\t  =
}\n\n\t  // if the dest has an error, then stop piping into it.\n\t  // =
however, don't suppress the throwing behavior for this.\n\t  function =
onerror(er) {\n\t    debug('onerror', er);\n\t    unpipe();\n\t    =
dest.removeListener('error', onerror);\n\t    if (EE.listenerCount(dest, =
'error') =3D=3D=3D 0)\n\t      dest.emit('error', er);\n\t  }\n\t  // =
This is a brutally ugly hack to make sure that our error handler\n\t  // =
is attached before any userland ones.  NEVER DO THIS.\n\t  if =
(!dest._events || !dest._events.error)\n\t    dest.on('error', =
onerror);\n\t  else if (isArray(dest._events.error))\n\t    =
dest._events.error.unshift(onerror);\n\t  else\n\t    dest._events.error =
=3D [onerror, dest._events.error];\n\n\n\n\t  // Both close and finish =
should trigger unpipe, but only once.\n\t  function onclose() {\n\t    =
dest.removeListener('finish', onfinish);\n\t    unpipe();\n\t  }\n\t  =
dest.once('close', onclose);\n\t  function onfinish() {\n\t    =
debug('onfinish');\n\t    dest.removeListener('close', onclose);\n\t    =
unpipe();\n\t  }\n\t  dest.once('finish', onfinish);\n\n\t  function =
unpipe() {\n\t    debug('unpipe');\n\t    src.unpipe(dest);\n\t  }\n\n\t =
 // tell the dest that it's being piped to\n\t  dest.emit('pipe', =
src);\n\n\t  // start the flow if it hasn't been started already.\n\t  =
if (!state.flowing) {\n\t    debug('pipe resume');\n\t    =
src.resume();\n\t  }\n\n\t  return dest;\n\t};\n\n\tfunction =
pipeOnDrain(src) {\n\t  return function() {\n\t    var state =3D =
src._readableState;\n\t    debug('pipeOnDrain', state.awaitDrain);\n\t   =
 if (state.awaitDrain)\n\t      state.awaitDrain--;\n\t    if =
(state.awaitDrain =3D=3D=3D 0 &amp;&amp; EE.listenerCount(src, 'data')) =
{\n\t      state.flowing =3D true;\n\t      flow(src);\n\t    }\n\t  =
};\n\t}\n\n\n\tReadable.prototype.unpipe =3D function(dest) {\n\t  var =
state =3D this._readableState;\n\n\t  // if we're not piping anywhere, =
then do nothing.\n\t  if (state.pipesCount =3D=3D=3D 0)\n\t    return =
this;\n\n\t  // just one destination.  most common case.\n\t  if =
(state.pipesCount =3D=3D=3D 1) {\n\t    // passed in one, but it's not =
the right one.\n\t    if (dest &amp;&amp; dest !=3D=3D state.pipes)\n\t  =
    return this;\n\n\t    if (!dest)\n\t      dest =3D =
state.pipes;\n\n\t    // got a match.\n\t    state.pipes =3D null;\n\t   =
 state.pipesCount =3D 0;\n\t    state.flowing =3D false;\n\t    if =
(dest)\n\t      dest.emit('unpipe', this);\n\t    return this;\n\t  =
}\n\n\t  // slow case. multiple pipe destinations.\n\n\t  if (!dest) =
{\n\t    // remove all.\n\t    var dests =3D state.pipes;\n\t    var len =
=3D state.pipesCount;\n\t    state.pipes =3D null;\n\t    =
state.pipesCount =3D 0;\n\t    state.flowing =3D false;\n\n\t    for =
(var i =3D 0; i &lt; len; i++)\n\t      dests[i].emit('unpipe', =
this);\n\t    return this;\n\t  }\n\n\t  // try to find the right =
one.\n\t  var i =3D indexOf(state.pipes, dest);\n\t  if (i =3D=3D=3D =
-1)\n\t    return this;\n\n\t  state.pipes.splice(i, 1);\n\t  =
state.pipesCount -=3D 1;\n\t  if (state.pipesCount =3D=3D=3D 1)\n\t    =
state.pipes =3D state.pipes[0];\n\n\t  dest.emit('unpipe', this);\n\n\t  =
return this;\n\t};\n\n\t// set up data events if they are asked =
for\n\t// Ensure readable listeners eventually get =
something\n\tReadable.prototype.on =3D function(ev, fn) {\n\t  var res =
=3D Stream.prototype.on.call(this, ev, fn);\n\n\t  // If listening to =
data, and it has not explicitly been paused,\n\t  // then call resume to =
start the flow of data on the next tick.\n\t  if (ev =3D=3D=3D 'data' =
&amp;&amp; false !=3D=3D this._readableState.flowing) {\n\t    =
this.resume();\n\t  }\n\n\t  if (ev =3D=3D=3D 'readable' &amp;&amp; =
this.readable) {\n\t    var state =3D this._readableState;\n\t    if =
(!state.readableListening) {\n\t      state.readableListening =3D =
true;\n\t      state.emittedReadable =3D false;\n\t      =
state.needReadable =3D true;\n\t      if (!state.reading) {\n\t        =
var self =3D this;\n\t        process.nextTick(function() {\n\t          =
debug('readable nexttick read 0');\n\t          self.read(0);\n\t        =
});\n\t      } else if (state.length) {\n\t        emitReadable(this, =
state);\n\t      }\n\t    }\n\t  }\n\n\t  return =
res;\n\t};\n\tReadable.prototype.addListener =3D =
Readable.prototype.on;\n\n\t// pause() and resume() are remnants of the =
legacy readable stream API\n\t// If the user uses them, then switch into =
old mode.\n\tReadable.prototype.resume =3D function() {\n\t  var state =
=3D this._readableState;\n\t  if (!state.flowing) {\n\t    =
debug('resume');\n\t    state.flowing =3D true;\n\t    if =
(!state.reading) {\n\t      debug('resume read 0');\n\t      =
this.read(0);\n\t    }\n\t    resume(this, state);\n\t  }\n\t  return =
this;\n\t};\n\n\tfunction resume(stream, state) {\n\t  if =
(!state.resumeScheduled) {\n\t    state.resumeScheduled =3D true;\n\t    =
process.nextTick(function() {\n\t      resume_(stream, state);\n\t    =
});\n\t  }\n\t}\n\n\tfunction resume_(stream, state) {\n\t  =
state.resumeScheduled =3D false;\n\t  stream.emit('resume');\n\t  =
flow(stream);\n\t  if (state.flowing &amp;&amp; !state.reading)\n\t    =
stream.read(0);\n\t}\n\n\tReadable.prototype.pause =3D function() {\n\t  =
debug('call pause flowing=3D%j', this._readableState.flowing);\n\t  if =
(false !=3D=3D this._readableState.flowing) {\n\t    debug('pause');\n\t =
   this._readableState.flowing =3D false;\n\t    this.emit('pause');\n\t =
 }\n\t  return this;\n\t};\n\n\tfunction flow(stream) {\n\t  var state =
=3D stream._readableState;\n\t  debug('flow', state.flowing);\n\t  if =
(state.flowing) {\n\t    do {\n\t      var chunk =3D stream.read();\n\t  =
  } while (null !=3D=3D chunk &amp;&amp; state.flowing);\n\t  =
}\n\t}\n\n\t// wrap an old-style stream as the async data source.\n\t// =
This is *not* part of the readable stream interface.\n\t// It is an ugly =
unfortunate mess of history.\n\tReadable.prototype.wrap =3D =
function(stream) {\n\t  var state =3D this._readableState;\n\t  var =
paused =3D false;\n\n\t  var self =3D this;\n\t  stream.on('end', =
function() {\n\t    debug('wrapped end');\n\t    if (state.decoder =
&amp;&amp; !state.ended) {\n\t      var chunk =3D =
state.decoder.end();\n\t      if (chunk &amp;&amp; chunk.length)\n\t     =
   self.push(chunk);\n\t    }\n\n\t    self.push(null);\n\t  });\n\n\t  =
stream.on('data', function(chunk) {\n\t    debug('wrapped data');\n\t    =
if (state.decoder)\n\t      chunk =3D state.decoder.write(chunk);\n\t    =
if (!chunk || !state.objectMode &amp;&amp; !chunk.length)\n\t      =
return;\n\n\t    var ret =3D self.push(chunk);\n\t    if (!ret) {\n\t    =
  paused =3D true;\n\t      stream.pause();\n\t    }\n\t  });\n\n\t  // =
proxy all the other methods.\n\t  // important when wrapping filters and =
duplexes.\n\t  for (var i in stream) {\n\t    if =
(util.isFunction(stream[i]) &amp;&amp; util.isUndefined(this[i])) {\n\t  =
    this[i] =3D function(method) { return function() {\n\t        return =
stream[method].apply(stream, arguments);\n\t      }}(i);\n\t    }\n\t  =
}\n\n\t  // proxy certain important events.\n\t  var events =3D =
['error', 'close', 'destroy', 'pause', 'resume'];\n\t  forEach(events, =
function(ev) {\n\t    stream.on(ev, self.emit.bind(self, ev));\n\t  =
});\n\n\t  // when we try to consume some more bytes, simply unpause =
the\n\t  // underlying stream.\n\t  self._read =3D function(n) {\n\t    =
debug('wrapped _read', n);\n\t    if (paused) {\n\t      paused =3D =
false;\n\t      stream.resume();\n\t    }\n\t  };\n\n\t  return =
self;\n\t};\n\n\n\n\t// exposed for testing purposes =
only.\n\tReadable._fromList =3D fromList;\n\n\t// Pluck off n bytes from =
an array of buffers.\n\t// Length is the combined lengths of all the =
buffers in the list.\n\tfunction fromList(n, state) {\n\t  var list =3D =
state.buffer;\n\t  var length =3D state.length;\n\t  var stringMode =3D =
!!state.decoder;\n\t  var objectMode =3D !!state.objectMode;\n\t  var =
ret;\n\n\t  // nothing in the list, definitely empty.\n\t  if =
(list.length =3D=3D=3D 0)\n\t    return null;\n\n\t  if (length =
=3D=3D=3D 0)\n\t    ret =3D null;\n\t  else if (objectMode)\n\t    ret =
=3D list.shift();\n\t  else if (!n || n &gt;=3D length) {\n\t    // read =
it all, truncate the array.\n\t    if (stringMode)\n\t      ret =3D =
list.join('');\n\t    else\n\t      ret =3D Buffer.concat(list, =
length);\n\t    list.length =3D 0;\n\t  } else {\n\t    // read just =
some of it.\n\t    if (n &lt; list[0].length) {\n\t      // just take a =
part of the first list item.\n\t      // slice is the same for buffers =
and strings.\n\t      var buf =3D list[0];\n\t      ret =3D buf.slice(0, =
n);\n\t      list[0] =3D buf.slice(n);\n\t    } else if (n =3D=3D=3D =
list[0].length) {\n\t      // first list is a perfect match\n\t      ret =
=3D list.shift();\n\t    } else {\n\t      // complex case.\n\t      // =
we have enough to cover it, but it spans past the first buffer.\n\t      =
if (stringMode)\n\t        ret =3D '';\n\t      else\n\t        ret =3D =
new Buffer(n);\n\n\t      var c =3D 0;\n\t      for (var i =3D 0, l =3D =
list.length; i &lt; l &amp;&amp; c &lt; n; i++) {\n\t        var buf =3D =
list[0];\n\t        var cpy =3D Math.min(n - c, buf.length);\n\n\t       =
 if (stringMode)\n\t          ret +=3D buf.slice(0, cpy);\n\t        =
else\n\t          buf.copy(ret, c, 0, cpy);\n\n\t        if (cpy &lt; =
buf.length)\n\t          list[0] =3D buf.slice(cpy);\n\t        else\n\t =
         list.shift();\n\n\t        c +=3D cpy;\n\t      }\n\t    }\n\t  =
}\n\n\t  return ret;\n\t}\n\n\tfunction endReadable(stream) {\n\t  var =
state =3D stream._readableState;\n\n\t  // If we get here before =
consuming all the bytes, then that is a\n\t  // bug in node.  Should =
never happen.\n\t  if (state.length &gt; 0)\n\t    throw new =
Error('endReadable called on non-empty stream');\n\n\t  if =
(!state.endEmitted) {\n\t    state.ended =3D true;\n\t    =
process.nextTick(function() {\n\t      // Check that we didn't get one =
last unshift.\n\t      if (!state.endEmitted &amp;&amp; state.length =
=3D=3D=3D 0) {\n\t        state.endEmitted =3D true;\n\t        =
stream.readable =3D false;\n\t        stream.emit('end');\n\t      }\n\t =
   });\n\t  }\n\t}\n\n\tfunction forEach (xs, f) {\n\t  for (var i =3D =
0, l =3D xs.length; i &lt; l; i++) {\n\t    f(xs[i], i);\n\t  =
}\n\t}\n\n\tfunction indexOf (xs, x) {\n\t  for (var i =3D 0, l =3D =
xs.length; i &lt; l; i++) {\n\t    if (xs[i] =3D=3D=3D x) return i;\n\t  =
}\n\t  return -1;\n\t}\n\n\t/* WEBPACK VAR INJECTION */}.call(exports, =
__webpack_require__(30)))\n\n/***/ },\n/* 30 */\n/***/ function(module, =
exports) {\n\n\t// shim for using process in browser\n\n\tvar process =
=3D module.exports =3D {};\n\tvar queue =3D [];\n\tvar draining =3D =
false;\n\tvar currentQueue;\n\tvar queueIndex =3D -1;\n\n\tfunction =
cleanUpNextTick() {\n\t    draining =3D false;\n\t    if =
(currentQueue.length) {\n\t        queue =3D =
currentQueue.concat(queue);\n\t    } else {\n\t        queueIndex =3D =
-1;\n\t    }\n\t    if (queue.length) {\n\t        drainQueue();\n\t    =
}\n\t}\n\n\tfunction drainQueue() {\n\t    if (draining) {\n\t        =
return;\n\t    }\n\t    var timeout =3D setTimeout(cleanUpNextTick);\n\t =
   draining =3D true;\n\n\t    var len =3D queue.length;\n\t    =
while(len) {\n\t        currentQueue =3D queue;\n\t        queue =3D =
[];\n\t        while (++queueIndex &lt; len) {\n\t            if =
(currentQueue) {\n\t                currentQueue[queueIndex].run();\n\t  =
          }\n\t        }\n\t        queueIndex =3D -1;\n\t        len =
=3D queue.length;\n\t    }\n\t    currentQueue =3D null;\n\t    draining =
=3D false;\n\t    clearTimeout(timeout);\n\t}\n\n\tprocess.nextTick =3D =
function (fun) {\n\t    var args =3D new Array(arguments.length - =
1);\n\t    if (arguments.length &gt; 1) {\n\t        for (var i =3D 1; i =
&lt; arguments.length; i++) {\n\t            args[i - 1] =3D =
arguments[i];\n\t        }\n\t    }\n\t    queue.push(new Item(fun, =
args));\n\t    if (queue.length =3D=3D=3D 1 &amp;&amp; !draining) {\n\t  =
      setTimeout(drainQueue, 0);\n\t    }\n\t};\n\n\t// v8 likes =
predictible objects\n\tfunction Item(fun, array) {\n\t    this.fun =3D =
fun;\n\t    this.array =3D array;\n\t}\n\tItem.prototype.run =3D =
function () {\n\t    this.fun.apply(null, =
this.array);\n\t};\n\tprocess.title =3D 'browser';\n\tprocess.browser =
=3D true;\n\tprocess.env =3D {};\n\tprocess.argv =3D =
[];\n\tprocess.version =3D ''; // empty string to avoid regexp =
issues\n\tprocess.versions =3D {};\n\n\tfunction noop() =
{}\n\n\tprocess.on =3D noop;\n\tprocess.addListener =3D =
noop;\n\tprocess.once =3D noop;\n\tprocess.off =3D =
noop;\n\tprocess.removeListener =3D noop;\n\tprocess.removeAllListeners =
=3D noop;\n\tprocess.emit =3D noop;\n\n\tprocess.binding =3D function =
(name) {\n\t    throw new Error('process.binding is not =
supported');\n\t};\n\n\tprocess.cwd =3D function () { return '/' =
};\n\tprocess.chdir =3D function (dir) {\n\t    throw new =
Error('process.chdir is not supported');\n\t};\n\tprocess.umask =3D =
function() { return 0; };\n\n\n/***/ },\n/* 31 */\n/***/ =
function(module, exports) {\n\n\tmodule.exports =3D Array.isArray || =
function (arr) {\n\t  return Object.prototype.toString.call(arr) =3D=3D =
'[object Array]';\n\t};\n\n\n/***/ },\n/* 32 */\n/***/ function(module, =
exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION =
*/(function(Buffer) {// Copyright Joyent, Inc. and other Node =
contributors.\n\t//\n\t// Permission is hereby granted, free of charge, =
to any person obtaining a\n\t// copy of this software and associated =
documentation files (the\n\t// \"Software\"), to deal in the Software =
without restriction, including\n\t// without limitation the rights to =
use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or =
sell copies of the Software, and to permit\n\t// persons to whom the =
Software is furnished to do so, subject to the\n\t// following =
conditions:\n\t//\n\t// The above copyright notice and this permission =
notice shall be included\n\t// in all copies or substantial portions of =
the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT =
WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT =
LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A =
PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE =
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR =
OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// =
OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR =
THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\t// NOTE: These =
type checking functions intentionally don't use `instanceof`\n\t// =
because it is fragile and can be easily faked with =
`Object.create()`.\n\n\tfunction isArray(arg) {\n\t  if (Array.isArray) =
{\n\t    return Array.isArray(arg);\n\t  }\n\t  return =
objectToString(arg) =3D=3D=3D '[object Array]';\n\t}\n\texports.isArray =
=3D isArray;\n\n\tfunction isBoolean(arg) {\n\t  return typeof arg =
=3D=3D=3D 'boolean';\n\t}\n\texports.isBoolean =3D =
isBoolean;\n\n\tfunction isNull(arg) {\n\t  return arg =3D=3D=3D =
null;\n\t}\n\texports.isNull =3D isNull;\n\n\tfunction =
isNullOrUndefined(arg) {\n\t  return arg =3D=3D =
null;\n\t}\n\texports.isNullOrUndefined =3D =
isNullOrUndefined;\n\n\tfunction isNumber(arg) {\n\t  return typeof arg =
=3D=3D=3D 'number';\n\t}\n\texports.isNumber =3D isNumber;\n\n\tfunction =
isString(arg) {\n\t  return typeof arg =3D=3D=3D =
'string';\n\t}\n\texports.isString =3D isString;\n\n\tfunction =
isSymbol(arg) {\n\t  return typeof arg =3D=3D=3D =
'symbol';\n\t}\n\texports.isSymbol =3D isSymbol;\n\n\tfunction =
isUndefined(arg) {\n\t  return arg =3D=3D=3D void =
0;\n\t}\n\texports.isUndefined =3D isUndefined;\n\n\tfunction =
isRegExp(re) {\n\t  return objectToString(re) =3D=3D=3D '[object =
RegExp]';\n\t}\n\texports.isRegExp =3D isRegExp;\n\n\tfunction =
isObject(arg) {\n\t  return typeof arg =3D=3D=3D 'object' &amp;&amp; arg =
!=3D=3D null;\n\t}\n\texports.isObject =3D isObject;\n\n\tfunction =
isDate(d) {\n\t  return objectToString(d) =3D=3D=3D '[object =
Date]';\n\t}\n\texports.isDate =3D isDate;\n\n\tfunction isError(e) =
{\n\t  return (objectToString(e) =3D=3D=3D '[object Error]' || e =
instanceof Error);\n\t}\n\texports.isError =3D isError;\n\n\tfunction =
isFunction(arg) {\n\t  return typeof arg =3D=3D=3D =
'function';\n\t}\n\texports.isFunction =3D isFunction;\n\n\tfunction =
isPrimitive(arg) {\n\t  return arg =3D=3D=3D null ||\n\t         typeof =
arg =3D=3D=3D 'boolean' ||\n\t         typeof arg =3D=3D=3D 'number' =
||\n\t         typeof arg =3D=3D=3D 'string' ||\n\t         typeof arg =
=3D=3D=3D 'symbol' ||  // ES6 symbol\n\t         typeof arg =3D=3D=3D =
'undefined';\n\t}\n\texports.isPrimitive =3D =
isPrimitive;\n\n\texports.isBuffer =3D Buffer.isBuffer;\n\n\tfunction =
objectToString(o) {\n\t  return =
Object.prototype.toString.call(o);\n\t}\n\n\t/* WEBPACK VAR INJECTION =
*/}.call(exports, __webpack_require__(2).Buffer))\n\n/***/ },\n/* 33 =
*/\n/***/ function(module, exports) {\n\n\tif (typeof Object.create =
=3D=3D=3D 'function') {\n\t  // implementation from standard node.js =
'util' module\n\t  module.exports =3D function inherits(ctor, superCtor) =
{\n\t    ctor.super_ =3D superCtor\n\t    ctor.prototype =3D =
Object.create(superCtor.prototype, {\n\t      constructor: {\n\t        =
value: ctor,\n\t        enumerable: false,\n\t        writable: =
true,\n\t        configurable: true\n\t      }\n\t    });\n\t  };\n\t} =
else {\n\t  // old school shim for old browsers\n\t  module.exports =3D =
function inherits(ctor, superCtor) {\n\t    ctor.super_ =3D =
superCtor\n\t    var TempCtor =3D function () {}\n\t    =
TempCtor.prototype =3D superCtor.prototype\n\t    ctor.prototype =3D new =
TempCtor()\n\t    ctor.prototype.constructor =3D ctor\n\t  =
}\n\t}\n\n\n/***/ },\n/* 34 */\n/***/ function(module, exports) =
{\n\n\t/* (ignored) */\n\n/***/ },\n/* 35 */\n/***/ function(module, =
exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION =
*/(function(process) {// Copyright Joyent, Inc. and other Node =
contributors.\n\t//\n\t// Permission is hereby granted, free of charge, =
to any person obtaining a\n\t// copy of this software and associated =
documentation files (the\n\t// \"Software\"), to deal in the Software =
without restriction, including\n\t// without limitation the rights to =
use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or =
sell copies of the Software, and to permit\n\t// persons to whom the =
Software is furnished to do so, subject to the\n\t// following =
conditions:\n\t//\n\t// The above copyright notice and this permission =
notice shall be included\n\t// in all copies or substantial portions of =
the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT =
WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT =
LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A =
PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE =
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR =
OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// =
OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR =
THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\t// a duplex stream =
is just a stream that is both readable and writable.\n\t// Since JS =
doesn't have multiple prototypal inheritance, this class\n\t// =
prototypally inherits from Readable, and then parasitically from\n\t// =
Writable.\n\n\tmodule.exports =3D =
Duplex;\n\n\t/*&lt;replacement&gt;*/\n\tvar objectKeys =3D Object.keys =
|| function (obj) {\n\t  var keys =3D [];\n\t  for (var key in obj) =
keys.push(key);\n\t  return =
keys;\n\t}\n\t/*&lt;/replacement&gt;*/\n\n\n\t/*&lt;replacement&gt;*/\n\t=
var util =3D __webpack_require__(32);\n\tutil.inherits =3D =
__webpack_require__(33);\n\t/*&lt;/replacement&gt;*/\n\n\tvar Readable =
=3D __webpack_require__(29);\n\tvar Writable =3D =
__webpack_require__(36);\n\n\tutil.inherits(Duplex, =
Readable);\n\n\tforEach(objectKeys(Writable.prototype), function(method) =
{\n\t  if (!Duplex.prototype[method])\n\t    Duplex.prototype[method] =
=3D Writable.prototype[method];\n\t});\n\n\tfunction Duplex(options) =
{\n\t  if (!(this instanceof Duplex))\n\t    return new =
Duplex(options);\n\n\t  Readable.call(this, options);\n\t  =
Writable.call(this, options);\n\n\t  if (options &amp;&amp; =
options.readable =3D=3D=3D false)\n\t    this.readable =3D false;\n\n\t  =
if (options &amp;&amp; options.writable =3D=3D=3D false)\n\t    =
this.writable =3D false;\n\n\t  this.allowHalfOpen =3D true;\n\t  if =
(options &amp;&amp; options.allowHalfOpen =3D=3D=3D false)\n\t    =
this.allowHalfOpen =3D false;\n\n\t  this.once('end', =
onend);\n\t}\n\n\t// the no-half-open enforcer\n\tfunction onend() {\n\t =
 // if we allow half-open state, or if the writable side ended,\n\t  // =
then we're ok.\n\t  if (this.allowHalfOpen || =
this._writableState.ended)\n\t    return;\n\n\t  // no more data can be =
written.\n\t  // But allow more writes to happen in this tick.\n\t  =
process.nextTick(this.end.bind(this));\n\t}\n\n\tfunction forEach (xs, =
f) {\n\t  for (var i =3D 0, l =3D xs.length; i &lt; l; i++) {\n\t    =
f(xs[i], i);\n\t  }\n\t}\n\n\t/* WEBPACK VAR INJECTION */}.call(exports, =
__webpack_require__(30)))\n\n/***/ },\n/* 36 */\n/***/ function(module, =
exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION =
*/(function(process) {// Copyright Joyent, Inc. and other Node =
contributors.\n\t//\n\t// Permission is hereby granted, free of charge, =
to any person obtaining a\n\t// copy of this software and associated =
documentation files (the\n\t// \"Software\"), to deal in the Software =
without restriction, including\n\t// without limitation the rights to =
use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or =
sell copies of the Software, and to permit\n\t// persons to whom the =
Software is furnished to do so, subject to the\n\t// following =
conditions:\n\t//\n\t// The above copyright notice and this permission =
notice shall be included\n\t// in all copies or substantial portions of =
the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT =
WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT =
LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A =
PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE =
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR =
OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// =
OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR =
THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\t// A bit simpler =
than readable streams.\n\t// Implement an async ._write(chunk, cb), and =
it'll handle all\n\t// the drain event emission and =
buffering.\n\n\tmodule.exports =3D =
Writable;\n\n\t/*&lt;replacement&gt;*/\n\tvar Buffer =3D =
__webpack_require__(2).Buffer;\n\t/*&lt;/replacement&gt;*/\n\n\tWritable.=
WritableState =3D WritableState;\n\n\n\t/*&lt;replacement&gt;*/\n\tvar =
util =3D __webpack_require__(32);\n\tutil.inherits =3D =
__webpack_require__(33);\n\t/*&lt;/replacement&gt;*/\n\n\tvar Stream =3D =
__webpack_require__(25);\n\n\tutil.inherits(Writable, =
Stream);\n\n\tfunction WriteReq(chunk, encoding, cb) {\n\t  this.chunk =
=3D chunk;\n\t  this.encoding =3D encoding;\n\t  this.callback =3D =
cb;\n\t}\n\n\tfunction WritableState(options, stream) {\n\t  var Duplex =
=3D __webpack_require__(35);\n\n\t  options =3D options || {};\n\n\t  // =
the point at which write() starts returning false\n\t  // Note: 0 is a =
valid value, means that we always return false if\n\t  // the entire =
buffer is not flushed immediately on write()\n\t  var hwm =3D =
options.highWaterMark;\n\t  var defaultHwm =3D options.objectMode ? 16 : =
16 * 1024;\n\t  this.highWaterMark =3D (hwm || hwm =3D=3D=3D 0) ? hwm : =
defaultHwm;\n\n\t  // object stream flag to indicate whether or not this =
stream\n\t  // contains buffers or objects.\n\t  this.objectMode =3D =
!!options.objectMode;\n\n\t  if (stream instanceof Duplex)\n\t    =
this.objectMode =3D this.objectMode || =
!!options.writableObjectMode;\n\n\t  // cast to ints.\n\t  =
this.highWaterMark =3D ~~this.highWaterMark;\n\n\t  this.needDrain =3D =
false;\n\t  // at the start of calling end()\n\t  this.ending =3D =
false;\n\t  // when end() has been called, and returned\n\t  this.ended =
=3D false;\n\t  // when 'finish' is emitted\n\t  this.finished =3D =
false;\n\n\t  // should we decode strings into buffers before passing to =
_write?\n\t  // this is here so that some node-core streams can optimize =
string\n\t  // handling at a lower level.\n\t  var noDecode =3D =
options.decodeStrings =3D=3D=3D false;\n\t  this.decodeStrings =3D =
!noDecode;\n\n\t  // Crypto is kind of old and crusty.  Historically, =
its default string\n\t  // encoding is 'binary' so we have to make this =
configurable.\n\t  // Everything else in the universe uses 'utf8', =
though.\n\t  this.defaultEncoding =3D options.defaultEncoding || =
'utf8';\n\n\t  // not an actual buffer we keep track of, but a =
measurement\n\t  // of how much we're waiting to get pushed to some =
underlying\n\t  // socket or file.\n\t  this.length =3D 0;\n\n\t  // a =
flag to see when we're in the middle of a write.\n\t  this.writing =3D =
false;\n\n\t  // when true all writes will be buffered until .uncork() =
call\n\t  this.corked =3D 0;\n\n\t  // a flag to be able to tell if the =
onwrite cb is called immediately,\n\t  // or on a later tick.  We set =
this to true at first, because any\n\t  // actions that shouldn't happen =
until \"later\" should generally also\n\t  // not happen before the =
first write call.\n\t  this.sync =3D true;\n\n\t  // a flag to know if =
we're processing previously buffered items, which\n\t  // may call the =
_write() callback in the same tick, so that we don't\n\t  // end up in =
an overlapped onwrite situation.\n\t  this.bufferProcessing =3D =
false;\n\n\t  // the callback that's passed to _write(chunk,cb)\n\t  =
this.onwrite =3D function(er) {\n\t    onwrite(stream, er);\n\t  =
};\n\n\t  // the callback that the user supplies to =
write(chunk,encoding,cb)\n\t  this.writecb =3D null;\n\n\t  // the =
amount that is being written when _write is called.\n\t  this.writelen =
=3D 0;\n\n\t  this.buffer =3D [];\n\n\t  // number of pending =
user-supplied write callbacks\n\t  // this must be 0 before 'finish' can =
be emitted\n\t  this.pendingcb =3D 0;\n\n\t  // emit prefinish if the =
only thing we're waiting for is _write cbs\n\t  // This is relevant for =
synchronous Transform streams\n\t  this.prefinished =3D false;\n\n\t  // =
True if the error was already emitted and should not be thrown again\n\t =
 this.errorEmitted =3D false;\n\t}\n\n\tfunction Writable(options) {\n\t =
 var Duplex =3D __webpack_require__(35);\n\n\t  // Writable ctor is =
applied to Duplexes, though they're not\n\t  // instanceof Writable, =
they're instanceof Readable.\n\t  if (!(this instanceof Writable) =
&amp;&amp; !(this instanceof Duplex))\n\t    return new =
Writable(options);\n\n\t  this._writableState =3D new =
WritableState(options, this);\n\n\t  // legacy.\n\t  this.writable =3D =
true;\n\n\t  Stream.call(this);\n\t}\n\n\t// Otherwise people can pipe =
Writable streams, which is just wrong.\n\tWritable.prototype.pipe =3D =
function() {\n\t  this.emit('error', new Error('Cannot pipe. Not =
readable.'));\n\t};\n\n\n\tfunction writeAfterEnd(stream, state, cb) =
{\n\t  var er =3D new Error('write after end');\n\t  // TODO: defer =
error events consistently everywhere, not just the cb\n\t  =
stream.emit('error', er);\n\t  process.nextTick(function() {\n\t    =
cb(er);\n\t  });\n\t}\n\n\t// If we get something that is not a buffer, =
string, null, or undefined,\n\t// and we're not in objectMode, then =
that's an error.\n\t// Otherwise stream chunks are all considered to be =
of length=3D1, and the\n\t// watermarks determine how many objects to =
keep in the buffer, rather than\n\t// how many bytes or =
characters.\n\tfunction validChunk(stream, state, chunk, cb) {\n\t  var =
valid =3D true;\n\t  if (!util.isBuffer(chunk) &amp;&amp;\n\t      =
!util.isString(chunk) &amp;&amp;\n\t      !util.isNullOrUndefined(chunk) =
&amp;&amp;\n\t      !state.objectMode) {\n\t    var er =3D new =
TypeError('Invalid non-string/buffer chunk');\n\t    =
stream.emit('error', er);\n\t    process.nextTick(function() {\n\t      =
cb(er);\n\t    });\n\t    valid =3D false;\n\t  }\n\t  return =
valid;\n\t}\n\n\tWritable.prototype.write =3D function(chunk, encoding, =
cb) {\n\t  var state =3D this._writableState;\n\t  var ret =3D =
false;\n\n\t  if (util.isFunction(encoding)) {\n\t    cb =3D =
encoding;\n\t    encoding =3D null;\n\t  }\n\n\t  if =
(util.isBuffer(chunk))\n\t    encoding =3D 'buffer';\n\t  else if =
(!encoding)\n\t    encoding =3D state.defaultEncoding;\n\n\t  if =
(!util.isFunction(cb))\n\t    cb =3D function() {};\n\n\t  if =
(state.ended)\n\t    writeAfterEnd(this, state, cb);\n\t  else if =
(validChunk(this, state, chunk, cb)) {\n\t    state.pendingcb++;\n\t    =
ret =3D writeOrBuffer(this, state, chunk, encoding, cb);\n\t  }\n\n\t  =
return ret;\n\t};\n\n\tWritable.prototype.cork =3D function() {\n\t  var =
state =3D this._writableState;\n\n\t  =
state.corked++;\n\t};\n\n\tWritable.prototype.uncork =3D function() =
{\n\t  var state =3D this._writableState;\n\n\t  if (state.corked) {\n\t =
   state.corked--;\n\n\t    if (!state.writing &amp;&amp;\n\t        =
!state.corked &amp;&amp;\n\t        !state.finished &amp;&amp;\n\t       =
 !state.bufferProcessing &amp;&amp;\n\t        state.buffer.length)\n\t  =
    clearBuffer(this, state);\n\t  }\n\t};\n\n\tfunction =
decodeChunk(state, chunk, encoding) {\n\t  if (!state.objectMode =
&amp;&amp;\n\t      state.decodeStrings !=3D=3D false &amp;&amp;\n\t     =
 util.isString(chunk)) {\n\t    chunk =3D new Buffer(chunk, =
encoding);\n\t  }\n\t  return chunk;\n\t}\n\n\t// if we're already =
writing something, then just put this\n\t// in the queue, and wait our =
turn.  Otherwise, call _write\n\t// If we return false, then we need a =
drain event, so set that flag.\n\tfunction writeOrBuffer(stream, state, =
chunk, encoding, cb) {\n\t  chunk =3D decodeChunk(state, chunk, =
encoding);\n\t  if (util.isBuffer(chunk))\n\t    encoding =3D =
'buffer';\n\t  var len =3D state.objectMode ? 1 : chunk.length;\n\n\t  =
state.length +=3D len;\n\n\t  var ret =3D state.length &lt; =
state.highWaterMark;\n\t  // we must ensure that previous needDrain will =
not be reset to false.\n\t  if (!ret)\n\t    state.needDrain =3D =
true;\n\n\t  if (state.writing || state.corked)\n\t    =
state.buffer.push(new WriteReq(chunk, encoding, cb));\n\t  else\n\t    =
doWrite(stream, state, false, len, chunk, encoding, cb);\n\n\t  return =
ret;\n\t}\n\n\tfunction doWrite(stream, state, writev, len, chunk, =
encoding, cb) {\n\t  state.writelen =3D len;\n\t  state.writecb =3D =
cb;\n\t  state.writing =3D true;\n\t  state.sync =3D true;\n\t  if =
(writev)\n\t    stream._writev(chunk, state.onwrite);\n\t  else\n\t    =
stream._write(chunk, encoding, state.onwrite);\n\t  state.sync =3D =
false;\n\t}\n\n\tfunction onwriteError(stream, state, sync, er, cb) =
{\n\t  if (sync)\n\t    process.nextTick(function() {\n\t      =
state.pendingcb--;\n\t      cb(er);\n\t    });\n\t  else {\n\t    =
state.pendingcb--;\n\t    cb(er);\n\t  }\n\n\t  =
stream._writableState.errorEmitted =3D true;\n\t  stream.emit('error', =
er);\n\t}\n\n\tfunction onwriteStateUpdate(state) {\n\t  state.writing =
=3D false;\n\t  state.writecb =3D null;\n\t  state.length -=3D =
state.writelen;\n\t  state.writelen =3D 0;\n\t}\n\n\tfunction =
onwrite(stream, er) {\n\t  var state =3D stream._writableState;\n\t  var =
sync =3D state.sync;\n\t  var cb =3D state.writecb;\n\n\t  =
onwriteStateUpdate(state);\n\n\t  if (er)\n\t    onwriteError(stream, =
state, sync, er, cb);\n\t  else {\n\t    // Check if we're actually =
ready to finish, but don't emit yet\n\t    var finished =3D =
needFinish(stream, state);\n\n\t    if (!finished &amp;&amp;\n\t        =
!state.corked &amp;&amp;\n\t        !state.bufferProcessing =
&amp;&amp;\n\t        state.buffer.length) {\n\t      =
clearBuffer(stream, state);\n\t    }\n\n\t    if (sync) {\n\t      =
process.nextTick(function() {\n\t        afterWrite(stream, state, =
finished, cb);\n\t      });\n\t    } else {\n\t      afterWrite(stream, =
state, finished, cb);\n\t    }\n\t  }\n\t}\n\n\tfunction =
afterWrite(stream, state, finished, cb) {\n\t  if (!finished)\n\t    =
onwriteDrain(stream, state);\n\t  state.pendingcb--;\n\t  cb();\n\t  =
finishMaybe(stream, state);\n\t}\n\n\t// Must force callback to be =
called on nextTick, so that we don't\n\t// emit 'drain' before the =
write() consumer gets the 'false' return\n\t// value, and has a chance =
to attach a 'drain' listener.\n\tfunction onwriteDrain(stream, state) =
{\n\t  if (state.length =3D=3D=3D 0 &amp;&amp; state.needDrain) {\n\t    =
state.needDrain =3D false;\n\t    stream.emit('drain');\n\t  =
}\n\t}\n\n\n\t// if there's something in the buffer waiting, then =
process it\n\tfunction clearBuffer(stream, state) {\n\t  =
state.bufferProcessing =3D true;\n\n\t  if (stream._writev &amp;&amp; =
state.buffer.length &gt; 1) {\n\t    // Fast case, write everything =
using _writev()\n\t    var cbs =3D [];\n\t    for (var c =3D 0; c &lt; =
state.buffer.length; c++)\n\t      =
cbs.push(state.buffer[c].callback);\n\n\t    // count the one we are =
adding, as well.\n\t    // TODO(isaacs) clean this up\n\t    =
state.pendingcb++;\n\t    doWrite(stream, state, true, state.length, =
state.buffer, '', function(err) {\n\t      for (var i =3D 0; i &lt; =
cbs.length; i++) {\n\t        state.pendingcb--;\n\t        =
cbs[i](err);\n\t      }\n\t    });\n\n\t    // Clear buffer\n\t    =
state.buffer =3D [];\n\t  } else {\n\t    // Slow case, write chunks =
one-by-one\n\t    for (var c =3D 0; c &lt; state.buffer.length; c++) =
{\n\t      var entry =3D state.buffer[c];\n\t      var chunk =3D =
entry.chunk;\n\t      var encoding =3D entry.encoding;\n\t      var cb =
=3D entry.callback;\n\t      var len =3D state.objectMode ? 1 : =
chunk.length;\n\n\t      doWrite(stream, state, false, len, chunk, =
encoding, cb);\n\n\t      // if we didn't call the onwrite immediately, =
then\n\t      // it means that we need to wait until it does.\n\t      =
// also, that means that the chunk and cb are currently\n\t      // =
being processed, so move the buffer counter past them.\n\t      if =
(state.writing) {\n\t        c++;\n\t        break;\n\t      }\n\t    =
}\n\n\t    if (c &lt; state.buffer.length)\n\t      state.buffer =3D =
state.buffer.slice(c);\n\t    else\n\t      state.buffer.length =3D =
0;\n\t  }\n\n\t  state.bufferProcessing =3D =
false;\n\t}\n\n\tWritable.prototype._write =3D function(chunk, encoding, =
cb) {\n\t  cb(new Error('not =
implemented'));\n\n\t};\n\n\tWritable.prototype._writev =3D =
null;\n\n\tWritable.prototype.end =3D function(chunk, encoding, cb) =
{\n\t  var state =3D this._writableState;\n\n\t  if =
(util.isFunction(chunk)) {\n\t    cb =3D chunk;\n\t    chunk =3D =
null;\n\t    encoding =3D null;\n\t  } else if =
(util.isFunction(encoding)) {\n\t    cb =3D encoding;\n\t    encoding =
=3D null;\n\t  }\n\n\t  if (!util.isNullOrUndefined(chunk))\n\t    =
this.write(chunk, encoding);\n\n\t  // .end() fully uncorks\n\t  if =
(state.corked) {\n\t    state.corked =3D 1;\n\t    this.uncork();\n\t  =
}\n\n\t  // ignore unnecessary end() calls.\n\t  if (!state.ending =
&amp;&amp; !state.finished)\n\t    endWritable(this, state, =
cb);\n\t};\n\n\n\tfunction needFinish(stream, state) {\n\t  return =
(state.ending &amp;&amp;\n\t          state.length =3D=3D=3D 0 =
&amp;&amp;\n\t          !state.finished &amp;&amp;\n\t          =
!state.writing);\n\t}\n\n\tfunction prefinish(stream, state) {\n\t  if =
(!state.prefinished) {\n\t    state.prefinished =3D true;\n\t    =
stream.emit('prefinish');\n\t  }\n\t}\n\n\tfunction finishMaybe(stream, =
state) {\n\t  var need =3D needFinish(stream, state);\n\t  if (need) =
{\n\t    if (state.pendingcb =3D=3D=3D 0) {\n\t      prefinish(stream, =
state);\n\t      state.finished =3D true;\n\t      =
stream.emit('finish');\n\t    } else\n\t      prefinish(stream, =
state);\n\t  }\n\t  return need;\n\t}\n\n\tfunction endWritable(stream, =
state, cb) {\n\t  state.ending =3D true;\n\t  finishMaybe(stream, =
state);\n\t  if (cb) {\n\t    if (state.finished)\n\t      =
process.nextTick(cb);\n\t    else\n\t      stream.once('finish', =
cb);\n\t  }\n\t  state.ended =3D true;\n\t}\n\n\t/* WEBPACK VAR =
INJECTION */}.call(exports, __webpack_require__(30)))\n\n/***/ },\n/* 37 =
*/\n/***/ function(module, exports, __webpack_require__) {\n\n\t// =
Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// =
Permission is hereby granted, free of charge, to any person obtaining =
a\n\t// copy of this software and associated documentation files =
(the\n\t// \"Software\"), to deal in the Software without restriction, =
including\n\t// without limitation the rights to use, copy, modify, =
merge, publish,\n\t// distribute, sublicense, and/or sell copies of the =
Software, and to permit\n\t// persons to whom the Software is furnished =
to do so, subject to the\n\t// following conditions:\n\t//\n\t// The =
above copyright notice and this permission notice shall be =
included\n\t// in all copies or substantial portions of the =
Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT =
WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT =
LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A =
PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE =
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR =
OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// =
OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR =
THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\tvar Buffer =3D =
__webpack_require__(2).Buffer;\n\n\tvar isBufferEncoding =3D =
Buffer.isEncoding\n\t  || function(encoding) {\n\t       switch =
(encoding &amp;&amp; encoding.toLowerCase()) {\n\t         case 'hex': =
case 'utf8': case 'utf-8': case 'ascii': case 'binary': case 'base64': =
case 'ucs2': case 'ucs-2': case 'utf16le': case 'utf-16le': case 'raw': =
return true;\n\t         default: return false;\n\t       }\n\t     =
}\n\n\n\tfunction assertEncoding(encoding) {\n\t  if (encoding =
&amp;&amp; !isBufferEncoding(encoding)) {\n\t    throw new =
Error('Unknown encoding: ' + encoding);\n\t  }\n\t}\n\n\t// =
StringDecoder provides an interface for efficiently splitting a series =
of\n\t// buffers into a series of JS strings without breaking apart =
multi-byte\n\t// characters. CESU-8 is handled as part of the UTF-8 =
encoding.\n\t//\n\t// @TODO Handling all encodings inside a single =
object makes it very difficult\n\t// to reason about this code, so it =
should be split up in the future.\n\t// @TODO There should be a =
utf8-strict encoding that rejects invalid UTF-8 code\n\t// points as =
used by CESU-8.\n\tvar StringDecoder =3D exports.StringDecoder =3D =
function(encoding) {\n\t  this.encoding =3D (encoding || =
'utf8').toLowerCase().replace(/[-_]/, '');\n\t  =
assertEncoding(encoding);\n\t  switch (this.encoding) {\n\t    case =
'utf8':\n\t      // CESU-8 represents each of Surrogate Pair by =
3-bytes\n\t      this.surrogateSize =3D 3;\n\t      break;\n\t    case =
'ucs2':\n\t    case 'utf16le':\n\t      // UTF-16 represents each of =
Surrogate Pair by 2-bytes\n\t      this.surrogateSize =3D 2;\n\t      =
this.detectIncompleteChar =3D utf16DetectIncompleteChar;\n\t      =
break;\n\t    case 'base64':\n\t      // Base-64 stores 3 bytes in 4 =
chars, and pads the remainder.\n\t      this.surrogateSize =3D 3;\n\t    =
  this.detectIncompleteChar =3D base64DetectIncompleteChar;\n\t      =
break;\n\t    default:\n\t      this.write =3D passThroughWrite;\n\t     =
 return;\n\t  }\n\n\t  // Enough space to store all bytes of a single =
character. UTF-8 needs 4\n\t  // bytes, but CESU-8 may require up to 6 =
(3 bytes per surrogate).\n\t  this.charBuffer =3D new Buffer(6);\n\t  // =
Number of bytes received for the current incomplete multi-byte =
character.\n\t  this.charReceived =3D 0;\n\t  // Number of bytes =
expected for the current incomplete multi-byte character.\n\t  =
this.charLength =3D 0;\n\t};\n\n\n\t// write decodes the given buffer =
and returns it as JS string that is\n\t// guaranteed to not contain any =
partial multi-byte characters. Any partial\n\t// character found at the =
end of the buffer is buffered up, and will be\n\t// returned when =
calling write again with the remaining bytes.\n\t//\n\t// Note: =
Converting a Buffer containing an orphan surrogate to a String\n\t// =
currently works, but converting a String to a Buffer (via `new Buffer`, =
or\n\t// Buffer#write) will replace incomplete surrogates with the =
unicode\n\t// replacement character. See =
https://codereview.chromium.org/121173009/ =
.\n\tStringDecoder.prototype.write =3D function(buffer) {\n\t  var =
charStr =3D '';\n\t  // if our last write ended with an incomplete =
multibyte character\n\t  while (this.charLength) {\n\t    // determine =
how many remaining bytes this buffer has to offer for this char\n\t    =
var available =3D (buffer.length &gt;=3D this.charLength - =
this.charReceived) ?\n\t        this.charLength - this.charReceived =
:\n\t        buffer.length;\n\n\t    // add the new bytes to the char =
buffer\n\t    buffer.copy(this.charBuffer, this.charReceived, 0, =
available);\n\t    this.charReceived +=3D available;\n\n\t    if =
(this.charReceived &lt; this.charLength) {\n\t      // still not enough =
chars in this buffer? wait for more ...\n\t      return '';\n\t    =
}\n\n\t    // remove bytes belonging to the current character from the =
buffer\n\t    buffer =3D buffer.slice(available, buffer.length);\n\n\t   =
 // get the character that was split\n\t    charStr =3D =
this.charBuffer.slice(0, this.charLength).toString(this.encoding);\n\n\t =
   // CESU-8: lead surrogate (D800-DBFF) is also the incomplete =
character\n\t    var charCode =3D charStr.charCodeAt(charStr.length - =
1);\n\t    if (charCode &gt;=3D 0xD800 &amp;&amp; charCode &lt;=3D =
0xDBFF) {\n\t      this.charLength +=3D this.surrogateSize;\n\t      =
charStr =3D '';\n\t      continue;\n\t    }\n\t    this.charReceived =3D =
this.charLength =3D 0;\n\n\t    // if there are no more bytes in this =
buffer, just emit our char\n\t    if (buffer.length =3D=3D=3D 0) {\n\t   =
   return charStr;\n\t    }\n\t    break;\n\t  }\n\n\t  // determine and =
set charLength / charReceived\n\t  =
this.detectIncompleteChar(buffer);\n\n\t  var end =3D buffer.length;\n\t =
 if (this.charLength) {\n\t    // buffer the incomplete character bytes =
we got\n\t    buffer.copy(this.charBuffer, 0, buffer.length - =
this.charReceived, end);\n\t    end -=3D this.charReceived;\n\t  }\n\n\t =
 charStr +=3D buffer.toString(this.encoding, 0, end);\n\n\t  var end =3D =
charStr.length - 1;\n\t  var charCode =3D charStr.charCodeAt(end);\n\t  =
// CESU-8: lead surrogate (D800-DBFF) is also the incomplete =
character\n\t  if (charCode &gt;=3D 0xD800 &amp;&amp; charCode &lt;=3D =
0xDBFF) {\n\t    var size =3D this.surrogateSize;\n\t    this.charLength =
+=3D size;\n\t    this.charReceived +=3D size;\n\t    =
this.charBuffer.copy(this.charBuffer, size, 0, size);\n\t    =
buffer.copy(this.charBuffer, 0, 0, size);\n\t    return =
charStr.substring(0, end);\n\t  }\n\n\t  // or just emit the charStr\n\t =
 return charStr;\n\t};\n\n\t// detectIncompleteChar determines if there =
is an incomplete UTF-8 character at\n\t// the end of the given buffer. =
If so, it sets this.charLength to the byte\n\t// length that character, =
and sets this.charReceived to the number of bytes\n\t// that are =
available for this =
character.\n\tStringDecoder.prototype.detectIncompleteChar =3D =
function(buffer) {\n\t  // determine how many bytes we have to check at =
the end of this buffer\n\t  var i =3D (buffer.length &gt;=3D 3) ? 3 : =
buffer.length;\n\n\t  // Figure out if one of the last i bytes of our =
buffer announces an\n\t  // incomplete char.\n\t  for (; i &gt; 0; i--) =
{\n\t    var c =3D buffer[buffer.length - i];\n\n\t    // See =
http://en.wikipedia.org/wiki/UTF-8#Description\n\n\t    // 110XXXXX\n\t  =
  if (i =3D=3D 1 &amp;&amp; c &gt;&gt; 5 =3D=3D 0x06) {\n\t      =
this.charLength =3D 2;\n\t      break;\n\t    }\n\n\t    // 1110XXXX\n\t =
   if (i &lt;=3D 2 &amp;&amp; c &gt;&gt; 4 =3D=3D 0x0E) {\n\t      =
this.charLength =3D 3;\n\t      break;\n\t    }\n\n\t    // 11110XXX\n\t =
   if (i &lt;=3D 3 &amp;&amp; c &gt;&gt; 3 =3D=3D 0x1E) {\n\t      =
this.charLength =3D 4;\n\t      break;\n\t    }\n\t  }\n\t  =
this.charReceived =3D i;\n\t};\n\n\tStringDecoder.prototype.end =3D =
function(buffer) {\n\t  var res =3D '';\n\t  if (buffer &amp;&amp; =
buffer.length)\n\t    res =3D this.write(buffer);\n\n\t  if =
(this.charReceived) {\n\t    var cr =3D this.charReceived;\n\t    var =
buf =3D this.charBuffer;\n\t    var enc =3D this.encoding;\n\t    res =
+=3D buf.slice(0, cr).toString(enc);\n\t  }\n\n\t  return =
res;\n\t};\n\n\tfunction passThroughWrite(buffer) {\n\t  return =
buffer.toString(this.encoding);\n\t}\n\n\tfunction =
utf16DetectIncompleteChar(buffer) {\n\t  this.charReceived =3D =
buffer.length % 2;\n\t  this.charLength =3D this.charReceived ? 2 : =
0;\n\t}\n\n\tfunction base64DetectIncompleteChar(buffer) {\n\t  =
this.charReceived =3D buffer.length % 3;\n\t  this.charLength =3D =
this.charReceived ? 3 : 0;\n\t}\n\n\n/***/ },\n/* 38 */\n/***/ =
function(module, exports, __webpack_require__) {\n\n\t// Copyright =
Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is =
hereby granted, free of charge, to any person obtaining a\n\t// copy of =
this software and associated documentation files (the\n\t// =
\"Software\"), to deal in the Software without restriction, =
including\n\t// without limitation the rights to use, copy, modify, =
merge, publish,\n\t// distribute, sublicense, and/or sell copies of the =
Software, and to permit\n\t// persons to whom the Software is furnished =
to do so, subject to the\n\t// following conditions:\n\t//\n\t// The =
above copyright notice and this permission notice shall be =
included\n\t// in all copies or substantial portions of the =
Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT =
WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT =
LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A =
PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE =
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR =
OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// =
OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR =
THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\t// a transform =
stream is a readable/writable stream where you do\n\t// something with =
the data.  Sometimes it's called a \"filter\",\n\t// but that's not a =
great name for it, since that implies a thing where\n\t// some bits pass =
through, and others are simply ignored.  (That would\n\t// be a valid =
example of a transform, of course.)\n\t//\n\t// While the output is =
causally related to the input, it's not a\n\t// necessarily symmetric or =
synchronous transformation.  For example,\n\t// a zlib stream might take =
multiple plain-text writes(), and then\n\t// emit a single compressed =
chunk some time in the future.\n\t//\n\t// Here's how this =
works:\n\t//\n\t// The Transform stream has all the aspects of the =
readable and writable\n\t// stream classes.  When you write(chunk), that =
calls _write(chunk,cb)\n\t// internally, and returns false if there's a =
lot of pending writes\n\t// buffered up.  When you call read(), that =
calls _read(n) until\n\t// there's enough pending readable data buffered =
up.\n\t//\n\t// In a transform stream, the written data is placed in a =
buffer.  When\n\t// _read(n) is called, it transforms the queued up =
data, calling the\n\t// buffered _write cb's as it consumes chunks.  If =
consuming a single\n\t// written chunk would result in multiple output =
chunks, then the first\n\t// outputted bit calls the readcb, and =
subsequent chunks just go into\n\t// the read buffer, and will cause it =
to emit 'readable' if necessary.\n\t//\n\t// This way, back-pressure is =
actually determined by the reading side,\n\t// since _read has to be =
called to start processing a new chunk.  However,\n\t// a pathological =
inflate type of transform can cause excessive buffering\n\t// here.  For =
example, imagine a stream where every byte of input is\n\t// interpreted =
as an integer from 0-255, and then results in that many\n\t// bytes of =
output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n\t// 1kb of =
data being output.  In this case, you could write a very small\n\t// =
amount of input, and end up with a very large amount of output.  =
In\n\t// such a pathological inflating mechanism, there'd be no way to =
tell\n\t// the system to stop doing the transform.  A single 4MB write =
could\n\t// cause the system to run out of memory.\n\t//\n\t// However, =
even in such a pathological case, only a single written chunk\n\t// =
would be consumed, and then the rest would wait (un-transformed) =
until\n\t// the results of the previous transformed chunk were =
consumed.\n\n\tmodule.exports =3D Transform;\n\n\tvar Duplex =3D =
__webpack_require__(35);\n\n\t/*&lt;replacement&gt;*/\n\tvar util =3D =
__webpack_require__(32);\n\tutil.inherits =3D =
__webpack_require__(33);\n\t/*&lt;/replacement&gt;*/\n\n\tutil.inherits(T=
ransform, Duplex);\n\n\n\tfunction TransformState(options, stream) {\n\t =
 this.afterTransform =3D function(er, data) {\n\t    return =
afterTransform(stream, er, data);\n\t  };\n\n\t  this.needTransform =3D =
false;\n\t  this.transforming =3D false;\n\t  this.writecb =3D null;\n\t =
 this.writechunk =3D null;\n\t}\n\n\tfunction afterTransform(stream, er, =
data) {\n\t  var ts =3D stream._transformState;\n\t  ts.transforming =3D =
false;\n\n\t  var cb =3D ts.writecb;\n\n\t  if (!cb)\n\t    return =
stream.emit('error', new Error('no writecb in Transform class'));\n\n\t  =
ts.writechunk =3D null;\n\t  ts.writecb =3D null;\n\n\t  if =
(!util.isNullOrUndefined(data))\n\t    stream.push(data);\n\n\t  if =
(cb)\n\t    cb(er);\n\n\t  var rs =3D stream._readableState;\n\t  =
rs.reading =3D false;\n\t  if (rs.needReadable || rs.length &lt; =
rs.highWaterMark) {\n\t    stream._read(rs.highWaterMark);\n\t  =
}\n\t}\n\n\n\tfunction Transform(options) {\n\t  if (!(this instanceof =
Transform))\n\t    return new Transform(options);\n\n\t  =
Duplex.call(this, options);\n\n\t  this._transformState =3D new =
TransformState(options, this);\n\n\t  // when the writable side =
finishes, then flush out anything remaining.\n\t  var stream =3D =
this;\n\n\t  // start out asking for a readable event once data is =
transformed.\n\t  this._readableState.needReadable =3D true;\n\n\t  // =
we have implemented the _read method, and done the other things\n\t  // =
that Readable wants before the first _read call, so unset the\n\t  // =
sync guard flag.\n\t  this._readableState.sync =3D false;\n\n\t  =
this.once('prefinish', function() {\n\t    if =
(util.isFunction(this._flush))\n\t      this._flush(function(er) {\n\t   =
     done(stream, er);\n\t      });\n\t    else\n\t      =
done(stream);\n\t  });\n\t}\n\n\tTransform.prototype.push =3D =
function(chunk, encoding) {\n\t  this._transformState.needTransform =3D =
false;\n\t  return Duplex.prototype.push.call(this, chunk, =
encoding);\n\t};\n\n\t// This is the part where you do stuff!\n\t// =
override this function in implementation classes.\n\t// 'chunk' is an =
input chunk.\n\t//\n\t// Call `push(newChunk)` to pass along transformed =
output\n\t// to the readable side.  You may call 'push' zero or more =
times.\n\t//\n\t// Call `cb(err)` when you are done with this chunk.  If =
you pass\n\t// an error, then that'll put the hurt on the whole =
operation.  If you\n\t// never call cb(), then you'll never get another =
chunk.\n\tTransform.prototype._transform =3D function(chunk, encoding, =
cb) {\n\t  throw new Error('not =
implemented');\n\t};\n\n\tTransform.prototype._write =3D function(chunk, =
encoding, cb) {\n\t  var ts =3D this._transformState;\n\t  ts.writecb =
=3D cb;\n\t  ts.writechunk =3D chunk;\n\t  ts.writeencoding =3D =
encoding;\n\t  if (!ts.transforming) {\n\t    var rs =3D =
this._readableState;\n\t    if (ts.needTransform ||\n\t        =
rs.needReadable ||\n\t        rs.length &lt; rs.highWaterMark)\n\t      =
this._read(rs.highWaterMark);\n\t  }\n\t};\n\n\t// Doesn't matter what =
the args are here.\n\t// _transform does all the work.\n\t// That we got =
here means that the readable side wants more =
data.\n\tTransform.prototype._read =3D function(n) {\n\t  var ts =3D =
this._transformState;\n\n\t  if (!util.isNull(ts.writechunk) &amp;&amp; =
ts.writecb &amp;&amp; !ts.transforming) {\n\t    ts.transforming =3D =
true;\n\t    this._transform(ts.writechunk, ts.writeencoding, =
ts.afterTransform);\n\t  } else {\n\t    // mark that we need a =
transform, so that any data that comes in\n\t    // will get processed, =
now that we've asked for it.\n\t    ts.needTransform =3D true;\n\t  =
}\n\t};\n\n\n\tfunction done(stream, er) {\n\t  if (er)\n\t    return =
stream.emit('error', er);\n\n\t  // if there's nothing in the write =
buffer, then that means\n\t  // that nothing more will ever be =
provided\n\t  var ws =3D stream._writableState;\n\t  var ts =3D =
stream._transformState;\n\n\t  if (ws.length)\n\t    throw new =
Error('calling transform done when ws.length !=3D 0');\n\n\t  if =
(ts.transforming)\n\t    throw new Error('calling transform done when =
still transforming');\n\n\t  return stream.push(null);\n\t}\n\n\n/***/ =
},\n/* 39 */\n/***/ function(module, exports, __webpack_require__) =
{\n\n\t// Copyright Joyent, Inc. and other Node =
contributors.\n\t//\n\t// Permission is hereby granted, free of charge, =
to any person obtaining a\n\t// copy of this software and associated =
documentation files (the\n\t// \"Software\"), to deal in the Software =
without restriction, including\n\t// without limitation the rights to =
use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or =
sell copies of the Software, and to permit\n\t// persons to whom the =
Software is furnished to do so, subject to the\n\t// following =
conditions:\n\t//\n\t// The above copyright notice and this permission =
notice shall be included\n\t// in all copies or substantial portions of =
the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT =
WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT =
LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A =
PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE =
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR =
OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// =
OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR =
THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\t// a passthrough =
stream.\n\t// basically just the most minimal sort of Transform =
stream.\n\t// Every written chunk gets output as-is.\n\n\tmodule.exports =
=3D PassThrough;\n\n\tvar Transform =3D =
__webpack_require__(38);\n\n\t/*&lt;replacement&gt;*/\n\tvar util =3D =
__webpack_require__(32);\n\tutil.inherits =3D =
__webpack_require__(33);\n\t/*&lt;/replacement&gt;*/\n\n\tutil.inherits(P=
assThrough, Transform);\n\n\tfunction PassThrough(options) {\n\t  if =
(!(this instanceof PassThrough))\n\t    return new =
PassThrough(options);\n\n\t  Transform.call(this, =
options);\n\t}\n\n\tPassThrough.prototype._transform =3D function(chunk, =
encoding, cb) {\n\t  cb(null, chunk);\n\t};\n\n\n/***/ },\n/* 40 =
*/\n/***/ function(module, exports, __webpack_require__) =
{\n\n\tmodule.exports =3D __webpack_require__(36)\n\n\n/***/ },\n/* 41 =
*/\n/***/ function(module, exports, __webpack_require__) =
{\n\n\tmodule.exports =3D __webpack_require__(35)\n\n\n/***/ },\n/* 42 =
*/\n/***/ function(module, exports, __webpack_require__) =
{\n\n\tmodule.exports =3D __webpack_require__(38)\n\n\n/***/ },\n/* 43 =
*/\n/***/ function(module, exports, __webpack_require__) =
{\n\n\tmodule.exports =3D __webpack_require__(39)\n\n\n/***/ },\n/* 44 =
*/\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* =
WEBPACK VAR INJECTION */(function(Buffer, __dirname) {/* jslint node: =
true */\n\t'use strict';\n\n\t// var b64 =3D =
require('./base64.js').base64DecToArr;\n\tfunction VirtualFileSystem() =
{\n\t\tthis.fileSystem =3D {};\n\t\tthis.baseSystem =3D =
{};\n\t}\n\n\tVirtualFileSystem.prototype.readFileSync =3D =
function(filename) {\n\t\tfilename =3D fixFilename(filename);\n\n\t\tvar =
base64content =3D this.baseSystem[filename];\n\t\tif (base64content) =
{\n\t\t\treturn new Buffer(base64content, =
'base64');\n\t\t}\n\n\t\treturn =
this.fileSystem[filename];\n\t};\n\n\tVirtualFileSystem.prototype.writeFi=
leSync =3D function(filename, content) =
{\n\t\tthis.fileSystem[fixFilename(filename)] =3D =
content;\n\t};\n\n\tVirtualFileSystem.prototype.bindFS =3D =
function(data) {\n\t\tthis.baseSystem =3D data;\n\t};\n\n\n\tfunction =
fixFilename(filename) {\n\t\tif (filename.indexOf(__dirname) =3D=3D=3D =
0) {\n\t\t\tfilename =3D =
filename.substring(__dirname.length);\n\t\t}\n\n\t\tif =
(filename.indexOf('/') =3D=3D=3D 0) {\n\t\t\tfilename =3D =
filename.substring(1);\n\t\t}\n\n\t\treturn =
filename;\n\t}\n\n\tmodule.exports =3D new VirtualFileSystem();\n\n\t/* =
WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2).Buffer, =
\"/\"))\n\n/***/ },\n/* 45 */\n/***/ function(module, exports, =
__webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(Buffer) =
{// Generated by CoffeeScript 1.7.1\n\n\t/*\n\tPDFObject - converts =
JavaScript types into their corrisponding PDF types.\n\tBy Devon =
Govett\n\t */\n\n\t(function() {\n\t  var PDFObject, PDFReference;\n\n\t =
 PDFObject =3D (function() {\n\t    var escapable, escapableRe, pad, =
swapBytes;\n\n\t    function PDFObject() {}\n\n\t    pad =3D =
function(str, length) {\n\t      return (Array(length + 1).join('0') + =
str).slice(-length);\n\t    };\n\n\t    escapableRe =3D =
/[\\n\\r\\t\\b\\f\\(\\)\\\\]/g;\n\n\t    escapable =3D {\n\t      '\\n': =
'\\\\n',\n\t      '\\r': '\\\\r',\n\t      '\\t': '\\\\t',\n\t      =
'\\b': '\\\\b',\n\t      '\\f': '\\\\f',\n\t      '\\\\': =
'\\\\\\\\',\n\t      '(': '\\\\(',\n\t      ')': '\\\\)'\n\t    };\n\n\t =
   swapBytes =3D function(buff) {\n\t      var a, i, l, _i, _ref;\n\t    =
  l =3D buff.length;\n\t      if (l &amp; 0x01) {\n\t        throw new =
Error(\"Buffer length must be even\");\n\t      } else {\n\t        for =
(i =3D _i =3D 0, _ref =3D l - 1; _i &lt; _ref; i =3D _i +=3D 2) {\n\t    =
      a =3D buff[i];\n\t          buff[i] =3D buff[i + 1];\n\t          =
buff[i + 1] =3D a;\n\t        }\n\t      }\n\t      return buff;\n\t    =
};\n\n\t    PDFObject.convert =3D function(object) {\n\t      var e, i, =
isUnicode, items, key, out, string, val, _i, _ref;\n\t      if (typeof =
object =3D=3D=3D 'string') {\n\t        return '/' + object;\n\t      } =
else if (object instanceof String) {\n\t        string =3D =
object.replace(escapableRe, function(c) {\n\t          return =
escapable[c];\n\t        });\n\t        isUnicode =3D false;\n\t        =
for (i =3D _i =3D 0, _ref =3D string.length; _i &lt; _ref; i =3D _i +=3D =
1) {\n\t          if (string.charCodeAt(i) &gt; 0x7f) {\n\t            =
isUnicode =3D true;\n\t            break;\n\t          }\n\t        =
}\n\t        if (isUnicode) {\n\t          string =3D swapBytes(new =
Buffer('\\ufeff' + string, 'utf16le')).toString('binary');\n\t        =
}\n\t        return '(' + string + ')';\n\t      } else if =
(Buffer.isBuffer(object)) {\n\t        return '&lt;' + =
object.toString('hex') + '&gt;';\n\t      } else if (object instanceof =
PDFReference) {\n\t        return object.toString();\n\t      } else if =
(object instanceof Date) {\n\t        return '(D:' + =
pad(object.getUTCFullYear(), 4) + pad(object.getUTCMonth(), 2) + =
pad(object.getUTCDate(), 2) + pad(object.getUTCHours(), 2) + =
pad(object.getUTCMinutes(), 2) + pad(object.getUTCSeconds(), 2) + =
'Z)';\n\t      } else if (Array.isArray(object)) {\n\t        items =3D =
((function() {\n\t          var _j, _len, _results;\n\t          =
_results =3D [];\n\t          for (_j =3D 0, _len =3D object.length; _j =
&lt; _len; _j++) {\n\t            e =3D object[_j];\n\t            =
_results.push(PDFObject.convert(e));\n\t          }\n\t          return =
_results;\n\t        })()).join(' ');\n\t        return '[' + items + =
']';\n\t      } else if ({}.toString.call(object) =3D=3D=3D '[object =
Object]') {\n\t        out =3D ['&lt;&lt;'];\n\t        for (key in =
object) {\n\t          val =3D object[key];\n\t          out.push('/' + =
key + ' ' + PDFObject.convert(val));\n\t        }\n\t        =
out.push('&gt;&gt;');\n\t        return out.join('\\n');\n\t      } else =
{\n\t        return '' + object;\n\t      }\n\t    };\n\n\t    return =
PDFObject;\n\n\t  })();\n\n\t  module.exports =3D PDFObject;\n\n\t  =
PDFReference =3D __webpack_require__(46);\n\n\t}).call(this);\n\n\t/* =
WEBPACK VAR INJECTION */}.call(exports, =
__webpack_require__(2).Buffer))\n\n/***/ },\n/* 46 */\n/***/ =
function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR =
INJECTION */(function(Buffer) {// Generated by CoffeeScript =
1.7.1\n\n\t/*\n\tPDFReference - represents a reference to another object =
in the PDF object heirarchy\n\tBy Devon Govett\n\t */\n\n\t(function() =
{\n\t  var PDFObject, PDFReference, zlib,\n\t    __bind =3D function(fn, =
me){ return function(){ return fn.apply(me, arguments); }; };\n\n\t  =
zlib =3D __webpack_require__(47);\n\n\t  PDFReference =3D (function() =
{\n\t    function PDFReference(document, id, data) {\n\t      =
this.document =3D document;\n\t      this.id =3D id;\n\t      this.data =
=3D data !=3D null ? data : {};\n\t      this.finalize =3D =
__bind(this.finalize, this);\n\t      this.gen =3D 0;\n\t      =
this.deflate =3D null;\n\t      this.compress =3D this.document.compress =
&amp;&amp; !this.data.Filter;\n\t      this.uncompressedLength =3D =
0;\n\t      this.chunks =3D [];\n\t    }\n\n\t    =
PDFReference.prototype.initDeflate =3D function() {\n\t      =
this.data.Filter =3D 'FlateDecode';\n\t      this.deflate =3D =
zlib.createDeflate();\n\t      this.deflate.on('data', (function(_this) =
{\n\t        return function(chunk) {\n\t          =
_this.chunks.push(chunk);\n\t          return _this.data.Length +=3D =
chunk.length;\n\t        };\n\t      })(this));\n\t      return =
this.deflate.on('end', this.finalize);\n\t    };\n\n\t    =
PDFReference.prototype.write =3D function(chunk) {\n\t      var =
_base;\n\t      if (!Buffer.isBuffer(chunk)) {\n\t        chunk =3D new =
Buffer(chunk + '\\n', 'binary');\n\t      }\n\t      =
this.uncompressedLength +=3D chunk.length;\n\t      if ((_base =3D =
this.data).Length =3D=3D null) {\n\t        _base.Length =3D 0;\n\t      =
}\n\t      if (this.compress) {\n\t        if (!this.deflate) {\n\t      =
    this.initDeflate();\n\t        }\n\t        return =
this.deflate.write(chunk);\n\t      } else {\n\t        =
this.chunks.push(chunk);\n\t        return this.data.Length +=3D =
chunk.length;\n\t      }\n\t    };\n\n\t    PDFReference.prototype.end =
=3D function(chunk) {\n\t      if (typeof chunk =3D=3D=3D 'string' || =
Buffer.isBuffer(chunk)) {\n\t        this.write(chunk);\n\t      }\n\t   =
   if (this.deflate) {\n\t        return this.deflate.end();\n\t      } =
else {\n\t        return this.finalize();\n\t      }\n\t    };\n\n\t    =
PDFReference.prototype.finalize =3D function() {\n\t      var chunk, _i, =
_len, _ref;\n\t      this.offset =3D this.document._offset;\n\t      =
this.document._write(\"\" + this.id + \" \" + this.gen + \" obj\");\n\t  =
    this.document._write(PDFObject.convert(this.data));\n\t      if =
(this.chunks.length) {\n\t        this.document._write('stream');\n\t    =
    _ref =3D this.chunks;\n\t        for (_i =3D 0, _len =3D =
_ref.length; _i &lt; _len; _i++) {\n\t          chunk =3D _ref[_i];\n\t  =
        this.document._write(chunk);\n\t        }\n\t        =
this.chunks.length =3D 0;\n\t        =
this.document._write('\\nendstream');\n\t      }\n\t      =
this.document._write('endobj');\n\t      return =
this.document._refEnd(this);\n\t    };\n\n\t    =
PDFReference.prototype.toString =3D function() {\n\t      return \"\" + =
this.id + \" \" + this.gen + \" R\";\n\t    };\n\n\t    return =
PDFReference;\n\n\t  })();\n\n\t  module.exports =3D PDFReference;\n\n\t =
 PDFObject =3D __webpack_require__(45);\n\n\t}).call(this);\n\n\t/* =
WEBPACK VAR INJECTION */}.call(exports, =
__webpack_require__(2).Buffer))\n\n/***/ },\n/* 47 */\n/***/ =
function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR =
INJECTION */(function(Buffer, process) {// Copyright Joyent, Inc. and =
other Node contributors.\n\t//\n\t// Permission is hereby granted, free =
of charge, to any person obtaining a\n\t// copy of this software and =
associated documentation files (the\n\t// \"Software\"), to deal in the =
Software without restriction, including\n\t// without limitation the =
rights to use, copy, modify, merge, publish,\n\t// distribute, =
sublicense, and/or sell copies of the Software, and to permit\n\t// =
persons to whom the Software is furnished to do so, subject to the\n\t// =
following conditions:\n\t//\n\t// The above copyright notice and this =
permission notice shall be included\n\t// in all copies or substantial =
portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS =
IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING =
BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR =
A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE =
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR =
OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// =
OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR =
THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\tvar Transform =3D =
__webpack_require__(42);\n\n\tvar binding =3D =
__webpack_require__(48);\n\tvar util =3D __webpack_require__(60);\n\tvar =
assert =3D __webpack_require__(63).ok;\n\n\t// zlib doesn't provide =
these, so kludge them in following the same\n\t// const naming scheme =
zlib uses.\n\tbinding.Z_MIN_WINDOWBITS =3D =
8;\n\tbinding.Z_MAX_WINDOWBITS =3D 15;\n\tbinding.Z_DEFAULT_WINDOWBITS =
=3D 15;\n\n\t// fewer than 64 bytes per chunk is stupid.\n\t// =
technically it could work with as few as 8, but even 64 bytes\n\t// is =
absurdly low.  Usually a MB or more is best.\n\tbinding.Z_MIN_CHUNK =3D =
64;\n\tbinding.Z_MAX_CHUNK =3D Infinity;\n\tbinding.Z_DEFAULT_CHUNK =3D =
(16 * 1024);\n\n\tbinding.Z_MIN_MEMLEVEL =3D =
1;\n\tbinding.Z_MAX_MEMLEVEL =3D 9;\n\tbinding.Z_DEFAULT_MEMLEVEL =3D =
8;\n\n\tbinding.Z_MIN_LEVEL =3D -1;\n\tbinding.Z_MAX_LEVEL =3D =
9;\n\tbinding.Z_DEFAULT_LEVEL =3D binding.Z_DEFAULT_COMPRESSION;\n\n\t// =
expose all the zlib =
constants\n\tObject.keys(binding).forEach(function(k) {\n\t  if =
(k.match(/^Z/)) exports[k] =3D binding[k];\n\t});\n\n\t// translation =
table for return codes.\n\texports.codes =3D {\n\t  Z_OK: =
binding.Z_OK,\n\t  Z_STREAM_END: binding.Z_STREAM_END,\n\t  Z_NEED_DICT: =
binding.Z_NEED_DICT,\n\t  Z_ERRNO: binding.Z_ERRNO,\n\t  Z_STREAM_ERROR: =
binding.Z_STREAM_ERROR,\n\t  Z_DATA_ERROR: binding.Z_DATA_ERROR,\n\t  =
Z_MEM_ERROR: binding.Z_MEM_ERROR,\n\t  Z_BUF_ERROR: =
binding.Z_BUF_ERROR,\n\t  Z_VERSION_ERROR: =
binding.Z_VERSION_ERROR\n\t};\n\n\tObject.keys(exports.codes).forEach(fun=
ction(k) {\n\t  exports.codes[exports.codes[k]] =3D =
k;\n\t});\n\n\texports.Deflate =3D Deflate;\n\texports.Inflate =3D =
Inflate;\n\texports.Gzip =3D Gzip;\n\texports.Gunzip =3D =
Gunzip;\n\texports.DeflateRaw =3D DeflateRaw;\n\texports.InflateRaw =3D =
InflateRaw;\n\texports.Unzip =3D Unzip;\n\n\texports.createDeflate =3D =
function(o) {\n\t  return new =
Deflate(o);\n\t};\n\n\texports.createInflate =3D function(o) {\n\t  =
return new Inflate(o);\n\t};\n\n\texports.createDeflateRaw =3D =
function(o) {\n\t  return new =
DeflateRaw(o);\n\t};\n\n\texports.createInflateRaw =3D function(o) {\n\t =
 return new InflateRaw(o);\n\t};\n\n\texports.createGzip =3D function(o) =
{\n\t  return new Gzip(o);\n\t};\n\n\texports.createGunzip =3D =
function(o) {\n\t  return new Gunzip(o);\n\t};\n\n\texports.createUnzip =
=3D function(o) {\n\t  return new Unzip(o);\n\t};\n\n\n\t// Convenience =
methods.\n\t// compress/decompress a string or buffer in one =
step.\n\texports.deflate =3D function(buffer, opts, callback) {\n\t  if =
(typeof opts =3D=3D=3D 'function') {\n\t    callback =3D opts;\n\t    =
opts =3D {};\n\t  }\n\t  return zlibBuffer(new Deflate(opts), buffer, =
callback);\n\t};\n\n\texports.deflateSync =3D function(buffer, opts) =
{\n\t  return zlibBufferSync(new Deflate(opts), =
buffer);\n\t};\n\n\texports.gzip =3D function(buffer, opts, callback) =
{\n\t  if (typeof opts =3D=3D=3D 'function') {\n\t    callback =3D =
opts;\n\t    opts =3D {};\n\t  }\n\t  return zlibBuffer(new Gzip(opts), =
buffer, callback);\n\t};\n\n\texports.gzipSync =3D function(buffer, =
opts) {\n\t  return zlibBufferSync(new Gzip(opts), =
buffer);\n\t};\n\n\texports.deflateRaw =3D function(buffer, opts, =
callback) {\n\t  if (typeof opts =3D=3D=3D 'function') {\n\t    callback =
=3D opts;\n\t    opts =3D {};\n\t  }\n\t  return zlibBuffer(new =
DeflateRaw(opts), buffer, callback);\n\t};\n\n\texports.deflateRawSync =
=3D function(buffer, opts) {\n\t  return zlibBufferSync(new =
DeflateRaw(opts), buffer);\n\t};\n\n\texports.unzip =3D function(buffer, =
opts, callback) {\n\t  if (typeof opts =3D=3D=3D 'function') {\n\t    =
callback =3D opts;\n\t    opts =3D {};\n\t  }\n\t  return zlibBuffer(new =
Unzip(opts), buffer, callback);\n\t};\n\n\texports.unzipSync =3D =
function(buffer, opts) {\n\t  return zlibBufferSync(new Unzip(opts), =
buffer);\n\t};\n\n\texports.inflate =3D function(buffer, opts, callback) =
{\n\t  if (typeof opts =3D=3D=3D 'function') {\n\t    callback =3D =
opts;\n\t    opts =3D {};\n\t  }\n\t  return zlibBuffer(new =
Inflate(opts), buffer, callback);\n\t};\n\n\texports.inflateSync =3D =
function(buffer, opts) {\n\t  return zlibBufferSync(new Inflate(opts), =
buffer);\n\t};\n\n\texports.gunzip =3D function(buffer, opts, callback) =
{\n\t  if (typeof opts =3D=3D=3D 'function') {\n\t    callback =3D =
opts;\n\t    opts =3D {};\n\t  }\n\t  return zlibBuffer(new =
Gunzip(opts), buffer, callback);\n\t};\n\n\texports.gunzipSync =3D =
function(buffer, opts) {\n\t  return zlibBufferSync(new Gunzip(opts), =
buffer);\n\t};\n\n\texports.inflateRaw =3D function(buffer, opts, =
callback) {\n\t  if (typeof opts =3D=3D=3D 'function') {\n\t    callback =
=3D opts;\n\t    opts =3D {};\n\t  }\n\t  return zlibBuffer(new =
InflateRaw(opts), buffer, callback);\n\t};\n\n\texports.inflateRawSync =
=3D function(buffer, opts) {\n\t  return zlibBufferSync(new =
InflateRaw(opts), buffer);\n\t};\n\n\tfunction zlibBuffer(engine, =
buffer, callback) {\n\t  var buffers =3D [];\n\t  var nread =3D 0;\n\n\t =
 engine.on('error', onError);\n\t  engine.on('end', onEnd);\n\n\t  =
engine.end(buffer);\n\t  flow();\n\n\t  function flow() {\n\t    var =
chunk;\n\t    while (null !=3D=3D (chunk =3D engine.read())) {\n\t      =
buffers.push(chunk);\n\t      nread +=3D chunk.length;\n\t    }\n\t    =
engine.once('readable', flow);\n\t  }\n\n\t  function onError(err) {\n\t =
   engine.removeListener('end', onEnd);\n\t    =
engine.removeListener('readable', flow);\n\t    callback(err);\n\t  =
}\n\n\t  function onEnd() {\n\t    var buf =3D Buffer.concat(buffers, =
nread);\n\t    buffers =3D [];\n\t    callback(null, buf);\n\t    =
engine.close();\n\t  }\n\t}\n\n\tfunction zlibBufferSync(engine, buffer) =
{\n\t  if (typeof buffer =3D=3D=3D 'string')\n\t    buffer =3D new =
Buffer(buffer);\n\t  if (!Buffer.isBuffer(buffer))\n\t    throw new =
TypeError('Not a string or buffer');\n\n\t  var flushFlag =3D =
binding.Z_FINISH;\n\n\t  return engine._processChunk(buffer, =
flushFlag);\n\t}\n\n\t// generic zlib\n\t// minimal 2-byte =
header\n\tfunction Deflate(opts) {\n\t  if (!(this instanceof Deflate)) =
return new Deflate(opts);\n\t  Zlib.call(this, opts, =
binding.DEFLATE);\n\t}\n\n\tfunction Inflate(opts) {\n\t  if (!(this =
instanceof Inflate)) return new Inflate(opts);\n\t  Zlib.call(this, =
opts, binding.INFLATE);\n\t}\n\n\n\n\t// gzip - bigger header, same =
deflate compression\n\tfunction Gzip(opts) {\n\t  if (!(this instanceof =
Gzip)) return new Gzip(opts);\n\t  Zlib.call(this, opts, =
binding.GZIP);\n\t}\n\n\tfunction Gunzip(opts) {\n\t  if (!(this =
instanceof Gunzip)) return new Gunzip(opts);\n\t  Zlib.call(this, opts, =
binding.GUNZIP);\n\t}\n\n\n\n\t// raw - no header\n\tfunction =
DeflateRaw(opts) {\n\t  if (!(this instanceof DeflateRaw)) return new =
DeflateRaw(opts);\n\t  Zlib.call(this, opts, =
binding.DEFLATERAW);\n\t}\n\n\tfunction InflateRaw(opts) {\n\t  if =
(!(this instanceof InflateRaw)) return new InflateRaw(opts);\n\t  =
Zlib.call(this, opts, binding.INFLATERAW);\n\t}\n\n\n\t// auto-detect =
header.\n\tfunction Unzip(opts) {\n\t  if (!(this instanceof Unzip)) =
return new Unzip(opts);\n\t  Zlib.call(this, opts, =
binding.UNZIP);\n\t}\n\n\n\t// the Zlib class they all inherit =
from\n\t// This thing manages the queue of requests, and returns\n\t// =
true or false if there is anything in the queue when\n\t// you call the =
.write() method.\n\n\tfunction Zlib(opts, mode) {\n\t  this._opts =3D =
opts =3D opts || {};\n\t  this._chunkSize =3D opts.chunkSize || =
exports.Z_DEFAULT_CHUNK;\n\n\t  Transform.call(this, opts);\n\n\t  if =
(opts.flush) {\n\t    if (opts.flush !=3D=3D binding.Z_NO_FLUSH =
&amp;&amp;\n\t        opts.flush !=3D=3D binding.Z_PARTIAL_FLUSH =
&amp;&amp;\n\t        opts.flush !=3D=3D binding.Z_SYNC_FLUSH =
&amp;&amp;\n\t        opts.flush !=3D=3D binding.Z_FULL_FLUSH =
&amp;&amp;\n\t        opts.flush !=3D=3D binding.Z_FINISH &amp;&amp;\n\t =
       opts.flush !=3D=3D binding.Z_BLOCK) {\n\t      throw new =
Error('Invalid flush flag: ' + opts.flush);\n\t    }\n\t  }\n\t  =
this._flushFlag =3D opts.flush || binding.Z_NO_FLUSH;\n\n\t  if =
(opts.chunkSize) {\n\t    if (opts.chunkSize &lt; exports.Z_MIN_CHUNK =
||\n\t        opts.chunkSize &gt; exports.Z_MAX_CHUNK) {\n\t      throw =
new Error('Invalid chunk size: ' + opts.chunkSize);\n\t    }\n\t  =
}\n\n\t  if (opts.windowBits) {\n\t    if (opts.windowBits &lt; =
exports.Z_MIN_WINDOWBITS ||\n\t        opts.windowBits &gt; =
exports.Z_MAX_WINDOWBITS) {\n\t      throw new Error('Invalid =
windowBits: ' + opts.windowBits);\n\t    }\n\t  }\n\n\t  if (opts.level) =
{\n\t    if (opts.level &lt; exports.Z_MIN_LEVEL ||\n\t        =
opts.level &gt; exports.Z_MAX_LEVEL) {\n\t      throw new Error('Invalid =
compression level: ' + opts.level);\n\t    }\n\t  }\n\n\t  if =
(opts.memLevel) {\n\t    if (opts.memLevel &lt; exports.Z_MIN_MEMLEVEL =
||\n\t        opts.memLevel &gt; exports.Z_MAX_MEMLEVEL) {\n\t      =
throw new Error('Invalid memLevel: ' + opts.memLevel);\n\t    }\n\t  =
}\n\n\t  if (opts.strategy) {\n\t    if (opts.strategy !=3D =
exports.Z_FILTERED &amp;&amp;\n\t        opts.strategy !=3D =
exports.Z_HUFFMAN_ONLY &amp;&amp;\n\t        opts.strategy !=3D =
exports.Z_RLE &amp;&amp;\n\t        opts.strategy !=3D exports.Z_FIXED =
&amp;&amp;\n\t        opts.strategy !=3D exports.Z_DEFAULT_STRATEGY) =
{\n\t      throw new Error('Invalid strategy: ' + opts.strategy);\n\t    =
}\n\t  }\n\n\t  if (opts.dictionary) {\n\t    if =
(!Buffer.isBuffer(opts.dictionary)) {\n\t      throw new Error('Invalid =
dictionary: it should be a Buffer instance');\n\t    }\n\t  }\n\n\t  =
this._binding =3D new binding.Zlib(mode);\n\n\t  var self =3D this;\n\t  =
this._hadError =3D false;\n\t  this._binding.onerror =3D =
function(message, errno) {\n\t    // there is no way to cleanly =
recover.\n\t    // continuing only obscures problems.\n\t    =
self._binding =3D null;\n\t    self._hadError =3D true;\n\n\t    var =
error =3D new Error(message);\n\t    error.errno =3D errno;\n\t    =
error.code =3D exports.codes[errno];\n\t    self.emit('error', =
error);\n\t  };\n\n\t  var level =3D exports.Z_DEFAULT_COMPRESSION;\n\t  =
if (typeof opts.level =3D=3D=3D 'number') level =3D opts.level;\n\n\t  =
var strategy =3D exports.Z_DEFAULT_STRATEGY;\n\t  if (typeof =
opts.strategy =3D=3D=3D 'number') strategy =3D opts.strategy;\n\n\t  =
this._binding.init(opts.windowBits || exports.Z_DEFAULT_WINDOWBITS,\n\t  =
                   level,\n\t                     opts.memLevel || =
exports.Z_DEFAULT_MEMLEVEL,\n\t                     strategy,\n\t        =
             opts.dictionary);\n\n\t  this._buffer =3D new =
Buffer(this._chunkSize);\n\t  this._offset =3D 0;\n\t  this._closed =3D =
false;\n\t  this._level =3D level;\n\t  this._strategy =3D =
strategy;\n\n\t  this.once('end', =
this.close);\n\t}\n\n\tutil.inherits(Zlib, =
Transform);\n\n\tZlib.prototype.params =3D function(level, strategy, =
callback) {\n\t  if (level &lt; exports.Z_MIN_LEVEL ||\n\t      level =
&gt; exports.Z_MAX_LEVEL) {\n\t    throw new RangeError('Invalid =
compression level: ' + level);\n\t  }\n\t  if (strategy !=3D =
exports.Z_FILTERED &amp;&amp;\n\t      strategy !=3D =
exports.Z_HUFFMAN_ONLY &amp;&amp;\n\t      strategy !=3D exports.Z_RLE =
&amp;&amp;\n\t      strategy !=3D exports.Z_FIXED &amp;&amp;\n\t      =
strategy !=3D exports.Z_DEFAULT_STRATEGY) {\n\t    throw new =
TypeError('Invalid strategy: ' + strategy);\n\t  }\n\n\t  if =
(this._level !=3D=3D level || this._strategy !=3D=3D strategy) {\n\t    =
var self =3D this;\n\t    this.flush(binding.Z_SYNC_FLUSH, function() =
{\n\t      self._binding.params(level, strategy);\n\t      if =
(!self._hadError) {\n\t        self._level =3D level;\n\t        =
self._strategy =3D strategy;\n\t        if (callback) callback();\n\t    =
  }\n\t    });\n\t  } else {\n\t    process.nextTick(callback);\n\t  =
}\n\t};\n\n\tZlib.prototype.reset =3D function() {\n\t  return =
this._binding.reset();\n\t};\n\n\t// This is the _flush function called =
by the transform class,\n\t// internally, when the last chunk has been =
written.\n\tZlib.prototype._flush =3D function(callback) {\n\t  =
this._transform(new Buffer(0), '', =
callback);\n\t};\n\n\tZlib.prototype.flush =3D function(kind, callback) =
{\n\t  var ws =3D this._writableState;\n\n\t  if (typeof kind =3D=3D=3D =
'function' || (kind =3D=3D=3D void 0 &amp;&amp; !callback)) {\n\t    =
callback =3D kind;\n\t    kind =3D binding.Z_FULL_FLUSH;\n\t  }\n\n\t  =
if (ws.ended) {\n\t    if (callback)\n\t      =
process.nextTick(callback);\n\t  } else if (ws.ending) {\n\t    if =
(callback)\n\t      this.once('end', callback);\n\t  } else if =
(ws.needDrain) {\n\t    var self =3D this;\n\t    this.once('drain', =
function() {\n\t      self.flush(callback);\n\t    });\n\t  } else {\n\t =
   this._flushFlag =3D kind;\n\t    this.write(new Buffer(0), '', =
callback);\n\t  }\n\t};\n\n\tZlib.prototype.close =3D function(callback) =
{\n\t  if (callback)\n\t    process.nextTick(callback);\n\n\t  if =
(this._closed)\n\t    return;\n\n\t  this._closed =3D true;\n\n\t  =
this._binding.close();\n\n\t  var self =3D this;\n\t  =
process.nextTick(function() {\n\t    self.emit('close');\n\t  =
});\n\t};\n\n\tZlib.prototype._transform =3D function(chunk, encoding, =
cb) {\n\t  var flushFlag;\n\t  var ws =3D this._writableState;\n\t  var =
ending =3D ws.ending || ws.ended;\n\t  var last =3D ending &amp;&amp; =
(!chunk || ws.length =3D=3D=3D chunk.length);\n\n\t  if (!chunk =
=3D=3D=3D null &amp;&amp; !Buffer.isBuffer(chunk))\n\t    return cb(new =
Error('invalid input'));\n\n\t  // If it's the last chunk, or a final =
flush, we use the Z_FINISH flush flag.\n\t  // If it's explicitly =
flushing at some other time, then we use\n\t  // Z_FULL_FLUSH. =
Otherwise, use Z_NO_FLUSH for maximum compression\n\t  // goodness.\n\t  =
if (last)\n\t    flushFlag =3D binding.Z_FINISH;\n\t  else {\n\t    =
flushFlag =3D this._flushFlag;\n\t    // once we've flushed the last of =
the queue, stop flushing and\n\t    // go back to the normal =
behavior.\n\t    if (chunk.length &gt;=3D ws.length) {\n\t      =
this._flushFlag =3D this._opts.flush || binding.Z_NO_FLUSH;\n\t    }\n\t =
 }\n\n\t  var self =3D this;\n\t  this._processChunk(chunk, flushFlag, =
cb);\n\t};\n\n\tZlib.prototype._processChunk =3D function(chunk, =
flushFlag, cb) {\n\t  var availInBefore =3D chunk &amp;&amp; =
chunk.length;\n\t  var availOutBefore =3D this._chunkSize - =
this._offset;\n\t  var inOff =3D 0;\n\n\t  var self =3D this;\n\n\t  var =
async =3D typeof cb =3D=3D=3D 'function';\n\n\t  if (!async) {\n\t    =
var buffers =3D [];\n\t    var nread =3D 0;\n\n\t    var error;\n\t    =
this.on('error', function(er) {\n\t      error =3D er;\n\t    });\n\n\t  =
  do {\n\t      var res =3D this._binding.writeSync(flushFlag,\n\t       =
                                 chunk, // in\n\t                        =
                inOff, // in_off\n\t                                     =
   availInBefore, // in_len\n\t                                        =
this._buffer, // out\n\t                                        =
this._offset, //out_off\n\t                                        =
availOutBefore); // out_len\n\t    } while (!this._hadError &amp;&amp; =
callback(res[0], res[1]));\n\n\t    if (this._hadError) {\n\t      throw =
error;\n\t    }\n\n\t    var buf =3D Buffer.concat(buffers, nread);\n\t  =
  this.close();\n\n\t    return buf;\n\t  }\n\n\t  var req =3D =
this._binding.write(flushFlag,\n\t                                chunk, =
// in\n\t                                inOff, // in_off\n\t            =
                    availInBefore, // in_len\n\t                         =
       this._buffer, // out\n\t                                =
this._offset, //out_off\n\t                                =
availOutBefore); // out_len\n\n\t  req.buffer =3D chunk;\n\t  =
req.callback =3D callback;\n\n\t  function callback(availInAfter, =
availOutAfter) {\n\t    if (self._hadError)\n\t      return;\n\n\t    =
var have =3D availOutBefore - availOutAfter;\n\t    assert(have &gt;=3D =
0, 'have should not go down');\n\n\t    if (have &gt; 0) {\n\t      var =
out =3D self._buffer.slice(self._offset, self._offset + have);\n\t      =
self._offset +=3D have;\n\t      // serve some output to the =
consumer.\n\t      if (async) {\n\t        self.push(out);\n\t      } =
else {\n\t        buffers.push(out);\n\t        nread +=3D =
out.length;\n\t      }\n\t    }\n\n\t    // exhausted the output buffer, =
or used all the input create a new one.\n\t    if (availOutAfter =
=3D=3D=3D 0 || self._offset &gt;=3D self._chunkSize) {\n\t      =
availOutBefore =3D self._chunkSize;\n\t      self._offset =3D 0;\n\t     =
 self._buffer =3D new Buffer(self._chunkSize);\n\t    }\n\n\t    if =
(availOutAfter =3D=3D=3D 0) {\n\t      // Not actually done.  Need to =
reprocess.\n\t      // Also, update the availInBefore to the =
availInAfter value,\n\t      // so that if we have to hit it a third =
(fourth, etc.) time,\n\t      // it'll have the correct byte counts.\n\t =
     inOff +=3D (availInBefore - availInAfter);\n\t      availInBefore =
=3D availInAfter;\n\n\t      if (!async)\n\t        return true;\n\n\t   =
   var newReq =3D self._binding.write(flushFlag,\n\t                     =
                  chunk,\n\t                                       =
inOff,\n\t                                       availInBefore,\n\t      =
                                 self._buffer,\n\t                       =
                self._offset,\n\t                                       =
self._chunkSize);\n\t      newReq.callback =3D callback; // this same =
function\n\t      newReq.buffer =3D chunk;\n\t      return;\n\t    =
}\n\n\t    if (!async)\n\t      return false;\n\n\t    // finished with =
the chunk.\n\t    cb();\n\t  }\n\t};\n\n\tutil.inherits(Deflate, =
Zlib);\n\tutil.inherits(Inflate, Zlib);\n\tutil.inherits(Gzip, =
Zlib);\n\tutil.inherits(Gunzip, Zlib);\n\tutil.inherits(DeflateRaw, =
Zlib);\n\tutil.inherits(InflateRaw, Zlib);\n\tutil.inherits(Unzip, =
Zlib);\n\n\t/* WEBPACK VAR INJECTION */}.call(exports, =
__webpack_require__(2).Buffer, __webpack_require__(30)))\n\n/***/ },\n/* =
48 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* =
WEBPACK VAR INJECTION */(function(process, Buffer) {var msg =3D =
__webpack_require__(49);\n\tvar zstream =3D =
__webpack_require__(50);\n\tvar zlib_deflate =3D =
__webpack_require__(51);\n\tvar zlib_inflate =3D =
__webpack_require__(56);\n\tvar constants =3D =
__webpack_require__(59);\n\n\tfor (var key in constants) {\n\t  =
exports[key] =3D constants[key];\n\t}\n\n\t// zlib modes\n\texports.NONE =
=3D 0;\n\texports.DEFLATE =3D 1;\n\texports.INFLATE =3D =
2;\n\texports.GZIP =3D 3;\n\texports.GUNZIP =3D 4;\n\texports.DEFLATERAW =
=3D 5;\n\texports.INFLATERAW =3D 6;\n\texports.UNZIP =3D 7;\n\n\t/**\n\t =
* Emulate Node's zlib C++ layer for use by the JS layer in index.js\n\t =
*/\n\tfunction Zlib(mode) {\n\t  if (mode &lt; exports.DEFLATE || mode =
&gt; exports.UNZIP)\n\t    throw new TypeError(\"Bad argument\");\n\t    =
\n\t  this.mode =3D mode;\n\t  this.init_done =3D false;\n\t  =
this.write_in_progress =3D false;\n\t  this.pending_close =3D false;\n\t =
 this.windowBits =3D 0;\n\t  this.level =3D 0;\n\t  this.memLevel =3D =
0;\n\t  this.strategy =3D 0;\n\t  this.dictionary =3D =
null;\n\t}\n\n\tZlib.prototype.init =3D function(windowBits, level, =
memLevel, strategy, dictionary) {\n\t  this.windowBits =3D =
windowBits;\n\t  this.level =3D level;\n\t  this.memLevel =3D =
memLevel;\n\t  this.strategy =3D strategy;\n\t  // dictionary not =
supported.\n\t  \n\t  if (this.mode =3D=3D=3D exports.GZIP || this.mode =
=3D=3D=3D exports.GUNZIP)\n\t    this.windowBits +=3D 16;\n\t    \n\t  =
if (this.mode =3D=3D=3D exports.UNZIP)\n\t    this.windowBits +=3D =
32;\n\t    \n\t  if (this.mode =3D=3D=3D exports.DEFLATERAW || this.mode =
=3D=3D=3D exports.INFLATERAW)\n\t    this.windowBits =3D =
-this.windowBits;\n\t    \n\t  this.strm =3D new zstream();\n\t  \n\t  =
switch (this.mode) {\n\t    case exports.DEFLATE:\n\t    case =
exports.GZIP:\n\t    case exports.DEFLATERAW:\n\t      var status =3D =
zlib_deflate.deflateInit2(\n\t        this.strm,\n\t        =
this.level,\n\t        exports.Z_DEFLATED,\n\t        =
this.windowBits,\n\t        this.memLevel,\n\t        this.strategy\n\t  =
    );\n\t      break;\n\t    case exports.INFLATE:\n\t    case =
exports.GUNZIP:\n\t    case exports.INFLATERAW:\n\t    case =
exports.UNZIP:\n\t      var status  =3D zlib_inflate.inflateInit2(\n\t   =
     this.strm,\n\t        this.windowBits\n\t      );\n\t      =
break;\n\t    default:\n\t      throw new Error(\"Unknown mode \" + =
this.mode);\n\t  }\n\t  \n\t  if (status !=3D=3D exports.Z_OK) {\n\t    =
this._error(status);\n\t    return;\n\t  }\n\t  \n\t  =
this.write_in_progress =3D false;\n\t  this.init_done =3D =
true;\n\t};\n\n\tZlib.prototype.params =3D function() {\n\t  throw new =
Error(\"deflateParams Not =
supported\");\n\t};\n\n\tZlib.prototype._writeCheck =3D function() {\n\t =
 if (!this.init_done)\n\t    throw new Error(\"write before init\");\n\t =
   \n\t  if (this.mode =3D=3D=3D exports.NONE)\n\t    throw new =
Error(\"already finalized\");\n\t    \n\t  if =
(this.write_in_progress)\n\t    throw new Error(\"write already in =
progress\");\n\t    \n\t  if (this.pending_close)\n\t    throw new =
Error(\"close is pending\");\n\t};\n\n\tZlib.prototype.write =3D =
function(flush, input, in_off, in_len, out, out_off, out_len) {    \n\t  =
this._writeCheck();\n\t  this.write_in_progress =3D true;\n\t  \n\t  var =
self =3D this;\n\t  process.nextTick(function() {\n\t    =
self.write_in_progress =3D false;\n\t    var res =3D self._write(flush, =
input, in_off, in_len, out, out_off, out_len);\n\t    =
self.callback(res[0], res[1]);\n\t    \n\t    if =
(self.pending_close)\n\t      self.close();\n\t  });\n\t  \n\t  return =
this;\n\t};\n\n\t// set method for Node buffers, used by =
pako\n\tfunction bufferSet(data, offset) {\n\t  for (var i =3D 0; i &lt; =
data.length; i++) {\n\t    this[offset + i] =3D data[i];\n\t  =
}\n\t}\n\n\tZlib.prototype.writeSync =3D function(flush, input, in_off, =
in_len, out, out_off, out_len) {\n\t  this._writeCheck();\n\t  return =
this._write(flush, input, in_off, in_len, out, out_off, =
out_len);\n\t};\n\n\tZlib.prototype._write =3D function(flush, input, =
in_off, in_len, out, out_off, out_len) {\n\t  this.write_in_progress =3D =
true;\n\t  \n\t  if (flush !=3D=3D exports.Z_NO_FLUSH &amp;&amp;\n\t     =
 flush !=3D=3D exports.Z_PARTIAL_FLUSH &amp;&amp;\n\t      flush !=3D=3D =
exports.Z_SYNC_FLUSH &amp;&amp;\n\t      flush !=3D=3D =
exports.Z_FULL_FLUSH &amp;&amp;\n\t      flush !=3D=3D exports.Z_FINISH =
&amp;&amp;\n\t      flush !=3D=3D exports.Z_BLOCK) {\n\t    throw new =
Error(\"Invalid flush value\");\n\t  }\n\t  \n\t  if (input =3D=3D null) =
{\n\t    input =3D new Buffer(0);\n\t    in_len =3D 0;\n\t    in_off =3D =
0;\n\t  }\n\t  \n\t  if (out._set)\n\t    out.set =3D out._set;\n\t  =
else\n\t    out.set =3D bufferSet;\n\t  \n\t  var strm =3D =
this.strm;\n\t  strm.avail_in =3D in_len;\n\t  strm.input =3D input;\n\t =
 strm.next_in =3D in_off;\n\t  strm.avail_out =3D out_len;\n\t  =
strm.output =3D out;\n\t  strm.next_out =3D out_off;\n\t  \n\t  switch =
(this.mode) {\n\t    case exports.DEFLATE:\n\t    case exports.GZIP:\n\t =
   case exports.DEFLATERAW:\n\t      var status =3D =
zlib_deflate.deflate(strm, flush);\n\t      break;\n\t    case =
exports.UNZIP:\n\t    case exports.INFLATE:\n\t    case =
exports.GUNZIP:\n\t    case exports.INFLATERAW:\n\t      var status =3D =
zlib_inflate.inflate(strm, flush);\n\t      break;\n\t    default:\n\t   =
   throw new Error(\"Unknown mode \" + this.mode);\n\t  }\n\t  \n\t  if =
(status !=3D=3D exports.Z_STREAM_END &amp;&amp; status !=3D=3D =
exports.Z_OK) {\n\t    this._error(status);\n\t  }\n\t  \n\t  =
this.write_in_progress =3D false;\n\t  return [strm.avail_in, =
strm.avail_out];\n\t};\n\n\tZlib.prototype.close =3D function() {\n\t  =
if (this.write_in_progress) {\n\t    this.pending_close =3D true;\n\t    =
return;\n\t  }\n\t  \n\t  this.pending_close =3D false;\n\t  \n\t  if =
(this.mode =3D=3D=3D exports.DEFLATE || this.mode =3D=3D=3D exports.GZIP =
|| this.mode =3D=3D=3D exports.DEFLATERAW) {\n\t    =
zlib_deflate.deflateEnd(this.strm);\n\t  } else {\n\t    =
zlib_inflate.inflateEnd(this.strm);\n\t  }\n\t  \n\t  this.mode =3D =
exports.NONE;\n\t};\n\n\tZlib.prototype.reset =3D function() {\n\t  =
switch (this.mode) {\n\t    case exports.DEFLATE:\n\t    case =
exports.DEFLATERAW:\n\t      var status =3D =
zlib_deflate.deflateReset(this.strm);\n\t      break;\n\t    case =
exports.INFLATE:\n\t    case exports.INFLATERAW:\n\t      var status =3D =
zlib_inflate.inflateReset(this.strm);\n\t      break;\n\t  }\n\t  \n\t  =
if (status !=3D=3D exports.Z_OK) {\n\t    this._error(status);\n\t  =
}\n\t};\n\n\tZlib.prototype._error =3D function(status) {\n\t  =
this.onerror(msg[status] + ': ' + this.strm.msg, status);\n\t  \n\t  =
this.write_in_progress =3D false;\n\t  if (this.pending_close)\n\t    =
this.close();\n\t};\n\n\texports.Zlib =3D Zlib;\n\n\t/* WEBPACK VAR =
INJECTION */}.call(exports, __webpack_require__(30), =
__webpack_require__(2).Buffer))\n\n/***/ },\n/* 49 */\n/***/ =
function(module, exports) {\n\n\t'use strict';\n\n\tmodule.exports =3D =
{\n\t  '2':    'need dictionary',     /* Z_NEED_DICT       2  */\n\t  =
'1':    'stream end',          /* Z_STREAM_END      1  */\n\t  '0':    =
'',                    /* Z_OK              0  */\n\t  '-1':   'file =
error',          /* Z_ERRNO         (-1) */\n\t  '-2':   'stream error', =
       /* Z_STREAM_ERROR  (-2) */\n\t  '-3':   'data error',          /* =
Z_DATA_ERROR    (-3) */\n\t  '-4':   'insufficient memory', /* =
Z_MEM_ERROR     (-4) */\n\t  '-5':   'buffer error',        /* =
Z_BUF_ERROR     (-5) */\n\t  '-6':   'incompatible version' /* =
Z_VERSION_ERROR (-6) */\n\t};\n\n\n/***/ },\n/* 50 */\n/***/ =
function(module, exports) {\n\n\t'use strict';\n\n\n\tfunction ZStream() =
{\n\t  /* next input byte */\n\t  this.input =3D null; // JS specific, =
because we have no pointers\n\t  this.next_in =3D 0;\n\t  /* number of =
bytes available at input */\n\t  this.avail_in =3D 0;\n\t  /* total =
number of input bytes read so far */\n\t  this.total_in =3D 0;\n\t  /* =
next output byte should be put there */\n\t  this.output =3D null; // JS =
specific, because we have no pointers\n\t  this.next_out =3D 0;\n\t  /* =
remaining free space at output */\n\t  this.avail_out =3D 0;\n\t  /* =
total number of bytes output so far */\n\t  this.total_out =3D 0;\n\t  =
/* last error message, NULL if no error */\n\t  this.msg =3D =
''/*Z_NULL*/;\n\t  /* not visible by applications */\n\t  this.state =3D =
null;\n\t  /* best guess about the data type: binary or text */\n\t  =
this.data_type =3D 2/*Z_UNKNOWN*/;\n\t  /* adler32 value of the =
uncompressed data */\n\t  this.adler =3D 0;\n\t}\n\n\tmodule.exports =3D =
ZStream;\n\n\n/***/ },\n/* 51 */\n/***/ function(module, exports, =
__webpack_require__) {\n\n\t'use strict';\n\n\tvar utils   =3D =
__webpack_require__(52);\n\tvar trees   =3D =
__webpack_require__(53);\n\tvar adler32 =3D =
__webpack_require__(54);\n\tvar crc32   =3D =
__webpack_require__(55);\n\tvar msg   =3D =
__webpack_require__(49);\n\n\t/* Public constants =
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D*/\n\t/* =
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
*/\n\n\n\t/* Allowed flush values; see deflate() and inflate() below for =
details */\n\tvar Z_NO_FLUSH      =3D 0;\n\tvar Z_PARTIAL_FLUSH =3D =
1;\n\t//var Z_SYNC_FLUSH    =3D 2;\n\tvar Z_FULL_FLUSH    =3D 3;\n\tvar =
Z_FINISH        =3D 4;\n\tvar Z_BLOCK         =3D 5;\n\t//var Z_TREES    =
     =3D 6;\n\n\n\t/* Return codes for the compression/decompression =
functions. Negative values\n\t * are errors, positive values are used =
for special but normal events.\n\t */\n\tvar Z_OK            =3D =
0;\n\tvar Z_STREAM_END    =3D 1;\n\t//var Z_NEED_DICT     =3D =
2;\n\t//var Z_ERRNO         =3D -1;\n\tvar Z_STREAM_ERROR  =3D =
-2;\n\tvar Z_DATA_ERROR    =3D -3;\n\t//var Z_MEM_ERROR     =3D =
-4;\n\tvar Z_BUF_ERROR     =3D -5;\n\t//var Z_VERSION_ERROR =3D =
-6;\n\n\n\t/* compression levels */\n\t//var Z_NO_COMPRESSION      =3D =
0;\n\t//var Z_BEST_SPEED          =3D 1;\n\t//var Z_BEST_COMPRESSION    =
=3D 9;\n\tvar Z_DEFAULT_COMPRESSION =3D -1;\n\n\n\tvar Z_FILTERED        =
    =3D 1;\n\tvar Z_HUFFMAN_ONLY        =3D 2;\n\tvar Z_RLE              =
   =3D 3;\n\tvar Z_FIXED               =3D 4;\n\tvar Z_DEFAULT_STRATEGY  =
  =3D 0;\n\n\t/* Possible values of the data_type field (though see =
inflate()) */\n\t//var Z_BINARY              =3D 0;\n\t//var Z_TEXT      =
          =3D 1;\n\t//var Z_ASCII               =3D 1; // =3D =
Z_TEXT\n\tvar Z_UNKNOWN             =3D 2;\n\n\n\t/* The deflate =
compression method */\n\tvar Z_DEFLATED  =3D =
8;\n\n\t/*=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D*/\n\n\n\tvar MAX_MEM_LEVEL =3D 9;\n\t/* Maximum value =
for memLevel in deflateInit2 */\n\tvar MAX_WBITS =3D 15;\n\t/* 32K LZ77 =
window */\n\tvar DEF_MEM_LEVEL =3D 8;\n\n\n\tvar LENGTH_CODES  =3D =
29;\n\t/* number of length codes, not counting the special END_BLOCK =
code */\n\tvar LITERALS      =3D 256;\n\t/* number of literal bytes =
0..255 */\n\tvar L_CODES       =3D LITERALS + 1 + LENGTH_CODES;\n\t/* =
number of Literal or Length codes, including the END_BLOCK code =
*/\n\tvar D_CODES       =3D 30;\n\t/* number of distance codes */\n\tvar =
BL_CODES      =3D 19;\n\t/* number of codes used to transfer the bit =
lengths */\n\tvar HEAP_SIZE     =3D 2*L_CODES + 1;\n\t/* maximum heap =
size */\n\tvar MAX_BITS  =3D 15;\n\t/* All codes must not exceed =
MAX_BITS bits */\n\n\tvar MIN_MATCH =3D 3;\n\tvar MAX_MATCH =3D =
258;\n\tvar MIN_LOOKAHEAD =3D (MAX_MATCH + MIN_MATCH + 1);\n\n\tvar =
PRESET_DICT =3D 0x20;\n\n\tvar INIT_STATE =3D 42;\n\tvar EXTRA_STATE =3D =
69;\n\tvar NAME_STATE =3D 73;\n\tvar COMMENT_STATE =3D 91;\n\tvar =
HCRC_STATE =3D 103;\n\tvar BUSY_STATE =3D 113;\n\tvar FINISH_STATE =3D =
666;\n\n\tvar BS_NEED_MORE      =3D 1; /* block not completed, need more =
input or more output */\n\tvar BS_BLOCK_DONE     =3D 2; /* block flush =
performed */\n\tvar BS_FINISH_STARTED =3D 3; /* finish started, need =
only more output at next deflate */\n\tvar BS_FINISH_DONE    =3D 4; /* =
finish done, accept no more input or output */\n\n\tvar OS_CODE =3D =
0x03; // Unix :) . Don't detect, use this default.\n\n\tfunction =
err(strm, errorCode) {\n\t  strm.msg =3D msg[errorCode];\n\t  return =
errorCode;\n\t}\n\n\tfunction rank(f) {\n\t  return ((f) &lt;&lt; 1) - =
((f) &gt; 4 ? 9 : 0);\n\t}\n\n\tfunction zero(buf) { var len =3D =
buf.length; while (--len &gt;=3D 0) { buf[len] =3D 0; } }\n\n\n\t/* =
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D\n\t=
 * Flush as much pending output as possible. All deflate() output =
goes\n\t * through this function so some applications may wish to modify =
it\n\t * to avoid allocating a large strm-&gt;output buffer and copying =
into it.\n\t * (See also read_buf()).\n\t */\n\tfunction =
flush_pending(strm) {\n\t  var s =3D strm.state;\n\n\t  =
//_tr_flush_bits(s);\n\t  var len =3D s.pending;\n\t  if (len &gt; =
strm.avail_out) {\n\t    len =3D strm.avail_out;\n\t  }\n\t  if (len =
=3D=3D=3D 0) { return; }\n\n\t  utils.arraySet(strm.output, =
s.pending_buf, s.pending_out, len, strm.next_out);\n\t  strm.next_out =
+=3D len;\n\t  s.pending_out +=3D len;\n\t  strm.total_out +=3D len;\n\t =
 strm.avail_out -=3D len;\n\t  s.pending -=3D len;\n\t  if (s.pending =
=3D=3D=3D 0) {\n\t    s.pending_out =3D 0;\n\t  }\n\t}\n\n\n\tfunction =
flush_block_only (s, last) {\n\t  trees._tr_flush_block(s, =
(s.block_start &gt;=3D 0 ? s.block_start : -1), s.strstart - =
s.block_start, last);\n\t  s.block_start =3D s.strstart;\n\t  =
flush_pending(s.strm);\n\t}\n\n\n\tfunction put_byte(s, b) {\n\t  =
s.pending_buf[s.pending++] =3D b;\n\t}\n\n\n\t/* =
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D\n\t=
 * Put a short in the pending buffer. The 16-bit value is put in MSB =
order.\n\t * IN assertion: the stream state is correct and there is =
enough room in\n\t * pending_buf.\n\t */\n\tfunction putShortMSB(s, b) =
{\n\t//  put_byte(s, (Byte)(b &gt;&gt; 8));\n\t//  put_byte(s, (Byte)(b =
&amp; 0xff));\n\t  s.pending_buf[s.pending++] =3D (b &gt;&gt;&gt; 8) =
&amp; 0xff;\n\t  s.pending_buf[s.pending++] =3D b &amp; =
0xff;\n\t}\n\n\n\t/* =
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
\n\t * Read a new buffer from the current input stream, update the =
adler32\n\t * and total number of bytes read.  All deflate() input goes =
through\n\t * this function so some applications may wish to modify it =
to avoid\n\t * allocating a large strm-&gt;input buffer and copying from =
it.\n\t * (See also flush_pending()).\n\t */\n\tfunction read_buf(strm, =
buf, start, size) {\n\t  var len =3D strm.avail_in;\n\n\t  if (len &gt; =
size) { len =3D size; }\n\t  if (len =3D=3D=3D 0) { return 0; }\n\n\t  =
strm.avail_in -=3D len;\n\n\t  utils.arraySet(buf, strm.input, =
strm.next_in, len, start);\n\t  if (strm.state.wrap =3D=3D=3D 1) {\n\t   =
 strm.adler =3D adler32(strm.adler, buf, len, start);\n\t  }\n\n\t  else =
if (strm.state.wrap =3D=3D=3D 2) {\n\t    strm.adler =3D =
crc32(strm.adler, buf, len, start);\n\t  }\n\n\t  strm.next_in +=3D =
len;\n\t  strm.total_in +=3D len;\n\n\t  return len;\n\t}\n\n\n\t/* =
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
\n\t * Set match_start to the longest match starting at the given string =
and\n\t * return its length. Matches shorter or equal to prev_length are =
discarded,\n\t * in which case the result is equal to prev_length and =
match_start is\n\t * garbage.\n\t * IN assertions: cur_match is the head =
of the hash chain for the current\n\t *   string (strstart) and its =
distance is &lt;=3D MAX_DIST, and prev_length &gt;=3D 1\n\t * OUT =
assertion: the match length is not greater than s-&gt;lookahead.\n\t =
*/\n\tfunction longest_match(s, cur_match) {\n\t  var chain_length =3D =
s.max_chain_length;      /* max hash chain length */\n\t  var scan =3D =
s.strstart; /* current string */\n\t  var match;                       =
/* matched string */\n\t  var len;                           /* length =
of current match */\n\t  var best_len =3D s.prev_length;              /* =
best match length so far */\n\t  var nice_match =3D s.nice_match;        =
     /* stop if match long enough */\n\t  var limit =3D (s.strstart &gt; =
(s.w_size - MIN_LOOKAHEAD)) ?\n\t      s.strstart - (s.w_size - =
MIN_LOOKAHEAD) : 0/*NIL*/;\n\n\t  var _win =3D s.window; // =
shortcut\n\n\t  var wmask =3D s.w_mask;\n\t  var prev  =3D s.prev;\n\n\t =
 /* Stop when cur_match becomes &lt;=3D limit. To simplify the code,\n\t =
  * we prevent matches with the string of window index 0.\n\t   */\n\n\t =
 var strend =3D s.strstart + MAX_MATCH;\n\t  var scan_end1  =3D =
_win[scan + best_len - 1];\n\t  var scan_end   =3D _win[scan + =
best_len];\n\n\t  /* The code is optimized for HASH_BITS &gt;=3D 8 and =
MAX_MATCH-2 multiple of 16.\n\t   * It is easy to get rid of this =
optimization if necessary.\n\t   */\n\t  // Assert(s-&gt;hash_bits =
&gt;=3D 8 &amp;&amp; MAX_MATCH =3D=3D 258, \"Code too clever\");\n\n\t  =
/* Do not waste too much time if we already have a good match: */\n\t  =
if (s.prev_length &gt;=3D s.good_match) {\n\t    chain_length =
&gt;&gt;=3D 2;\n\t  }\n\t  /* Do not look for matches beyond the end of =
the input. This is necessary\n\t   * to make deflate deterministic.\n\t  =
 */\n\t  if (nice_match &gt; s.lookahead) { nice_match =3D s.lookahead; =
}\n\n\t  // Assert((ulg)s-&gt;strstart &lt;=3D =
s-&gt;window_size-MIN_LOOKAHEAD, \"need lookahead\");\n\n\t  do {\n\t    =
// Assert(cur_match &lt; s-&gt;strstart, \"no future\");\n\t    match =
=3D cur_match;\n\n\t    /* Skip to next match if the match length cannot =
increase\n\t     * or if the match length is less than 2.  Note that the =
checks below\n\t     * for insufficient lookahead only occur =
occasionally for performance\n\t     * reasons.  Therefore uninitialized =
memory will be accessed, and\n\t     * conditional jumps will be made =
that depend on those values.\n\t     * However the length of the match =
is limited to the lookahead, so\n\t     * the output of deflate is not =
affected by the uninitialized values.\n\t     */\n\n\t    if (_win[match =
+ best_len]     !=3D=3D scan_end  ||\n\t        _win[match + best_len - =
1] !=3D=3D scan_end1 ||\n\t        _win[match]                !=3D=3D =
_win[scan] ||\n\t        _win[++match]              !=3D=3D _win[scan + =
1]) {\n\t      continue;\n\t    }\n\n\t    /* The check at best_len-1 =
can be removed because it will be made\n\t     * again later. (This =
heuristic is not always a win.)\n\t     * It is not necessary to compare =
scan[2] and match[2] since they\n\t     * are always equal when the =
other bytes match, given that\n\t     * the hash keys are equal and that =
HASH_BITS &gt;=3D 8.\n\t     */\n\t    scan +=3D 2;\n\t    match++;\n\t  =
  // Assert(*scan =3D=3D *match, \"match[2]?\");\n\n\t    /* We check =
for insufficient lookahead only every 8th comparison;\n\t     * the =
256th check will be made at strstart+258.\n\t     */\n\t    do {\n\t     =
 /*jshint noempty:false*/\n\t    } while (_win[++scan] =3D=3D=3D =
_win[++match] &amp;&amp; _win[++scan] =3D=3D=3D _win[++match] =
&amp;&amp;\n\t             _win[++scan] =3D=3D=3D _win[++match] =
&amp;&amp; _win[++scan] =3D=3D=3D _win[++match] &amp;&amp;\n\t           =
  _win[++scan] =3D=3D=3D _win[++match] &amp;&amp; _win[++scan] =3D=3D=3D =
_win[++match] &amp;&amp;\n\t             _win[++scan] =3D=3D=3D =
_win[++match] &amp;&amp; _win[++scan] =3D=3D=3D _win[++match] =
&amp;&amp;\n\t             scan &lt; strend);\n\n\t    // Assert(scan =
&lt;=3D s-&gt;window+(unsigned)(s-&gt;window_size-1), \"wild =
scan\");\n\n\t    len =3D MAX_MATCH - (strend - scan);\n\t    scan =3D =
strend - MAX_MATCH;\n\n\t    if (len &gt; best_len) {\n\t      =
s.match_start =3D cur_match;\n\t      best_len =3D len;\n\t      if (len =
&gt;=3D nice_match) {\n\t        break;\n\t      }\n\t      scan_end1  =
=3D _win[scan + best_len - 1];\n\t      scan_end   =3D _win[scan + =
best_len];\n\t    }\n\t  } while ((cur_match =3D prev[cur_match &amp; =
wmask]) &gt; limit &amp;&amp; --chain_length !=3D=3D 0);\n\n\t  if =
(best_len &lt;=3D s.lookahead) {\n\t    return best_len;\n\t  }\n\t  =
return s.lookahead;\n\t}\n\n\n\t/* =
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
\n\t * Fill the window when the lookahead becomes insufficient.\n\t * =
Updates strstart and lookahead.\n\t *\n\t * IN assertion: lookahead &lt; =
MIN_LOOKAHEAD\n\t * OUT assertions: strstart &lt;=3D =
window_size-MIN_LOOKAHEAD\n\t *    At least one byte has been read, or =
avail_in =3D=3D 0; reads are\n\t *    performed for at least two bytes =
(required for the zip translate_eol\n\t *    option -- not supported =
here).\n\t */\n\tfunction fill_window(s) {\n\t  var _w_size =3D =
s.w_size;\n\t  var p, n, m, more, str;\n\n\t  //Assert(s-&gt;lookahead =
&lt; MIN_LOOKAHEAD, \"already enough lookahead\");\n\n\t  do {\n\t    =
more =3D s.window_size - s.lookahead - s.strstart;\n\n\t    // JS ints =
have 32 bit, block below not needed\n\t    /* Deal with !@#$% 64K limit: =
*/\n\t    //if (sizeof(int) &lt;=3D 2) {\n\t    //    if (more =3D=3D 0 =
&amp;&amp; s-&gt;strstart =3D=3D 0 &amp;&amp; s-&gt;lookahead =3D=3D 0) =
{\n\t    //        more =3D wsize;\n\t    //\n\t    //  } else if (more =
=3D=3D (unsigned)(-1)) {\n\t    //        /* Very unlikely, but possible =
on 16 bit machine if\n\t    //         * strstart =3D=3D 0 &amp;&amp; =
lookahead =3D=3D 1 (input done a byte at time)\n\t    //         */\n\t  =
  //        more--;\n\t    //    }\n\t    //}\n\n\n\t    /* If the =
window is almost full and there is insufficient lookahead,\n\t     * =
move the upper half to the lower one to make room in the upper half.\n\t =
    */\n\t    if (s.strstart &gt;=3D _w_size + (_w_size - =
MIN_LOOKAHEAD)) {\n\n\t      utils.arraySet(s.window, s.window, _w_size, =
_w_size, 0);\n\t      s.match_start -=3D _w_size;\n\t      s.strstart =
-=3D _w_size;\n\t      /* we now have strstart &gt;=3D MAX_DIST */\n\t   =
   s.block_start -=3D _w_size;\n\n\t      /* Slide the hash table (could =
be avoided with 32 bit values\n\t       at the expense of memory usage). =
We slide even when level =3D=3D 0\n\t       to keep the hash table =
consistent if we switch back to level &gt; 0\n\t       later. (Using =
level 0 permanently is not an optimal usage of\n\t       zlib, so we =
don't care about this pathological case.)\n\t       */\n\n\t      n =3D =
s.hash_size;\n\t      p =3D n;\n\t      do {\n\t        m =3D =
s.head[--p];\n\t        s.head[p] =3D (m &gt;=3D _w_size ? m - _w_size : =
0);\n\t      } while (--n);\n\n\t      n =3D _w_size;\n\t      p =3D =
n;\n\t      do {\n\t        m =3D s.prev[--p];\n\t        s.prev[p] =3D =
(m &gt;=3D _w_size ? m - _w_size : 0);\n\t        /* If n is not on any =
hash chain, prev[n] is garbage but\n\t         * its value will never be =
used.\n\t         */\n\t      } while (--n);\n\n\t      more +=3D =
_w_size;\n\t    }\n\t    if (s.strm.avail_in =3D=3D=3D 0) {\n\t      =
break;\n\t    }\n\n\t    /* If there was no sliding:\n\t     *    =
strstart &lt;=3D WSIZE+MAX_DIST-1 &amp;&amp; lookahead &lt;=3D =
MIN_LOOKAHEAD - 1 &amp;&amp;\n\t     *    more =3D=3D window_size - =
lookahead - strstart\n\t     * =3D&gt; more &gt;=3D window_size - =
(MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)\n\t     * =3D&gt; more &gt;=3D =
window_size - 2*WSIZE + 2\n\t     * In the BIG_MEM or MMAP case (not yet =
supported),\n\t     *   window_size =3D=3D input_size + MIN_LOOKAHEAD  =
&amp;&amp;\n\t     *   strstart + s-&gt;lookahead &lt;=3D input_size =
=3D&gt; more &gt;=3D MIN_LOOKAHEAD.\n\t     * Otherwise, window_size =
=3D=3D 2*WSIZE so more &gt;=3D 2.\n\t     * If there was sliding, more =
&gt;=3D WSIZE. So in all cases, more &gt;=3D 2.\n\t     */\n\t    =
//Assert(more &gt;=3D 2, \"more &lt; 2\");\n\t    n =3D read_buf(s.strm, =
s.window, s.strstart + s.lookahead, more);\n\t    s.lookahead +=3D =
n;\n\n\t    /* Initialize the hash value now that we have some input: =
*/\n\t    if (s.lookahead + s.insert &gt;=3D MIN_MATCH) {\n\t      str =
=3D s.strstart - s.insert;\n\t      s.ins_h =3D s.window[str];\n\n\t     =
 /* UPDATE_HASH(s, s-&gt;ins_h, s-&gt;window[str + 1]); */\n\t      =
s.ins_h =3D ((s.ins_h &lt;&lt; s.hash_shift) ^ s.window[str + 1]) &amp; =
s.hash_mask;\n\t//#if MIN_MATCH !=3D 3\n\t//        Call update_hash() =
MIN_MATCH-3 more times\n\t//#endif\n\t      while (s.insert) {\n\t       =
 /* UPDATE_HASH(s, s-&gt;ins_h, s-&gt;window[str + MIN_MATCH-1]); */\n\t =
       s.ins_h =3D ((s.ins_h &lt;&lt; s.hash_shift) ^ s.window[str + =
MIN_MATCH-1]) &amp; s.hash_mask;\n\n\t        s.prev[str &amp; s.w_mask] =
=3D s.head[s.ins_h];\n\t        s.head[s.ins_h] =3D str;\n\t        =
str++;\n\t        s.insert--;\n\t        if (s.lookahead + s.insert &lt; =
MIN_MATCH) {\n\t          break;\n\t        }\n\t      }\n\t    }\n\t    =
/* If the whole input has less than MIN_MATCH bytes, ins_h is =
garbage,\n\t     * but this is not important since only literal bytes =
will be emitted.\n\t     */\n\n\t  } while (s.lookahead &lt; =
MIN_LOOKAHEAD &amp;&amp; s.strm.avail_in !=3D=3D 0);\n\n\t  /* If the =
WIN_INIT bytes after the end of the current data have never been\n\t   * =
written, then zero those bytes in order to avoid memory check reports =
of\n\t   * the use of uninitialized (or uninitialised as Julian writes) =
bytes by\n\t   * the longest match routines.  Update the high water mark =
for the next\n\t   * time through here.  WIN_INIT is set to MAX_MATCH =
since the longest match\n\t   * routines allow scanning to strstart + =
MAX_MATCH, ignoring lookahead.\n\t   */\n\t//  if (s.high_water &lt; =
s.window_size) {\n\t//    var curr =3D s.strstart + s.lookahead;\n\t//   =
 var init =3D 0;\n\t//\n\t//    if (s.high_water &lt; curr) {\n\t//      =
/* Previous high water mark below current data -- zero WIN_INIT\n\t//    =
   * bytes or up to end of window, whichever is less.\n\t//       =
*/\n\t//      init =3D s.window_size - curr;\n\t//      if (init &gt; =
WIN_INIT)\n\t//        init =3D WIN_INIT;\n\t//      =
zmemzero(s-&gt;window + curr, (unsigned)init);\n\t//      =
s-&gt;high_water =3D curr + init;\n\t//    }\n\t//    else if =
(s-&gt;high_water &lt; (ulg)curr + WIN_INIT) {\n\t//      /* High water =
mark at or above current data, but below current data\n\t//       * plus =
WIN_INIT -- zero out to current data plus WIN_INIT, or up\n\t//       * =
to end of window, whichever is less.\n\t//       */\n\t//      init =3D =
(ulg)curr + WIN_INIT - s-&gt;high_water;\n\t//      if (init &gt; =
s-&gt;window_size - s-&gt;high_water)\n\t//        init =3D =
s-&gt;window_size - s-&gt;high_water;\n\t//      zmemzero(s-&gt;window + =
s-&gt;high_water, (unsigned)init);\n\t//      s-&gt;high_water +=3D =
init;\n\t//    }\n\t//  }\n\t//\n\t//  Assert((ulg)s-&gt;strstart =
&lt;=3D s-&gt;window_size - MIN_LOOKAHEAD,\n\t//    \"not enough room =
for search\");\n\t}\n\n\t/* =
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
\n\t * Copy without compression as much as possible from the input =
stream, return\n\t * the current block state.\n\t * This function does =
not insert new strings in the dictionary since\n\t * uncompressible data =
is probably not useful. This function is used\n\t * only for the =
level=3D0 compression option.\n\t * NOTE: this function should be =
optimized to avoid extra copying from\n\t * window to pending_buf.\n\t =
*/\n\tfunction deflate_stored(s, flush) {\n\t  /* Stored blocks are =
limited to 0xffff bytes, pending_buf is limited\n\t   * to =
pending_buf_size, and each stored block has a 5 byte header:\n\t   =
*/\n\t  var max_block_size =3D 0xffff;\n\n\t  if (max_block_size &gt; =
s.pending_buf_size - 5) {\n\t    max_block_size =3D s.pending_buf_size - =
5;\n\t  }\n\n\t  /* Copy as much as possible from input to output: =
*/\n\t  for (;;) {\n\t    /* Fill the window as much as possible: */\n\t =
   if (s.lookahead &lt;=3D 1) {\n\n\t      //Assert(s-&gt;strstart &lt; =
s-&gt;w_size+MAX_DIST(s) ||\n\t      //  s-&gt;block_start &gt;=3D =
(long)s-&gt;w_size, \"slide too late\");\n\t//      if (!(s.strstart =
&lt; s.w_size + (s.w_size - MIN_LOOKAHEAD) ||\n\t//        s.block_start =
&gt;=3D s.w_size)) {\n\t//        throw  new Error(\"slide too =
late\");\n\t//      }\n\n\t      fill_window(s);\n\t      if =
(s.lookahead =3D=3D=3D 0 &amp;&amp; flush =3D=3D=3D Z_NO_FLUSH) {\n\t    =
    return BS_NEED_MORE;\n\t      }\n\n\t      if (s.lookahead =3D=3D=3D =
0) {\n\t        break;\n\t      }\n\t      /* flush the current block =
*/\n\t    }\n\t    //Assert(s-&gt;block_start &gt;=3D 0L, \"block =
gone\");\n\t//    if (s.block_start &lt; 0) throw new Error(\"block =
gone\");\n\n\t    s.strstart +=3D s.lookahead;\n\t    s.lookahead =3D =
0;\n\n\t    /* Emit a stored block if pending_buf will be full: */\n\t   =
 var max_start =3D s.block_start + max_block_size;\n\n\t    if =
(s.strstart =3D=3D=3D 0 || s.strstart &gt;=3D max_start) {\n\t      /* =
strstart =3D=3D 0 is possible when wraparound on 16-bit machine */\n\t   =
   s.lookahead =3D s.strstart - max_start;\n\t      s.strstart =3D =
max_start;\n\t      /*** FLUSH_BLOCK(s, 0); ***/\n\t      =
flush_block_only(s, false);\n\t      if (s.strm.avail_out =3D=3D=3D 0) =
{\n\t        return BS_NEED_MORE;\n\t      }\n\t      /***/\n\n\n\t    =
}\n\t    /* Flush if we may have to slide, otherwise block_start may =
become\n\t     * negative and the data will be gone:\n\t     */\n\t    =
if (s.strstart - s.block_start &gt;=3D (s.w_size - MIN_LOOKAHEAD)) {\n\t =
     /*** FLUSH_BLOCK(s, 0); ***/\n\t      flush_block_only(s, =
false);\n\t      if (s.strm.avail_out =3D=3D=3D 0) {\n\t        return =
BS_NEED_MORE;\n\t      }\n\t      /***/\n\t    }\n\t  }\n\n\t  s.insert =
=3D 0;\n\n\t  if (flush =3D=3D=3D Z_FINISH) {\n\t    /*** FLUSH_BLOCK(s, =
1); ***/\n\t    flush_block_only(s, true);\n\t    if (s.strm.avail_out =
=3D=3D=3D 0) {\n\t      return BS_FINISH_STARTED;\n\t    }\n\t    =
/***/\n\t    return BS_FINISH_DONE;\n\t  }\n\n\t  if (s.strstart &gt; =
s.block_start) {\n\t    /*** FLUSH_BLOCK(s, 0); ***/\n\t    =
flush_block_only(s, false);\n\t    if (s.strm.avail_out =3D=3D=3D 0) =
{\n\t      return BS_NEED_MORE;\n\t    }\n\t    /***/\n\t  }\n\n\t  =
return BS_NEED_MORE;\n\t}\n\n\t/* =
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
\n\t * Compress as much as possible from the input stream, return the =
current\n\t * block state.\n\t * This function does not perform lazy =
evaluation of matches and inserts\n\t * new strings in the dictionary =
only for unmatched strings or for short\n\t * matches. It is used only =
for the fast compression options.\n\t */\n\tfunction deflate_fast(s, =
flush) {\n\t  var hash_head;        /* head of the hash chain */\n\t  =
var bflush;           /* set if current block must be flushed */\n\n\t  =
for (;;) {\n\t    /* Make sure that we always have enough lookahead, =
except\n\t     * at the end of the input file. We need MAX_MATCH =
bytes\n\t     * for the next match, plus MIN_MATCH bytes to insert =
the\n\t     * string following the next match.\n\t     */\n\t    if =
(s.lookahead &lt; MIN_LOOKAHEAD) {\n\t      fill_window(s);\n\t      if =
(s.lookahead &lt; MIN_LOOKAHEAD &amp;&amp; flush =3D=3D=3D Z_NO_FLUSH) =
{\n\t        return BS_NEED_MORE;\n\t      }\n\t      if (s.lookahead =
=3D=3D=3D 0) {\n\t        break; /* flush the current block */\n\t      =
}\n\t    }\n\n\t    /* Insert the string window[strstart .. strstart+2] =
in the\n\t     * dictionary, and set hash_head to the head of the hash =
chain:\n\t     */\n\t    hash_head =3D 0/*NIL*/;\n\t    if (s.lookahead =
&gt;=3D MIN_MATCH) {\n\t      /*** INSERT_STRING(s, s.strstart, =
hash_head); ***/\n\t      s.ins_h =3D ((s.ins_h &lt;&lt; s.hash_shift) ^ =
s.window[s.strstart + MIN_MATCH - 1]) &amp; s.hash_mask;\n\t      =
hash_head =3D s.prev[s.strstart &amp; s.w_mask] =3D s.head[s.ins_h];\n\t =
     s.head[s.ins_h] =3D s.strstart;\n\t      /***/\n\t    }\n\n\t    /* =
Find the longest match, discarding those &lt;=3D prev_length.\n\t     * =
At this point we have always match_length &lt; MIN_MATCH\n\t     */\n\t  =
  if (hash_head !=3D=3D 0/*NIL*/ &amp;&amp; ((s.strstart - hash_head) =
&lt;=3D (s.w_size - MIN_LOOKAHEAD))) {\n\t      /* To simplify the code, =
we prevent matches with the string\n\t       * of window index 0 (in =
particular we have to avoid a match\n\t       * of the string with =
itself at the start of the input file).\n\t       */\n\t      =
s.match_length =3D longest_match(s, hash_head);\n\t      /* =
longest_match() sets match_start */\n\t    }\n\t    if (s.match_length =
&gt;=3D MIN_MATCH) {\n\t      // check_match(s, s.strstart, =
s.match_start, s.match_length); // for debug only\n\n\t      /*** =
_tr_tally_dist(s, s.strstart - s.match_start,\n\t                     =
s.match_length - MIN_MATCH, bflush); ***/\n\t      bflush =3D =
trees._tr_tally(s, s.strstart - s.match_start, s.match_length - =
MIN_MATCH);\n\n\t      s.lookahead -=3D s.match_length;\n\n\t      /* =
Insert new strings in the hash table only if the match length\n\t       =
* is not too large. This saves time but degrades compression.\n\t       =
*/\n\t      if (s.match_length &lt;=3D =
s.max_lazy_match/*max_insert_length*/ &amp;&amp; s.lookahead &gt;=3D =
MIN_MATCH) {\n\t        s.match_length--; /* string at strstart already =
in table */\n\t        do {\n\t          s.strstart++;\n\t          /*** =
INSERT_STRING(s, s.strstart, hash_head); ***/\n\t          s.ins_h =3D =
((s.ins_h &lt;&lt; s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) =
&amp; s.hash_mask;\n\t          hash_head =3D s.prev[s.strstart &amp; =
s.w_mask] =3D s.head[s.ins_h];\n\t          s.head[s.ins_h] =3D =
s.strstart;\n\t          /***/\n\t          /* strstart never exceeds =
WSIZE-MAX_MATCH, so there are\n\t           * always MIN_MATCH bytes =
ahead.\n\t           */\n\t        } while (--s.match_length !=3D=3D =
0);\n\t        s.strstart++;\n\t      } else\n\t      {\n\t        =
s.strstart +=3D s.match_length;\n\t        s.match_length =3D 0;\n\t     =
   s.ins_h =3D s.window[s.strstart];\n\t        /* UPDATE_HASH(s, =
s.ins_h, s.window[s.strstart+1]); */\n\t        s.ins_h =3D ((s.ins_h =
&lt;&lt; s.hash_shift) ^ s.window[s.strstart + 1]) &amp; =
s.hash_mask;\n\n\t//#if MIN_MATCH !=3D 3\n\t//                Call =
UPDATE_HASH() MIN_MATCH-3 more times\n\t//#endif\n\t        /* If =
lookahead &lt; MIN_MATCH, ins_h is garbage, but it does not\n\t         =
* matter since it will be recomputed at next deflate call.\n\t         =
*/\n\t      }\n\t    } else {\n\t      /* No match, output a literal =
byte */\n\t      //Tracevv((stderr,\"%c\", s.window[s.strstart]));\n\t   =
   /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n\t      =
bflush =3D trees._tr_tally(s, 0, s.window[s.strstart]);\n\n\t      =
s.lookahead--;\n\t      s.strstart++;\n\t    }\n\t    if (bflush) {\n\t  =
    /*** FLUSH_BLOCK(s, 0); ***/\n\t      flush_block_only(s, =
false);\n\t      if (s.strm.avail_out =3D=3D=3D 0) {\n\t        return =
BS_NEED_MORE;\n\t      }\n\t      /***/\n\t    }\n\t  }\n\t  s.insert =
=3D ((s.strstart &lt; (MIN_MATCH-1)) ? s.strstart : MIN_MATCH-1);\n\t  =
if (flush =3D=3D=3D Z_FINISH) {\n\t    /*** FLUSH_BLOCK(s, 1); ***/\n\t  =
  flush_block_only(s, true);\n\t    if (s.strm.avail_out =3D=3D=3D 0) =
{\n\t      return BS_FINISH_STARTED;\n\t    }\n\t    /***/\n\t    return =
BS_FINISH_DONE;\n\t  }\n\t  if (s.last_lit) {\n\t    /*** FLUSH_BLOCK(s, =
0); ***/\n\t    flush_block_only(s, false);\n\t    if (s.strm.avail_out =
=3D=3D=3D 0) {\n\t      return BS_NEED_MORE;\n\t    }\n\t    /***/\n\t  =
}\n\t  return BS_BLOCK_DONE;\n\t}\n\n\t/* =
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
\n\t * Same as above, but achieves better compression. We use a lazy\n\t =
* evaluation for matches: a match is finally adopted only if there =
is\n\t * no better match at the next window position.\n\t */\n\tfunction =
deflate_slow(s, flush) {\n\t  var hash_head;          /* head of hash =
chain */\n\t  var bflush;              /* set if current block must be =
flushed */\n\n\t  var max_insert;\n\n\t  /* Process the input block. =
*/\n\t  for (;;) {\n\t    /* Make sure that we always have enough =
lookahead, except\n\t     * at the end of the input file. We need =
MAX_MATCH bytes\n\t     * for the next match, plus MIN_MATCH bytes to =
insert the\n\t     * string following the next match.\n\t     */\n\t    =
if (s.lookahead &lt; MIN_LOOKAHEAD) {\n\t      fill_window(s);\n\t      =
if (s.lookahead &lt; MIN_LOOKAHEAD &amp;&amp; flush =3D=3D=3D =
Z_NO_FLUSH) {\n\t        return BS_NEED_MORE;\n\t      }\n\t      if =
(s.lookahead =3D=3D=3D 0) { break; } /* flush the current block */\n\t   =
 }\n\n\t    /* Insert the string window[strstart .. strstart+2] in =
the\n\t     * dictionary, and set hash_head to the head of the hash =
chain:\n\t     */\n\t    hash_head =3D 0/*NIL*/;\n\t    if (s.lookahead =
&gt;=3D MIN_MATCH) {\n\t      /*** INSERT_STRING(s, s.strstart, =
hash_head); ***/\n\t      s.ins_h =3D ((s.ins_h &lt;&lt; s.hash_shift) ^ =
s.window[s.strstart + MIN_MATCH - 1]) &amp; s.hash_mask;\n\t      =
hash_head =3D s.prev[s.strstart &amp; s.w_mask] =3D s.head[s.ins_h];\n\t =
     s.head[s.ins_h] =3D s.strstart;\n\t      /***/\n\t    }\n\n\t    /* =
Find the longest match, discarding those &lt;=3D prev_length.\n\t     =
*/\n\t    s.prev_length =3D s.match_length;\n\t    s.prev_match =3D =
s.match_start;\n\t    s.match_length =3D MIN_MATCH-1;\n\n\t    if =
(hash_head !=3D=3D 0/*NIL*/ &amp;&amp; s.prev_length &lt; =
s.max_lazy_match &amp;&amp;\n\t        s.strstart - hash_head &lt;=3D =
(s.w_size-MIN_LOOKAHEAD)/*MAX_DIST(s)*/) {\n\t      /* To simplify the =
code, we prevent matches with the string\n\t       * of window index 0 =
(in particular we have to avoid a match\n\t       * of the string with =
itself at the start of the input file).\n\t       */\n\t      =
s.match_length =3D longest_match(s, hash_head);\n\t      /* =
longest_match() sets match_start */\n\n\t      if (s.match_length =
&lt;=3D 5 &amp;&amp;\n\t         (s.strategy =3D=3D=3D Z_FILTERED || =
(s.match_length =3D=3D=3D MIN_MATCH &amp;&amp; s.strstart - =
s.match_start &gt; 4096/*TOO_FAR*/))) {\n\n\t        /* If prev_match is =
also MIN_MATCH, match_start is garbage\n\t         * but we will ignore =
the current match anyway.\n\t         */\n\t        s.match_length =3D =
MIN_MATCH-1;\n\t      }\n\t    }\n\t    /* If there was a match at the =
previous step and the current\n\t     * match is not better, output the =
previous match:\n\t     */\n\t    if (s.prev_length &gt;=3D MIN_MATCH =
&amp;&amp; s.match_length &lt;=3D s.prev_length) {\n\t      max_insert =
=3D s.strstart + s.lookahead - MIN_MATCH;\n\t      /* Do not insert =
strings in hash table beyond this. */\n\n\t      //check_match(s, =
s.strstart-1, s.prev_match, s.prev_length);\n\n\t      =
/***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,\n\t                 =
    s.prev_length - MIN_MATCH, bflush);***/\n\t      bflush =3D =
trees._tr_tally(s, s.strstart - 1- s.prev_match, s.prev_length - =
MIN_MATCH);\n\t      /* Insert in hash table all strings up to the end =
of the match.\n\t       * strstart-1 and strstart are already inserted. =
If there is not\n\t       * enough lookahead, the last two strings are =
not inserted in\n\t       * the hash table.\n\t       */\n\t      =
s.lookahead -=3D s.prev_length-1;\n\t      s.prev_length -=3D 2;\n\t     =
 do {\n\t        if (++s.strstart &lt;=3D max_insert) {\n\t          =
/*** INSERT_STRING(s, s.strstart, hash_head); ***/\n\t          s.ins_h =
=3D ((s.ins_h &lt;&lt; s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - =
1]) &amp; s.hash_mask;\n\t          hash_head =3D s.prev[s.strstart =
&amp; s.w_mask] =3D s.head[s.ins_h];\n\t          s.head[s.ins_h] =3D =
s.strstart;\n\t          /***/\n\t        }\n\t      } while =
(--s.prev_length !=3D=3D 0);\n\t      s.match_available =3D 0;\n\t      =
s.match_length =3D MIN_MATCH-1;\n\t      s.strstart++;\n\n\t      if =
(bflush) {\n\t        /*** FLUSH_BLOCK(s, 0); ***/\n\t        =
flush_block_only(s, false);\n\t        if (s.strm.avail_out =3D=3D=3D 0) =
{\n\t          return BS_NEED_MORE;\n\t        }\n\t        /***/\n\t    =
  }\n\n\t    } else if (s.match_available) {\n\t      /* If there was no =
match at the previous position, output a\n\t       * single literal. If =
there was a match but the current match\n\t       * is longer, truncate =
the previous match to a single literal.\n\t       */\n\t      =
//Tracevv((stderr,\"%c\", s-&gt;window[s-&gt;strstart-1]));\n\t      =
/*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n\t      =
bflush =3D trees._tr_tally(s, 0, s.window[s.strstart-1]);\n\n\t      if =
(bflush) {\n\t        /*** FLUSH_BLOCK_ONLY(s, 0) ***/\n\t        =
flush_block_only(s, false);\n\t        /***/\n\t      }\n\t      =
s.strstart++;\n\t      s.lookahead--;\n\t      if (s.strm.avail_out =
=3D=3D=3D 0) {\n\t        return BS_NEED_MORE;\n\t      }\n\t    } else =
{\n\t      /* There is no previous match to compare with, wait for\n\t   =
    * the next step to decide.\n\t       */\n\t      s.match_available =
=3D 1;\n\t      s.strstart++;\n\t      s.lookahead--;\n\t    }\n\t  =
}\n\t  //Assert (flush !=3D Z_NO_FLUSH, \"no flush?\");\n\t  if =
(s.match_available) {\n\t    //Tracevv((stderr,\"%c\", =
s-&gt;window[s-&gt;strstart-1]));\n\t    /*** _tr_tally_lit(s, =
s.window[s.strstart-1], bflush); ***/\n\t    bflush =3D =
trees._tr_tally(s, 0, s.window[s.strstart-1]);\n\n\t    =
s.match_available =3D 0;\n\t  }\n\t  s.insert =3D s.strstart &lt; =
MIN_MATCH-1 ? s.strstart : MIN_MATCH-1;\n\t  if (flush =3D=3D=3D =
Z_FINISH) {\n\t    /*** FLUSH_BLOCK(s, 1); ***/\n\t    =
flush_block_only(s, true);\n\t    if (s.strm.avail_out =3D=3D=3D 0) =
{\n\t      return BS_FINISH_STARTED;\n\t    }\n\t    /***/\n\t    return =
BS_FINISH_DONE;\n\t  }\n\t  if (s.last_lit) {\n\t    /*** FLUSH_BLOCK(s, =
0); ***/\n\t    flush_block_only(s, false);\n\t    if (s.strm.avail_out =
=3D=3D=3D 0) {\n\t      return BS_NEED_MORE;\n\t    }\n\t    /***/\n\t  =
}\n\n\t  return BS_BLOCK_DONE;\n\t}\n\n\n\t/* =
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
\n\t * For Z_RLE, simply look for runs of bytes, generate matches only =
of distance\n\t * one.  Do not maintain a hash table.  (It will be =
regenerated if this run of\n\t * deflate switches away from Z_RLE.)\n\t =
*/\n\tfunction deflate_rle(s, flush) {\n\t  var bflush;            /* =
set if current block must be flushed */\n\t  var prev;              /* =
byte at distance one to match */\n\t  var scan, strend;      /* scan =
goes up to strend for length of run */\n\n\t  var _win =3D =
s.window;\n\n\t  for (;;) {\n\t    /* Make sure that we always have =
enough lookahead, except\n\t     * at the end of the input file. We need =
MAX_MATCH bytes\n\t     * for the longest run, plus one for the unrolled =
loop.\n\t     */\n\t    if (s.lookahead &lt;=3D MAX_MATCH) {\n\t      =
fill_window(s);\n\t      if (s.lookahead &lt;=3D MAX_MATCH &amp;&amp; =
flush =3D=3D=3D Z_NO_FLUSH) {\n\t        return BS_NEED_MORE;\n\t      =
}\n\t      if (s.lookahead =3D=3D=3D 0) { break; } /* flush the current =
block */\n\t    }\n\n\t    /* See how many times the previous byte =
repeats */\n\t    s.match_length =3D 0;\n\t    if (s.lookahead &gt;=3D =
MIN_MATCH &amp;&amp; s.strstart &gt; 0) {\n\t      scan =3D s.strstart - =
1;\n\t      prev =3D _win[scan];\n\t      if (prev =3D=3D=3D =
_win[++scan] &amp;&amp; prev =3D=3D=3D _win[++scan] &amp;&amp; prev =
=3D=3D=3D _win[++scan]) {\n\t        strend =3D s.strstart + =
MAX_MATCH;\n\t        do {\n\t          /*jshint noempty:false*/\n\t     =
   } while (prev =3D=3D=3D _win[++scan] &amp;&amp; prev =3D=3D=3D =
_win[++scan] &amp;&amp;\n\t                 prev =3D=3D=3D _win[++scan] =
&amp;&amp; prev =3D=3D=3D _win[++scan] &amp;&amp;\n\t                 =
prev =3D=3D=3D _win[++scan] &amp;&amp; prev =3D=3D=3D _win[++scan] =
&amp;&amp;\n\t                 prev =3D=3D=3D _win[++scan] &amp;&amp; =
prev =3D=3D=3D _win[++scan] &amp;&amp;\n\t                 scan &lt; =
strend);\n\t        s.match_length =3D MAX_MATCH - (strend - scan);\n\t  =
      if (s.match_length &gt; s.lookahead) {\n\t          s.match_length =
=3D s.lookahead;\n\t        }\n\t      }\n\t      //Assert(scan &lt;=3D =
s-&gt;window+(uInt)(s-&gt;window_size-1), \"wild scan\");\n\t    }\n\n\t =
   /* Emit match if have run of MIN_MATCH or longer, else emit literal =
*/\n\t    if (s.match_length &gt;=3D MIN_MATCH) {\n\t      =
//check_match(s, s.strstart, s.strstart - 1, s.match_length);\n\n\t      =
/*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/\n\t  =
    bflush =3D trees._tr_tally(s, 1, s.match_length - MIN_MATCH);\n\n\t  =
    s.lookahead -=3D s.match_length;\n\t      s.strstart +=3D =
s.match_length;\n\t      s.match_length =3D 0;\n\t    } else {\n\t      =
/* No match, output a literal byte */\n\t      //Tracevv((stderr,\"%c\", =
s-&gt;window[s-&gt;strstart]));\n\t      /*** _tr_tally_lit(s, =
s.window[s.strstart], bflush); ***/\n\t      bflush =3D =
trees._tr_tally(s, 0, s.window[s.strstart]);\n\n\t      =
s.lookahead--;\n\t      s.strstart++;\n\t    }\n\t    if (bflush) {\n\t  =
    /*** FLUSH_BLOCK(s, 0); ***/\n\t      flush_block_only(s, =
false);\n\t      if (s.strm.avail_out =3D=3D=3D 0) {\n\t        return =
BS_NEED_MORE;\n\t      }\n\t      /***/\n\t    }\n\t  }\n\t  s.insert =
=3D 0;\n\t  if (flush =3D=3D=3D Z_FINISH) {\n\t    /*** FLUSH_BLOCK(s, =
1); ***/\n\t    flush_block_only(s, true);\n\t    if (s.strm.avail_out =
=3D=3D=3D 0) {\n\t      return BS_FINISH_STARTED;\n\t    }\n\t    =
/***/\n\t    return BS_FINISH_DONE;\n\t  }\n\t  if (s.last_lit) {\n\t    =
/*** FLUSH_BLOCK(s, 0); ***/\n\t    flush_block_only(s, false);\n\t    =
if (s.strm.avail_out =3D=3D=3D 0) {\n\t      return BS_NEED_MORE;\n\t    =
}\n\t    /***/\n\t  }\n\t  return BS_BLOCK_DONE;\n\t}\n\n\t/* =
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
\n\t * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a =
hash table.\n\t * (It will be regenerated if this run of deflate =
switches away from Huffman.)\n\t */\n\tfunction deflate_huff(s, flush) =
{\n\t  var bflush;             /* set if current block must be flushed =
*/\n\n\t  for (;;) {\n\t    /* Make sure that we have a literal to =
write. */\n\t    if (s.lookahead =3D=3D=3D 0) {\n\t      =
fill_window(s);\n\t      if (s.lookahead =3D=3D=3D 0) {\n\t        if =
(flush =3D=3D=3D Z_NO_FLUSH) {\n\t          return BS_NEED_MORE;\n\t     =
   }\n\t        break;      /* flush the current block */\n\t      }\n\t =
   }\n\n\t    /* Output a literal byte */\n\t    s.match_length =3D =
0;\n\t    //Tracevv((stderr,\"%c\", s-&gt;window[s-&gt;strstart]));\n\t  =
  /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n\t    =
bflush =3D trees._tr_tally(s, 0, s.window[s.strstart]);\n\t    =
s.lookahead--;\n\t    s.strstart++;\n\t    if (bflush) {\n\t      /*** =
FLUSH_BLOCK(s, 0); ***/\n\t      flush_block_only(s, false);\n\t      if =
(s.strm.avail_out =3D=3D=3D 0) {\n\t        return BS_NEED_MORE;\n\t     =
 }\n\t      /***/\n\t    }\n\t  }\n\t  s.insert =3D 0;\n\t  if (flush =
=3D=3D=3D Z_FINISH) {\n\t    /*** FLUSH_BLOCK(s, 1); ***/\n\t    =
flush_block_only(s, true);\n\t    if (s.strm.avail_out =3D=3D=3D 0) =
{\n\t      return BS_FINISH_STARTED;\n\t    }\n\t    /***/\n\t    return =
BS_FINISH_DONE;\n\t  }\n\t  if (s.last_lit) {\n\t    /*** FLUSH_BLOCK(s, =
0); ***/\n\t    flush_block_only(s, false);\n\t    if (s.strm.avail_out =
=3D=3D=3D 0) {\n\t      return BS_NEED_MORE;\n\t    }\n\t    /***/\n\t  =
}\n\t  return BS_BLOCK_DONE;\n\t}\n\n\t/* Values for max_lazy_match, =
good_match and max_chain_length, depending on\n\t * the desired pack =
level (0..9). The values given below have been tuned to\n\t * exclude =
worst case performance for pathological files. Better values may be\n\t =
* found for specific files.\n\t */\n\tvar Config =3D function =
(good_length, max_lazy, nice_length, max_chain, func) {\n\t  =
this.good_length =3D good_length;\n\t  this.max_lazy =3D max_lazy;\n\t  =
this.nice_length =3D nice_length;\n\t  this.max_chain =3D max_chain;\n\t =
 this.func =3D func;\n\t};\n\n\tvar =
configuration_table;\n\n\tconfiguration_table =3D [\n\t  /*      good =
lazy nice chain */\n\t  new Config(0, 0, 0, 0, deflate_stored),          =
/* 0 store only */\n\t  new Config(4, 4, 8, 4, deflate_fast),            =
/* 1 max speed, no lazy matches */\n\t  new Config(4, 5, 16, 8, =
deflate_fast),           /* 2 */\n\t  new Config(4, 6, 32, 32, =
deflate_fast),          /* 3 */\n\n\t  new Config(4, 4, 16, 16, =
deflate_slow),          /* 4 lazy matches */\n\t  new Config(8, 16, 32, =
32, deflate_slow),         /* 5 */\n\t  new Config(8, 16, 128, 128, =
deflate_slow),       /* 6 */\n\t  new Config(8, 32, 128, 256, =
deflate_slow),       /* 7 */\n\t  new Config(32, 128, 258, 1024, =
deflate_slow),    /* 8 */\n\t  new Config(32, 258, 258, 4096, =
deflate_slow)     /* 9 max compression */\n\t];\n\n\n\t/* =
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
\n\t * Initialize the \"longest match\" routines for a new zlib =
stream\n\t */\n\tfunction lm_init(s) {\n\t  s.window_size =3D 2 * =
s.w_size;\n\n\t  /*** CLEAR_HASH(s); ***/\n\t  zero(s.head); // Fill =
with NIL (=3D 0);\n\n\t  /* Set the default configuration =
parameters:\n\t   */\n\t  s.max_lazy_match =3D =
configuration_table[s.level].max_lazy;\n\t  s.good_match =3D =
configuration_table[s.level].good_length;\n\t  s.nice_match =3D =
configuration_table[s.level].nice_length;\n\t  s.max_chain_length =3D =
configuration_table[s.level].max_chain;\n\n\t  s.strstart =3D 0;\n\t  =
s.block_start =3D 0;\n\t  s.lookahead =3D 0;\n\t  s.insert =3D 0;\n\t  =
s.match_length =3D s.prev_length =3D MIN_MATCH - 1;\n\t  =
s.match_available =3D 0;\n\t  s.ins_h =3D 0;\n\t}\n\n\n\tfunction =
DeflateState() {\n\t  this.strm =3D null;            /* pointer back to =
this zlib stream */\n\t  this.status =3D 0;            /* as the name =
implies */\n\t  this.pending_buf =3D null;      /* output still pending =
*/\n\t  this.pending_buf_size =3D 0;  /* size of pending_buf */\n\t  =
this.pending_out =3D 0;       /* next pending byte to output to the =
stream */\n\t  this.pending =3D 0;           /* nb of bytes in the =
pending buffer */\n\t  this.wrap =3D 0;              /* bit 0 true for =
zlib, bit 1 true for gzip */\n\t  this.gzhead =3D null;         /* gzip =
header information to write */\n\t  this.gzindex =3D 0;           /* =
where in extra, name, or comment */\n\t  this.method =3D Z_DEFLATED; /* =
can only be DEFLATED */\n\t  this.last_flush =3D -1;   /* value of flush =
param for previous deflate call */\n\n\t  this.w_size =3D 0;  /* LZ77 =
window size (32K by default) */\n\t  this.w_bits =3D 0;  /* log2(w_size) =
 (8..16) */\n\t  this.w_mask =3D 0;  /* w_size - 1 */\n\n\t  this.window =
=3D null;\n\t  /* Sliding window. Input bytes are read into the second =
half of the window,\n\t   * and move to the first half later to keep a =
dictionary of at least wSize\n\t   * bytes. With this organization, =
matches are limited to a distance of\n\t   * wSize-MAX_MATCH bytes, but =
this ensures that IO is always\n\t   * performed with a length multiple =
of the block size.\n\t   */\n\n\t  this.window_size =3D 0;\n\t  /* =
Actual size of window: 2*wSize, except when the user input buffer\n\t   =
* is directly used as sliding window.\n\t   */\n\n\t  this.prev =3D =
null;\n\t  /* Link to older string with same hash index. To limit the =
size of this\n\t   * array to 64K, this link is maintained only for the =
last 32K strings.\n\t   * An index in this array is thus a window index =
modulo 32K.\n\t   */\n\n\t  this.head =3D null;   /* Heads of the hash =
chains or NIL. */\n\n\t  this.ins_h =3D 0;       /* hash index of string =
to be inserted */\n\t  this.hash_size =3D 0;   /* number of elements in =
hash table */\n\t  this.hash_bits =3D 0;   /* log2(hash_size) */\n\t  =
this.hash_mask =3D 0;   /* hash_size-1 */\n\n\t  this.hash_shift =3D =
0;\n\t  /* Number of bits by which ins_h must be shifted at each =
input\n\t   * step. It must be such that after MIN_MATCH steps, the =
oldest\n\t   * byte no longer takes part in the hash key, that is:\n\t   =
*   hash_shift * MIN_MATCH &gt;=3D hash_bits\n\t   */\n\n\t  =
this.block_start =3D 0;\n\t  /* Window position at the beginning of the =
current output block. Gets\n\t   * negative when the window is moved =
backwards.\n\t   */\n\n\t  this.match_length =3D 0;      /* length of =
best match */\n\t  this.prev_match =3D 0;        /* previous match =
*/\n\t  this.match_available =3D 0;   /* set if previous match exists =
*/\n\t  this.strstart =3D 0;          /* start of string to insert =
*/\n\t  this.match_start =3D 0;       /* start of matching string */\n\t =
 this.lookahead =3D 0;         /* number of valid bytes ahead in window =
*/\n\n\t  this.prev_length =3D 0;\n\t  /* Length of the best match at =
previous step. Matches not greater than this\n\t   * are discarded. This =
is used in the lazy match evaluation.\n\t   */\n\n\t  =
this.max_chain_length =3D 0;\n\t  /* To speed up deflation, hash chains =
are never searched beyond this\n\t   * length.  A higher limit improves =
compression ratio but degrades the\n\t   * speed.\n\t   */\n\n\t  =
this.max_lazy_match =3D 0;\n\t  /* Attempt to find a better match only =
when the current match is strictly\n\t   * smaller than this value. This =
mechanism is used only for compression\n\t   * levels &gt;=3D 4.\n\t   =
*/\n\t  // That's alias to max_lazy_match, don't use directly\n\t  =
//this.max_insert_length =3D 0;\n\t  /* Insert new strings in the hash =
table only if the match length is not\n\t   * greater than this length. =
This saves time but degrades compression.\n\t   * max_insert_length is =
used only for compression levels &lt;=3D 3.\n\t   */\n\n\t  this.level =
=3D 0;     /* compression level (1..9) */\n\t  this.strategy =3D 0;  /* =
favor or force Huffman coding*/\n\n\t  this.good_match =3D 0;\n\t  /* =
Use a faster search when the previous match is longer than this */\n\n\t =
 this.nice_match =3D 0; /* Stop searching when current match exceeds =
this */\n\n\t              /* used by trees.c: */\n\n\t  /* Didn't use =
ct_data typedef below to suppress compiler warning */\n\n\t  // struct =
ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */\n\t  // =
struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */\n\t  // =
struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths =
*/\n\n\t  // Use flat array of DOUBLE size, with interleaved fata,\n\t  =
// because JS does not support effective\n\t  this.dyn_ltree  =3D new =
utils.Buf16(HEAP_SIZE * 2);\n\t  this.dyn_dtree  =3D new =
utils.Buf16((2*D_CODES+1) * 2);\n\t  this.bl_tree    =3D new =
utils.Buf16((2*BL_CODES+1) * 2);\n\t  zero(this.dyn_ltree);\n\t  =
zero(this.dyn_dtree);\n\t  zero(this.bl_tree);\n\n\t  this.l_desc   =3D =
null;         /* desc. for literal tree */\n\t  this.d_desc   =3D null;  =
       /* desc. for distance tree */\n\t  this.bl_desc  =3D null;        =
 /* desc. for bit length tree */\n\n\t  //ush bl_count[MAX_BITS+1];\n\t  =
this.bl_count =3D new utils.Buf16(MAX_BITS+1);\n\t  /* number of codes =
at each bit length for an optimal tree */\n\n\t  //int =
heap[2*L_CODES+1];      /* heap used to build the Huffman trees */\n\t  =
this.heap =3D new utils.Buf16(2*L_CODES+1);  /* heap used to build the =
Huffman trees */\n\t  zero(this.heap);\n\n\t  this.heap_len =3D 0;       =
        /* number of elements in the heap */\n\t  this.heap_max =3D 0;   =
            /* element of largest frequency */\n\t  /* The sons of =
heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.\n\t   * The =
same heap array is used to build all trees.\n\t   */\n\n\t  this.depth =
=3D new utils.Buf16(2*L_CODES+1); //uch depth[2*L_CODES+1];\n\t  =
zero(this.depth);\n\t  /* Depth of each subtree used as tie breaker for =
trees of equal frequency\n\t   */\n\n\t  this.l_buf =3D 0;          /* =
buffer index for literals or lengths */\n\n\t  this.lit_bufsize =3D =
0;\n\t  /* Size of match buffer for literals/lengths.  There are 4 =
reasons for\n\t   * limiting lit_bufsize to 64K:\n\t   *   - frequencies =
can be kept in 16 bit counters\n\t   *   - if compression is not =
successful for the first block, all input\n\t   *     data is still in =
the window so we can still emit a stored block even\n\t   *     when =
input comes from standard input.  (This can also be done for\n\t   *     =
all blocks if lit_bufsize is not greater than 32K.)\n\t   *   - if =
compression is not successful for a file smaller than 64K, we can\n\t   =
*     even emit a stored file instead of a stored block (saving 5 =
bytes).\n\t   *     This is applicable only for zip (not gzip or =
zlib).\n\t   *   - creating new Huffman trees less frequently may not =
provide fast\n\t   *     adaptation to changes in the input data =
statistics. (Take for\n\t   *     example a binary file with poorly =
compressible code followed by\n\t   *     a highly compressible string =
table.) Smaller buffer sizes give\n\t   *     fast adaptation but have =
of course the overhead of transmitting\n\t   *     trees more =
frequently.\n\t   *   - I can't count above 4\n\t   */\n\n\t  =
this.last_lit =3D 0;      /* running index in l_buf */\n\n\t  this.d_buf =
=3D 0;\n\t  /* Buffer index for distances. To simplify the code, d_buf =
and l_buf have\n\t   * the same number of elements. To use different =
lengths, an extra flag\n\t   * array would be necessary.\n\t   */\n\n\t  =
this.opt_len =3D 0;       /* bit length of current block with optimal =
trees */\n\t  this.static_len =3D 0;    /* bit length of current block =
with static trees */\n\t  this.matches =3D 0;       /* number of string =
matches in current block */\n\t  this.insert =3D 0;        /* bytes at =
end of window left to insert */\n\n\n\t  this.bi_buf =3D 0;\n\t  /* =
Output buffer. bits are inserted starting at the bottom (least\n\t   * =
significant bits).\n\t   */\n\t  this.bi_valid =3D 0;\n\t  /* Number of =
valid bits in bi_buf.  All bits above the last valid bit\n\t   * are =
always zero.\n\t   */\n\n\t  // Used for window memory init. We safely =
ignore it for JS. That makes\n\t  // sense only for pointers and memory =
check tools.\n\t  //this.high_water =3D 0;\n\t  /* High water mark =
offset in window for initialized bytes -- bytes above\n\t   * this are =
set to zero in order to avoid memory check warnings when\n\t   * longest =
match routines access bytes past the input.  This is then\n\t   * =
updated to the new high water mark.\n\t   */\n\t}\n\n\n\tfunction =
deflateResetKeep(strm) {\n\t  var s;\n\n\t  if (!strm || !strm.state) =
{\n\t    return err(strm, Z_STREAM_ERROR);\n\t  }\n\n\t  strm.total_in =
=3D strm.total_out =3D 0;\n\t  strm.data_type =3D Z_UNKNOWN;\n\n\t  s =
=3D strm.state;\n\t  s.pending =3D 0;\n\t  s.pending_out =3D 0;\n\n\t  =
if (s.wrap &lt; 0) {\n\t    s.wrap =3D -s.wrap;\n\t    /* was made =
negative by deflate(..., Z_FINISH); */\n\t  }\n\t  s.status =3D (s.wrap =
? INIT_STATE : BUSY_STATE);\n\t  strm.adler =3D (s.wrap =3D=3D=3D 2) =
?\n\t    0  // crc32(0, Z_NULL, 0)\n\t  :\n\t    1; // adler32(0, =
Z_NULL, 0)\n\t  s.last_flush =3D Z_NO_FLUSH;\n\t  trees._tr_init(s);\n\t =
 return Z_OK;\n\t}\n\n\n\tfunction deflateReset(strm) {\n\t  var ret =3D =
deflateResetKeep(strm);\n\t  if (ret =3D=3D=3D Z_OK) {\n\t    =
lm_init(strm.state);\n\t  }\n\t  return ret;\n\t}\n\n\n\tfunction =
deflateSetHeader(strm, head) {\n\t  if (!strm || !strm.state) { return =
Z_STREAM_ERROR; }\n\t  if (strm.state.wrap !=3D=3D 2) { return =
Z_STREAM_ERROR; }\n\t  strm.state.gzhead =3D head;\n\t  return =
Z_OK;\n\t}\n\n\n\tfunction deflateInit2(strm, level, method, windowBits, =
memLevel, strategy) {\n\t  if (!strm) { // =3D=3D=3D Z_NULL\n\t    =
return Z_STREAM_ERROR;\n\t  }\n\t  var wrap =3D 1;\n\n\t  if (level =
=3D=3D=3D Z_DEFAULT_COMPRESSION) {\n\t    level =3D 6;\n\t  }\n\n\t  if =
(windowBits &lt; 0) { /* suppress zlib wrapper */\n\t    wrap =3D 0;\n\t =
   windowBits =3D -windowBits;\n\t  }\n\n\t  else if (windowBits &gt; =
15) {\n\t    wrap =3D 2;           /* write gzip wrapper instead */\n\t  =
  windowBits -=3D 16;\n\t  }\n\n\n\t  if (memLevel &lt; 1 || memLevel =
&gt; MAX_MEM_LEVEL || method !=3D=3D Z_DEFLATED ||\n\t    windowBits =
&lt; 8 || windowBits &gt; 15 || level &lt; 0 || level &gt; 9 ||\n\t    =
strategy &lt; 0 || strategy &gt; Z_FIXED) {\n\t    return err(strm, =
Z_STREAM_ERROR);\n\t  }\n\n\n\t  if (windowBits =3D=3D=3D 8) {\n\t    =
windowBits =3D 9;\n\t  }\n\t  /* until 256-byte window bug fixed =
*/\n\n\t  var s =3D new DeflateState();\n\n\t  strm.state =3D s;\n\t  =
s.strm =3D strm;\n\n\t  s.wrap =3D wrap;\n\t  s.gzhead =3D null;\n\t  =
s.w_bits =3D windowBits;\n\t  s.w_size =3D 1 &lt;&lt; s.w_bits;\n\t  =
s.w_mask =3D s.w_size - 1;\n\n\t  s.hash_bits =3D memLevel + 7;\n\t  =
s.hash_size =3D 1 &lt;&lt; s.hash_bits;\n\t  s.hash_mask =3D s.hash_size =
- 1;\n\t  s.hash_shift =3D ~~((s.hash_bits + MIN_MATCH - 1) / =
MIN_MATCH);\n\n\t  s.window =3D new utils.Buf8(s.w_size * 2);\n\t  =
s.head =3D new utils.Buf16(s.hash_size);\n\t  s.prev =3D new =
utils.Buf16(s.w_size);\n\n\t  // Don't need mem init magic for JS.\n\t  =
//s.high_water =3D 0;  /* nothing written to s-&gt;window yet */\n\n\t  =
s.lit_bufsize =3D 1 &lt;&lt; (memLevel + 6); /* 16K elements by default =
*/\n\n\t  s.pending_buf_size =3D s.lit_bufsize * 4;\n\t  s.pending_buf =
=3D new utils.Buf8(s.pending_buf_size);\n\n\t  s.d_buf =3D s.lit_bufsize =
&gt;&gt; 1;\n\t  s.l_buf =3D (1 + 2) * s.lit_bufsize;\n\n\t  s.level =3D =
level;\n\t  s.strategy =3D strategy;\n\t  s.method =3D method;\n\n\t  =
return deflateReset(strm);\n\t}\n\n\tfunction deflateInit(strm, level) =
{\n\t  return deflateInit2(strm, level, Z_DEFLATED, MAX_WBITS, =
DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY);\n\t}\n\n\n\tfunction deflate(strm, =
flush) {\n\t  var old_flush, s;\n\t  var beg, val; // for gzip header =
write only\n\n\t  if (!strm || !strm.state ||\n\t    flush &gt; Z_BLOCK =
|| flush &lt; 0) {\n\t    return strm ? err(strm, Z_STREAM_ERROR) : =
Z_STREAM_ERROR;\n\t  }\n\n\t  s =3D strm.state;\n\n\t  if (!strm.output =
||\n\t      (!strm.input &amp;&amp; strm.avail_in !=3D=3D 0) ||\n\t      =
(s.status =3D=3D=3D FINISH_STATE &amp;&amp; flush !=3D=3D Z_FINISH)) =
{\n\t    return err(strm, (strm.avail_out =3D=3D=3D 0) ? Z_BUF_ERROR : =
Z_STREAM_ERROR);\n\t  }\n\n\t  s.strm =3D strm; /* just in case */\n\t  =
old_flush =3D s.last_flush;\n\t  s.last_flush =3D flush;\n\n\t  /* Write =
the header */\n\t  if (s.status =3D=3D=3D INIT_STATE) {\n\n\t    if =
(s.wrap =3D=3D=3D 2) { // GZIP header\n\t      strm.adler =3D 0;  =
//crc32(0L, Z_NULL, 0);\n\t      put_byte(s, 31);\n\t      put_byte(s, =
139);\n\t      put_byte(s, 8);\n\t      if (!s.gzhead) { // s-&gt;gzhead =
=3D=3D Z_NULL\n\t        put_byte(s, 0);\n\t        put_byte(s, 0);\n\t  =
      put_byte(s, 0);\n\t        put_byte(s, 0);\n\t        put_byte(s, =
0);\n\t        put_byte(s, s.level =3D=3D=3D 9 ? 2 :\n\t                 =
   (s.strategy &gt;=3D Z_HUFFMAN_ONLY || s.level &lt; 2 ?\n\t            =
         4 : 0));\n\t        put_byte(s, OS_CODE);\n\t        s.status =
=3D BUSY_STATE;\n\t      }\n\t      else {\n\t        put_byte(s, =
(s.gzhead.text ? 1 : 0) +\n\t                    (s.gzhead.hcrc ? 2 : 0) =
+\n\t                    (!s.gzhead.extra ? 0 : 4) +\n\t                 =
   (!s.gzhead.name ? 0 : 8) +\n\t                    (!s.gzhead.comment =
? 0 : 16)\n\t                );\n\t        put_byte(s, s.gzhead.time =
&amp; 0xff);\n\t        put_byte(s, (s.gzhead.time &gt;&gt; 8) &amp; =
0xff);\n\t        put_byte(s, (s.gzhead.time &gt;&gt; 16) &amp; =
0xff);\n\t        put_byte(s, (s.gzhead.time &gt;&gt; 24) &amp; =
0xff);\n\t        put_byte(s, s.level =3D=3D=3D 9 ? 2 :\n\t              =
      (s.strategy &gt;=3D Z_HUFFMAN_ONLY || s.level &lt; 2 ?\n\t         =
            4 : 0));\n\t        put_byte(s, s.gzhead.os &amp; 0xff);\n\t =
       if (s.gzhead.extra &amp;&amp; s.gzhead.extra.length) {\n\t        =
  put_byte(s, s.gzhead.extra.length &amp; 0xff);\n\t          =
put_byte(s, (s.gzhead.extra.length &gt;&gt; 8) &amp; 0xff);\n\t        =
}\n\t        if (s.gzhead.hcrc) {\n\t          strm.adler =3D =
crc32(strm.adler, s.pending_buf, s.pending, 0);\n\t        }\n\t        =
s.gzindex =3D 0;\n\t        s.status =3D EXTRA_STATE;\n\t      }\n\t    =
}\n\t    else // DEFLATE header\n\t    {\n\t      var header =3D =
(Z_DEFLATED + ((s.w_bits - 8) &lt;&lt; 4)) &lt;&lt; 8;\n\t      var =
level_flags =3D -1;\n\n\t      if (s.strategy &gt;=3D Z_HUFFMAN_ONLY || =
s.level &lt; 2) {\n\t        level_flags =3D 0;\n\t      } else if =
(s.level &lt; 6) {\n\t        level_flags =3D 1;\n\t      } else if =
(s.level =3D=3D=3D 6) {\n\t        level_flags =3D 2;\n\t      } else =
{\n\t        level_flags =3D 3;\n\t      }\n\t      header |=3D =
(level_flags &lt;&lt; 6);\n\t      if (s.strstart !=3D=3D 0) { header =
|=3D PRESET_DICT; }\n\t      header +=3D 31 - (header % 31);\n\n\t      =
s.status =3D BUSY_STATE;\n\t      putShortMSB(s, header);\n\n\t      /* =
Save the adler32 of the preset dictionary: */\n\t      if (s.strstart =
!=3D=3D 0) {\n\t        putShortMSB(s, strm.adler &gt;&gt;&gt; 16);\n\t  =
      putShortMSB(s, strm.adler &amp; 0xffff);\n\t      }\n\t      =
strm.adler =3D 1; // adler32(0L, Z_NULL, 0);\n\t    }\n\t  =
}\n\n\t//#ifdef GZIP\n\t  if (s.status =3D=3D=3D EXTRA_STATE) {\n\t    =
if (s.gzhead.extra/* !=3D Z_NULL*/) {\n\t      beg =3D s.pending;  /* =
start of bytes to update crc */\n\n\t      while (s.gzindex &lt; =
(s.gzhead.extra.length &amp; 0xffff)) {\n\t        if (s.pending =
=3D=3D=3D s.pending_buf_size) {\n\t          if (s.gzhead.hcrc =
&amp;&amp; s.pending &gt; beg) {\n\t            strm.adler =3D =
crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n\t          =
}\n\t          flush_pending(strm);\n\t          beg =3D s.pending;\n\t  =
        if (s.pending =3D=3D=3D s.pending_buf_size) {\n\t            =
break;\n\t          }\n\t        }\n\t        put_byte(s, =
s.gzhead.extra[s.gzindex] &amp; 0xff);\n\t        s.gzindex++;\n\t      =
}\n\t      if (s.gzhead.hcrc &amp;&amp; s.pending &gt; beg) {\n\t        =
strm.adler =3D crc32(strm.adler, s.pending_buf, s.pending - beg, =
beg);\n\t      }\n\t      if (s.gzindex =3D=3D=3D s.gzhead.extra.length) =
{\n\t        s.gzindex =3D 0;\n\t        s.status =3D NAME_STATE;\n\t    =
  }\n\t    }\n\t    else {\n\t      s.status =3D NAME_STATE;\n\t    =
}\n\t  }\n\t  if (s.status =3D=3D=3D NAME_STATE) {\n\t    if =
(s.gzhead.name/* !=3D Z_NULL*/) {\n\t      beg =3D s.pending;  /* start =
of bytes to update crc */\n\t      //int val;\n\n\t      do {\n\t        =
if (s.pending =3D=3D=3D s.pending_buf_size) {\n\t          if =
(s.gzhead.hcrc &amp;&amp; s.pending &gt; beg) {\n\t            =
strm.adler =3D crc32(strm.adler, s.pending_buf, s.pending - beg, =
beg);\n\t          }\n\t          flush_pending(strm);\n\t          beg =
=3D s.pending;\n\t          if (s.pending =3D=3D=3D s.pending_buf_size) =
{\n\t            val =3D 1;\n\t            break;\n\t          }\n\t     =
   }\n\t        // JS specific: little magic to add zero terminator to =
end of string\n\t        if (s.gzindex &lt; s.gzhead.name.length) {\n\t  =
        val =3D s.gzhead.name.charCodeAt(s.gzindex++) &amp; 0xff;\n\t    =
    } else {\n\t          val =3D 0;\n\t        }\n\t        put_byte(s, =
val);\n\t      } while (val !=3D=3D 0);\n\n\t      if (s.gzhead.hcrc =
&amp;&amp; s.pending &gt; beg) {\n\t        strm.adler =3D =
crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n\t      }\n\t   =
   if (val =3D=3D=3D 0) {\n\t        s.gzindex =3D 0;\n\t        =
s.status =3D COMMENT_STATE;\n\t      }\n\t    }\n\t    else {\n\t      =
s.status =3D COMMENT_STATE;\n\t    }\n\t  }\n\t  if (s.status =3D=3D=3D =
COMMENT_STATE) {\n\t    if (s.gzhead.comment/* !=3D Z_NULL*/) {\n\t      =
beg =3D s.pending;  /* start of bytes to update crc */\n\t      //int =
val;\n\n\t      do {\n\t        if (s.pending =3D=3D=3D =
s.pending_buf_size) {\n\t          if (s.gzhead.hcrc &amp;&amp; =
s.pending &gt; beg) {\n\t            strm.adler =3D crc32(strm.adler, =
s.pending_buf, s.pending - beg, beg);\n\t          }\n\t          =
flush_pending(strm);\n\t          beg =3D s.pending;\n\t          if =
(s.pending =3D=3D=3D s.pending_buf_size) {\n\t            val =3D 1;\n\t =
           break;\n\t          }\n\t        }\n\t        // JS specific: =
little magic to add zero terminator to end of string\n\t        if =
(s.gzindex &lt; s.gzhead.comment.length) {\n\t          val =3D =
s.gzhead.comment.charCodeAt(s.gzindex++) &amp; 0xff;\n\t        } else =
{\n\t          val =3D 0;\n\t        }\n\t        put_byte(s, val);\n\t  =
    } while (val !=3D=3D 0);\n\n\t      if (s.gzhead.hcrc &amp;&amp; =
s.pending &gt; beg) {\n\t        strm.adler =3D crc32(strm.adler, =
s.pending_buf, s.pending - beg, beg);\n\t      }\n\t      if (val =
=3D=3D=3D 0) {\n\t        s.status =3D HCRC_STATE;\n\t      }\n\t    =
}\n\t    else {\n\t      s.status =3D HCRC_STATE;\n\t    }\n\t  }\n\t  =
if (s.status =3D=3D=3D HCRC_STATE) {\n\t    if (s.gzhead.hcrc) {\n\t     =
 if (s.pending + 2 &gt; s.pending_buf_size) {\n\t        =
flush_pending(strm);\n\t      }\n\t      if (s.pending + 2 &lt;=3D =
s.pending_buf_size) {\n\t        put_byte(s, strm.adler &amp; 0xff);\n\t =
       put_byte(s, (strm.adler &gt;&gt; 8) &amp; 0xff);\n\t        =
strm.adler =3D 0; //crc32(0L, Z_NULL, 0);\n\t        s.status =3D =
BUSY_STATE;\n\t      }\n\t    }\n\t    else {\n\t      s.status =3D =
BUSY_STATE;\n\t    }\n\t  }\n\t//#endif\n\n\t  /* Flush as much pending =
output as possible */\n\t  if (s.pending !=3D=3D 0) {\n\t    =
flush_pending(strm);\n\t    if (strm.avail_out =3D=3D=3D 0) {\n\t      =
/* Since avail_out is 0, deflate will be called again with\n\t       * =
more output space, but possibly with both pending and\n\t       * =
avail_in equal to zero. There won't be anything to do,\n\t       * but =
this is not an error situation so make sure we\n\t       * return OK =
instead of BUF_ERROR at next call of deflate:\n\t       */\n\t      =
s.last_flush =3D -1;\n\t      return Z_OK;\n\t    }\n\n\t    /* Make =
sure there is something to do and avoid duplicate consecutive\n\t     * =
flushes. For repeated and useless calls with Z_FINISH, we keep\n\t     * =
returning Z_STREAM_END instead of Z_BUF_ERROR.\n\t     */\n\t  } else if =
(strm.avail_in =3D=3D=3D 0 &amp;&amp; rank(flush) &lt;=3D =
rank(old_flush) &amp;&amp;\n\t    flush !=3D=3D Z_FINISH) {\n\t    =
return err(strm, Z_BUF_ERROR);\n\t  }\n\n\t  /* User must not provide =
more input after the first FINISH: */\n\t  if (s.status =3D=3D=3D =
FINISH_STATE &amp;&amp; strm.avail_in !=3D=3D 0) {\n\t    return =
err(strm, Z_BUF_ERROR);\n\t  }\n\n\t  /* Start a new block or continue =
the current one.\n\t   */\n\t  if (strm.avail_in !=3D=3D 0 || =
s.lookahead !=3D=3D 0 ||\n\t    (flush !=3D=3D Z_NO_FLUSH &amp;&amp; =
s.status !=3D=3D FINISH_STATE)) {\n\t    var bstate =3D (s.strategy =
=3D=3D=3D Z_HUFFMAN_ONLY) ? deflate_huff(s, flush) :\n\t      =
(s.strategy =3D=3D=3D Z_RLE ? deflate_rle(s, flush) :\n\t        =
configuration_table[s.level].func(s, flush));\n\n\t    if (bstate =
=3D=3D=3D BS_FINISH_STARTED || bstate =3D=3D=3D BS_FINISH_DONE) {\n\t    =
  s.status =3D FINISH_STATE;\n\t    }\n\t    if (bstate =3D=3D=3D =
BS_NEED_MORE || bstate =3D=3D=3D BS_FINISH_STARTED) {\n\t      if =
(strm.avail_out =3D=3D=3D 0) {\n\t        s.last_flush =3D -1;\n\t       =
 /* avoid BUF_ERROR next call, see above */\n\t      }\n\t      return =
Z_OK;\n\t      /* If flush !=3D Z_NO_FLUSH &amp;&amp; avail_out =3D=3D =
0, the next call\n\t       * of deflate should use the same flush =
parameter to make sure\n\t       * that the flush is complete. So we =
don't have to output an\n\t       * empty block here, this will be done =
at next call. This also\n\t       * ensures that for a very small output =
buffer, we emit at most\n\t       * one empty block.\n\t       */\n\t    =
}\n\t    if (bstate =3D=3D=3D BS_BLOCK_DONE) {\n\t      if (flush =
=3D=3D=3D Z_PARTIAL_FLUSH) {\n\t        trees._tr_align(s);\n\t      =
}\n\t      else if (flush !=3D=3D Z_BLOCK) { /* FULL_FLUSH or SYNC_FLUSH =
*/\n\n\t        trees._tr_stored_block(s, 0, 0, false);\n\t        /* =
For a full flush, this empty block will be recognized\n\t         * as a =
special marker by inflate_sync().\n\t         */\n\t        if (flush =
=3D=3D=3D Z_FULL_FLUSH) {\n\t          /*** CLEAR_HASH(s); ***/          =
   /* forget history */\n\t          zero(s.head); // Fill with NIL (=3D =
0);\n\n\t          if (s.lookahead =3D=3D=3D 0) {\n\t            =
s.strstart =3D 0;\n\t            s.block_start =3D 0;\n\t            =
s.insert =3D 0;\n\t          }\n\t        }\n\t      }\n\t      =
flush_pending(strm);\n\t      if (strm.avail_out =3D=3D=3D 0) {\n\t      =
  s.last_flush =3D -1; /* avoid BUF_ERROR at next call, see above */\n\t =
       return Z_OK;\n\t      }\n\t    }\n\t  }\n\t  =
//Assert(strm-&gt;avail_out &gt; 0, \"bug2\");\n\t  //if (strm.avail_out =
&lt;=3D 0) { throw new Error(\"bug2\");}\n\n\t  if (flush !=3D=3D =
Z_FINISH) { return Z_OK; }\n\t  if (s.wrap &lt;=3D 0) { return =
Z_STREAM_END; }\n\n\t  /* Write the trailer */\n\t  if (s.wrap =3D=3D=3D =
2) {\n\t    put_byte(s, strm.adler &amp; 0xff);\n\t    put_byte(s, =
(strm.adler &gt;&gt; 8) &amp; 0xff);\n\t    put_byte(s, (strm.adler =
&gt;&gt; 16) &amp; 0xff);\n\t    put_byte(s, (strm.adler &gt;&gt; 24) =
&amp; 0xff);\n\t    put_byte(s, strm.total_in &amp; 0xff);\n\t    =
put_byte(s, (strm.total_in &gt;&gt; 8) &amp; 0xff);\n\t    put_byte(s, =
(strm.total_in &gt;&gt; 16) &amp; 0xff);\n\t    put_byte(s, =
(strm.total_in &gt;&gt; 24) &amp; 0xff);\n\t  }\n\t  else\n\t  {\n\t    =
putShortMSB(s, strm.adler &gt;&gt;&gt; 16);\n\t    putShortMSB(s, =
strm.adler &amp; 0xffff);\n\t  }\n\n\t  flush_pending(strm);\n\t  /* If =
avail_out is zero, the application will call deflate again\n\t   * to =
flush the rest.\n\t   */\n\t  if (s.wrap &gt; 0) { s.wrap =3D -s.wrap; =
}\n\t  /* write the trailer only once! */\n\t  return s.pending !=3D=3D =
0 ? Z_OK : Z_STREAM_END;\n\t}\n\n\tfunction deflateEnd(strm) {\n\t  var =
status;\n\n\t  if (!strm/*=3D=3D Z_NULL*/ || !strm.state/*=3D=3D =
Z_NULL*/) {\n\t    return Z_STREAM_ERROR;\n\t  }\n\n\t  status =3D =
strm.state.status;\n\t  if (status !=3D=3D INIT_STATE &amp;&amp;\n\t    =
status !=3D=3D EXTRA_STATE &amp;&amp;\n\t    status !=3D=3D NAME_STATE =
&amp;&amp;\n\t    status !=3D=3D COMMENT_STATE &amp;&amp;\n\t    status =
!=3D=3D HCRC_STATE &amp;&amp;\n\t    status !=3D=3D BUSY_STATE =
&amp;&amp;\n\t    status !=3D=3D FINISH_STATE\n\t  ) {\n\t    return =
err(strm, Z_STREAM_ERROR);\n\t  }\n\n\t  strm.state =3D null;\n\n\t  =
return status =3D=3D=3D BUSY_STATE ? err(strm, Z_DATA_ERROR) : =
Z_OK;\n\t}\n\n\t/* =
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D\n\t=
 * Copy the source state to the destination state\n\t */\n\t//function =
deflateCopy(dest, source) {\n\t//\n\t//}\n\n\texports.deflateInit =3D =
deflateInit;\n\texports.deflateInit2 =3D =
deflateInit2;\n\texports.deflateReset =3D =
deflateReset;\n\texports.deflateResetKeep =3D =
deflateResetKeep;\n\texports.deflateSetHeader =3D =
deflateSetHeader;\n\texports.deflate =3D deflate;\n\texports.deflateEnd =
=3D deflateEnd;\n\texports.deflateInfo =3D 'pako deflate (from Nodeca =
project)';\n\n\t/* Not implemented\n\texports.deflateBound =3D =
deflateBound;\n\texports.deflateCopy =3D =
deflateCopy;\n\texports.deflateSetDictionary =3D =
deflateSetDictionary;\n\texports.deflateParams =3D =
deflateParams;\n\texports.deflatePending =3D =
deflatePending;\n\texports.deflatePrime =3D =
deflatePrime;\n\texports.deflateTune =3D deflateTune;\n\t*/\n\n\n/***/ =
},\n/* 52 */\n/***/ function(module, exports) {\n\n\t'use =
strict';\n\n\n\tvar TYPED_OK =3D  (typeof Uint8Array !=3D=3D =
'undefined') &amp;&amp;\n\t                (typeof Uint16Array !=3D=3D =
'undefined') &amp;&amp;\n\t                (typeof Int32Array !=3D=3D =
'undefined');\n\n\n\texports.assign =3D function (obj /*from1, from2, =
from3, ...*/) {\n\t  var sources =3D =
Array.prototype.slice.call(arguments, 1);\n\t  while (sources.length) =
{\n\t    var source =3D sources.shift();\n\t    if (!source) { continue; =
}\n\n\t    if (typeof source !=3D=3D 'object') {\n\t      throw new =
TypeError(source + 'must be non-object');\n\t    }\n\n\t    for (var p =
in source) {\n\t      if (source.hasOwnProperty(p)) {\n\t        obj[p] =
=3D source[p];\n\t      }\n\t    }\n\t  }\n\n\t  return =
obj;\n\t};\n\n\n\t// reduce buffer size, avoiding mem =
copy\n\texports.shrinkBuf =3D function (buf, size) {\n\t  if (buf.length =
=3D=3D=3D size) { return buf; }\n\t  if (buf.subarray) { return =
buf.subarray(0, size); }\n\t  buf.length =3D size;\n\t  return =
buf;\n\t};\n\n\n\tvar fnTyped =3D {\n\t  arraySet: function (dest, src, =
src_offs, len, dest_offs) {\n\t    if (src.subarray &amp;&amp; =
dest.subarray) {\n\t      dest.set(src.subarray(src_offs, src_offs+len), =
dest_offs);\n\t      return;\n\t    }\n\t    // Fallback to ordinary =
array\n\t    for (var i=3D0; i&lt;len; i++) {\n\t      dest[dest_offs + =
i] =3D src[src_offs + i];\n\t    }\n\t  },\n\t  // Join array of chunks =
to single array.\n\t  flattenChunks: function(chunks) {\n\t    var i, l, =
len, pos, chunk, result;\n\n\t    // calculate data length\n\t    len =
=3D 0;\n\t    for (i=3D0, l=3Dchunks.length; i&lt;l; i++) {\n\t      len =
+=3D chunks[i].length;\n\t    }\n\n\t    // join chunks\n\t    result =
=3D new Uint8Array(len);\n\t    pos =3D 0;\n\t    for (i=3D0, =
l=3Dchunks.length; i&lt;l; i++) {\n\t      chunk =3D chunks[i];\n\t      =
result.set(chunk, pos);\n\t      pos +=3D chunk.length;\n\t    }\n\n\t   =
 return result;\n\t  }\n\t};\n\n\tvar fnUntyped =3D {\n\t  arraySet: =
function (dest, src, src_offs, len, dest_offs) {\n\t    for (var i=3D0; =
i&lt;len; i++) {\n\t      dest[dest_offs + i] =3D src[src_offs + i];\n\t =
   }\n\t  },\n\t  // Join array of chunks to single array.\n\t  =
flattenChunks: function(chunks) {\n\t    return [].concat.apply([], =
chunks);\n\t  }\n\t};\n\n\n\t// Enable/Disable typed arrays use, for =
testing\n\t//\n\texports.setTyped =3D function (on) {\n\t  if (on) {\n\t =
   exports.Buf8  =3D Uint8Array;\n\t    exports.Buf16 =3D =
Uint16Array;\n\t    exports.Buf32 =3D Int32Array;\n\t    =
exports.assign(exports, fnTyped);\n\t  } else {\n\t    exports.Buf8  =3D =
Array;\n\t    exports.Buf16 =3D Array;\n\t    exports.Buf32 =3D =
Array;\n\t    exports.assign(exports, fnUntyped);\n\t  =
}\n\t};\n\n\texports.setTyped(TYPED_OK);\n\n\n/***/ },\n/* 53 */\n/***/ =
function(module, exports, __webpack_require__) {\n\n\t'use =
strict';\n\n\n\tvar utils =3D __webpack_require__(52);\n\n\t/* Public =
constants =
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D*/\n\t/* =
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
*/\n\n\n\t//var Z_FILTERED          =3D 1;\n\t//var Z_HUFFMAN_ONLY      =
=3D 2;\n\t//var Z_RLE               =3D 3;\n\tvar Z_FIXED               =
=3D 4;\n\t//var Z_DEFAULT_STRATEGY  =3D 0;\n\n\t/* Possible values of =
the data_type field (though see inflate()) */\n\tvar Z_BINARY            =
  =3D 0;\n\tvar Z_TEXT                =3D 1;\n\t//var Z_ASCII            =
 =3D 1; // =3D Z_TEXT\n\tvar Z_UNKNOWN             =3D =
2;\n\n\t/*=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D*/\n\n\n\tfunction zero(buf) { var len =3D buf.length; =
while (--len &gt;=3D 0) { buf[len] =3D 0; } }\n\n\t// From =
zutil.h\n\n\tvar STORED_BLOCK =3D 0;\n\tvar STATIC_TREES =3D 1;\n\tvar =
DYN_TREES    =3D 2;\n\t/* The three kinds of block type */\n\n\tvar =
MIN_MATCH    =3D 3;\n\tvar MAX_MATCH    =3D 258;\n\t/* The minimum and =
maximum match lengths */\n\n\t// From deflate.h\n\t/* =
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
\n\t * Internal compression state.\n\t */\n\n\tvar LENGTH_CODES  =3D =
29;\n\t/* number of length codes, not counting the special END_BLOCK =
code */\n\n\tvar LITERALS      =3D 256;\n\t/* number of literal bytes =
0..255 */\n\n\tvar L_CODES       =3D LITERALS + 1 + LENGTH_CODES;\n\t/* =
number of Literal or Length codes, including the END_BLOCK code =
*/\n\n\tvar D_CODES       =3D 30;\n\t/* number of distance codes =
*/\n\n\tvar BL_CODES      =3D 19;\n\t/* number of codes used to transfer =
the bit lengths */\n\n\tvar HEAP_SIZE     =3D 2*L_CODES + 1;\n\t/* =
maximum heap size */\n\n\tvar MAX_BITS      =3D 15;\n\t/* All codes must =
not exceed MAX_BITS bits */\n\n\tvar Buf_size      =3D 16;\n\t/* size of =
bit buffer in bi_buf */\n\n\n\t/* =
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
\n\t * Constants\n\t */\n\n\tvar MAX_BL_BITS =3D 7;\n\t/* Bit length =
codes must not exceed MAX_BL_BITS bits */\n\n\tvar END_BLOCK   =3D =
256;\n\t/* end of block literal code */\n\n\tvar REP_3_6     =3D =
16;\n\t/* repeat previous bit length 3-6 times (2 bits of repeat count) =
*/\n\n\tvar REPZ_3_10   =3D 17;\n\t/* repeat a zero length 3-10 times  =
(3 bits of repeat count) */\n\n\tvar REPZ_11_138 =3D 18;\n\t/* repeat a =
zero length 11-138 times  (7 bits of repeat count) */\n\n\tvar =
extra_lbits =3D   /* extra bits for each length code */\n\t  =
[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0];\n\n\tvar =
extra_dbits =3D   /* extra bits for each distance code */\n\t  =
[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13];\n\=
n\tvar extra_blbits =3D  /* extra bits for each bit length code */\n\t  =
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7];\n\n\tvar bl_order =3D\n\t  =
[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];\n\t/* The lengths of =
the bit length codes are sent in order of decreasing\n\t * probability, =
to avoid transmitting the lengths for unused bit length codes.\n\t =
*/\n\n\t/* =
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
\n\t * Local data. These are initialized only once.\n\t */\n\n\t// We =
pre-fill arrays with 0 to avoid uninitialized gaps\n\n\tvar =
DIST_CODE_LEN =3D 512; /* see definition of array dist_code below =
*/\n\n\t// !!!! Use flat array insdead of structure, Freq =3D i*2, Len =
=3D i*2+1\n\tvar static_ltree  =3D new Array((L_CODES+2) * =
2);\n\tzero(static_ltree);\n\t/* The static literal tree. Since the bit =
lengths are imposed, there is no\n\t * need for the L_CODES extra codes =
used during heap construction. However\n\t * The codes 286 and 287 are =
needed to build a canonical tree (see _tr_init\n\t * below).\n\t =
*/\n\n\tvar static_dtree  =3D new Array(D_CODES * =
2);\n\tzero(static_dtree);\n\t/* The static distance tree. (Actually a =
trivial tree since all codes use\n\t * 5 bits.)\n\t */\n\n\tvar =
_dist_code    =3D new Array(DIST_CODE_LEN);\n\tzero(_dist_code);\n\t/* =
Distance codes. The first 256 values correspond to the distances\n\t * 3 =
.. 258, the last 256 values correspond to the top 8 bits of\n\t * the 15 =
bit distances.\n\t */\n\n\tvar _length_code  =3D new =
Array(MAX_MATCH-MIN_MATCH+1);\n\tzero(_length_code);\n\t/* length code =
for each normalized match length (0 =3D=3D MIN_MATCH) */\n\n\tvar =
base_length   =3D new Array(LENGTH_CODES);\n\tzero(base_length);\n\t/* =
First normalized length for each code (0 =3D MIN_MATCH) */\n\n\tvar =
base_dist     =3D new Array(D_CODES);\n\tzero(base_dist);\n\t/* First =
normalized distance for each code (0 =3D distance of 1) */\n\n\n\tvar =
StaticTreeDesc =3D function (static_tree, extra_bits, extra_base, elems, =
max_length) {\n\n\t  this.static_tree  =3D static_tree;  /* static tree =
or NULL */\n\t  this.extra_bits   =3D extra_bits;   /* extra bits for =
each code or NULL */\n\t  this.extra_base   =3D extra_base;   /* base =
index for extra_bits */\n\t  this.elems        =3D elems;        /* max =
number of elements in the tree */\n\t  this.max_length   =3D max_length; =
  /* max bit length for the codes */\n\n\t  // show if `static_tree` has =
data or dummy - needed for monomorphic objects\n\t  this.has_stree    =
=3D static_tree &amp;&amp; static_tree.length;\n\t};\n\n\n\tvar =
static_l_desc;\n\tvar static_d_desc;\n\tvar static_bl_desc;\n\n\n\tvar =
TreeDesc =3D function(dyn_tree, stat_desc) {\n\t  this.dyn_tree =3D =
dyn_tree;     /* the dynamic tree */\n\t  this.max_code =3D 0;           =
 /* largest code with non zero frequency */\n\t  this.stat_desc =3D =
stat_desc;   /* the corresponding static tree */\n\t};\n\n\n\n\tfunction =
d_code(dist) {\n\t  return dist &lt; 256 ? _dist_code[dist] : =
_dist_code[256 + (dist &gt;&gt;&gt; 7)];\n\t}\n\n\n\t/* =
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
\n\t * Output a short LSB first on the stream.\n\t * IN assertion: there =
is enough room in pendingBuf.\n\t */\n\tfunction put_short (s, w) =
{\n\t//    put_byte(s, (uch)((w) &amp; 0xff));\n\t//    put_byte(s, =
(uch)((ush)(w) &gt;&gt; 8));\n\t  s.pending_buf[s.pending++] =3D (w) =
&amp; 0xff;\n\t  s.pending_buf[s.pending++] =3D (w &gt;&gt;&gt; 8) &amp; =
0xff;\n\t}\n\n\n\t/* =
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
\n\t * Send a value on a given number of bits.\n\t * IN assertion: =
length &lt;=3D 16 and value fits in length bits.\n\t */\n\tfunction =
send_bits(s, value, length) {\n\t  if (s.bi_valid &gt; (Buf_size - =
length)) {\n\t    s.bi_buf |=3D (value &lt;&lt; s.bi_valid) &amp; =
0xffff;\n\t    put_short(s, s.bi_buf);\n\t    s.bi_buf =3D value =
&gt;&gt; (Buf_size - s.bi_valid);\n\t    s.bi_valid +=3D length - =
Buf_size;\n\t  } else {\n\t    s.bi_buf |=3D (value &lt;&lt; s.bi_valid) =
&amp; 0xffff;\n\t    s.bi_valid +=3D length;\n\t  }\n\t}\n\n\n\tfunction =
send_code(s, c, tree) {\n\t  send_bits(s, tree[c*2]/*.Code*/, tree[c*2 + =
1]/*.Len*/);\n\t}\n\n\n\t/* =
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
\n\t * Reverse the first len bits of a code, using straightforward code =
(a faster\n\t * method would use a table)\n\t * IN assertion: 1 &lt;=3D =
len &lt;=3D 15\n\t */\n\tfunction bi_reverse(code, len) {\n\t  var res =
=3D 0;\n\t  do {\n\t    res |=3D code &amp; 1;\n\t    code =
&gt;&gt;&gt;=3D 1;\n\t    res &lt;&lt;=3D 1;\n\t  } while (--len &gt; =
0);\n\t  return res &gt;&gt;&gt; 1;\n\t}\n\n\n\t/* =
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
\n\t * Flush the bit buffer, keeping at most 7 bits in it.\n\t =
*/\n\tfunction bi_flush(s) {\n\t  if (s.bi_valid =3D=3D=3D 16) {\n\t    =
put_short(s, s.bi_buf);\n\t    s.bi_buf =3D 0;\n\t    s.bi_valid =3D =
0;\n\n\t  } else if (s.bi_valid &gt;=3D 8) {\n\t    =
s.pending_buf[s.pending++] =3D s.bi_buf &amp; 0xff;\n\t    s.bi_buf =
&gt;&gt;=3D 8;\n\t    s.bi_valid -=3D 8;\n\t  }\n\t}\n\n\n\t/* =
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
\n\t * Compute the optimal bit lengths for a tree and update the total =
bit length\n\t * for the current block.\n\t * IN assertion: the fields =
freq and dad are set, heap[heap_max] and\n\t *    above are the tree =
nodes sorted by increasing frequency.\n\t * OUT assertions: the field =
len is set to the optimal bit length, the\n\t *     array bl_count =
contains the frequencies for each bit length.\n\t *     The length =
opt_len is updated; static_len is also updated if stree is\n\t *     not =
null.\n\t */\n\tfunction gen_bitlen(s, desc)\n\t//    deflate_state =
*s;\n\t//    tree_desc *desc;    /* the tree descriptor */\n\t{\n\t  var =
tree            =3D desc.dyn_tree;\n\t  var max_code        =3D =
desc.max_code;\n\t  var stree           =3D =
desc.stat_desc.static_tree;\n\t  var has_stree       =3D =
desc.stat_desc.has_stree;\n\t  var extra           =3D =
desc.stat_desc.extra_bits;\n\t  var base            =3D =
desc.stat_desc.extra_base;\n\t  var max_length      =3D =
desc.stat_desc.max_length;\n\t  var h;              /* heap index */\n\t =
 var n, m;           /* iterate over the tree elements */\n\t  var bits; =
          /* bit length */\n\t  var xbits;          /* extra bits */\n\t =
 var f;              /* frequency */\n\t  var overflow =3D 0;   /* =
number of elements with bit length too large */\n\n\t  for (bits =3D 0; =
bits &lt;=3D MAX_BITS; bits++) {\n\t    s.bl_count[bits] =3D 0;\n\t  =
}\n\n\t  /* In a first pass, compute the optimal bit lengths (which =
may\n\t   * overflow in the case of the bit length tree).\n\t   */\n\t  =
tree[s.heap[s.heap_max]*2 + 1]/*.Len*/ =3D 0; /* root of the heap =
*/\n\n\t  for (h =3D s.heap_max+1; h &lt; HEAP_SIZE; h++) {\n\t    n =3D =
s.heap[h];\n\t    bits =3D tree[tree[n*2 +1]/*.Dad*/ * 2 + 1]/*.Len*/ + =
1;\n\t    if (bits &gt; max_length) {\n\t      bits =3D max_length;\n\t  =
    overflow++;\n\t    }\n\t    tree[n*2 + 1]/*.Len*/ =3D bits;\n\t    =
/* We overwrite tree[n].Dad which is no longer needed */\n\n\t    if (n =
&gt; max_code) { continue; } /* not a leaf node */\n\n\t    =
s.bl_count[bits]++;\n\t    xbits =3D 0;\n\t    if (n &gt;=3D base) {\n\t =
     xbits =3D extra[n-base];\n\t    }\n\t    f =3D tree[n * =
2]/*.Freq*/;\n\t    s.opt_len +=3D f * (bits + xbits);\n\t    if =
(has_stree) {\n\t      s.static_len +=3D f * (stree[n*2 + 1]/*.Len*/ + =
xbits);\n\t    }\n\t  }\n\t  if (overflow =3D=3D=3D 0) { return; }\n\n\t =
 // Trace((stderr,\"\\nbit length overflow\\n\"));\n\t  /* This happens =
for example on obj2 and pic of the Calgary corpus */\n\n\t  /* Find the =
first bit length which could increase: */\n\t  do {\n\t    bits =3D =
max_length-1;\n\t    while (s.bl_count[bits] =3D=3D=3D 0) { bits--; =
}\n\t    s.bl_count[bits]--;      /* move one leaf down the tree */\n\t  =
  s.bl_count[bits+1] +=3D 2; /* move one overflow item as its brother =
*/\n\t    s.bl_count[max_length]--;\n\t    /* The brother of the =
overflow item also moves one step up,\n\t     * but this does not affect =
bl_count[max_length]\n\t     */\n\t    overflow -=3D 2;\n\t  } while =
(overflow &gt; 0);\n\n\t  /* Now recompute all bit lengths, scanning in =
increasing frequency.\n\t   * h is still equal to HEAP_SIZE. (It is =
simpler to reconstruct all\n\t   * lengths instead of fixing only the =
wrong ones. This idea is taken\n\t   * from 'ar' written by Haruhiko =
Okumura.)\n\t   */\n\t  for (bits =3D max_length; bits !=3D=3D 0; =
bits--) {\n\t    n =3D s.bl_count[bits];\n\t    while (n !=3D=3D 0) =
{\n\t      m =3D s.heap[--h];\n\t      if (m &gt; max_code) { continue; =
}\n\t      if (tree[m*2 + 1]/*.Len*/ !=3D=3D bits) {\n\t        // =
Trace((stderr,\"code %d bits %d-&gt;%d\\n\", m, tree[m].Len, bits));\n\t =
       s.opt_len +=3D (bits - tree[m*2 + =
1]/*.Len*/)*tree[m*2]/*.Freq*/;\n\t        tree[m*2 + 1]/*.Len*/ =3D =
bits;\n\t      }\n\t      n--;\n\t    }\n\t  }\n\t}\n\n\n\t/* =
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
\n\t * Generate the codes for a given tree and bit counts (which need =
not be\n\t * optimal).\n\t * IN assertion: the array bl_count contains =
the bit length statistics for\n\t * the given tree and the field len is =
set for all tree elements.\n\t * OUT assertion: the field code is set =
for all tree elements of non\n\t *     zero code length.\n\t =
*/\n\tfunction gen_codes(tree, max_code, bl_count)\n\t//    ct_data =
*tree;             /* the tree to decorate */\n\t//    int max_code;     =
         /* largest code with non zero frequency */\n\t//    ushf =
*bl_count;            /* number of codes at each bit length */\n\t{\n\t  =
var next_code =3D new Array(MAX_BITS+1); /* next code value for each bit =
length */\n\t  var code =3D 0;              /* running code value */\n\t =
 var bits;                  /* bit index */\n\t  var n;                  =
   /* code index */\n\n\t  /* The distribution counts are first used to =
generate the code values\n\t   * without bit reversal.\n\t   */\n\t  for =
(bits =3D 1; bits &lt;=3D MAX_BITS; bits++) {\n\t    next_code[bits] =3D =
code =3D (code + bl_count[bits-1]) &lt;&lt; 1;\n\t  }\n\t  /* Check that =
the bit counts in bl_count are consistent. The last code\n\t   * must be =
all ones.\n\t   */\n\t  //Assert (code + bl_count[MAX_BITS]-1 =3D=3D =
(1&lt;&lt;MAX_BITS)-1,\n\t  //        \"inconsistent bit counts\");\n\t  =
//Tracev((stderr,\"\\ngen_codes: max_code %d \", max_code));\n\n\t  for =
(n =3D 0;  n &lt;=3D max_code; n++) {\n\t    var len =3D tree[n*2 + =
1]/*.Len*/;\n\t    if (len =3D=3D=3D 0) { continue; }\n\t    /* Now =
reverse the bits */\n\t    tree[n*2]/*.Code*/ =3D =
bi_reverse(next_code[len]++, len);\n\n\t    //Tracecv(tree !=3D =
static_ltree, (stderr,\"\\nn %3d %c l %2d c %4x (%x) \",\n\t    //     =
n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));\n\t  =
}\n\t}\n\n\n\t/* =
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
\n\t * Initialize the various 'constant' tables.\n\t */\n\tfunction =
tr_static_init() {\n\t  var n;        /* iterates over tree elements =
*/\n\t  var bits;     /* bit counter */\n\t  var length;   /* length =
value */\n\t  var code;     /* code value */\n\t  var dist;     /* =
distance index */\n\t  var bl_count =3D new Array(MAX_BITS+1);\n\t  /* =
number of codes at each bit length for an optimal tree */\n\n\t  // do =
check in _tr_init()\n\t  //if (static_init_done) return;\n\n\t  /* For =
some embedded targets, global variables are not initialized: =
*/\n\t/*#ifdef NO_INIT_GLOBAL_POINTERS\n\t  static_l_desc.static_tree =
=3D static_ltree;\n\t  static_l_desc.extra_bits =3D extra_lbits;\n\t  =
static_d_desc.static_tree =3D static_dtree;\n\t  =
static_d_desc.extra_bits =3D extra_dbits;\n\t  static_bl_desc.extra_bits =
=3D extra_blbits;\n\t#endif*/\n\n\t  /* Initialize the mapping length =
(0..255) -&gt; length code (0..28) */\n\t  length =3D 0;\n\t  for (code =
=3D 0; code &lt; LENGTH_CODES-1; code++) {\n\t    base_length[code] =3D =
length;\n\t    for (n =3D 0; n &lt; (1&lt;&lt;extra_lbits[code]); n++) =
{\n\t      _length_code[length++] =3D code;\n\t    }\n\t  }\n\t  =
//Assert (length =3D=3D 256, \"tr_static_init: length !=3D 256\");\n\t  =
/* Note that the length 255 (match length 258) can be represented\n\t   =
* in two different ways: code 284 + 5 bits or code 285, so we\n\t   * =
overwrite length_code[255] to use the best encoding:\n\t   */\n\t  =
_length_code[length-1] =3D code;\n\n\t  /* Initialize the mapping dist =
(0..32K) -&gt; dist code (0..29) */\n\t  dist =3D 0;\n\t  for (code =3D =
0 ; code &lt; 16; code++) {\n\t    base_dist[code] =3D dist;\n\t    for =
(n =3D 0; n &lt; (1&lt;&lt;extra_dbits[code]); n++) {\n\t      =
_dist_code[dist++] =3D code;\n\t    }\n\t  }\n\t  //Assert (dist =3D=3D =
256, \"tr_static_init: dist !=3D 256\");\n\t  dist &gt;&gt;=3D 7; /* =
from now on, all distances are divided by 128 */\n\t  for (; code &lt; =
D_CODES; code++) {\n\t    base_dist[code] =3D dist &lt;&lt; 7;\n\t    =
for (n =3D 0; n &lt; (1&lt;&lt;(extra_dbits[code]-7)); n++) {\n\t      =
_dist_code[256 + dist++] =3D code;\n\t    }\n\t  }\n\t  //Assert (dist =
=3D=3D 256, \"tr_static_init: 256+dist !=3D 512\");\n\n\t  /* Construct =
the codes of the static literal tree */\n\t  for (bits =3D 0; bits =
&lt;=3D MAX_BITS; bits++) {\n\t    bl_count[bits] =3D 0;\n\t  }\n\n\t  n =
=3D 0;\n\t  while (n &lt;=3D 143) {\n\t    static_ltree[n*2 + 1]/*.Len*/ =
=3D 8;\n\t    n++;\n\t    bl_count[8]++;\n\t  }\n\t  while (n &lt;=3D =
255) {\n\t    static_ltree[n*2 + 1]/*.Len*/ =3D 9;\n\t    n++;\n\t    =
bl_count[9]++;\n\t  }\n\t  while (n &lt;=3D 279) {\n\t    =
static_ltree[n*2 + 1]/*.Len*/ =3D 7;\n\t    n++;\n\t    =
bl_count[7]++;\n\t  }\n\t  while (n &lt;=3D 287) {\n\t    =
static_ltree[n*2 + 1]/*.Len*/ =3D 8;\n\t    n++;\n\t    =
bl_count[8]++;\n\t  }\n\t  /* Codes 286 and 287 do not exist, but we =
must include them in the\n\t   * tree construction to get a canonical =
Huffman tree (longest code\n\t   * all ones)\n\t   */\n\t  =
gen_codes(static_ltree, L_CODES+1, bl_count);\n\n\t  /* The static =
distance tree is trivial: */\n\t  for (n =3D 0; n &lt; D_CODES; n++) =
{\n\t    static_dtree[n*2 + 1]/*.Len*/ =3D 5;\n\t    =
static_dtree[n*2]/*.Code*/ =3D bi_reverse(n, 5);\n\t  }\n\n\t  // Now =
data ready and we can init static trees\n\t  static_l_desc =3D new =
StaticTreeDesc(static_ltree, extra_lbits, LITERALS+1, L_CODES, =
MAX_BITS);\n\t  static_d_desc =3D new StaticTreeDesc(static_dtree, =
extra_dbits, 0,          D_CODES, MAX_BITS);\n\t  static_bl_desc =3Dnew =
StaticTreeDesc(new Array(0), extra_blbits, 0,         BL_CODES, =
MAX_BL_BITS);\n\n\t  //static_init_done =3D true;\n\t}\n\n\n\t/* =
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
\n\t * Initialize a new block.\n\t */\n\tfunction init_block(s) {\n\t  =
var n; /* iterates over tree elements */\n\n\t  /* Initialize the trees. =
*/\n\t  for (n =3D 0; n &lt; L_CODES;  n++) { s.dyn_ltree[n*2]/*.Freq*/ =
=3D 0; }\n\t  for (n =3D 0; n &lt; D_CODES;  n++) { =
s.dyn_dtree[n*2]/*.Freq*/ =3D 0; }\n\t  for (n =3D 0; n &lt; BL_CODES; =
n++) { s.bl_tree[n*2]/*.Freq*/ =3D 0; }\n\n\t  =
s.dyn_ltree[END_BLOCK*2]/*.Freq*/ =3D 1;\n\t  s.opt_len =3D s.static_len =
=3D 0;\n\t  s.last_lit =3D s.matches =3D 0;\n\t}\n\n\n\t/* =
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
\n\t * Flush the bit buffer and align the output on a byte boundary\n\t =
*/\n\tfunction bi_windup(s)\n\t{\n\t  if (s.bi_valid &gt; 8) {\n\t    =
put_short(s, s.bi_buf);\n\t  } else if (s.bi_valid &gt; 0) {\n\t    =
//put_byte(s, (Byte)s-&gt;bi_buf);\n\t    s.pending_buf[s.pending++] =3D =
s.bi_buf;\n\t  }\n\t  s.bi_buf =3D 0;\n\t  s.bi_valid =3D =
0;\n\t}\n\n\t/* =
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
\n\t * Copy a stored block, storing first the length and its\n\t * one's =
complement if requested.\n\t */\n\tfunction copy_block(s, buf, len, =
header)\n\t//DeflateState *s;\n\t//charf    *buf;    /* the input data =
*/\n\t//unsigned len;     /* its length */\n\t//int      header;  /* =
true if block header must be written */\n\t{\n\t  bi_windup(s);        =
/* align on byte boundary */\n\n\t  if (header) {\n\t    put_short(s, =
len);\n\t    put_short(s, ~len);\n\t  }\n\t//  while (len--) {\n\t//    =
put_byte(s, *buf++);\n\t//  }\n\t  utils.arraySet(s.pending_buf, =
s.window, buf, len, s.pending);\n\t  s.pending +=3D len;\n\t}\n\n\t/* =
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
\n\t * Compares to subtrees, using the tree depth as tie breaker =
when\n\t * the subtrees have equal frequency. This minimizes the worst =
case length.\n\t */\n\tfunction smaller(tree, n, m, depth) {\n\t  var =
_n2 =3D n*2;\n\t  var _m2 =3D m*2;\n\t  return (tree[_n2]/*.Freq*/ &lt; =
tree[_m2]/*.Freq*/ ||\n\t         (tree[_n2]/*.Freq*/ =3D=3D=3D =
tree[_m2]/*.Freq*/ &amp;&amp; depth[n] &lt;=3D depth[m]));\n\t}\n\n\t/* =
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
\n\t * Restore the heap property by moving down the tree starting at =
node k,\n\t * exchanging a node with the smallest of its two sons if =
necessary, stopping\n\t * when the heap property is re-established (each =
father smaller than its\n\t * two sons).\n\t */\n\tfunction =
pqdownheap(s, tree, k)\n\t//    deflate_state *s;\n\t//    ct_data =
*tree;  /* the tree to restore */\n\t//    int k;               /* node =
to move down */\n\t{\n\t  var v =3D s.heap[k];\n\t  var j =3D k &lt;&lt; =
1;  /* left son of k */\n\t  while (j &lt;=3D s.heap_len) {\n\t    /* =
Set j to the smallest of the two sons: */\n\t    if (j &lt; s.heap_len =
&amp;&amp;\n\t      smaller(tree, s.heap[j+1], s.heap[j], s.depth)) =
{\n\t      j++;\n\t    }\n\t    /* Exit if v is smaller than both sons =
*/\n\t    if (smaller(tree, v, s.heap[j], s.depth)) { break; }\n\n\t    =
/* Exchange v with the smallest son */\n\t    s.heap[k] =3D =
s.heap[j];\n\t    k =3D j;\n\n\t    /* And continue down the tree, =
setting j to the left son of k */\n\t    j &lt;&lt;=3D 1;\n\t  }\n\t  =
s.heap[k] =3D v;\n\t}\n\n\n\t// inlined manually\n\t// var SMALLEST =3D =
1;\n\n\t/* =
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
\n\t * Send the block data compressed using the given Huffman trees\n\t =
*/\n\tfunction compress_block(s, ltree, dtree)\n\t//    deflate_state =
*s;\n\t//    const ct_data *ltree; /* literal tree */\n\t//    const =
ct_data *dtree; /* distance tree */\n\t{\n\t  var dist;           /* =
distance of matched string */\n\t  var lc;             /* match length =
or unmatched char (if dist =3D=3D 0) */\n\t  var lx =3D 0;         /* =
running index in l_buf */\n\t  var code;           /* the code to send =
*/\n\t  var extra;          /* number of extra bits to send */\n\n\t  if =
(s.last_lit !=3D=3D 0) {\n\t    do {\n\t      dist =3D =
(s.pending_buf[s.d_buf + lx*2] &lt;&lt; 8) | (s.pending_buf[s.d_buf + =
lx*2 + 1]);\n\t      lc =3D s.pending_buf[s.l_buf + lx];\n\t      =
lx++;\n\n\t      if (dist =3D=3D=3D 0) {\n\t        send_code(s, lc, =
ltree); /* send a literal byte */\n\t        //Tracecv(isgraph(lc), =
(stderr,\" '%c' \", lc));\n\t      } else {\n\t        /* Here, lc is =
the match length - MIN_MATCH */\n\t        code =3D =
_length_code[lc];\n\t        send_code(s, code+LITERALS+1, ltree); /* =
send the length code */\n\t        extra =3D extra_lbits[code];\n\t      =
  if (extra !=3D=3D 0) {\n\t          lc -=3D base_length[code];\n\t     =
     send_bits(s, lc, extra);       /* send the extra length bits */\n\t =
       }\n\t        dist--; /* dist is now the match distance - 1 */\n\t =
       code =3D d_code(dist);\n\t        //Assert (code &lt; D_CODES, =
\"bad d_code\");\n\n\t        send_code(s, code, dtree);       /* send =
the distance code */\n\t        extra =3D extra_dbits[code];\n\t        =
if (extra !=3D=3D 0) {\n\t          dist -=3D base_dist[code];\n\t       =
   send_bits(s, dist, extra);   /* send the extra distance bits */\n\t   =
     }\n\t      } /* literal or match pair ? */\n\n\t      /* Check that =
the overlay between pending_buf and d_buf+l_buf is ok: */\n\t      =
//Assert((uInt)(s-&gt;pending) &lt; s-&gt;lit_bufsize + 2*lx,\n\t      =
//       \"pendingBuf overflow\");\n\n\t    } while (lx &lt; =
s.last_lit);\n\t  }\n\n\t  send_code(s, END_BLOCK, =
ltree);\n\t}\n\n\n\t/* =
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
\n\t * Construct one Huffman tree and assigns the code bit strings and =
lengths.\n\t * Update the total bit length for the current block.\n\t * =
IN assertion: the field freq is set for all tree elements.\n\t * OUT =
assertions: the fields len and code are set to the optimal bit =
length\n\t *     and corresponding code. The length opt_len is updated; =
static_len is\n\t *     also updated if stree is not null. The field =
max_code is set.\n\t */\n\tfunction build_tree(s, desc)\n\t//    =
deflate_state *s;\n\t//    tree_desc *desc; /* the tree descriptor =
*/\n\t{\n\t  var tree     =3D desc.dyn_tree;\n\t  var stree    =3D =
desc.stat_desc.static_tree;\n\t  var has_stree =3D =
desc.stat_desc.has_stree;\n\t  var elems    =3D =
desc.stat_desc.elems;\n\t  var n, m;          /* iterate over heap =
elements */\n\t  var max_code =3D -1; /* largest code with non zero =
frequency */\n\t  var node;          /* new node being created */\n\n\t  =
/* Construct the initial heap, with least frequent element in\n\t   * =
heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].\n\t   =
* heap[0] is not used.\n\t   */\n\t  s.heap_len =3D 0;\n\t  s.heap_max =
=3D HEAP_SIZE;\n\n\t  for (n =3D 0; n &lt; elems; n++) {\n\t    if =
(tree[n * 2]/*.Freq*/ !=3D=3D 0) {\n\t      s.heap[++s.heap_len] =3D =
max_code =3D n;\n\t      s.depth[n] =3D 0;\n\n\t    } else {\n\t      =
tree[n*2 + 1]/*.Len*/ =3D 0;\n\t    }\n\t  }\n\n\t  /* The pkzip format =
requires that at least one distance code exists,\n\t   * and that at =
least one bit should be sent even if there is only one\n\t   * possible =
code. So to avoid special checks later on we force at least\n\t   * two =
codes of non zero frequency.\n\t   */\n\t  while (s.heap_len &lt; 2) =
{\n\t    node =3D s.heap[++s.heap_len] =3D (max_code &lt; 2 ? ++max_code =
: 0);\n\t    tree[node * 2]/*.Freq*/ =3D 1;\n\t    s.depth[node] =3D =
0;\n\t    s.opt_len--;\n\n\t    if (has_stree) {\n\t      s.static_len =
-=3D stree[node*2 + 1]/*.Len*/;\n\t    }\n\t    /* node is 0 or 1 so it =
does not have extra bits */\n\t  }\n\t  desc.max_code =3D =
max_code;\n\n\t  /* The elements heap[heap_len/2+1 .. heap_len] are =
leaves of the tree,\n\t   * establish sub-heaps of increasing =
lengths:\n\t   */\n\t  for (n =3D (s.heap_len &gt;&gt; 1/*int /2*/); n =
&gt;=3D 1; n--) { pqdownheap(s, tree, n); }\n\n\t  /* Construct the =
Huffman tree by repeatedly combining the least two\n\t   * frequent =
nodes.\n\t   */\n\t  node =3D elems;              /* next internal node =
of the tree */\n\t  do {\n\t    //pqremove(s, tree, n);  /* n =3D node =
of least frequency */\n\t    /*** pqremove ***/\n\t    n =3D =
s.heap[1/*SMALLEST*/];\n\t    s.heap[1/*SMALLEST*/] =3D =
s.heap[s.heap_len--];\n\t    pqdownheap(s, tree, 1/*SMALLEST*/);\n\t    =
/***/\n\n\t    m =3D s.heap[1/*SMALLEST*/]; /* m =3D node of next least =
frequency */\n\n\t    s.heap[--s.heap_max] =3D n; /* keep the nodes =
sorted by frequency */\n\t    s.heap[--s.heap_max] =3D m;\n\n\t    /* =
Create a new node father of n and m */\n\t    tree[node * 2]/*.Freq*/ =
=3D tree[n * 2]/*.Freq*/ + tree[m * 2]/*.Freq*/;\n\t    s.depth[node] =
=3D (s.depth[n] &gt;=3D s.depth[m] ? s.depth[n] : s.depth[m]) + 1;\n\t   =
 tree[n*2 + 1]/*.Dad*/ =3D tree[m*2 + 1]/*.Dad*/ =3D node;\n\n\t    /* =
and insert the new node in the heap */\n\t    s.heap[1/*SMALLEST*/] =3D =
node++;\n\t    pqdownheap(s, tree, 1/*SMALLEST*/);\n\n\t  } while =
(s.heap_len &gt;=3D 2);\n\n\t  s.heap[--s.heap_max] =3D =
s.heap[1/*SMALLEST*/];\n\n\t  /* At this point, the fields freq and dad =
are set. We can now\n\t   * generate the bit lengths.\n\t   */\n\t  =
gen_bitlen(s, desc);\n\n\t  /* The field len is now set, we can generate =
the bit codes */\n\t  gen_codes(tree, max_code, =
s.bl_count);\n\t}\n\n\n\t/* =
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
\n\t * Scan a literal or distance tree to determine the frequencies of =
the codes\n\t * in the bit length tree.\n\t */\n\tfunction scan_tree(s, =
tree, max_code)\n\t//    deflate_state *s;\n\t//    ct_data *tree;   /* =
the tree to be scanned */\n\t//    int max_code;    /* and its largest =
code of non zero frequency */\n\t{\n\t  var n;                     /* =
iterates over all tree elements */\n\t  var prevlen =3D -1;          /* =
last emitted length */\n\t  var curlen;                /* length of =
current code */\n\n\t  var nextlen =3D tree[0*2 + 1]/*.Len*/; /* length =
of next code */\n\n\t  var count =3D 0;             /* repeat count of =
the current code */\n\t  var max_count =3D 7;         /* max repeat =
count */\n\t  var min_count =3D 4;         /* min repeat count */\n\n\t  =
if (nextlen =3D=3D=3D 0) {\n\t    max_count =3D 138;\n\t    min_count =
=3D 3;\n\t  }\n\t  tree[(max_code+1)*2 + 1]/*.Len*/ =3D 0xffff; /* guard =
*/\n\n\t  for (n =3D 0; n &lt;=3D max_code; n++) {\n\t    curlen =3D =
nextlen;\n\t    nextlen =3D tree[(n+1)*2 + 1]/*.Len*/;\n\n\t    if =
(++count &lt; max_count &amp;&amp; curlen =3D=3D=3D nextlen) {\n\t      =
continue;\n\n\t    } else if (count &lt; min_count) {\n\t      =
s.bl_tree[curlen * 2]/*.Freq*/ +=3D count;\n\n\t    } else if (curlen =
!=3D=3D 0) {\n\n\t      if (curlen !=3D=3D prevlen) { s.bl_tree[curlen * =
2]/*.Freq*/++; }\n\t      s.bl_tree[REP_3_6*2]/*.Freq*/++;\n\n\t    } =
else if (count &lt;=3D 10) {\n\t      =
s.bl_tree[REPZ_3_10*2]/*.Freq*/++;\n\n\t    } else {\n\t      =
s.bl_tree[REPZ_11_138*2]/*.Freq*/++;\n\t    }\n\n\t    count =3D 0;\n\t  =
  prevlen =3D curlen;\n\n\t    if (nextlen =3D=3D=3D 0) {\n\t      =
max_count =3D 138;\n\t      min_count =3D 3;\n\n\t    } else if (curlen =
=3D=3D=3D nextlen) {\n\t      max_count =3D 6;\n\t      min_count =3D =
3;\n\n\t    } else {\n\t      max_count =3D 7;\n\t      min_count =3D =
4;\n\t    }\n\t  }\n\t}\n\n\n\t/* =
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
\n\t * Send a literal or distance tree in compressed form, using the =
codes in\n\t * bl_tree.\n\t */\n\tfunction send_tree(s, tree, =
max_code)\n\t//    deflate_state *s;\n\t//    ct_data *tree; /* the tree =
to be scanned */\n\t//    int max_code;       /* and its largest code of =
non zero frequency */\n\t{\n\t  var n;                     /* iterates =
over all tree elements */\n\t  var prevlen =3D -1;          /* last =
emitted length */\n\t  var curlen;                /* length of current =
code */\n\n\t  var nextlen =3D tree[0*2 + 1]/*.Len*/; /* length of next =
code */\n\n\t  var count =3D 0;             /* repeat count of the =
current code */\n\t  var max_count =3D 7;         /* max repeat count =
*/\n\t  var min_count =3D 4;         /* min repeat count */\n\n\t  /* =
tree[max_code+1].Len =3D -1; */  /* guard already set */\n\t  if =
(nextlen =3D=3D=3D 0) {\n\t    max_count =3D 138;\n\t    min_count =3D =
3;\n\t  }\n\n\t  for (n =3D 0; n &lt;=3D max_code; n++) {\n\t    curlen =
=3D nextlen;\n\t    nextlen =3D tree[(n+1)*2 + 1]/*.Len*/;\n\n\t    if =
(++count &lt; max_count &amp;&amp; curlen =3D=3D=3D nextlen) {\n\t      =
continue;\n\n\t    } else if (count &lt; min_count) {\n\t      do { =
send_code(s, curlen, s.bl_tree); } while (--count !=3D=3D 0);\n\n\t    } =
else if (curlen !=3D=3D 0) {\n\t      if (curlen !=3D=3D prevlen) {\n\t  =
      send_code(s, curlen, s.bl_tree);\n\t        count--;\n\t      =
}\n\t      //Assert(count &gt;=3D 3 &amp;&amp; count &lt;=3D 6, \" =
3_6?\");\n\t      send_code(s, REP_3_6, s.bl_tree);\n\t      =
send_bits(s, count-3, 2);\n\n\t    } else if (count &lt;=3D 10) {\n\t    =
  send_code(s, REPZ_3_10, s.bl_tree);\n\t      send_bits(s, count-3, =
3);\n\n\t    } else {\n\t      send_code(s, REPZ_11_138, s.bl_tree);\n\t =
     send_bits(s, count-11, 7);\n\t    }\n\n\t    count =3D 0;\n\t    =
prevlen =3D curlen;\n\t    if (nextlen =3D=3D=3D 0) {\n\t      max_count =
=3D 138;\n\t      min_count =3D 3;\n\n\t    } else if (curlen =3D=3D=3D =
nextlen) {\n\t      max_count =3D 6;\n\t      min_count =3D 3;\n\n\t    =
} else {\n\t      max_count =3D 7;\n\t      min_count =3D 4;\n\t    =
}\n\t  }\n\t}\n\n\n\t/* =
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
\n\t * Construct the Huffman tree for the bit lengths and return the =
index in\n\t * bl_order of the last bit length code to send.\n\t =
*/\n\tfunction build_bl_tree(s) {\n\t  var max_blindex;  /* index of =
last bit length code of non zero freq */\n\n\t  /* Determine the bit =
length frequencies for literal and distance trees */\n\t  scan_tree(s, =
s.dyn_ltree, s.l_desc.max_code);\n\t  scan_tree(s, s.dyn_dtree, =
s.d_desc.max_code);\n\n\t  /* Build the bit length tree: */\n\t  =
build_tree(s, s.bl_desc);\n\t  /* opt_len now includes the length of the =
tree representations, except\n\t   * the lengths of the bit lengths =
codes and the 5+5+4 bits for the counts.\n\t   */\n\n\t  /* Determine =
the number of bit length codes to send. The pkzip format\n\t   * =
requires that at least 4 bit length codes be sent. (appnote.txt says\n\t =
  * 3 but the actual value used is 4.)\n\t   */\n\t  for (max_blindex =
=3D BL_CODES-1; max_blindex &gt;=3D 3; max_blindex--) {\n\t    if =
(s.bl_tree[bl_order[max_blindex]*2 + 1]/*.Len*/ !=3D=3D 0) {\n\t      =
break;\n\t    }\n\t  }\n\t  /* Update opt_len to include the bit length =
tree and counts */\n\t  s.opt_len +=3D 3*(max_blindex+1) + 5+5+4;\n\t  =
//Tracev((stderr, \"\\ndyn trees: dyn %ld, stat %ld\",\n\t  //        =
s-&gt;opt_len, s-&gt;static_len));\n\n\t  return =
max_blindex;\n\t}\n\n\n\t/* =
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
\n\t * Send the header for a block using dynamic Huffman trees: the =
counts, the\n\t * lengths of the bit length codes, the literal tree and =
the distance tree.\n\t * IN assertion: lcodes &gt;=3D 257, dcodes =
&gt;=3D 1, blcodes &gt;=3D 4.\n\t */\n\tfunction send_all_trees(s, =
lcodes, dcodes, blcodes)\n\t//    deflate_state *s;\n\t//    int lcodes, =
dcodes, blcodes; /* number of codes for each tree */\n\t{\n\t  var rank; =
                   /* index in bl_order */\n\n\t  //Assert (lcodes =
&gt;=3D 257 &amp;&amp; dcodes &gt;=3D 1 &amp;&amp; blcodes &gt;=3D 4, =
\"not enough codes\");\n\t  //Assert (lcodes &lt;=3D L_CODES &amp;&amp; =
dcodes &lt;=3D D_CODES &amp;&amp; blcodes &lt;=3D BL_CODES,\n\t  //      =
  \"too many codes\");\n\t  //Tracev((stderr, \"\\nbl counts: \"));\n\t  =
send_bits(s, lcodes-257, 5); /* not +255 as stated in appnote.txt */\n\t =
 send_bits(s, dcodes-1,   5);\n\t  send_bits(s, blcodes-4,  4); /* not =
-3 as stated in appnote.txt */\n\t  for (rank =3D 0; rank &lt; blcodes; =
rank++) {\n\t    //Tracev((stderr, \"\\nbl code %2d \", =
bl_order[rank]));\n\t    send_bits(s, s.bl_tree[bl_order[rank]*2 + =
1]/*.Len*/, 3);\n\t  }\n\t  //Tracev((stderr, \"\\nbl tree: sent %ld\", =
s-&gt;bits_sent));\n\n\t  send_tree(s, s.dyn_ltree, lcodes-1); /* =
literal tree */\n\t  //Tracev((stderr, \"\\nlit tree: sent %ld\", =
s-&gt;bits_sent));\n\n\t  send_tree(s, s.dyn_dtree, dcodes-1); /* =
distance tree */\n\t  //Tracev((stderr, \"\\ndist tree: sent %ld\", =
s-&gt;bits_sent));\n\t}\n\n\n\t/* =
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
\n\t * Check if the data type is TEXT or BINARY, using the following =
algorithm:\n\t * - TEXT if the two conditions below are satisfied:\n\t * =
   a) There are no non-portable control characters belonging to the\n\t =
*       \"black list\" (0..6, 14..25, 28..31).\n\t *    b) There is at =
least one printable character belonging to the\n\t *       \"white =
list\" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).\n\t * - BINARY =
otherwise.\n\t * - The following partially-portable control characters =
form a\n\t *   \"gray list\" that is ignored in this detection =
algorithm:\n\t *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 =
{ESC}).\n\t * IN assertion: the fields Freq of dyn_ltree are set.\n\t =
*/\n\tfunction detect_data_type(s) {\n\t  /* black_mask is the bit mask =
of black-listed bytes\n\t   * set bits 0..6, 14..25, and 28..31\n\t   * =
0xf3ffc07f =3D binary 11110011111111111100000001111111\n\t   */\n\t  var =
black_mask =3D 0xf3ffc07f;\n\t  var n;\n\n\t  /* Check for non-textual =
(\"black-listed\") bytes. */\n\t  for (n =3D 0; n &lt;=3D 31; n++, =
black_mask &gt;&gt;&gt;=3D 1) {\n\t    if ((black_mask &amp; 1) =
&amp;&amp; (s.dyn_ltree[n*2]/*.Freq*/ !=3D=3D 0)) {\n\t      return =
Z_BINARY;\n\t    }\n\t  }\n\n\t  /* Check for textual (\"white-listed\") =
bytes. */\n\t  if (s.dyn_ltree[9 * 2]/*.Freq*/ !=3D=3D 0 || =
s.dyn_ltree[10 * 2]/*.Freq*/ !=3D=3D 0 ||\n\t      s.dyn_ltree[13 * =
2]/*.Freq*/ !=3D=3D 0) {\n\t    return Z_TEXT;\n\t  }\n\t  for (n =3D =
32; n &lt; LITERALS; n++) {\n\t    if (s.dyn_ltree[n * 2]/*.Freq*/ =
!=3D=3D 0) {\n\t      return Z_TEXT;\n\t    }\n\t  }\n\n\t  /* There are =
no \"black-listed\" or \"white-listed\" bytes:\n\t   * this stream =
either is empty or has tolerated (\"gray-listed\") bytes only.\n\t   =
*/\n\t  return Z_BINARY;\n\t}\n\n\n\tvar static_init_done =3D =
false;\n\n\t/* =
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
\n\t * Initialize the tree data structures for a new zlib stream.\n\t =
*/\n\tfunction _tr_init(s)\n\t{\n\n\t  if (!static_init_done) {\n\t    =
tr_static_init();\n\t    static_init_done =3D true;\n\t  }\n\n\t  =
s.l_desc  =3D new TreeDesc(s.dyn_ltree, static_l_desc);\n\t  s.d_desc  =
=3D new TreeDesc(s.dyn_dtree, static_d_desc);\n\t  s.bl_desc =3D new =
TreeDesc(s.bl_tree, static_bl_desc);\n\n\t  s.bi_buf =3D 0;\n\t  =
s.bi_valid =3D 0;\n\n\t  /* Initialize the first block of the first =
file: */\n\t  init_block(s);\n\t}\n\n\n\t/* =
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
\n\t * Send a stored block\n\t */\n\tfunction _tr_stored_block(s, buf, =
stored_len, last)\n\t//DeflateState *s;\n\t//charf *buf;       /* input =
block */\n\t//ulg stored_len;   /* length of input block */\n\t//int =
last;         /* one if this is the last block for a file */\n\t{\n\t  =
send_bits(s, (STORED_BLOCK&lt;&lt;1)+(last ? 1 : 0), 3);    /* send =
block type */\n\t  copy_block(s, buf, stored_len, true); /* with header =
*/\n\t}\n\n\n\t/* =
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
\n\t * Send one empty static block to give enough lookahead for =
inflate.\n\t * This takes 10 bits, of which 7 may remain in the bit =
buffer.\n\t */\n\tfunction _tr_align(s) {\n\t  send_bits(s, =
STATIC_TREES&lt;&lt;1, 3);\n\t  send_code(s, END_BLOCK, =
static_ltree);\n\t  bi_flush(s);\n\t}\n\n\n\t/* =
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
\n\t * Determine the best encoding for the current block: dynamic trees, =
static\n\t * trees or store, and output the encoded block to the zip =
file.\n\t */\n\tfunction _tr_flush_block(s, buf, stored_len, =
last)\n\t//DeflateState *s;\n\t//charf *buf;       /* input block, or =
NULL if too old */\n\t//ulg stored_len;   /* length of input block =
*/\n\t//int last;         /* one if this is the last block for a file =
*/\n\t{\n\t  var opt_lenb, static_lenb;  /* opt_len and static_len in =
bytes */\n\t  var max_blindex =3D 0;        /* index of last bit length =
code of non zero freq */\n\n\t  /* Build the Huffman trees unless a =
stored block is forced */\n\t  if (s.level &gt; 0) {\n\n\t    /* Check =
if the file is binary or text */\n\t    if (s.strm.data_type =3D=3D=3D =
Z_UNKNOWN) {\n\t      s.strm.data_type =3D detect_data_type(s);\n\t    =
}\n\n\t    /* Construct the literal and distance trees */\n\t    =
build_tree(s, s.l_desc);\n\t    // Tracev((stderr, \"\\nlit data: dyn =
%ld, stat %ld\", s-&gt;opt_len,\n\t    //        =
s-&gt;static_len));\n\n\t    build_tree(s, s.d_desc);\n\t    // =
Tracev((stderr, \"\\ndist data: dyn %ld, stat %ld\", s-&gt;opt_len,\n\t  =
  //        s-&gt;static_len));\n\t    /* At this point, opt_len and =
static_len are the total bit lengths of\n\t     * the compressed block =
data, excluding the tree representations.\n\t     */\n\n\t    /* Build =
the bit length tree for the above two trees, and get the index\n\t     * =
in bl_order of the last bit length code to send.\n\t     */\n\t    =
max_blindex =3D build_bl_tree(s);\n\n\t    /* Determine the best =
encoding. Compute the block lengths in bytes. */\n\t    opt_lenb =3D =
(s.opt_len+3+7) &gt;&gt;&gt; 3;\n\t    static_lenb =3D =
(s.static_len+3+7) &gt;&gt;&gt; 3;\n\n\t    // Tracev((stderr, \"\\nopt =
%lu(%lu) stat %lu(%lu) stored %lu lit %u \",\n\t    //        opt_lenb, =
s-&gt;opt_len, static_lenb, s-&gt;static_len, stored_len,\n\t    //      =
  s-&gt;last_lit));\n\n\t    if (static_lenb &lt;=3D opt_lenb) { =
opt_lenb =3D static_lenb; }\n\n\t  } else {\n\t    // Assert(buf !=3D =
(char*)0, \"lost buf\");\n\t    opt_lenb =3D static_lenb =3D stored_len =
+ 5; /* force a stored block */\n\t  }\n\n\t  if ((stored_len+4 &lt;=3D =
opt_lenb) &amp;&amp; (buf !=3D=3D -1)) {\n\t    /* 4: two words for the =
lengths */\n\n\t    /* The test buf !=3D NULL is only necessary if =
LIT_BUFSIZE &gt; WSIZE.\n\t     * Otherwise we can't have processed more =
than WSIZE input bytes since\n\t     * the last block flush, because =
compression would have been\n\t     * successful. If LIT_BUFSIZE &lt;=3D =
WSIZE, it is never too late to\n\t     * transform a block into a stored =
block.\n\t     */\n\t    _tr_stored_block(s, buf, stored_len, =
last);\n\n\t  } else if (s.strategy =3D=3D=3D Z_FIXED || static_lenb =
=3D=3D=3D opt_lenb) {\n\n\t    send_bits(s, (STATIC_TREES&lt;&lt;1) + =
(last ? 1 : 0), 3);\n\t    compress_block(s, static_ltree, =
static_dtree);\n\n\t  } else {\n\t    send_bits(s, (DYN_TREES&lt;&lt;1) =
+ (last ? 1 : 0), 3);\n\t    send_all_trees(s, s.l_desc.max_code+1, =
s.d_desc.max_code+1, max_blindex+1);\n\t    compress_block(s, =
s.dyn_ltree, s.dyn_dtree);\n\t  }\n\t  // Assert (s-&gt;compressed_len =
=3D=3D s-&gt;bits_sent, \"bad compressed size\");\n\t  /* The above =
check is made mod 2^32, for files larger than 512 MB\n\t   * and uLong =
implemented on 32 bits.\n\t   */\n\t  init_block(s);\n\n\t  if (last) =
{\n\t    bi_windup(s);\n\t  }\n\t  // Tracev((stderr,\"\\ncomprlen =
%lu(%lu) \", s-&gt;compressed_len&gt;&gt;3,\n\t  //       =
s-&gt;compressed_len-7*last));\n\t}\n\n\t/* =
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
\n\t * Save the match info and tally the frequency counts. Return true =
if\n\t * the current block must be flushed.\n\t */\n\tfunction =
_tr_tally(s, dist, lc)\n\t//    deflate_state *s;\n\t//    unsigned =
dist;  /* distance of matched string */\n\t//    unsigned lc;    /* =
match length-MIN_MATCH or unmatched char (if dist=3D=3D0) */\n\t{\n\t  =
//var out_length, in_length, dcode;\n\n\t  s.pending_buf[s.d_buf + =
s.last_lit * 2]     =3D (dist &gt;&gt;&gt; 8) &amp; 0xff;\n\t  =
s.pending_buf[s.d_buf + s.last_lit * 2 + 1] =3D dist &amp; 0xff;\n\n\t  =
s.pending_buf[s.l_buf + s.last_lit] =3D lc &amp; 0xff;\n\t  =
s.last_lit++;\n\n\t  if (dist =3D=3D=3D 0) {\n\t    /* lc is the =
unmatched char */\n\t    s.dyn_ltree[lc*2]/*.Freq*/++;\n\t  } else {\n\t =
   s.matches++;\n\t    /* Here, lc is the match length - MIN_MATCH =
*/\n\t    dist--;             /* dist =3D match distance - 1 */\n\t    =
//Assert((ush)dist &lt; (ush)MAX_DIST(s) &amp;&amp;\n\t    //       =
(ush)lc &lt;=3D (ush)(MAX_MATCH-MIN_MATCH) &amp;&amp;\n\t    //       =
(ush)d_code(dist) &lt; (ush)D_CODES,  \"_tr_tally: bad match\");\n\n\t   =
 s.dyn_ltree[(_length_code[lc]+LITERALS+1) * 2]/*.Freq*/++;\n\t    =
s.dyn_dtree[d_code(dist) * 2]/*.Freq*/++;\n\t  }\n\n\t// (!) This block =
is disabled in zlib defailts,\n\t// don't enable it for binary =
compatibility\n\n\t//#ifdef TRUNCATE_BLOCK\n\t//  /* Try to guess if it =
is profitable to stop the current block here */\n\t//  if ((s.last_lit =
&amp; 0x1fff) =3D=3D=3D 0 &amp;&amp; s.level &gt; 2) {\n\t//    /* =
Compute an upper bound for the compressed length */\n\t//    out_length =
=3D s.last_lit*8;\n\t//    in_length =3D s.strstart - =
s.block_start;\n\t//\n\t//    for (dcode =3D 0; dcode &lt; D_CODES; =
dcode++) {\n\t//      out_length +=3D s.dyn_dtree[dcode*2]/*.Freq*/ * (5 =
+ extra_dbits[dcode]);\n\t//    }\n\t//    out_length &gt;&gt;&gt;=3D =
3;\n\t//    //Tracev((stderr,\"\\nlast_lit %u, in %ld, out ~%ld(%ld%%) =
\",\n\t//    //       s-&gt;last_lit, in_length, out_length,\n\t//    // =
      100L - out_length*100L/in_length));\n\t//    if (s.matches &lt; =
(s.last_lit&gt;&gt;1)/*int /2*/ &amp;&amp; out_length &lt; =
(in_length&gt;&gt;1)/*int /2*/) {\n\t//      return true;\n\t//    =
}\n\t//  }\n\t//#endif\n\n\t  return (s.last_lit =3D=3D=3D =
s.lit_bufsize-1);\n\t  /* We avoid equality with lit_bufsize because of =
wraparound at 64K\n\t   * on 16 bit machines and because stored blocks =
are restricted to\n\t   * 64K-1 bytes.\n\t   =
*/\n\t}\n\n\texports._tr_init  =3D _tr_init;\n\texports._tr_stored_block =
=3D _tr_stored_block;\n\texports._tr_flush_block  =3D =
_tr_flush_block;\n\texports._tr_tally =3D =
_tr_tally;\n\texports._tr_align =3D _tr_align;\n\n\n/***/ },\n/* 54 =
*/\n/***/ function(module, exports) {\n\n\t'use strict';\n\n\t// Note: =
adler32 takes 12% for level 0 and 2% for level 6.\n\t// It doesn't worth =
to make additional optimizationa as in original.\n\t// Small size is =
preferable.\n\n\tfunction adler32(adler, buf, len, pos) {\n\t  var s1 =
=3D (adler &amp; 0xffff) |0,\n\t      s2 =3D ((adler &gt;&gt;&gt; 16) =
&amp; 0xffff) |0,\n\t      n =3D 0;\n\n\t  while (len !=3D=3D 0) {\n\t   =
 // Set limit ~ twice less than 5552, to keep\n\t    // s2 in 31-bits, =
because we force signed ints.\n\t    // in other case %=3D will =
fail.\n\t    n =3D len &gt; 2000 ? 2000 : len;\n\t    len -=3D n;\n\n\t  =
  do {\n\t      s1 =3D (s1 + buf[pos++]) |0;\n\t      s2 =3D (s2 + s1) =
|0;\n\t    } while (--n);\n\n\t    s1 %=3D 65521;\n\t    s2 %=3D =
65521;\n\t  }\n\n\t  return (s1 | (s2 &lt;&lt; 16)) =
|0;\n\t}\n\n\n\tmodule.exports =3D adler32;\n\n\n/***/ },\n/* 55 =
*/\n/***/ function(module, exports) {\n\n\t'use strict';\n\n\t// Note: =
we can't get significant speed boost here.\n\t// So write code to =
minimize size - no pregenerated tables\n\t// and array tools =
dependencies.\n\n\n\t// Use ordinary array, since untyped makes no boost =
here\n\tfunction makeTable() {\n\t  var c, table =3D [];\n\n\t  for (var =
n =3D0; n &lt; 256; n++) {\n\t    c =3D n;\n\t    for (var k =3D0; k =
&lt; 8; k++) {\n\t      c =3D ((c&amp;1) ? (0xEDB88320 ^ (c &gt;&gt;&gt; =
1)) : (c &gt;&gt;&gt; 1));\n\t    }\n\t    table[n] =3D c;\n\t  }\n\n\t  =
return table;\n\t}\n\n\t// Create table on load. Just 255 signed longs. =
Not a problem.\n\tvar crcTable =3D makeTable();\n\n\n\tfunction =
crc32(crc, buf, len, pos) {\n\t  var t =3D crcTable,\n\t      end =3D =
pos + len;\n\n\t  crc =3D crc ^ (-1);\n\n\t  for (var i =3D pos; i &lt; =
end; i++) {\n\t    crc =3D (crc &gt;&gt;&gt; 8) ^ t[(crc ^ buf[i]) &amp; =
0xFF];\n\t  }\n\n\t  return (crc ^ (-1)); // &gt;&gt;&gt; =
0;\n\t}\n\n\n\tmodule.exports =3D crc32;\n\n\n/***/ },\n/* 56 */\n/***/ =
function(module, exports, __webpack_require__) {\n\n\t'use =
strict';\n\n\n\tvar utils =3D __webpack_require__(52);\n\tvar adler32 =
=3D __webpack_require__(54);\n\tvar crc32   =3D =
__webpack_require__(55);\n\tvar inflate_fast =3D =
__webpack_require__(57);\n\tvar inflate_table =3D =
__webpack_require__(58);\n\n\tvar CODES =3D 0;\n\tvar LENS =3D 1;\n\tvar =
DISTS =3D 2;\n\n\t/* Public constants =
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D*/\n\t/* =
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
*/\n\n\n\t/* Allowed flush values; see deflate() and inflate() below for =
details */\n\t//var Z_NO_FLUSH      =3D 0;\n\t//var Z_PARTIAL_FLUSH =3D =
1;\n\t//var Z_SYNC_FLUSH    =3D 2;\n\t//var Z_FULL_FLUSH    =3D =
3;\n\tvar Z_FINISH        =3D 4;\n\tvar Z_BLOCK         =3D 5;\n\tvar =
Z_TREES         =3D 6;\n\n\n\t/* Return codes for the =
compression/decompression functions. Negative values\n\t * are errors, =
positive values are used for special but normal events.\n\t */\n\tvar =
Z_OK            =3D 0;\n\tvar Z_STREAM_END    =3D 1;\n\tvar Z_NEED_DICT  =
   =3D 2;\n\t//var Z_ERRNO         =3D -1;\n\tvar Z_STREAM_ERROR  =3D =
-2;\n\tvar Z_DATA_ERROR    =3D -3;\n\tvar Z_MEM_ERROR     =3D -4;\n\tvar =
Z_BUF_ERROR     =3D -5;\n\t//var Z_VERSION_ERROR =3D -6;\n\n\t/* The =
deflate compression method */\n\tvar Z_DEFLATED  =3D 8;\n\n\n\t/* STATES =
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D*/\n\t/* =
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
*/\n\n\n\tvar    HEAD =3D 1;       /* i: waiting for magic header =
*/\n\tvar    FLAGS =3D 2;      /* i: waiting for method and flags (gzip) =
*/\n\tvar    TIME =3D 3;       /* i: waiting for modification time =
(gzip) */\n\tvar    OS =3D 4;         /* i: waiting for extra flags and =
operating system (gzip) */\n\tvar    EXLEN =3D 5;      /* i: waiting for =
extra length (gzip) */\n\tvar    EXTRA =3D 6;      /* i: waiting for =
extra bytes (gzip) */\n\tvar    NAME =3D 7;       /* i: waiting for end =
of file name (gzip) */\n\tvar    COMMENT =3D 8;    /* i: waiting for end =
of comment (gzip) */\n\tvar    HCRC =3D 9;       /* i: waiting for =
header crc (gzip) */\n\tvar    DICTID =3D 10;    /* i: waiting for =
dictionary check value */\n\tvar    DICT =3D 11;      /* waiting for =
inflateSetDictionary() call */\n\tvar        TYPE =3D 12;      /* i: =
waiting for type bits, including last-flag bit */\n\tvar        TYPEDO =
=3D 13;    /* i: same, but skip check to exit inflate on new block =
*/\n\tvar        STORED =3D 14;    /* i: waiting for stored size (length =
and complement) */\n\tvar        COPY_ =3D 15;     /* i/o: same as COPY =
below, but only first time in */\n\tvar        COPY =3D 16;      /* i/o: =
waiting for input or output to copy stored block */\n\tvar        TABLE =
=3D 17;     /* i: waiting for dynamic block table lengths */\n\tvar      =
  LENLENS =3D 18;   /* i: waiting for code length code lengths */\n\tvar =
       CODELENS =3D 19;  /* i: waiting for length/lit and distance code =
lengths */\n\tvar            LEN_ =3D 20;      /* i: same as LEN below, =
but only first time in */\n\tvar            LEN =3D 21;       /* i: =
waiting for length/lit/eob code */\n\tvar            LENEXT =3D 22;    =
/* i: waiting for length extra bits */\n\tvar            DIST =3D 23;    =
  /* i: waiting for distance code */\n\tvar            DISTEXT =3D 24;   =
/* i: waiting for distance extra bits */\n\tvar            MATCH =3D 25; =
    /* o: waiting for output space to copy string */\n\tvar            =
LIT =3D 26;       /* o: waiting for output space to write literal =
*/\n\tvar    CHECK =3D 27;     /* i: waiting for 32-bit check value =
*/\n\tvar    LENGTH =3D 28;    /* i: waiting for 32-bit length (gzip) =
*/\n\tvar    DONE =3D 29;      /* finished check, done -- remain here =
until reset */\n\tvar    BAD =3D 30;       /* got a data error -- remain =
here until reset */\n\tvar    MEM =3D 31;       /* got an inflate() =
memory error -- remain here until reset */\n\tvar    SYNC =3D 32;      =
/* looking for synchronization bytes to restart inflate() */\n\n\t/* =
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
*/\n\n\n\n\tvar ENOUGH_LENS =3D 852;\n\tvar ENOUGH_DISTS =3D =
592;\n\t//var ENOUGH =3D  (ENOUGH_LENS+ENOUGH_DISTS);\n\n\tvar MAX_WBITS =
=3D 15;\n\t/* 32K LZ77 window */\n\tvar DEF_WBITS =3D =
MAX_WBITS;\n\n\n\tfunction ZSWAP32(q) {\n\t  return  (((q &gt;&gt;&gt; =
24) &amp; 0xff) +\n\t          ((q &gt;&gt;&gt; 8) &amp; 0xff00) +\n\t   =
       ((q &amp; 0xff00) &lt;&lt; 8) +\n\t          ((q &amp; 0xff) =
&lt;&lt; 24));\n\t}\n\n\n\tfunction InflateState() {\n\t  this.mode =3D =
0;             /* current inflate mode */\n\t  this.last =3D false;      =
    /* true if processing last block */\n\t  this.wrap =3D 0;            =
  /* bit 0 true for zlib, bit 1 true for gzip */\n\t  this.havedict =3D =
false;      /* true if dictionary provided */\n\t  this.flags =3D 0;     =
        /* gzip header method and flags (0 if zlib) */\n\t  this.dmax =
=3D 0;              /* zlib header max distance (INFLATE_STRICT) */\n\t  =
this.check =3D 0;             /* protected copy of check value */\n\t  =
this.total =3D 0;             /* protected copy of output count */\n\t  =
// TODO: may be {}\n\t  this.head =3D null;           /* where to save =
gzip header information */\n\n\t  /* sliding window */\n\t  this.wbits =
=3D 0;             /* log base 2 of requested window size */\n\t  =
this.wsize =3D 0;             /* window size or zero if not using window =
*/\n\t  this.whave =3D 0;             /* valid bytes in the window =
*/\n\t  this.wnext =3D 0;             /* window write index */\n\t  =
this.window =3D null;         /* allocated sliding window, if needed =
*/\n\n\t  /* bit accumulator */\n\t  this.hold =3D 0;              /* =
input bit accumulator */\n\t  this.bits =3D 0;              /* number of =
bits in \"in\" */\n\n\t  /* for string and stored block copying */\n\t  =
this.length =3D 0;            /* literal or length of data to copy =
*/\n\t  this.offset =3D 0;            /* distance back to copy string =
from */\n\n\t  /* for table and code decoding */\n\t  this.extra =3D 0;  =
           /* extra bits needed */\n\n\t  /* fixed and dynamic code =
tables */\n\t  this.lencode =3D null;          /* starting table for =
length/literal codes */\n\t  this.distcode =3D null;         /* starting =
table for distance codes */\n\t  this.lenbits =3D 0;           /* index =
bits for lencode */\n\t  this.distbits =3D 0;          /* index bits for =
distcode */\n\n\t  /* dynamic table building */\n\t  this.ncode =3D 0;   =
          /* number of code length code lengths */\n\t  this.nlen =3D 0; =
             /* number of length code lengths */\n\t  this.ndist =3D 0;  =
           /* number of distance code lengths */\n\t  this.have =3D 0;   =
           /* number of code lengths in lens[] */\n\t  this.next =3D =
null;              /* next available space in codes[] */\n\n\t  =
this.lens =3D new utils.Buf16(320); /* temporary storage for code =
lengths */\n\t  this.work =3D new utils.Buf16(288); /* work area for =
code table building */\n\n\t  /*\n\t   because we don't have pointers in =
js, we use lencode and distcode directly\n\t   as buffers so we don't =
need codes\n\t  */\n\t  //this.codes =3D new utils.Buf32(ENOUGH);       =
/* space for code tables */\n\t  this.lendyn =3D null;              /* =
dynamic table for length/literal codes (JS specific) */\n\t  =
this.distdyn =3D null;             /* dynamic table for distance codes =
(JS specific) */\n\t  this.sane =3D 0;                   /* if false, =
allow invalid distance too far */\n\t  this.back =3D 0;                  =
 /* bits back of last unprocessed length/lit */\n\t  this.was =3D 0;     =
               /* initial length of match */\n\t}\n\n\tfunction =
inflateResetKeep(strm) {\n\t  var state;\n\n\t  if (!strm || =
!strm.state) { return Z_STREAM_ERROR; }\n\t  state =3D strm.state;\n\t  =
strm.total_in =3D strm.total_out =3D state.total =3D 0;\n\t  strm.msg =
=3D ''; /*Z_NULL*/\n\t  if (state.wrap) {       /* to support =
ill-conceived Java test suite */\n\t    strm.adler =3D state.wrap &amp; =
1;\n\t  }\n\t  state.mode =3D HEAD;\n\t  state.last =3D 0;\n\t  =
state.havedict =3D 0;\n\t  state.dmax =3D 32768;\n\t  state.head =3D =
null/*Z_NULL*/;\n\t  state.hold =3D 0;\n\t  state.bits =3D 0;\n\t  =
//state.lencode =3D state.distcode =3D state.next =3D state.codes;\n\t  =
state.lencode =3D state.lendyn =3D new utils.Buf32(ENOUGH_LENS);\n\t  =
state.distcode =3D state.distdyn =3D new =
utils.Buf32(ENOUGH_DISTS);\n\n\t  state.sane =3D 1;\n\t  state.back =3D =
-1;\n\t  //Tracev((stderr, \"inflate: reset\\n\"));\n\t  return =
Z_OK;\n\t}\n\n\tfunction inflateReset(strm) {\n\t  var state;\n\n\t  if =
(!strm || !strm.state) { return Z_STREAM_ERROR; }\n\t  state =3D =
strm.state;\n\t  state.wsize =3D 0;\n\t  state.whave =3D 0;\n\t  =
state.wnext =3D 0;\n\t  return =
inflateResetKeep(strm);\n\n\t}\n\n\tfunction inflateReset2(strm, =
windowBits) {\n\t  var wrap;\n\t  var state;\n\n\t  /* get the state =
*/\n\t  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n\t  state =
=3D strm.state;\n\n\t  /* extract wrap request from windowBits parameter =
*/\n\t  if (windowBits &lt; 0) {\n\t    wrap =3D 0;\n\t    windowBits =
=3D -windowBits;\n\t  }\n\t  else {\n\t    wrap =3D (windowBits &gt;&gt; =
4) + 1;\n\t    if (windowBits &lt; 48) {\n\t      windowBits &amp;=3D =
15;\n\t    }\n\t  }\n\n\t  /* set number of window bits, free window if =
different */\n\t  if (windowBits &amp;&amp; (windowBits &lt; 8 || =
windowBits &gt; 15)) {\n\t    return Z_STREAM_ERROR;\n\t  }\n\t  if =
(state.window !=3D=3D null &amp;&amp; state.wbits !=3D=3D windowBits) =
{\n\t    state.window =3D null;\n\t  }\n\n\t  /* update state and reset =
the rest of it */\n\t  state.wrap =3D wrap;\n\t  state.wbits =3D =
windowBits;\n\t  return inflateReset(strm);\n\t}\n\n\tfunction =
inflateInit2(strm, windowBits) {\n\t  var ret;\n\t  var state;\n\n\t  if =
(!strm) { return Z_STREAM_ERROR; }\n\t  //strm.msg =3D Z_NULL;           =
      /* in case we return an error */\n\n\t  state =3D new =
InflateState();\n\n\t  //if (state =3D=3D=3D Z_NULL) return =
Z_MEM_ERROR;\n\t  //Tracev((stderr, \"inflate: allocated\\n\"));\n\t  =
strm.state =3D state;\n\t  state.window =3D null/*Z_NULL*/;\n\t  ret =3D =
inflateReset2(strm, windowBits);\n\t  if (ret !=3D=3D Z_OK) {\n\t    =
strm.state =3D null/*Z_NULL*/;\n\t  }\n\t  return =
ret;\n\t}\n\n\tfunction inflateInit(strm) {\n\t  return =
inflateInit2(strm, DEF_WBITS);\n\t}\n\n\n\t/*\n\t Return state with =
length and distance decoding tables and index sizes set to\n\t fixed =
code decoding.  Normally this returns fixed tables from inffixed.h.\n\t =
If BUILDFIXED is defined, then instead this routine builds the tables =
the\n\t first time it's called, and returns those tables the first time =
and\n\t thereafter.  This reduces the size of the code by about 2K =
bytes, in\n\t exchange for a little execution time.  However, BUILDFIXED =
should not be\n\t used for threaded applications, since the rewriting of =
the tables and virgin\n\t may not be thread-safe.\n\t */\n\tvar virgin =
=3D true;\n\n\tvar lenfix, distfix; // We have no pointers in JS, so =
keep tables separate\n\n\tfunction fixedtables(state) {\n\t  /* build =
fixed huffman tables if first call (may not be thread safe) */\n\t  if =
(virgin) {\n\t    var sym;\n\n\t    lenfix =3D new utils.Buf32(512);\n\t =
   distfix =3D new utils.Buf32(32);\n\n\t    /* literal/length table =
*/\n\t    sym =3D 0;\n\t    while (sym &lt; 144) { state.lens[sym++] =3D =
8; }\n\t    while (sym &lt; 256) { state.lens[sym++] =3D 9; }\n\t    =
while (sym &lt; 280) { state.lens[sym++] =3D 7; }\n\t    while (sym &lt; =
288) { state.lens[sym++] =3D 8; }\n\n\t    inflate_table(LENS,  =
state.lens, 0, 288, lenfix,   0, state.work, {bits: 9});\n\n\t    /* =
distance table */\n\t    sym =3D 0;\n\t    while (sym &lt; 32) { =
state.lens[sym++] =3D 5; }\n\n\t    inflate_table(DISTS, state.lens, 0, =
32,   distfix, 0, state.work, {bits: 5});\n\n\t    /* do this just once =
*/\n\t    virgin =3D false;\n\t  }\n\n\t  state.lencode =3D lenfix;\n\t  =
state.lenbits =3D 9;\n\t  state.distcode =3D distfix;\n\t  =
state.distbits =3D 5;\n\t}\n\n\n\t/*\n\t Update the window with the last =
wsize (normally 32K) bytes written before\n\t returning.  If window does =
not exist yet, create it.  This is only called\n\t when a window is =
already in use, or when output has been written during this\n\t inflate =
call, but the end of the deflate stream has not been reached yet.\n\t It =
is also called to create a window for dictionary data when a =
dictionary\n\t is loaded.\n\n\t Providing output buffers larger than 32K =
to inflate() should provide a speed\n\t advantage, since only the last =
32K of output is copied to the sliding window\n\t upon return from =
inflate(), and since all distances after the first 32K of\n\t output =
will fall in the output data, making match copies simpler and =
faster.\n\t The advantage may be dependent on the size of the =
processor's data caches.\n\t */\n\tfunction updatewindow(strm, src, end, =
copy) {\n\t  var dist;\n\t  var state =3D strm.state;\n\n\t  /* if it =
hasn't been done already, allocate space for the window */\n\t  if =
(state.window =3D=3D=3D null) {\n\t    state.wsize =3D 1 &lt;&lt; =
state.wbits;\n\t    state.wnext =3D 0;\n\t    state.whave =3D 0;\n\n\t   =
 state.window =3D new utils.Buf8(state.wsize);\n\t  }\n\n\t  /* copy =
state-&gt;wsize or less output bytes into the circular window */\n\t  if =
(copy &gt;=3D state.wsize) {\n\t    utils.arraySet(state.window,src, end =
- state.wsize, state.wsize, 0);\n\t    state.wnext =3D 0;\n\t    =
state.whave =3D state.wsize;\n\t  }\n\t  else {\n\t    dist =3D =
state.wsize - state.wnext;\n\t    if (dist &gt; copy) {\n\t      dist =
=3D copy;\n\t    }\n\t    //zmemcpy(state-&gt;window + state-&gt;wnext, =
end - copy, dist);\n\t    utils.arraySet(state.window,src, end - copy, =
dist, state.wnext);\n\t    copy -=3D dist;\n\t    if (copy) {\n\t      =
//zmemcpy(state-&gt;window, end - copy, copy);\n\t      =
utils.arraySet(state.window,src, end - copy, copy, 0);\n\t      =
state.wnext =3D copy;\n\t      state.whave =3D state.wsize;\n\t    }\n\t =
   else {\n\t      state.wnext +=3D dist;\n\t      if (state.wnext =
=3D=3D=3D state.wsize) { state.wnext =3D 0; }\n\t      if (state.whave =
&lt; state.wsize) { state.whave +=3D dist; }\n\t    }\n\t  }\n\t  return =
0;\n\t}\n\n\tfunction inflate(strm, flush) {\n\t  var state;\n\t  var =
input, output;          // input/output buffers\n\t  var next;           =
        /* next input INDEX */\n\t  var put;                    /* next =
output INDEX */\n\t  var have, left;             /* available input and =
output */\n\t  var hold;                   /* bit buffer */\n\t  var =
bits;                   /* bits in bit buffer */\n\t  var _in, _out;     =
         /* save starting available input and output */\n\t  var copy;   =
                /* number of stored or match bytes to copy */\n\t  var =
from;                   /* where to copy match bytes from */\n\t  var =
from_source;\n\t  var here =3D 0;               /* current decoding =
table entry */\n\t  var here_bits, here_op, here_val; // paked \"here\" =
denormalized (JS specific)\n\t  //var last;                   /* parent =
table entry */\n\t  var last_bits, last_op, last_val; // paked \"last\" =
denormalized (JS specific)\n\t  var len;                    /* length to =
copy for repeats, bits to drop */\n\t  var ret;                    /* =
return code */\n\t  var hbuf =3D new utils.Buf8(4);    /* buffer for =
gzip header crc calculation */\n\t  var opts;\n\n\t  var n; // temporary =
var for NEED_BITS\n\n\t  var order =3D /* permutation of code lengths =
*/\n\t    [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, =
15];\n\n\n\t  if (!strm || !strm.state || !strm.output ||\n\t      =
(!strm.input &amp;&amp; strm.avail_in !=3D=3D 0)) {\n\t    return =
Z_STREAM_ERROR;\n\t  }\n\n\t  state =3D strm.state;\n\t  if (state.mode =
=3D=3D=3D TYPE) { state.mode =3D TYPEDO; }    /* skip check */\n\n\n\t  =
//--- LOAD() ---\n\t  put =3D strm.next_out;\n\t  output =3D =
strm.output;\n\t  left =3D strm.avail_out;\n\t  next =3D =
strm.next_in;\n\t  input =3D strm.input;\n\t  have =3D =
strm.avail_in;\n\t  hold =3D state.hold;\n\t  bits =3D state.bits;\n\t  =
//---\n\n\t  _in =3D have;\n\t  _out =3D left;\n\t  ret =3D Z_OK;\n\n\t  =
inf_leave: // goto emulation\n\t  for (;;) {\n\t    switch (state.mode) =
{\n\t    case HEAD:\n\t      if (state.wrap =3D=3D=3D 0) {\n\t        =
state.mode =3D TYPEDO;\n\t        break;\n\t      }\n\t      //=3D=3D=3D =
NEEDBITS(16);\n\t      while (bits &lt; 16) {\n\t        if (have =
=3D=3D=3D 0) { break inf_leave; }\n\t        have--;\n\t        hold =
+=3D input[next++] &lt;&lt; bits;\n\t        bits +=3D 8;\n\t      }\n\t =
     //=3D=3D=3D//\n\t      if ((state.wrap &amp; 2) &amp;&amp; hold =
=3D=3D=3D 0x8b1f) {  /* gzip header */\n\t        state.check =3D =
0/*crc32(0L, Z_NULL, 0)*/;\n\t        //=3D=3D=3D CRC2(state.check, =
hold);\n\t        hbuf[0] =3D hold &amp; 0xff;\n\t        hbuf[1] =3D =
(hold &gt;&gt;&gt; 8) &amp; 0xff;\n\t        state.check =3D =
crc32(state.check, hbuf, 2, 0);\n\t        //=3D=3D=3D//\n\n\t        =
//=3D=3D=3D INITBITS();\n\t        hold =3D 0;\n\t        bits =3D =
0;\n\t        //=3D=3D=3D//\n\t        state.mode =3D FLAGS;\n\t        =
break;\n\t      }\n\t      state.flags =3D 0;           /* expect zlib =
header */\n\t      if (state.head) {\n\t        state.head.done =3D =
false;\n\t      }\n\t      if (!(state.wrap &amp; 1) ||   /* check if =
zlib header allowed */\n\t        (((hold &amp; 0xff)/*BITS(8)*/ =
&lt;&lt; 8) + (hold &gt;&gt; 8)) % 31) {\n\t        strm.msg =3D =
'incorrect header check';\n\t        state.mode =3D BAD;\n\t        =
break;\n\t      }\n\t      if ((hold &amp; 0x0f)/*BITS(4)*/ !=3D=3D =
Z_DEFLATED) {\n\t        strm.msg =3D 'unknown compression method';\n\t  =
      state.mode =3D BAD;\n\t        break;\n\t      }\n\t      //--- =
DROPBITS(4) ---//\n\t      hold &gt;&gt;&gt;=3D 4;\n\t      bits -=3D =
4;\n\t      //---//\n\t      len =3D (hold &amp; 0x0f)/*BITS(4)*/ + =
8;\n\t      if (state.wbits =3D=3D=3D 0) {\n\t        state.wbits =3D =
len;\n\t      }\n\t      else if (len &gt; state.wbits) {\n\t        =
strm.msg =3D 'invalid window size';\n\t        state.mode =3D BAD;\n\t   =
     break;\n\t      }\n\t      state.dmax =3D 1 &lt;&lt; len;\n\t      =
//Tracev((stderr, \"inflate:   zlib header ok\\n\"));\n\t      =
strm.adler =3D state.check =3D 1/*adler32(0L, Z_NULL, 0)*/;\n\t      =
state.mode =3D hold &amp; 0x200 ? DICTID : TYPE;\n\t      //=3D=3D=3D =
INITBITS();\n\t      hold =3D 0;\n\t      bits =3D 0;\n\t      =
//=3D=3D=3D//\n\t      break;\n\t    case FLAGS:\n\t      //=3D=3D=3D =
NEEDBITS(16); */\n\t      while (bits &lt; 16) {\n\t        if (have =
=3D=3D=3D 0) { break inf_leave; }\n\t        have--;\n\t        hold =
+=3D input[next++] &lt;&lt; bits;\n\t        bits +=3D 8;\n\t      }\n\t =
     //=3D=3D=3D//\n\t      state.flags =3D hold;\n\t      if =
((state.flags &amp; 0xff) !=3D=3D Z_DEFLATED) {\n\t        strm.msg =3D =
'unknown compression method';\n\t        state.mode =3D BAD;\n\t        =
break;\n\t      }\n\t      if (state.flags &amp; 0xe000) {\n\t        =
strm.msg =3D 'unknown header flags set';\n\t        state.mode =3D =
BAD;\n\t        break;\n\t      }\n\t      if (state.head) {\n\t        =
state.head.text =3D ((hold &gt;&gt; 8) &amp; 1);\n\t      }\n\t      if =
(state.flags &amp; 0x0200) {\n\t        //=3D=3D=3D CRC2(state.check, =
hold);\n\t        hbuf[0] =3D hold &amp; 0xff;\n\t        hbuf[1] =3D =
(hold &gt;&gt;&gt; 8) &amp; 0xff;\n\t        state.check =3D =
crc32(state.check, hbuf, 2, 0);\n\t        //=3D=3D=3D//\n\t      }\n\t  =
    //=3D=3D=3D INITBITS();\n\t      hold =3D 0;\n\t      bits =3D =
0;\n\t      //=3D=3D=3D//\n\t      state.mode =3D TIME;\n\t      /* =
falls through */\n\t    case TIME:\n\t      //=3D=3D=3D NEEDBITS(32); =
*/\n\t      while (bits &lt; 32) {\n\t        if (have =3D=3D=3D 0) { =
break inf_leave; }\n\t        have--;\n\t        hold +=3D input[next++] =
&lt;&lt; bits;\n\t        bits +=3D 8;\n\t      }\n\t      =
//=3D=3D=3D//\n\t      if (state.head) {\n\t        state.head.time =3D =
hold;\n\t      }\n\t      if (state.flags &amp; 0x0200) {\n\t        =
//=3D=3D=3D CRC4(state.check, hold)\n\t        hbuf[0] =3D hold &amp; =
0xff;\n\t        hbuf[1] =3D (hold &gt;&gt;&gt; 8) &amp; 0xff;\n\t       =
 hbuf[2] =3D (hold &gt;&gt;&gt; 16) &amp; 0xff;\n\t        hbuf[3] =3D =
(hold &gt;&gt;&gt; 24) &amp; 0xff;\n\t        state.check =3D =
crc32(state.check, hbuf, 4, 0);\n\t        //=3D=3D=3D\n\t      }\n\t    =
  //=3D=3D=3D INITBITS();\n\t      hold =3D 0;\n\t      bits =3D 0;\n\t  =
    //=3D=3D=3D//\n\t      state.mode =3D OS;\n\t      /* falls through =
*/\n\t    case OS:\n\t      //=3D=3D=3D NEEDBITS(16); */\n\t      while =
(bits &lt; 16) {\n\t        if (have =3D=3D=3D 0) { break inf_leave; =
}\n\t        have--;\n\t        hold +=3D input[next++] &lt;&lt; =
bits;\n\t        bits +=3D 8;\n\t      }\n\t      //=3D=3D=3D//\n\t      =
if (state.head) {\n\t        state.head.xflags =3D (hold &amp; =
0xff);\n\t        state.head.os =3D (hold &gt;&gt; 8);\n\t      }\n\t    =
  if (state.flags &amp; 0x0200) {\n\t        //=3D=3D=3D =
CRC2(state.check, hold);\n\t        hbuf[0] =3D hold &amp; 0xff;\n\t     =
   hbuf[1] =3D (hold &gt;&gt;&gt; 8) &amp; 0xff;\n\t        state.check =
=3D crc32(state.check, hbuf, 2, 0);\n\t        //=3D=3D=3D//\n\t      =
}\n\t      //=3D=3D=3D INITBITS();\n\t      hold =3D 0;\n\t      bits =
=3D 0;\n\t      //=3D=3D=3D//\n\t      state.mode =3D EXLEN;\n\t      /* =
falls through */\n\t    case EXLEN:\n\t      if (state.flags &amp; =
0x0400) {\n\t        //=3D=3D=3D NEEDBITS(16); */\n\t        while (bits =
&lt; 16) {\n\t          if (have =3D=3D=3D 0) { break inf_leave; }\n\t   =
       have--;\n\t          hold +=3D input[next++] &lt;&lt; bits;\n\t   =
       bits +=3D 8;\n\t        }\n\t        //=3D=3D=3D//\n\t        =
state.length =3D hold;\n\t        if (state.head) {\n\t          =
state.head.extra_len =3D hold;\n\t        }\n\t        if (state.flags =
&amp; 0x0200) {\n\t          //=3D=3D=3D CRC2(state.check, hold);\n\t    =
      hbuf[0] =3D hold &amp; 0xff;\n\t          hbuf[1] =3D (hold =
&gt;&gt;&gt; 8) &amp; 0xff;\n\t          state.check =3D =
crc32(state.check, hbuf, 2, 0);\n\t          //=3D=3D=3D//\n\t        =
}\n\t        //=3D=3D=3D INITBITS();\n\t        hold =3D 0;\n\t        =
bits =3D 0;\n\t        //=3D=3D=3D//\n\t      }\n\t      else if =
(state.head) {\n\t        state.head.extra =3D null/*Z_NULL*/;\n\t      =
}\n\t      state.mode =3D EXTRA;\n\t      /* falls through */\n\t    =
case EXTRA:\n\t      if (state.flags &amp; 0x0400) {\n\t        copy =3D =
state.length;\n\t        if (copy &gt; have) { copy =3D have; }\n\t      =
  if (copy) {\n\t          if (state.head) {\n\t            len =3D =
state.head.extra_len - state.length;\n\t            if =
(!state.head.extra) {\n\t              // Use untyped array for more =
conveniend processing later\n\t              state.head.extra =3D new =
Array(state.head.extra_len);\n\t            }\n\t            =
utils.arraySet(\n\t              state.head.extra,\n\t              =
input,\n\t              next,\n\t              // extra field is limited =
to 65536 bytes\n\t              // - no need for additional size =
check\n\t              copy,\n\t              /*len + copy &gt; =
state.head.extra_max - len ? state.head.extra_max : copy,*/\n\t          =
    len\n\t            );\n\t            //zmemcpy(state.head.extra + =
len, next,\n\t            //        len + copy &gt; state.head.extra_max =
?\n\t            //        state.head.extra_max - len : copy);\n\t       =
   }\n\t          if (state.flags &amp; 0x0200) {\n\t            =
state.check =3D crc32(state.check, input, copy, next);\n\t          =
}\n\t          have -=3D copy;\n\t          next +=3D copy;\n\t          =
state.length -=3D copy;\n\t        }\n\t        if (state.length) { =
break inf_leave; }\n\t      }\n\t      state.length =3D 0;\n\t      =
state.mode =3D NAME;\n\t      /* falls through */\n\t    case NAME:\n\t  =
    if (state.flags &amp; 0x0800) {\n\t        if (have =3D=3D=3D 0) { =
break inf_leave; }\n\t        copy =3D 0;\n\t        do {\n\t          =
// TODO: 2 or 1 bytes?\n\t          len =3D input[next + copy++];\n\t    =
      /* use constant limit because in js we should not preallocate =
memory */\n\t          if (state.head &amp;&amp; len &amp;&amp;\n\t      =
        (state.length &lt; 65536 /*state.head.name_max*/)) {\n\t         =
   state.head.name +=3D String.fromCharCode(len);\n\t          }\n\t     =
   } while (len &amp;&amp; copy &lt; have);\n\n\t        if (state.flags =
&amp; 0x0200) {\n\t          state.check =3D crc32(state.check, input, =
copy, next);\n\t        }\n\t        have -=3D copy;\n\t        next =
+=3D copy;\n\t        if (len) { break inf_leave; }\n\t      }\n\t      =
else if (state.head) {\n\t        state.head.name =3D null;\n\t      =
}\n\t      state.length =3D 0;\n\t      state.mode =3D COMMENT;\n\t      =
/* falls through */\n\t    case COMMENT:\n\t      if (state.flags &amp; =
0x1000) {\n\t        if (have =3D=3D=3D 0) { break inf_leave; }\n\t      =
  copy =3D 0;\n\t        do {\n\t          len =3D input[next + =
copy++];\n\t          /* use constant limit because in js we should not =
preallocate memory */\n\t          if (state.head &amp;&amp; len =
&amp;&amp;\n\t              (state.length &lt; 65536 =
/*state.head.comm_max*/)) {\n\t            state.head.comment +=3D =
String.fromCharCode(len);\n\t          }\n\t        } while (len =
&amp;&amp; copy &lt; have);\n\t        if (state.flags &amp; 0x0200) =
{\n\t          state.check =3D crc32(state.check, input, copy, =
next);\n\t        }\n\t        have -=3D copy;\n\t        next +=3D =
copy;\n\t        if (len) { break inf_leave; }\n\t      }\n\t      else =
if (state.head) {\n\t        state.head.comment =3D null;\n\t      }\n\t =
     state.mode =3D HCRC;\n\t      /* falls through */\n\t    case =
HCRC:\n\t      if (state.flags &amp; 0x0200) {\n\t        //=3D=3D=3D =
NEEDBITS(16); */\n\t        while (bits &lt; 16) {\n\t          if (have =
=3D=3D=3D 0) { break inf_leave; }\n\t          have--;\n\t          hold =
+=3D input[next++] &lt;&lt; bits;\n\t          bits +=3D 8;\n\t        =
}\n\t        //=3D=3D=3D//\n\t        if (hold !=3D=3D (state.check =
&amp; 0xffff)) {\n\t          strm.msg =3D 'header crc mismatch';\n\t    =
      state.mode =3D BAD;\n\t          break;\n\t        }\n\t        =
//=3D=3D=3D INITBITS();\n\t        hold =3D 0;\n\t        bits =3D =
0;\n\t        //=3D=3D=3D//\n\t      }\n\t      if (state.head) {\n\t    =
    state.head.hcrc =3D ((state.flags &gt;&gt; 9) &amp; 1);\n\t        =
state.head.done =3D true;\n\t      }\n\t      strm.adler =3D state.check =
=3D 0 /*crc32(0L, Z_NULL, 0)*/;\n\t      state.mode =3D TYPE;\n\t      =
break;\n\t    case DICTID:\n\t      //=3D=3D=3D NEEDBITS(32); */\n\t     =
 while (bits &lt; 32) {\n\t        if (have =3D=3D=3D 0) { break =
inf_leave; }\n\t        have--;\n\t        hold +=3D input[next++] =
&lt;&lt; bits;\n\t        bits +=3D 8;\n\t      }\n\t      =
//=3D=3D=3D//\n\t      strm.adler =3D state.check =3D ZSWAP32(hold);\n\t =
     //=3D=3D=3D INITBITS();\n\t      hold =3D 0;\n\t      bits =3D =
0;\n\t      //=3D=3D=3D//\n\t      state.mode =3D DICT;\n\t      /* =
falls through */\n\t    case DICT:\n\t      if (state.havedict =3D=3D=3D =
0) {\n\t        //--- RESTORE() ---\n\t        strm.next_out =3D =
put;\n\t        strm.avail_out =3D left;\n\t        strm.next_in =3D =
next;\n\t        strm.avail_in =3D have;\n\t        state.hold =3D =
hold;\n\t        state.bits =3D bits;\n\t        //---\n\t        return =
Z_NEED_DICT;\n\t      }\n\t      strm.adler =3D state.check =3D =
1/*adler32(0L, Z_NULL, 0)*/;\n\t      state.mode =3D TYPE;\n\t      /* =
falls through */\n\t    case TYPE:\n\t      if (flush =3D=3D=3D Z_BLOCK =
|| flush =3D=3D=3D Z_TREES) { break inf_leave; }\n\t      /* falls =
through */\n\t    case TYPEDO:\n\t      if (state.last) {\n\t        =
//--- BYTEBITS() ---//\n\t        hold &gt;&gt;&gt;=3D bits &amp; 7;\n\t =
       bits -=3D bits &amp; 7;\n\t        //---//\n\t        state.mode =
=3D CHECK;\n\t        break;\n\t      }\n\t      //=3D=3D=3D =
NEEDBITS(3); */\n\t      while (bits &lt; 3) {\n\t        if (have =
=3D=3D=3D 0) { break inf_leave; }\n\t        have--;\n\t        hold =
+=3D input[next++] &lt;&lt; bits;\n\t        bits +=3D 8;\n\t      }\n\t =
     //=3D=3D=3D//\n\t      state.last =3D (hold &amp; =
0x01)/*BITS(1)*/;\n\t      //--- DROPBITS(1) ---//\n\t      hold =
&gt;&gt;&gt;=3D 1;\n\t      bits -=3D 1;\n\t      //---//\n\n\t      =
switch ((hold &amp; 0x03)/*BITS(2)*/) {\n\t      case 0:                 =
            /* stored block */\n\t        //Tracev((stderr, \"inflate:   =
  stored block%s\\n\",\n\t        //        state.last ? \" (last)\" : =
\"\"));\n\t        state.mode =3D STORED;\n\t        break;\n\t      =
case 1:                             /* fixed block */\n\t        =
fixedtables(state);\n\t        //Tracev((stderr, \"inflate:     fixed =
codes block%s\\n\",\n\t        //        state.last ? \" (last)\" : =
\"\"));\n\t        state.mode =3D LEN_;             /* decode codes =
*/\n\t        if (flush =3D=3D=3D Z_TREES) {\n\t          //--- =
DROPBITS(2) ---//\n\t          hold &gt;&gt;&gt;=3D 2;\n\t          bits =
-=3D 2;\n\t          //---//\n\t          break inf_leave;\n\t        =
}\n\t        break;\n\t      case 2:                             /* =
dynamic block */\n\t        //Tracev((stderr, \"inflate:     dynamic =
codes block%s\\n\",\n\t        //        state.last ? \" (last)\" : =
\"\"));\n\t        state.mode =3D TABLE;\n\t        break;\n\t      case =
3:\n\t        strm.msg =3D 'invalid block type';\n\t        state.mode =
=3D BAD;\n\t      }\n\t      //--- DROPBITS(2) ---//\n\t      hold =
&gt;&gt;&gt;=3D 2;\n\t      bits -=3D 2;\n\t      //---//\n\t      =
break;\n\t    case STORED:\n\t      //--- BYTEBITS() ---// /* go to byte =
boundary */\n\t      hold &gt;&gt;&gt;=3D bits &amp; 7;\n\t      bits =
-=3D bits &amp; 7;\n\t      //---//\n\t      //=3D=3D=3D NEEDBITS(32); =
*/\n\t      while (bits &lt; 32) {\n\t        if (have =3D=3D=3D 0) { =
break inf_leave; }\n\t        have--;\n\t        hold +=3D input[next++] =
&lt;&lt; bits;\n\t        bits +=3D 8;\n\t      }\n\t      =
//=3D=3D=3D//\n\t      if ((hold &amp; 0xffff) !=3D=3D ((hold =
&gt;&gt;&gt; 16) ^ 0xffff)) {\n\t        strm.msg =3D 'invalid stored =
block lengths';\n\t        state.mode =3D BAD;\n\t        break;\n\t     =
 }\n\t      state.length =3D hold &amp; 0xffff;\n\t      =
//Tracev((stderr, \"inflate:       stored length %u\\n\",\n\t      //    =
    state.length));\n\t      //=3D=3D=3D INITBITS();\n\t      hold =3D =
0;\n\t      bits =3D 0;\n\t      //=3D=3D=3D//\n\t      state.mode =3D =
COPY_;\n\t      if (flush =3D=3D=3D Z_TREES) { break inf_leave; }\n\t    =
  /* falls through */\n\t    case COPY_:\n\t      state.mode =3D =
COPY;\n\t      /* falls through */\n\t    case COPY:\n\t      copy =3D =
state.length;\n\t      if (copy) {\n\t        if (copy &gt; have) { copy =
=3D have; }\n\t        if (copy &gt; left) { copy =3D left; }\n\t        =
if (copy =3D=3D=3D 0) { break inf_leave; }\n\t        //--- zmemcpy(put, =
next, copy); ---\n\t        utils.arraySet(output, input, next, copy, =
put);\n\t        //---//\n\t        have -=3D copy;\n\t        next +=3D =
copy;\n\t        left -=3D copy;\n\t        put +=3D copy;\n\t        =
state.length -=3D copy;\n\t        break;\n\t      }\n\t      =
//Tracev((stderr, \"inflate:       stored end\\n\"));\n\t      =
state.mode =3D TYPE;\n\t      break;\n\t    case TABLE:\n\t      =
//=3D=3D=3D NEEDBITS(14); */\n\t      while (bits &lt; 14) {\n\t        =
if (have =3D=3D=3D 0) { break inf_leave; }\n\t        have--;\n\t        =
hold +=3D input[next++] &lt;&lt; bits;\n\t        bits +=3D 8;\n\t      =
}\n\t      //=3D=3D=3D//\n\t      state.nlen =3D (hold &amp; =
0x1f)/*BITS(5)*/ + 257;\n\t      //--- DROPBITS(5) ---//\n\t      hold =
&gt;&gt;&gt;=3D 5;\n\t      bits -=3D 5;\n\t      //---//\n\t      =
state.ndist =3D (hold &amp; 0x1f)/*BITS(5)*/ + 1;\n\t      //--- =
DROPBITS(5) ---//\n\t      hold &gt;&gt;&gt;=3D 5;\n\t      bits -=3D =
5;\n\t      //---//\n\t      state.ncode =3D (hold &amp; =
0x0f)/*BITS(4)*/ + 4;\n\t      //--- DROPBITS(4) ---//\n\t      hold =
&gt;&gt;&gt;=3D 4;\n\t      bits -=3D 4;\n\t      //---//\n\t//#ifndef =
PKZIP_BUG_WORKAROUND\n\t      if (state.nlen &gt; 286 || state.ndist =
&gt; 30) {\n\t        strm.msg =3D 'too many length or distance =
symbols';\n\t        state.mode =3D BAD;\n\t        break;\n\t      =
}\n\t//#endif\n\t      //Tracev((stderr, \"inflate:       table sizes =
ok\\n\"));\n\t      state.have =3D 0;\n\t      state.mode =3D =
LENLENS;\n\t      /* falls through */\n\t    case LENLENS:\n\t      =
while (state.have &lt; state.ncode) {\n\t        //=3D=3D=3D =
NEEDBITS(3);\n\t        while (bits &lt; 3) {\n\t          if (have =
=3D=3D=3D 0) { break inf_leave; }\n\t          have--;\n\t          hold =
+=3D input[next++] &lt;&lt; bits;\n\t          bits +=3D 8;\n\t        =
}\n\t        //=3D=3D=3D//\n\t        state.lens[order[state.have++]] =
=3D (hold &amp; 0x07);//BITS(3);\n\t        //--- DROPBITS(3) ---//\n\t  =
      hold &gt;&gt;&gt;=3D 3;\n\t        bits -=3D 3;\n\t        =
//---//\n\t      }\n\t      while (state.have &lt; 19) {\n\t        =
state.lens[order[state.have++]] =3D 0;\n\t      }\n\t      // We have =
separate tables &amp; no pointers. 2 commented lines below not =
needed.\n\t      //state.next =3D state.codes;\n\t      //state.lencode =
=3D state.next;\n\t      // Switch to use dynamic table\n\t      =
state.lencode =3D state.lendyn;\n\t      state.lenbits =3D 7;\n\n\t      =
opts =3D {bits: state.lenbits};\n\t      ret =3D inflate_table(CODES, =
state.lens, 0, 19, state.lencode, 0, state.work, opts);\n\t      =
state.lenbits =3D opts.bits;\n\n\t      if (ret) {\n\t        strm.msg =
=3D 'invalid code lengths set';\n\t        state.mode =3D BAD;\n\t       =
 break;\n\t      }\n\t      //Tracev((stderr, \"inflate:       code =
lengths ok\\n\"));\n\t      state.have =3D 0;\n\t      state.mode =3D =
CODELENS;\n\t      /* falls through */\n\t    case CODELENS:\n\t      =
while (state.have &lt; state.nlen + state.ndist) {\n\t        for (;;) =
{\n\t          here =3D state.lencode[hold &amp; ((1 &lt;&lt; =
state.lenbits) - 1)];/*BITS(state.lenbits)*/\n\t          here_bits =3D =
here &gt;&gt;&gt; 24;\n\t          here_op =3D (here &gt;&gt;&gt; 16) =
&amp; 0xff;\n\t          here_val =3D here &amp; 0xffff;\n\n\t          =
if ((here_bits) &lt;=3D bits) { break; }\n\t          //--- PULLBYTE() =
---//\n\t          if (have =3D=3D=3D 0) { break inf_leave; }\n\t        =
  have--;\n\t          hold +=3D input[next++] &lt;&lt; bits;\n\t        =
  bits +=3D 8;\n\t          //---//\n\t        }\n\t        if (here_val =
&lt; 16) {\n\t          //--- DROPBITS(here.bits) ---//\n\t          =
hold &gt;&gt;&gt;=3D here_bits;\n\t          bits -=3D here_bits;\n\t    =
      //---//\n\t          state.lens[state.have++] =3D here_val;\n\t    =
    }\n\t        else {\n\t          if (here_val =3D=3D=3D 16) {\n\t    =
        //=3D=3D=3D NEEDBITS(here.bits + 2);\n\t            n =3D =
here_bits + 2;\n\t            while (bits &lt; n) {\n\t              if =
(have =3D=3D=3D 0) { break inf_leave; }\n\t              have--;\n\t     =
         hold +=3D input[next++] &lt;&lt; bits;\n\t              bits =
+=3D 8;\n\t            }\n\t            //=3D=3D=3D//\n\t            =
//--- DROPBITS(here.bits) ---//\n\t            hold &gt;&gt;&gt;=3D =
here_bits;\n\t            bits -=3D here_bits;\n\t            =
//---//\n\t            if (state.have =3D=3D=3D 0) {\n\t              =
strm.msg =3D 'invalid bit length repeat';\n\t              state.mode =
=3D BAD;\n\t              break;\n\t            }\n\t            len =3D =
state.lens[state.have - 1];\n\t            copy =3D 3 + (hold &amp; =
0x03);//BITS(2);\n\t            //--- DROPBITS(2) ---//\n\t            =
hold &gt;&gt;&gt;=3D 2;\n\t            bits -=3D 2;\n\t            =
//---//\n\t          }\n\t          else if (here_val =3D=3D=3D 17) =
{\n\t            //=3D=3D=3D NEEDBITS(here.bits + 3);\n\t            n =
=3D here_bits + 3;\n\t            while (bits &lt; n) {\n\t              =
if (have =3D=3D=3D 0) { break inf_leave; }\n\t              have--;\n\t  =
            hold +=3D input[next++] &lt;&lt; bits;\n\t              bits =
+=3D 8;\n\t            }\n\t            //=3D=3D=3D//\n\t            =
//--- DROPBITS(here.bits) ---//\n\t            hold &gt;&gt;&gt;=3D =
here_bits;\n\t            bits -=3D here_bits;\n\t            =
//---//\n\t            len =3D 0;\n\t            copy =3D 3 + (hold =
&amp; 0x07);//BITS(3);\n\t            //--- DROPBITS(3) ---//\n\t        =
    hold &gt;&gt;&gt;=3D 3;\n\t            bits -=3D 3;\n\t            =
//---//\n\t          }\n\t          else {\n\t            //=3D=3D=3D =
NEEDBITS(here.bits + 7);\n\t            n =3D here_bits + 7;\n\t         =
   while (bits &lt; n) {\n\t              if (have =3D=3D=3D 0) { break =
inf_leave; }\n\t              have--;\n\t              hold +=3D =
input[next++] &lt;&lt; bits;\n\t              bits +=3D 8;\n\t           =
 }\n\t            //=3D=3D=3D//\n\t            //--- DROPBITS(here.bits) =
---//\n\t            hold &gt;&gt;&gt;=3D here_bits;\n\t            bits =
-=3D here_bits;\n\t            //---//\n\t            len =3D 0;\n\t     =
       copy =3D 11 + (hold &amp; 0x7f);//BITS(7);\n\t            //--- =
DROPBITS(7) ---//\n\t            hold &gt;&gt;&gt;=3D 7;\n\t            =
bits -=3D 7;\n\t            //---//\n\t          }\n\t          if =
(state.have + copy &gt; state.nlen + state.ndist) {\n\t            =
strm.msg =3D 'invalid bit length repeat';\n\t            state.mode =3D =
BAD;\n\t            break;\n\t          }\n\t          while (copy--) =
{\n\t            state.lens[state.have++] =3D len;\n\t          }\n\t    =
    }\n\t      }\n\n\t      /* handle error breaks in while */\n\t      =
if (state.mode =3D=3D=3D BAD) { break; }\n\n\t      /* check for =
end-of-block code (better have one) */\n\t      if (state.lens[256] =
=3D=3D=3D 0) {\n\t        strm.msg =3D 'invalid code -- missing =
end-of-block';\n\t        state.mode =3D BAD;\n\t        break;\n\t      =
}\n\n\t      /* build code tables -- note: do not change the lenbits or =
distbits\n\t         values here (9 and 6) without reading the comments =
in inftrees.h\n\t         concerning the ENOUGH constants, which depend =
on those values */\n\t      state.lenbits =3D 9;\n\n\t      opts =3D =
{bits: state.lenbits};\n\t      ret =3D inflate_table(LENS, state.lens, =
0, state.nlen, state.lencode, 0, state.work, opts);\n\t      // We have =
separate tables &amp; no pointers. 2 commented lines below not =
needed.\n\t      // state.next_index =3D opts.table_index;\n\t      =
state.lenbits =3D opts.bits;\n\t      // state.lencode =3D =
state.next;\n\n\t      if (ret) {\n\t        strm.msg =3D 'invalid =
literal/lengths set';\n\t        state.mode =3D BAD;\n\t        =
break;\n\t      }\n\n\t      state.distbits =3D 6;\n\t      =
//state.distcode.copy(state.codes);\n\t      // Switch to use dynamic =
table\n\t      state.distcode =3D state.distdyn;\n\t      opts =3D =
{bits: state.distbits};\n\t      ret =3D inflate_table(DISTS, =
state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, =
opts);\n\t      // We have separate tables &amp; no pointers. 2 =
commented lines below not needed.\n\t      // state.next_index =3D =
opts.table_index;\n\t      state.distbits =3D opts.bits;\n\t      // =
state.distcode =3D state.next;\n\n\t      if (ret) {\n\t        strm.msg =
=3D 'invalid distances set';\n\t        state.mode =3D BAD;\n\t        =
break;\n\t      }\n\t      //Tracev((stderr, 'inflate:       codes =
ok\\n'));\n\t      state.mode =3D LEN_;\n\t      if (flush =3D=3D=3D =
Z_TREES) { break inf_leave; }\n\t      /* falls through */\n\t    case =
LEN_:\n\t      state.mode =3D LEN;\n\t      /* falls through */\n\t    =
case LEN:\n\t      if (have &gt;=3D 6 &amp;&amp; left &gt;=3D 258) {\n\t =
       //--- RESTORE() ---\n\t        strm.next_out =3D put;\n\t        =
strm.avail_out =3D left;\n\t        strm.next_in =3D next;\n\t        =
strm.avail_in =3D have;\n\t        state.hold =3D hold;\n\t        =
state.bits =3D bits;\n\t        //---\n\t        inflate_fast(strm, =
_out);\n\t        //--- LOAD() ---\n\t        put =3D strm.next_out;\n\t =
       output =3D strm.output;\n\t        left =3D strm.avail_out;\n\t   =
     next =3D strm.next_in;\n\t        input =3D strm.input;\n\t        =
have =3D strm.avail_in;\n\t        hold =3D state.hold;\n\t        bits =
=3D state.bits;\n\t        //---\n\n\t        if (state.mode =3D=3D=3D =
TYPE) {\n\t          state.back =3D -1;\n\t        }\n\t        =
break;\n\t      }\n\t      state.back =3D 0;\n\t      for (;;) {\n\t     =
   here =3D state.lencode[hold &amp; ((1 &lt;&lt; state.lenbits) -1)];  =
/*BITS(state.lenbits)*/\n\t        here_bits =3D here &gt;&gt;&gt; =
24;\n\t        here_op =3D (here &gt;&gt;&gt; 16) &amp; 0xff;\n\t        =
here_val =3D here &amp; 0xffff;\n\n\t        if (here_bits &lt;=3D bits) =
{ break; }\n\t        //--- PULLBYTE() ---//\n\t        if (have =
=3D=3D=3D 0) { break inf_leave; }\n\t        have--;\n\t        hold =
+=3D input[next++] &lt;&lt; bits;\n\t        bits +=3D 8;\n\t        =
//---//\n\t      }\n\t      if (here_op &amp;&amp; (here_op &amp; 0xf0) =
=3D=3D=3D 0) {\n\t        last_bits =3D here_bits;\n\t        last_op =
=3D here_op;\n\t        last_val =3D here_val;\n\t        for (;;) {\n\t =
         here =3D state.lencode[last_val +\n\t                  ((hold =
&amp; ((1 &lt;&lt; (last_bits + last_op)) -1))/*BITS(last.bits + =
last.op)*/ &gt;&gt; last_bits)];\n\t          here_bits =3D here =
&gt;&gt;&gt; 24;\n\t          here_op =3D (here &gt;&gt;&gt; 16) &amp; =
0xff;\n\t          here_val =3D here &amp; 0xffff;\n\n\t          if =
((last_bits + here_bits) &lt;=3D bits) { break; }\n\t          //--- =
PULLBYTE() ---//\n\t          if (have =3D=3D=3D 0) { break inf_leave; =
}\n\t          have--;\n\t          hold +=3D input[next++] &lt;&lt; =
bits;\n\t          bits +=3D 8;\n\t          //---//\n\t        }\n\t    =
    //--- DROPBITS(last.bits) ---//\n\t        hold &gt;&gt;&gt;=3D =
last_bits;\n\t        bits -=3D last_bits;\n\t        //---//\n\t        =
state.back +=3D last_bits;\n\t      }\n\t      //--- DROPBITS(here.bits) =
---//\n\t      hold &gt;&gt;&gt;=3D here_bits;\n\t      bits -=3D =
here_bits;\n\t      //---//\n\t      state.back +=3D here_bits;\n\t      =
state.length =3D here_val;\n\t      if (here_op =3D=3D=3D 0) {\n\t       =
 //Tracevv((stderr, here.val &gt;=3D 0x20 &amp;&amp; here.val &lt; 0x7f =
?\n\t        //        \"inflate:         literal '%c'\\n\" :\n\t        =
//        \"inflate:         literal 0x%02x\\n\", here.val));\n\t        =
state.mode =3D LIT;\n\t        break;\n\t      }\n\t      if (here_op =
&amp; 32) {\n\t        //Tracevv((stderr, \"inflate:         end of =
block\\n\"));\n\t        state.back =3D -1;\n\t        state.mode =3D =
TYPE;\n\t        break;\n\t      }\n\t      if (here_op &amp; 64) {\n\t  =
      strm.msg =3D 'invalid literal/length code';\n\t        state.mode =
=3D BAD;\n\t        break;\n\t      }\n\t      state.extra =3D here_op =
&amp; 15;\n\t      state.mode =3D LENEXT;\n\t      /* falls through =
*/\n\t    case LENEXT:\n\t      if (state.extra) {\n\t        =
//=3D=3D=3D NEEDBITS(state.extra);\n\t        n =3D state.extra;\n\t     =
   while (bits &lt; n) {\n\t          if (have =3D=3D=3D 0) { break =
inf_leave; }\n\t          have--;\n\t          hold +=3D input[next++] =
&lt;&lt; bits;\n\t          bits +=3D 8;\n\t        }\n\t        =
//=3D=3D=3D//\n\t        state.length +=3D hold &amp; ((1 &lt;&lt; =
state.extra) -1)/*BITS(state.extra)*/;\n\t        //--- =
DROPBITS(state.extra) ---//\n\t        hold &gt;&gt;&gt;=3D =
state.extra;\n\t        bits -=3D state.extra;\n\t        //---//\n\t    =
    state.back +=3D state.extra;\n\t      }\n\t      //Tracevv((stderr, =
\"inflate:         length %u\\n\", state.length));\n\t      state.was =
=3D state.length;\n\t      state.mode =3D DIST;\n\t      /* falls =
through */\n\t    case DIST:\n\t      for (;;) {\n\t        here =3D =
state.distcode[hold &amp; ((1 &lt;&lt; state.distbits) =
-1)];/*BITS(state.distbits)*/\n\t        here_bits =3D here &gt;&gt;&gt; =
24;\n\t        here_op =3D (here &gt;&gt;&gt; 16) &amp; 0xff;\n\t        =
here_val =3D here &amp; 0xffff;\n\n\t        if ((here_bits) &lt;=3D =
bits) { break; }\n\t        //--- PULLBYTE() ---//\n\t        if (have =
=3D=3D=3D 0) { break inf_leave; }\n\t        have--;\n\t        hold =
+=3D input[next++] &lt;&lt; bits;\n\t        bits +=3D 8;\n\t        =
//---//\n\t      }\n\t      if ((here_op &amp; 0xf0) =3D=3D=3D 0) {\n\t  =
      last_bits =3D here_bits;\n\t        last_op =3D here_op;\n\t       =
 last_val =3D here_val;\n\t        for (;;) {\n\t          here =3D =
state.distcode[last_val +\n\t                  ((hold &amp; ((1 &lt;&lt; =
(last_bits + last_op)) -1))/*BITS(last.bits + last.op)*/ &gt;&gt; =
last_bits)];\n\t          here_bits =3D here &gt;&gt;&gt; 24;\n\t        =
  here_op =3D (here &gt;&gt;&gt; 16) &amp; 0xff;\n\t          here_val =
=3D here &amp; 0xffff;\n\n\t          if ((last_bits + here_bits) =
&lt;=3D bits) { break; }\n\t          //--- PULLBYTE() ---//\n\t         =
 if (have =3D=3D=3D 0) { break inf_leave; }\n\t          have--;\n\t     =
     hold +=3D input[next++] &lt;&lt; bits;\n\t          bits +=3D =
8;\n\t          //---//\n\t        }\n\t        //--- =
DROPBITS(last.bits) ---//\n\t        hold &gt;&gt;&gt;=3D last_bits;\n\t =
       bits -=3D last_bits;\n\t        //---//\n\t        state.back =
+=3D last_bits;\n\t      }\n\t      //--- DROPBITS(here.bits) ---//\n\t  =
    hold &gt;&gt;&gt;=3D here_bits;\n\t      bits -=3D here_bits;\n\t    =
  //---//\n\t      state.back +=3D here_bits;\n\t      if (here_op &amp; =
64) {\n\t        strm.msg =3D 'invalid distance code';\n\t        =
state.mode =3D BAD;\n\t        break;\n\t      }\n\t      state.offset =
=3D here_val;\n\t      state.extra =3D (here_op) &amp; 15;\n\t      =
state.mode =3D DISTEXT;\n\t      /* falls through */\n\t    case =
DISTEXT:\n\t      if (state.extra) {\n\t        //=3D=3D=3D =
NEEDBITS(state.extra);\n\t        n =3D state.extra;\n\t        while =
(bits &lt; n) {\n\t          if (have =3D=3D=3D 0) { break inf_leave; =
}\n\t          have--;\n\t          hold +=3D input[next++] &lt;&lt; =
bits;\n\t          bits +=3D 8;\n\t        }\n\t        =
//=3D=3D=3D//\n\t        state.offset +=3D hold &amp; ((1 &lt;&lt; =
state.extra) -1)/*BITS(state.extra)*/;\n\t        //--- =
DROPBITS(state.extra) ---//\n\t        hold &gt;&gt;&gt;=3D =
state.extra;\n\t        bits -=3D state.extra;\n\t        //---//\n\t    =
    state.back +=3D state.extra;\n\t      }\n\t//#ifdef =
INFLATE_STRICT\n\t      if (state.offset &gt; state.dmax) {\n\t        =
strm.msg =3D 'invalid distance too far back';\n\t        state.mode =3D =
BAD;\n\t        break;\n\t      }\n\t//#endif\n\t      =
//Tracevv((stderr, \"inflate:         distance %u\\n\", =
state.offset));\n\t      state.mode =3D MATCH;\n\t      /* falls through =
*/\n\t    case MATCH:\n\t      if (left =3D=3D=3D 0) { break inf_leave; =
}\n\t      copy =3D _out - left;\n\t      if (state.offset &gt; copy) {  =
       /* copy from window */\n\t        copy =3D state.offset - =
copy;\n\t        if (copy &gt; state.whave) {\n\t          if =
(state.sane) {\n\t            strm.msg =3D 'invalid distance too far =
back';\n\t            state.mode =3D BAD;\n\t            break;\n\t      =
    }\n\t// (!) This block is disabled in zlib defailts,\n\t// don't =
enable it for binary compatibility\n\t//#ifdef =
INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n\t//          Trace((stderr, =
\"inflate.c too far\\n\"));\n\t//          copy -=3D state.whave;\n\t//  =
        if (copy &gt; state.length) { copy =3D state.length; }\n\t//     =
     if (copy &gt; left) { copy =3D left; }\n\t//          left -=3D =
copy;\n\t//          state.length -=3D copy;\n\t//          do {\n\t//   =
         output[put++] =3D 0;\n\t//          } while (--copy);\n\t//     =
     if (state.length =3D=3D=3D 0) { state.mode =3D LEN; }\n\t//         =
 break;\n\t//#endif\n\t        }\n\t        if (copy &gt; state.wnext) =
{\n\t          copy -=3D state.wnext;\n\t          from =3D state.wsize =
- copy;\n\t        }\n\t        else {\n\t          from =3D state.wnext =
- copy;\n\t        }\n\t        if (copy &gt; state.length) { copy =3D =
state.length; }\n\t        from_source =3D state.window;\n\t      }\n\t  =
    else {                              /* copy from output */\n\t       =
 from_source =3D output;\n\t        from =3D put - state.offset;\n\t     =
   copy =3D state.length;\n\t      }\n\t      if (copy &gt; left) { copy =
=3D left; }\n\t      left -=3D copy;\n\t      state.length -=3D =
copy;\n\t      do {\n\t        output[put++] =3D =
from_source[from++];\n\t      } while (--copy);\n\t      if =
(state.length =3D=3D=3D 0) { state.mode =3D LEN; }\n\t      break;\n\t   =
 case LIT:\n\t      if (left =3D=3D=3D 0) { break inf_leave; }\n\t      =
output[put++] =3D state.length;\n\t      left--;\n\t      state.mode =3D =
LEN;\n\t      break;\n\t    case CHECK:\n\t      if (state.wrap) {\n\t   =
     //=3D=3D=3D NEEDBITS(32);\n\t        while (bits &lt; 32) {\n\t     =
     if (have =3D=3D=3D 0) { break inf_leave; }\n\t          have--;\n\t =
         // Use '|' insdead of '+' to make sure that result is =
signed\n\t          hold |=3D input[next++] &lt;&lt; bits;\n\t          =
bits +=3D 8;\n\t        }\n\t        //=3D=3D=3D//\n\t        _out -=3D =
left;\n\t        strm.total_out +=3D _out;\n\t        state.total +=3D =
_out;\n\t        if (_out) {\n\t          strm.adler =3D state.check =
=3D\n\t              /*UPDATE(state.check, put - _out, _out);*/\n\t      =
        (state.flags ? crc32(state.check, output, _out, put - _out) : =
adler32(state.check, output, _out, put - _out));\n\n\t        }\n\t      =
  _out =3D left;\n\t        // NB: crc32 stored as signed 32-bit int, =
ZSWAP32 returns signed too\n\t        if ((state.flags ? hold : =
ZSWAP32(hold)) !=3D=3D state.check) {\n\t          strm.msg =3D =
'incorrect data check';\n\t          state.mode =3D BAD;\n\t          =
break;\n\t        }\n\t        //=3D=3D=3D INITBITS();\n\t        hold =
=3D 0;\n\t        bits =3D 0;\n\t        //=3D=3D=3D//\n\t        =
//Tracev((stderr, \"inflate:   check matches trailer\\n\"));\n\t      =
}\n\t      state.mode =3D LENGTH;\n\t      /* falls through */\n\t    =
case LENGTH:\n\t      if (state.wrap &amp;&amp; state.flags) {\n\t       =
 //=3D=3D=3D NEEDBITS(32);\n\t        while (bits &lt; 32) {\n\t         =
 if (have =3D=3D=3D 0) { break inf_leave; }\n\t          have--;\n\t     =
     hold +=3D input[next++] &lt;&lt; bits;\n\t          bits +=3D =
8;\n\t        }\n\t        //=3D=3D=3D//\n\t        if (hold !=3D=3D =
(state.total &amp; 0xffffffff)) {\n\t          strm.msg =3D 'incorrect =
length check';\n\t          state.mode =3D BAD;\n\t          break;\n\t  =
      }\n\t        //=3D=3D=3D INITBITS();\n\t        hold =3D 0;\n\t    =
    bits =3D 0;\n\t        //=3D=3D=3D//\n\t        //Tracev((stderr, =
\"inflate:   length matches trailer\\n\"));\n\t      }\n\t      =
state.mode =3D DONE;\n\t      /* falls through */\n\t    case DONE:\n\t  =
    ret =3D Z_STREAM_END;\n\t      break inf_leave;\n\t    case BAD:\n\t =
     ret =3D Z_DATA_ERROR;\n\t      break inf_leave;\n\t    case =
MEM:\n\t      return Z_MEM_ERROR;\n\t    case SYNC:\n\t      /* falls =
through */\n\t    default:\n\t      return Z_STREAM_ERROR;\n\t    }\n\t  =
}\n\n\t  // inf_leave &lt;- here is real place for \"goto inf_leave\", =
emulated via \"break inf_leave\"\n\n\t  /*\n\t     Return from =
inflate(), updating the total counts and the check value.\n\t     If =
there was no progress during the inflate() call, return a buffer\n\t     =
error.  Call updatewindow() to create and/or update the window =
state.\n\t     Note: a memory error from inflate() is =
non-recoverable.\n\t   */\n\n\t  //--- RESTORE() ---\n\t  strm.next_out =
=3D put;\n\t  strm.avail_out =3D left;\n\t  strm.next_in =3D next;\n\t  =
strm.avail_in =3D have;\n\t  state.hold =3D hold;\n\t  state.bits =3D =
bits;\n\t  //---\n\n\t  if (state.wsize || (_out !=3D=3D strm.avail_out =
&amp;&amp; state.mode &lt; BAD &amp;&amp;\n\t                      =
(state.mode &lt; CHECK || flush !=3D=3D Z_FINISH))) {\n\t    if =
(updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) =
{\n\t      state.mode =3D MEM;\n\t      return Z_MEM_ERROR;\n\t    }\n\t =
 }\n\t  _in -=3D strm.avail_in;\n\t  _out -=3D strm.avail_out;\n\t  =
strm.total_in +=3D _in;\n\t  strm.total_out +=3D _out;\n\t  state.total =
+=3D _out;\n\t  if (state.wrap &amp;&amp; _out) {\n\t    strm.adler =3D =
state.check =3D /*UPDATE(state.check, strm.next_out - _out, _out);*/\n\t =
     (state.flags ? crc32(state.check, output, _out, strm.next_out - =
_out) : adler32(state.check, output, _out, strm.next_out - _out));\n\t  =
}\n\t  strm.data_type =3D state.bits + (state.last ? 64 : 0) +\n\t       =
             (state.mode =3D=3D=3D TYPE ? 128 : 0) +\n\t                 =
   (state.mode =3D=3D=3D LEN_ || state.mode =3D=3D=3D COPY_ ? 256 : =
0);\n\t  if (((_in =3D=3D=3D 0 &amp;&amp; _out =3D=3D=3D 0) || flush =
=3D=3D=3D Z_FINISH) &amp;&amp; ret =3D=3D=3D Z_OK) {\n\t    ret =3D =
Z_BUF_ERROR;\n\t  }\n\t  return ret;\n\t}\n\n\tfunction inflateEnd(strm) =
{\n\n\t  if (!strm || !strm.state /*|| strm-&gt;zfree =3D=3D =
(free_func)0*/) {\n\t    return Z_STREAM_ERROR;\n\t  }\n\n\t  var state =
=3D strm.state;\n\t  if (state.window) {\n\t    state.window =3D =
null;\n\t  }\n\t  strm.state =3D null;\n\t  return =
Z_OK;\n\t}\n\n\tfunction inflateGetHeader(strm, head) {\n\t  var =
state;\n\n\t  /* check state */\n\t  if (!strm || !strm.state) { return =
Z_STREAM_ERROR; }\n\t  state =3D strm.state;\n\t  if ((state.wrap &amp; =
2) =3D=3D=3D 0) { return Z_STREAM_ERROR; }\n\n\t  /* save header =
structure */\n\t  state.head =3D head;\n\t  head.done =3D false;\n\t  =
return Z_OK;\n\t}\n\n\n\texports.inflateReset =3D =
inflateReset;\n\texports.inflateReset2 =3D =
inflateReset2;\n\texports.inflateResetKeep =3D =
inflateResetKeep;\n\texports.inflateInit =3D =
inflateInit;\n\texports.inflateInit2 =3D =
inflateInit2;\n\texports.inflate =3D inflate;\n\texports.inflateEnd =3D =
inflateEnd;\n\texports.inflateGetHeader =3D =
inflateGetHeader;\n\texports.inflateInfo =3D 'pako inflate (from Nodeca =
project)';\n\n\t/* Not implemented\n\texports.inflateCopy =3D =
inflateCopy;\n\texports.inflateGetDictionary =3D =
inflateGetDictionary;\n\texports.inflateMark =3D =
inflateMark;\n\texports.inflatePrime =3D =
inflatePrime;\n\texports.inflateSetDictionary =3D =
inflateSetDictionary;\n\texports.inflateSync =3D =
inflateSync;\n\texports.inflateSyncPoint =3D =
inflateSyncPoint;\n\texports.inflateUndermine =3D =
inflateUndermine;\n\t*/\n\n\n/***/ },\n/* 57 */\n/***/ function(module, =
exports) {\n\n\t'use strict';\n\n\t// See state defs from =
inflate.js\n\tvar BAD =3D 30;       /* got a data error -- remain here =
until reset */\n\tvar TYPE =3D 12;      /* i: waiting for type bits, =
including last-flag bit */\n\n\t/*\n\t   Decode literal, length, and =
distance codes and write out the resulting\n\t   literal and match bytes =
until either not enough input or output is\n\t   available, an =
end-of-block is encountered, or a data error is encountered.\n\t   When =
large enough input and output buffers are supplied to inflate(), for\n\t =
  example, a 16K input buffer and a 64K output buffer, more than 95% of =
the\n\t   inflate execution time is spent in this routine.\n\n\t   Entry =
assumptions:\n\n\t        state.mode =3D=3D=3D LEN\n\t        =
strm.avail_in &gt;=3D 6\n\t        strm.avail_out &gt;=3D 258\n\t        =
start &gt;=3D strm.avail_out\n\t        state.bits &lt; 8\n\n\t   On =
return, state.mode is one of:\n\n\t        LEN -- ran out of enough =
output space or enough available input\n\t        TYPE -- reached end of =
block code, inflate() to interpret next block\n\t        BAD -- error in =
block data\n\n\t   Notes:\n\n\t    - The maximum input bits used by a =
length/distance pair is 15 bits for the\n\t      length code, 5 bits for =
the length extra, 15 bits for the distance code,\n\t      and 13 bits =
for the distance extra.  This totals 48 bits, or six bytes.\n\t      =
Therefore if strm.avail_in &gt;=3D 6, then there is enough input to =
avoid\n\t      checking for available input while decoding.\n\n\t    - =
The maximum bytes that a single length/distance pair can output is =
258\n\t      bytes, which is the maximum length that can be coded.  =
inflate_fast()\n\t      requires strm.avail_out &gt;=3D 258 for each =
loop to avoid checking for\n\t      output space.\n\t =
*/\n\tmodule.exports =3D function inflate_fast(strm, start) {\n\t  var =
state;\n\t  var _in;                    /* local strm.input */\n\t  var =
last;                   /* have enough input while in &lt; last */\n\t  =
var _out;                   /* local strm.output */\n\t  var beg;        =
            /* inflate()'s initial strm.output */\n\t  var end;          =
          /* while out &lt; end, enough space available */\n\t//#ifdef =
INFLATE_STRICT\n\t  var dmax;                   /* maximum distance from =
zlib header */\n\t//#endif\n\t  var wsize;                  /* window =
size or zero if not using window */\n\t  var whave;                  /* =
valid bytes in the window */\n\t  var wnext;                  /* window =
write index */\n\t  // Use `s_window` instead `window`, avoid conflict =
with instrumentation tools\n\t  var s_window;               /* allocated =
sliding window, if wsize !=3D 0 */\n\t  var hold;                   /* =
local strm.hold */\n\t  var bits;                   /* local strm.bits =
*/\n\t  var lcode;                  /* local strm.lencode */\n\t  var =
dcode;                  /* local strm.distcode */\n\t  var lmask;        =
          /* mask for first level of length codes */\n\t  var dmask;     =
             /* mask for first level of distance codes */\n\t  var here; =
                  /* retrieved table entry */\n\t  var op;               =
      /* code bits, operation, extra bits, or */\n\t                     =
         /*  window position, window bytes to copy */\n\t  var len;      =
              /* match length, unused bytes */\n\t  var dist;            =
       /* match distance */\n\t  var from;                   /* where to =
copy match from */\n\t  var from_source;\n\n\n\t  var input, output; // =
JS specific, because we have no pointers\n\n\t  /* copy state to local =
variables */\n\t  state =3D strm.state;\n\t  //here =3D state.here;\n\t  =
_in =3D strm.next_in;\n\t  input =3D strm.input;\n\t  last =3D _in + =
(strm.avail_in - 5);\n\t  _out =3D strm.next_out;\n\t  output =3D =
strm.output;\n\t  beg =3D _out - (start - strm.avail_out);\n\t  end =3D =
_out + (strm.avail_out - 257);\n\t//#ifdef INFLATE_STRICT\n\t  dmax =3D =
state.dmax;\n\t//#endif\n\t  wsize =3D state.wsize;\n\t  whave =3D =
state.whave;\n\t  wnext =3D state.wnext;\n\t  s_window =3D =
state.window;\n\t  hold =3D state.hold;\n\t  bits =3D state.bits;\n\t  =
lcode =3D state.lencode;\n\t  dcode =3D state.distcode;\n\t  lmask =3D =
(1 &lt;&lt; state.lenbits) - 1;\n\t  dmask =3D (1 &lt;&lt; =
state.distbits) - 1;\n\n\n\t  /* decode literals and length/distances =
until end-of-block or not enough\n\t     input data or output space =
*/\n\n\t  top:\n\t  do {\n\t    if (bits &lt; 15) {\n\t      hold +=3D =
input[_in++] &lt;&lt; bits;\n\t      bits +=3D 8;\n\t      hold +=3D =
input[_in++] &lt;&lt; bits;\n\t      bits +=3D 8;\n\t    }\n\n\t    here =
=3D lcode[hold &amp; lmask];\n\n\t    dolen:\n\t    for (;;) { // Goto =
emulation\n\t      op =3D here &gt;&gt;&gt; 24/*here.bits*/;\n\t      =
hold &gt;&gt;&gt;=3D op;\n\t      bits -=3D op;\n\t      op =3D (here =
&gt;&gt;&gt; 16) &amp; 0xff/*here.op*/;\n\t      if (op =3D=3D=3D 0) {   =
                       /* literal */\n\t        //Tracevv((stderr, =
here.val &gt;=3D 0x20 &amp;&amp; here.val &lt; 0x7f ?\n\t        //      =
  \"inflate:         literal '%c'\\n\" :\n\t        //        \"inflate: =
        literal 0x%02x\\n\", here.val));\n\t        output[_out++] =3D =
here &amp; 0xffff/*here.val*/;\n\t      }\n\t      else if (op &amp; 16) =
{                     /* length base */\n\t        len =3D here &amp; =
0xffff/*here.val*/;\n\t        op &amp;=3D 15;                           =
/* number of extra bits */\n\t        if (op) {\n\t          if (bits =
&lt; op) {\n\t            hold +=3D input[_in++] &lt;&lt; bits;\n\t      =
      bits +=3D 8;\n\t          }\n\t          len +=3D hold &amp; ((1 =
&lt;&lt; op) - 1);\n\t          hold &gt;&gt;&gt;=3D op;\n\t          =
bits -=3D op;\n\t        }\n\t        //Tracevv((stderr, \"inflate:      =
   length %u\\n\", len));\n\t        if (bits &lt; 15) {\n\t          =
hold +=3D input[_in++] &lt;&lt; bits;\n\t          bits +=3D 8;\n\t      =
    hold +=3D input[_in++] &lt;&lt; bits;\n\t          bits +=3D 8;\n\t  =
      }\n\t        here =3D dcode[hold &amp; dmask];\n\n\t        =
dodist:\n\t        for (;;) { // goto emulation\n\t          op =3D here =
&gt;&gt;&gt; 24/*here.bits*/;\n\t          hold &gt;&gt;&gt;=3D op;\n\t  =
        bits -=3D op;\n\t          op =3D (here &gt;&gt;&gt; 16) &amp; =
0xff/*here.op*/;\n\n\t          if (op &amp; 16) {                      =
/* distance base */\n\t            dist =3D here &amp; =
0xffff/*here.val*/;\n\t            op &amp;=3D 15;                       =
/* number of extra bits */\n\t            if (bits &lt; op) {\n\t        =
      hold +=3D input[_in++] &lt;&lt; bits;\n\t              bits +=3D =
8;\n\t              if (bits &lt; op) {\n\t                hold +=3D =
input[_in++] &lt;&lt; bits;\n\t                bits +=3D 8;\n\t          =
    }\n\t            }\n\t            dist +=3D hold &amp; ((1 &lt;&lt; =
op) - 1);\n\t//#ifdef INFLATE_STRICT\n\t            if (dist &gt; dmax) =
{\n\t              strm.msg =3D 'invalid distance too far back';\n\t     =
         state.mode =3D BAD;\n\t              break top;\n\t            =
}\n\t//#endif\n\t            hold &gt;&gt;&gt;=3D op;\n\t            =
bits -=3D op;\n\t            //Tracevv((stderr, \"inflate:         =
distance %u\\n\", dist));\n\t            op =3D _out - beg;              =
  /* max distance in output */\n\t            if (dist &gt; op) {        =
        /* see if copy from window */\n\t              op =3D dist - op; =
              /* distance back in window */\n\t              if (op &gt; =
whave) {\n\t                if (state.sane) {\n\t                  =
strm.msg =3D 'invalid distance too far back';\n\t                  =
state.mode =3D BAD;\n\t                  break top;\n\t                =
}\n\n\t// (!) This block is disabled in zlib defailts,\n\t// don't =
enable it for binary compatibility\n\t//#ifdef =
INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n\t//                if (len =
&lt;=3D op - whave) {\n\t//                  do {\n\t//                  =
  output[_out++] =3D 0;\n\t//                  } while (--len);\n\t//    =
              continue top;\n\t//                }\n\t//                =
len -=3D op - whave;\n\t//                do {\n\t//                  =
output[_out++] =3D 0;\n\t//                } while (--op &gt; =
whave);\n\t//                if (op =3D=3D=3D 0) {\n\t//                 =
 from =3D _out - dist;\n\t//                  do {\n\t//                 =
   output[_out++] =3D output[from++];\n\t//                  } while =
(--len);\n\t//                  continue top;\n\t//                =
}\n\t//#endif\n\t              }\n\t              from =3D 0; // window =
index\n\t              from_source =3D s_window;\n\t              if =
(wnext =3D=3D=3D 0) {           /* very common case */\n\t               =
 from +=3D wsize - op;\n\t                if (op &lt; len) {         /* =
some from window */\n\t                  len -=3D op;\n\t                =
  do {\n\t                    output[_out++] =3D s_window[from++];\n\t   =
               } while (--op);\n\t                  from =3D _out - =
dist;  /* rest from output */\n\t                  from_source =3D =
output;\n\t                }\n\t              }\n\t              else if =
(wnext &lt; op) {      /* wrap around window */\n\t                from =
+=3D wsize + wnext - op;\n\t                op -=3D wnext;\n\t           =
     if (op &lt; len) {         /* some from end of window */\n\t        =
          len -=3D op;\n\t                  do {\n\t                    =
output[_out++] =3D s_window[from++];\n\t                  } while =
(--op);\n\t                  from =3D 0;\n\t                  if (wnext =
&lt; len) {  /* some from start of window */\n\t                    op =
=3D wnext;\n\t                    len -=3D op;\n\t                    do =
{\n\t                      output[_out++] =3D s_window[from++];\n\t      =
              } while (--op);\n\t                    from =3D _out - =
dist;      /* rest from output */\n\t                    from_source =3D =
output;\n\t                  }\n\t                }\n\t              =
}\n\t              else {                      /* contiguous in window =
*/\n\t                from +=3D wnext - op;\n\t                if (op =
&lt; len) {         /* some from window */\n\t                  len -=3D =
op;\n\t                  do {\n\t                    output[_out++] =3D =
s_window[from++];\n\t                  } while (--op);\n\t               =
   from =3D _out - dist;  /* rest from output */\n\t                  =
from_source =3D output;\n\t                }\n\t              }\n\t      =
        while (len &gt; 2) {\n\t                output[_out++] =3D =
from_source[from++];\n\t                output[_out++] =3D =
from_source[from++];\n\t                output[_out++] =3D =
from_source[from++];\n\t                len -=3D 3;\n\t              =
}\n\t              if (len) {\n\t                output[_out++] =3D =
from_source[from++];\n\t                if (len &gt; 1) {\n\t            =
      output[_out++] =3D from_source[from++];\n\t                }\n\t   =
           }\n\t            }\n\t            else {\n\t              =
from =3D _out - dist;          /* copy direct from output */\n\t         =
     do {                        /* minimum length is three */\n\t       =
         output[_out++] =3D output[from++];\n\t                =
output[_out++] =3D output[from++];\n\t                output[_out++] =3D =
output[from++];\n\t                len -=3D 3;\n\t              } while =
(len &gt; 2);\n\t              if (len) {\n\t                =
output[_out++] =3D output[from++];\n\t                if (len &gt; 1) =
{\n\t                  output[_out++] =3D output[from++];\n\t            =
    }\n\t              }\n\t            }\n\t          }\n\t          =
else if ((op &amp; 64) =3D=3D=3D 0) {          /* 2nd level distance =
code */\n\t            here =3D dcode[(here &amp; 0xffff)/*here.val*/ + =
(hold &amp; ((1 &lt;&lt; op) - 1))];\n\t            continue dodist;\n\t =
         }\n\t          else {\n\t            strm.msg =3D 'invalid =
distance code';\n\t            state.mode =3D BAD;\n\t            break =
top;\n\t          }\n\n\t          break; // need to emulate goto via =
\"continue\"\n\t        }\n\t      }\n\t      else if ((op &amp; 64) =
=3D=3D=3D 0) {              /* 2nd level length code */\n\t        here =
=3D lcode[(here &amp; 0xffff)/*here.val*/ + (hold &amp; ((1 &lt;&lt; op) =
- 1))];\n\t        continue dolen;\n\t      }\n\t      else if (op &amp; =
32) {                     /* end-of-block */\n\t        =
//Tracevv((stderr, \"inflate:         end of block\\n\"));\n\t        =
state.mode =3D TYPE;\n\t        break top;\n\t      }\n\t      else =
{\n\t        strm.msg =3D 'invalid literal/length code';\n\t        =
state.mode =3D BAD;\n\t        break top;\n\t      }\n\n\t      break; =
// need to emulate goto via \"continue\"\n\t    }\n\t  } while (_in &lt; =
last &amp;&amp; _out &lt; end);\n\n\t  /* return unused bytes (on entry, =
bits &lt; 8, so in won't go too far back) */\n\t  len =3D bits &gt;&gt; =
3;\n\t  _in -=3D len;\n\t  bits -=3D len &lt;&lt; 3;\n\t  hold &amp;=3D =
(1 &lt;&lt; bits) - 1;\n\n\t  /* update state and return */\n\t  =
strm.next_in =3D _in;\n\t  strm.next_out =3D _out;\n\t  strm.avail_in =
=3D (_in &lt; last ? 5 + (last - _in) : 5 - (_in - last));\n\t  =
strm.avail_out =3D (_out &lt; end ? 257 + (end - _out) : 257 - (_out - =
end));\n\t  state.hold =3D hold;\n\t  state.bits =3D bits;\n\t  =
return;\n\t};\n\n\n/***/ },\n/* 58 */\n/***/ function(module, exports, =
__webpack_require__) {\n\n\t'use strict';\n\n\n\tvar utils =3D =
__webpack_require__(52);\n\n\tvar MAXBITS =3D 15;\n\tvar ENOUGH_LENS =3D =
852;\n\tvar ENOUGH_DISTS =3D 592;\n\t//var ENOUGH =3D =
(ENOUGH_LENS+ENOUGH_DISTS);\n\n\tvar CODES =3D 0;\n\tvar LENS =3D =
1;\n\tvar DISTS =3D 2;\n\n\tvar lbase =3D [ /* Length codes 257..285 =
base */\n\t  3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, =
31,\n\t  35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, =
0\n\t];\n\n\tvar lext =3D [ /* Length codes 257..285 extra */\n\t  16, =
16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,\n\t  19, 19, =
19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78\n\t];\n\n\tvar dbase =
=3D [ /* Distance codes 0..29 base */\n\t  1, 2, 3, 4, 5, 7, 9, 13, 17, =
25, 33, 49, 65, 97, 129, 193,\n\t  257, 385, 513, 769, 1025, 1537, 2049, =
3073, 4097, 6145,\n\t  8193, 12289, 16385, 24577, 0, 0\n\t];\n\n\tvar =
dext =3D [ /* Distance codes 0..29 extra */\n\t  16, 16, 16, 16, 17, 17, =
18, 18, 19, 19, 20, 20, 21, 21, 22, 22,\n\t  23, 23, 24, 24, 25, 25, 26, =
26, 27, 27,\n\t  28, 28, 29, 29, 64, 64\n\t];\n\n\tmodule.exports =3D =
function inflate_table(type, lens, lens_index, codes, table, =
table_index, work, opts)\n\t{\n\t  var bits =3D opts.bits;\n\t      =
//here =3D opts.here; /* table entry for duplication */\n\n\t  var len =
=3D 0;               /* a code's length in bits */\n\t  var sym =3D 0;   =
            /* index of code symbols */\n\t  var min =3D 0, max =3D 0;   =
       /* minimum and maximum code lengths */\n\t  var root =3D 0;       =
       /* number of index bits for root table */\n\t  var curr =3D 0;    =
          /* number of index bits for current table */\n\t  var drop =3D =
0;              /* code bits to drop for sub-table */\n\t  var left =3D =
0;                   /* number of prefix codes available */\n\t  var =
used =3D 0;              /* code entries in table used */\n\t  var huff =
=3D 0;              /* Huffman code */\n\t  var incr;              /* =
for incrementing code, index */\n\t  var fill;              /* index for =
replicating entries */\n\t  var low;               /* low bits for =
current root entry */\n\t  var mask;              /* mask for low root =
bits */\n\t  var next;             /* next available space in table =
*/\n\t  var base =3D null;     /* base value table to use */\n\t  var =
base_index =3D 0;\n\t//  var shoextra;    /* extra bits table to use =
*/\n\t  var end;                    /* use base and extra for symbol =
&gt; end */\n\t  var count =3D new utils.Buf16(MAXBITS+1); =
//[MAXBITS+1];    /* number of codes of each length */\n\t  var offs =3D =
new utils.Buf16(MAXBITS+1); //[MAXBITS+1];     /* offsets in table for =
each length */\n\t  var extra =3D null;\n\t  var extra_index =3D =
0;\n\n\t  var here_bits, here_op, here_val;\n\n\t  /*\n\t   Process a =
set of code lengths to create a canonical Huffman code.  The\n\t   code =
lengths are lens[0..codes-1].  Each length corresponds to the\n\t   =
symbols 0..codes-1.  The Huffman code is generated by first sorting =
the\n\t   symbols by length from short to long, and retaining the symbol =
order\n\t   for codes with equal lengths.  Then the code starts with all =
zero bits\n\t   for the first code of the shortest length, and the codes =
are integer\n\t   increments for the same length, and zeros are appended =
as the length\n\t   increases.  For the deflate format, these bits are =
stored backwards\n\t   from their more natural integer increment =
ordering, and so when the\n\t   decoding tables are built in the large =
loop below, the integer codes\n\t   are incremented backwards.\n\n\t   =
This routine assumes, but does not check, that all of the entries in\n\t =
  lens[] are in the range 0..MAXBITS.  The caller must assure this.\n\t  =
 1..MAXBITS is interpreted as that code length.  zero means that =
that\n\t   symbol does not occur in this code.\n\n\t   The codes are =
sorted by computing a count of codes for each length,\n\t   creating =
from that a table of starting indices for each length in the\n\t   =
sorted table, and then entering the symbols in order in the sorted\n\t   =
table.  The sorted table is work[], with that space being provided =
by\n\t   the caller.\n\n\t   The length counts are used for other =
purposes as well, i.e. finding\n\t   the minimum and maximum length =
codes, determining if there are any\n\t   codes at all, checking for a =
valid set of lengths, and looking ahead\n\t   at length counts to =
determine sub-table sizes when building the\n\t   decoding tables.\n\t   =
*/\n\n\t  /* accumulate lengths for codes (assumes lens[] all in =
0..MAXBITS) */\n\t  for (len =3D 0; len &lt;=3D MAXBITS; len++) {\n\t    =
count[len] =3D 0;\n\t  }\n\t  for (sym =3D 0; sym &lt; codes; sym++) =
{\n\t    count[lens[lens_index + sym]]++;\n\t  }\n\n\t  /* bound code =
lengths, force root to be within code lengths */\n\t  root =3D bits;\n\t =
 for (max =3D MAXBITS; max &gt;=3D 1; max--) {\n\t    if (count[max] =
!=3D=3D 0) { break; }\n\t  }\n\t  if (root &gt; max) {\n\t    root =3D =
max;\n\t  }\n\t  if (max =3D=3D=3D 0) {                     /* no =
symbols to code at all */\n\t    //table.op[opts.table_index] =3D 64;  =
//here.op =3D (var char)64;    /* invalid code marker */\n\t    =
//table.bits[opts.table_index] =3D 1;   //here.bits =3D (var char)1;\n\t =
   //table.val[opts.table_index++] =3D 0;   //here.val =3D (var =
short)0;\n\t    table[table_index++] =3D (1 &lt;&lt; 24) | (64 &lt;&lt; =
16) | 0;\n\n\n\t    //table.op[opts.table_index] =3D 64;\n\t    =
//table.bits[opts.table_index] =3D 1;\n\t    =
//table.val[opts.table_index++] =3D 0;\n\t    table[table_index++] =3D =
(1 &lt;&lt; 24) | (64 &lt;&lt; 16) | 0;\n\n\t    opts.bits =3D 1;\n\t    =
return 0;     /* no symbols, but wait for decoding to report error =
*/\n\t  }\n\t  for (min =3D 1; min &lt; max; min++) {\n\t    if =
(count[min] !=3D=3D 0) { break; }\n\t  }\n\t  if (root &lt; min) {\n\t   =
 root =3D min;\n\t  }\n\n\t  /* check for an over-subscribed or =
incomplete set of lengths */\n\t  left =3D 1;\n\t  for (len =3D 1; len =
&lt;=3D MAXBITS; len++) {\n\t    left &lt;&lt;=3D 1;\n\t    left -=3D =
count[len];\n\t    if (left &lt; 0) {\n\t      return -1;\n\t    }       =
 /* over-subscribed */\n\t  }\n\t  if (left &gt; 0 &amp;&amp; (type =
=3D=3D=3D CODES || max !=3D=3D 1)) {\n\t    return -1;                   =
   /* incomplete set */\n\t  }\n\n\t  /* generate offsets into symbol =
table for each length for sorting */\n\t  offs[1] =3D 0;\n\t  for (len =
=3D 1; len &lt; MAXBITS; len++) {\n\t    offs[len + 1] =3D offs[len] + =
count[len];\n\t  }\n\n\t  /* sort symbols by length, by symbol order =
within each length */\n\t  for (sym =3D 0; sym &lt; codes; sym++) {\n\t  =
  if (lens[lens_index + sym] !=3D=3D 0) {\n\t      =
work[offs[lens[lens_index + sym]]++] =3D sym;\n\t    }\n\t  }\n\n\t  =
/*\n\t   Create and fill in decoding tables.  In this loop, the table =
being\n\t   filled is at next and has curr index bits.  The code being =
used is huff\n\t   with length len.  That code is converted to an index =
by dropping drop\n\t   bits off of the bottom.  For codes where len is =
less than drop + curr,\n\t   those top drop + curr - len bits are =
incremented through all values to\n\t   fill the table with replicated =
entries.\n\n\t   root is the number of index bits for the root table.  =
When len exceeds\n\t   root, sub-tables are created pointed to by the =
root entry with an index\n\t   of the low root bits of huff.  This is =
saved in low to check for when a\n\t   new sub-table should be started.  =
drop is zero when the root table is\n\t   being filled, and drop is root =
when sub-tables are being filled.\n\n\t   When a new sub-table is =
needed, it is necessary to look ahead in the\n\t   code lengths to =
determine what size sub-table is needed.  The length\n\t   counts are =
used for this, and so count[] is decremented as codes are\n\t   entered =
in the tables.\n\n\t   used keeps track of how many table entries have =
been allocated from the\n\t   provided *table space.  It is checked for =
LENS and DIST tables against\n\t   the constants ENOUGH_LENS and =
ENOUGH_DISTS to guard against changes in\n\t   the initial root table =
size constants.  See the comments in inftrees.h\n\t   for more =
information.\n\n\t   sym increments through all symbols, and the loop =
terminates when\n\t   all codes of length max, i.e. all codes, have been =
processed.  This\n\t   routine permits incomplete codes, so another loop =
after this one fills\n\t   in the rest of the decoding tables with =
invalid code markers.\n\t   */\n\n\t  /* set up for code type */\n\t  // =
poor man optimization - use if-else instead of switch,\n\t  // to avoid =
deopts in old v8\n\t  if (type =3D=3D=3D CODES) {\n\t    base =3D extra =
=3D work;    /* dummy value--not used */\n\t    end =3D 19;\n\n\t  } =
else if (type =3D=3D=3D LENS) {\n\t    base =3D lbase;\n\t    base_index =
-=3D 257;\n\t    extra =3D lext;\n\t    extra_index -=3D 257;\n\t    end =
=3D 256;\n\n\t  } else {                    /* DISTS */\n\t    base =3D =
dbase;\n\t    extra =3D dext;\n\t    end =3D -1;\n\t  }\n\n\t  /* =
initialize opts for loop */\n\t  huff =3D 0;                   /* =
starting code */\n\t  sym =3D 0;                    /* starting code =
symbol */\n\t  len =3D min;                  /* starting code length =
*/\n\t  next =3D table_index;              /* current table to fill in =
*/\n\t  curr =3D root;                /* current table index bits */\n\t =
 drop =3D 0;                   /* current bits to drop from code for =
index */\n\t  low =3D -1;                   /* trigger new sub-table =
when len &gt; root */\n\t  used =3D 1 &lt;&lt; root;          /* use =
root table entries */\n\t  mask =3D used - 1;            /* mask for =
comparing low */\n\n\t  /* check available table space */\n\t  if ((type =
=3D=3D=3D LENS &amp;&amp; used &gt; ENOUGH_LENS) ||\n\t    (type =
=3D=3D=3D DISTS &amp;&amp; used &gt; ENOUGH_DISTS)) {\n\t    return =
1;\n\t  }\n\n\t  var i=3D0;\n\t  /* process all codes and make table =
entries */\n\t  for (;;) {\n\t    i++;\n\t    /* create table entry =
*/\n\t    here_bits =3D len - drop;\n\t    if (work[sym] &lt; end) {\n\t =
     here_op =3D 0;\n\t      here_val =3D work[sym];\n\t    }\n\t    =
else if (work[sym] &gt; end) {\n\t      here_op =3D extra[extra_index + =
work[sym]];\n\t      here_val =3D base[base_index + work[sym]];\n\t    =
}\n\t    else {\n\t      here_op =3D 32 + 64;         /* end of block =
*/\n\t      here_val =3D 0;\n\t    }\n\n\t    /* replicate for those =
indices with low len bits equal to huff */\n\t    incr =3D 1 &lt;&lt; =
(len - drop);\n\t    fill =3D 1 &lt;&lt; curr;\n\t    min =3D fill;      =
           /* save offset to next table */\n\t    do {\n\t      fill =
-=3D incr;\n\t      table[next + (huff &gt;&gt; drop) + fill] =3D =
(here_bits &lt;&lt; 24) | (here_op &lt;&lt; 16) | here_val |0;\n\t    } =
while (fill !=3D=3D 0);\n\n\t    /* backwards increment the len-bit code =
huff */\n\t    incr =3D 1 &lt;&lt; (len - 1);\n\t    while (huff &amp; =
incr) {\n\t      incr &gt;&gt;=3D 1;\n\t    }\n\t    if (incr !=3D=3D 0) =
{\n\t      huff &amp;=3D incr - 1;\n\t      huff +=3D incr;\n\t    } =
else {\n\t      huff =3D 0;\n\t    }\n\n\t    /* go to next symbol, =
update count, len */\n\t    sym++;\n\t    if (--count[len] =3D=3D=3D 0) =
{\n\t      if (len =3D=3D=3D max) { break; }\n\t      len =3D =
lens[lens_index + work[sym]];\n\t    }\n\n\t    /* create new sub-table =
if needed */\n\t    if (len &gt; root &amp;&amp; (huff &amp; mask) =
!=3D=3D low) {\n\t      /* if first time, transition to sub-tables =
*/\n\t      if (drop =3D=3D=3D 0) {\n\t        drop =3D root;\n\t      =
}\n\n\t      /* increment past last table */\n\t      next +=3D min;     =
       /* here min is 1 &lt;&lt; curr */\n\n\t      /* determine length =
of next table */\n\t      curr =3D len - drop;\n\t      left =3D 1 =
&lt;&lt; curr;\n\t      while (curr + drop &lt; max) {\n\t        left =
-=3D count[curr + drop];\n\t        if (left &lt;=3D 0) { break; }\n\t   =
     curr++;\n\t        left &lt;&lt;=3D 1;\n\t      }\n\n\t      /* =
check for enough space */\n\t      used +=3D 1 &lt;&lt; curr;\n\t      =
if ((type =3D=3D=3D LENS &amp;&amp; used &gt; ENOUGH_LENS) ||\n\t        =
(type =3D=3D=3D DISTS &amp;&amp; used &gt; ENOUGH_DISTS)) {\n\t        =
return 1;\n\t      }\n\n\t      /* point entry in root table to =
sub-table */\n\t      low =3D huff &amp; mask;\n\t      /*table.op[low] =
=3D curr;\n\t      table.bits[low] =3D root;\n\t      table.val[low] =3D =
next - opts.table_index;*/\n\t      table[low] =3D (root &lt;&lt; 24) | =
(curr &lt;&lt; 16) | (next - table_index) |0;\n\t    }\n\t  }\n\n\t  /* =
fill in remaining table entry if code is incomplete (guaranteed to =
have\n\t   at most one remaining entry, since if the code is incomplete, =
the\n\t   maximum code length that was allowed to get this far is one =
bit) */\n\t  if (huff !=3D=3D 0) {\n\t    //table.op[next + huff] =3D =
64;            /* invalid code marker */\n\t    //table.bits[next + =
huff] =3D len - drop;\n\t    //table.val[next + huff] =3D 0;\n\t    =
table[next + huff] =3D ((len - drop) &lt;&lt; 24) | (64 &lt;&lt; 16) =
|0;\n\t  }\n\n\t  /* set return parameters */\n\t  //opts.table_index =
+=3D used;\n\t  opts.bits =3D root;\n\t  return 0;\n\t};\n\n\n/***/ =
},\n/* 59 */\n/***/ function(module, exports) {\n\n\tmodule.exports =3D =
{\n\n\t  /* Allowed flush values; see deflate() and inflate() below for =
details */\n\t  Z_NO_FLUSH:         0,\n\t  Z_PARTIAL_FLUSH:    1,\n\t  =
Z_SYNC_FLUSH:       2,\n\t  Z_FULL_FLUSH:       3,\n\t  Z_FINISH:        =
   4,\n\t  Z_BLOCK:            5,\n\t  Z_TREES:            6,\n\n\t  /* =
Return codes for the compression/decompression functions. Negative =
values\n\t  * are errors, positive values are used for special but =
normal events.\n\t  */\n\t  Z_OK:               0,\n\t  Z_STREAM_END:    =
   1,\n\t  Z_NEED_DICT:        2,\n\t  Z_ERRNO:           -1,\n\t  =
Z_STREAM_ERROR:    -2,\n\t  Z_DATA_ERROR:      -3,\n\t  //Z_MEM_ERROR:   =
  -4,\n\t  Z_BUF_ERROR:       -5,\n\t  //Z_VERSION_ERROR: -6,\n\n\t  /* =
compression levels */\n\t  Z_NO_COMPRESSION:         0,\n\t  =
Z_BEST_SPEED:             1,\n\t  Z_BEST_COMPRESSION:       9,\n\t  =
Z_DEFAULT_COMPRESSION:   -1,\n\n\n\t  Z_FILTERED:               1,\n\t  =
Z_HUFFMAN_ONLY:           2,\n\t  Z_RLE:                    3,\n\t  =
Z_FIXED:                  4,\n\t  Z_DEFAULT_STRATEGY:       0,\n\n\t  /* =
Possible values of the data_type field (though see inflate()) */\n\t  =
Z_BINARY:                 0,\n\t  Z_TEXT:                   1,\n\t  =
//Z_ASCII:                1, // =3D Z_TEXT (deprecated)\n\t  Z_UNKNOWN:  =
              2,\n\n\t  /* The deflate compression method */\n\t  =
Z_DEFLATED:               8\n\t  //Z_NULL:                 null // Use =
-1 or null inline, depending on var type\n\t};\n\n\n/***/ },\n/* 60 =
*/\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* =
WEBPACK VAR INJECTION */(function(global, process) {// Copyright Joyent, =
Inc. and other Node contributors.\n\t//\n\t// Permission is hereby =
granted, free of charge, to any person obtaining a\n\t// copy of this =
software and associated documentation files (the\n\t// \"Software\"), to =
deal in the Software without restriction, including\n\t// without =
limitation the rights to use, copy, modify, merge, publish,\n\t// =
distribute, sublicense, and/or sell copies of the Software, and to =
permit\n\t// persons to whom the Software is furnished to do so, subject =
to the\n\t// following conditions:\n\t//\n\t// The above copyright =
notice and this permission notice shall be included\n\t// in all copies =
or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS =
PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR =
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// =
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. =
IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR =
ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF =
CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION =
WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE =
SOFTWARE.\n\n\tvar formatRegExp =3D /%[sdj%]/g;\n\texports.format =3D =
function(f) {\n\t  if (!isString(f)) {\n\t    var objects =3D [];\n\t    =
for (var i =3D 0; i &lt; arguments.length; i++) {\n\t      =
objects.push(inspect(arguments[i]));\n\t    }\n\t    return =
objects.join(' ');\n\t  }\n\n\t  var i =3D 1;\n\t  var args =3D =
arguments;\n\t  var len =3D args.length;\n\t  var str =3D =
String(f).replace(formatRegExp, function(x) {\n\t    if (x =3D=3D=3D =
'%%') return '%';\n\t    if (i &gt;=3D len) return x;\n\t    switch (x) =
{\n\t      case '%s': return String(args[i++]);\n\t      case '%d': =
return Number(args[i++]);\n\t      case '%j':\n\t        try {\n\t       =
   return JSON.stringify(args[i++]);\n\t        } catch (_) {\n\t        =
  return '[Circular]';\n\t        }\n\t      default:\n\t        return =
x;\n\t    }\n\t  });\n\t  for (var x =3D args[i]; i &lt; len; x =3D =
args[++i]) {\n\t    if (isNull(x) || !isObject(x)) {\n\t      str +=3D ' =
' + x;\n\t    } else {\n\t      str +=3D ' ' + inspect(x);\n\t    }\n\t  =
}\n\t  return str;\n\t};\n\n\n\t// Mark that a method should not be =
used.\n\t// Returns a modified function which warns once by =
default.\n\t// If --no-deprecation is set, then it is a =
no-op.\n\texports.deprecate =3D function(fn, msg) {\n\t  // Allow for =
deprecating things in the process of starting up.\n\t  if =
(isUndefined(global.process)) {\n\t    return function() {\n\t      =
return exports.deprecate(fn, msg).apply(this, arguments);\n\t    };\n\t  =
}\n\n\t  if (process.noDeprecation =3D=3D=3D true) {\n\t    return =
fn;\n\t  }\n\n\t  var warned =3D false;\n\t  function deprecated() {\n\t =
   if (!warned) {\n\t      if (process.throwDeprecation) {\n\t        =
throw new Error(msg);\n\t      } else if (process.traceDeprecation) =
{\n\t        console.trace(msg);\n\t      } else {\n\t        =
console.error(msg);\n\t      }\n\t      warned =3D true;\n\t    }\n\t    =
return fn.apply(this, arguments);\n\t  }\n\n\t  return =
deprecated;\n\t};\n\n\n\tvar debugs =3D {};\n\tvar =
debugEnviron;\n\texports.debuglog =3D function(set) {\n\t  if =
(isUndefined(debugEnviron))\n\t    debugEnviron =3D =
process.env.NODE_DEBUG || '';\n\t  set =3D set.toUpperCase();\n\t  if =
(!debugs[set]) {\n\t    if (new RegExp('\\\\b' + set + '\\\\b', =
'i').test(debugEnviron)) {\n\t      var pid =3D process.pid;\n\t      =
debugs[set] =3D function() {\n\t        var msg =3D =
exports.format.apply(exports, arguments);\n\t        console.error('%s =
%d: %s', set, pid, msg);\n\t      };\n\t    } else {\n\t      =
debugs[set] =3D function() {};\n\t    }\n\t  }\n\t  return =
debugs[set];\n\t};\n\n\n\t/**\n\t * Echos the value of a value. Trys to =
print the value out\n\t * in the best way possible given the different =
types.\n\t *\n\t * @param {Object} obj The object to print out.\n\t * =
@param {Object} opts Optional options object that alters the output.\n\t =
*/\n\t/* legacy: obj, showHidden, depth, colors*/\n\tfunction =
inspect(obj, opts) {\n\t  // default options\n\t  var ctx =3D {\n\t    =
seen: [],\n\t    stylize: stylizeNoColor\n\t  };\n\t  // legacy...\n\t  =
if (arguments.length &gt;=3D 3) ctx.depth =3D arguments[2];\n\t  if =
(arguments.length &gt;=3D 4) ctx.colors =3D arguments[3];\n\t  if =
(isBoolean(opts)) {\n\t    // legacy...\n\t    ctx.showHidden =3D =
opts;\n\t  } else if (opts) {\n\t    // got an \"options\" object\n\t    =
exports._extend(ctx, opts);\n\t  }\n\t  // set default options\n\t  if =
(isUndefined(ctx.showHidden)) ctx.showHidden =3D false;\n\t  if =
(isUndefined(ctx.depth)) ctx.depth =3D 2;\n\t  if =
(isUndefined(ctx.colors)) ctx.colors =3D false;\n\t  if =
(isUndefined(ctx.customInspect)) ctx.customInspect =3D true;\n\t  if =
(ctx.colors) ctx.stylize =3D stylizeWithColor;\n\t  return =
formatValue(ctx, obj, ctx.depth);\n\t}\n\texports.inspect =3D =
inspect;\n\n\n\t// =
http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\n\tinspect.colors =
=3D {\n\t  'bold' : [1, 22],\n\t  'italic' : [3, 23],\n\t  'underline' : =
[4, 24],\n\t  'inverse' : [7, 27],\n\t  'white' : [37, 39],\n\t  'grey' =
: [90, 39],\n\t  'black' : [30, 39],\n\t  'blue' : [34, 39],\n\t  'cyan' =
: [36, 39],\n\t  'green' : [32, 39],\n\t  'magenta' : [35, 39],\n\t  =
'red' : [31, 39],\n\t  'yellow' : [33, 39]\n\t};\n\n\t// Don't use =
'blue' not visible on cmd.exe\n\tinspect.styles =3D {\n\t  'special': =
'cyan',\n\t  'number': 'yellow',\n\t  'boolean': 'yellow',\n\t  =
'undefined': 'grey',\n\t  'null': 'bold',\n\t  'string': 'green',\n\t  =
'date': 'magenta',\n\t  // \"name\": intentionally not styling\n\t  =
'regexp': 'red'\n\t};\n\n\n\tfunction stylizeWithColor(str, styleType) =
{\n\t  var style =3D inspect.styles[styleType];\n\n\t  if (style) {\n\t  =
  return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n\t         =
  '\\u001b[' + inspect.colors[style][1] + 'm';\n\t  } else {\n\t    =
return str;\n\t  }\n\t}\n\n\n\tfunction stylizeNoColor(str, styleType) =
{\n\t  return str;\n\t}\n\n\n\tfunction arrayToHash(array) {\n\t  var =
hash =3D {};\n\n\t  array.forEach(function(val, idx) {\n\t    hash[val] =
=3D true;\n\t  });\n\n\t  return hash;\n\t}\n\n\n\tfunction =
formatValue(ctx, value, recurseTimes) {\n\t  // Provide a hook for =
user-specified inspect functions.\n\t  // Check that value is an object =
with an inspect function on it\n\t  if (ctx.customInspect &amp;&amp;\n\t =
     value &amp;&amp;\n\t      isFunction(value.inspect) &amp;&amp;\n\t  =
    // Filter out the util module, it's inspect function is special\n\t  =
    value.inspect !=3D=3D exports.inspect &amp;&amp;\n\t      // Also =
filter out any prototype objects using the circular check.\n\t      =
!(value.constructor &amp;&amp; value.constructor.prototype =3D=3D=3D =
value)) {\n\t    var ret =3D value.inspect(recurseTimes, ctx);\n\t    if =
(!isString(ret)) {\n\t      ret =3D formatValue(ctx, ret, =
recurseTimes);\n\t    }\n\t    return ret;\n\t  }\n\n\t  // Primitive =
types cannot have properties\n\t  var primitive =3D formatPrimitive(ctx, =
value);\n\t  if (primitive) {\n\t    return primitive;\n\t  }\n\n\t  // =
Look up the keys of the object.\n\t  var keys =3D =
Object.keys(value);\n\t  var visibleKeys =3D arrayToHash(keys);\n\n\t  =
if (ctx.showHidden) {\n\t    keys =3D =
Object.getOwnPropertyNames(value);\n\t  }\n\n\t  // IE doesn't make =
error fields non-enumerable\n\t  // =
http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=3Dvs.94).aspx\n\t  =
if (isError(value)\n\t      &amp;&amp; (keys.indexOf('message') &gt;=3D =
0 || keys.indexOf('description') &gt;=3D 0)) {\n\t    return =
formatError(value);\n\t  }\n\n\t  // Some type of object without =
properties can be shortcutted.\n\t  if (keys.length =3D=3D=3D 0) {\n\t   =
 if (isFunction(value)) {\n\t      var name =3D value.name ? ': ' + =
value.name : '';\n\t      return ctx.stylize('[Function' + name + ']', =
'special');\n\t    }\n\t    if (isRegExp(value)) {\n\t      return =
ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n\t    =
}\n\t    if (isDate(value)) {\n\t      return =
ctx.stylize(Date.prototype.toString.call(value), 'date');\n\t    }\n\t   =
 if (isError(value)) {\n\t      return formatError(value);\n\t    }\n\t  =
}\n\n\t  var base =3D '', array =3D false, braces =3D ['{', '}'];\n\n\t  =
// Make Array say that they are Array\n\t  if (isArray(value)) {\n\t    =
array =3D true;\n\t    braces =3D ['[', ']'];\n\t  }\n\n\t  // Make =
functions say that they are functions\n\t  if (isFunction(value)) {\n\t  =
  var n =3D value.name ? ': ' + value.name : '';\n\t    base =3D ' =
[Function' + n + ']';\n\t  }\n\n\t  // Make RegExps say that they are =
RegExps\n\t  if (isRegExp(value)) {\n\t    base =3D ' ' + =
RegExp.prototype.toString.call(value);\n\t  }\n\n\t  // Make dates with =
properties first say the date\n\t  if (isDate(value)) {\n\t    base =3D =
' ' + Date.prototype.toUTCString.call(value);\n\t  }\n\n\t  // Make =
error with message first say the error\n\t  if (isError(value)) {\n\t    =
base =3D ' ' + formatError(value);\n\t  }\n\n\t  if (keys.length =
=3D=3D=3D 0 &amp;&amp; (!array || value.length =3D=3D 0)) {\n\t    =
return braces[0] + base + braces[1];\n\t  }\n\n\t  if (recurseTimes &lt; =
0) {\n\t    if (isRegExp(value)) {\n\t      return =
ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n\t    } =
else {\n\t      return ctx.stylize('[Object]', 'special');\n\t    }\n\t  =
}\n\n\t  ctx.seen.push(value);\n\n\t  var output;\n\t  if (array) {\n\t  =
  output =3D formatArray(ctx, value, recurseTimes, visibleKeys, =
keys);\n\t  } else {\n\t    output =3D keys.map(function(key) {\n\t      =
return formatProperty(ctx, value, recurseTimes, visibleKeys, key, =
array);\n\t    });\n\t  }\n\n\t  ctx.seen.pop();\n\n\t  return =
reduceToSingleString(output, base, braces);\n\t}\n\n\n\tfunction =
formatPrimitive(ctx, value) {\n\t  if (isUndefined(value))\n\t    return =
ctx.stylize('undefined', 'undefined');\n\t  if (isString(value)) {\n\t   =
 var simple =3D '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, =
'')\n\t                                             .replace(/'/g, =
\"\\\\'\")\n\t                                             =
.replace(/\\\\\"/g, '\"') + '\\'';\n\t    return ctx.stylize(simple, =
'string');\n\t  }\n\t  if (isNumber(value))\n\t    return ctx.stylize('' =
+ value, 'number');\n\t  if (isBoolean(value))\n\t    return =
ctx.stylize('' + value, 'boolean');\n\t  // For some reason typeof null =
is \"object\", so special case here.\n\t  if (isNull(value))\n\t    =
return ctx.stylize('null', 'null');\n\t}\n\n\n\tfunction =
formatError(value) {\n\t  return '[' + =
Error.prototype.toString.call(value) + ']';\n\t}\n\n\n\tfunction =
formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n\t  var =
output =3D [];\n\t  for (var i =3D 0, l =3D value.length; i &lt; l; ++i) =
{\n\t    if (hasOwnProperty(value, String(i))) {\n\t      =
output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n\t    =
      String(i), true));\n\t    } else {\n\t      output.push('');\n\t   =
 }\n\t  }\n\t  keys.forEach(function(key) {\n\t    if =
(!key.match(/^\\d+$/)) {\n\t      output.push(formatProperty(ctx, value, =
recurseTimes, visibleKeys,\n\t          key, true));\n\t    }\n\t  =
});\n\t  return output;\n\t}\n\n\n\tfunction formatProperty(ctx, value, =
recurseTimes, visibleKeys, key, array) {\n\t  var name, str, desc;\n\t  =
desc =3D Object.getOwnPropertyDescriptor(value, key) || { value: =
value[key] };\n\t  if (desc.get) {\n\t    if (desc.set) {\n\t      str =
=3D ctx.stylize('[Getter/Setter]', 'special');\n\t    } else {\n\t      =
str =3D ctx.stylize('[Getter]', 'special');\n\t    }\n\t  } else {\n\t   =
 if (desc.set) {\n\t      str =3D ctx.stylize('[Setter]', =
'special');\n\t    }\n\t  }\n\t  if (!hasOwnProperty(visibleKeys, key)) =
{\n\t    name =3D '[' + key + ']';\n\t  }\n\t  if (!str) {\n\t    if =
(ctx.seen.indexOf(desc.value) &lt; 0) {\n\t      if =
(isNull(recurseTimes)) {\n\t        str =3D formatValue(ctx, desc.value, =
null);\n\t      } else {\n\t        str =3D formatValue(ctx, desc.value, =
recurseTimes - 1);\n\t      }\n\t      if (str.indexOf('\\n') &gt; -1) =
{\n\t        if (array) {\n\t          str =3D =
str.split('\\n').map(function(line) {\n\t            return '  ' + =
line;\n\t          }).join('\\n').substr(2);\n\t        } else {\n\t     =
     str =3D '\\n' + str.split('\\n').map(function(line) {\n\t           =
 return '   ' + line;\n\t          }).join('\\n');\n\t        }\n\t      =
}\n\t    } else {\n\t      str =3D ctx.stylize('[Circular]', =
'special');\n\t    }\n\t  }\n\t  if (isUndefined(name)) {\n\t    if =
(array &amp;&amp; key.match(/^\\d+$/)) {\n\t      return str;\n\t    =
}\n\t    name =3D JSON.stringify('' + key);\n\t    if =
(name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n\t      name =3D =
name.substr(1, name.length - 2);\n\t      name =3D ctx.stylize(name, =
'name');\n\t    } else {\n\t      name =3D name.replace(/'/g, =
\"\\\\'\")\n\t                 .replace(/\\\\\"/g, '\"')\n\t             =
    .replace(/(^\"|\"$)/g, \"'\");\n\t      name =3D ctx.stylize(name, =
'string');\n\t    }\n\t  }\n\n\t  return name + ': ' + =
str;\n\t}\n\n\n\tfunction reduceToSingleString(output, base, braces) =
{\n\t  var numLinesEst =3D 0;\n\t  var length =3D =
output.reduce(function(prev, cur) {\n\t    numLinesEst++;\n\t    if =
(cur.indexOf('\\n') &gt;=3D 0) numLinesEst++;\n\t    return prev + =
cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n\t  }, 0);\n\n\t  if =
(length &gt; 60) {\n\t    return braces[0] +\n\t           (base =
=3D=3D=3D '' ? '' : base + '\\n ') +\n\t           ' ' +\n\t           =
output.join(',\\n  ') +\n\t           ' ' +\n\t           braces[1];\n\t =
 }\n\n\t  return braces[0] + base + ' ' + output.join(', ') + ' ' + =
braces[1];\n\t}\n\n\n\t// NOTE: These type checking functions =
intentionally don't use `instanceof`\n\t// because it is fragile and can =
be easily faked with `Object.create()`.\n\tfunction isArray(ar) {\n\t  =
return Array.isArray(ar);\n\t}\n\texports.isArray =3D =
isArray;\n\n\tfunction isBoolean(arg) {\n\t  return typeof arg =3D=3D=3D =
'boolean';\n\t}\n\texports.isBoolean =3D isBoolean;\n\n\tfunction =
isNull(arg) {\n\t  return arg =3D=3D=3D null;\n\t}\n\texports.isNull =3D =
isNull;\n\n\tfunction isNullOrUndefined(arg) {\n\t  return arg =3D=3D =
null;\n\t}\n\texports.isNullOrUndefined =3D =
isNullOrUndefined;\n\n\tfunction isNumber(arg) {\n\t  return typeof arg =
=3D=3D=3D 'number';\n\t}\n\texports.isNumber =3D isNumber;\n\n\tfunction =
isString(arg) {\n\t  return typeof arg =3D=3D=3D =
'string';\n\t}\n\texports.isString =3D isString;\n\n\tfunction =
isSymbol(arg) {\n\t  return typeof arg =3D=3D=3D =
'symbol';\n\t}\n\texports.isSymbol =3D isSymbol;\n\n\tfunction =
isUndefined(arg) {\n\t  return arg =3D=3D=3D void =
0;\n\t}\n\texports.isUndefined =3D isUndefined;\n\n\tfunction =
isRegExp(re) {\n\t  return isObject(re) &amp;&amp; objectToString(re) =
=3D=3D=3D '[object RegExp]';\n\t}\n\texports.isRegExp =3D =
isRegExp;\n\n\tfunction isObject(arg) {\n\t  return typeof arg =3D=3D=3D =
'object' &amp;&amp; arg !=3D=3D null;\n\t}\n\texports.isObject =3D =
isObject;\n\n\tfunction isDate(d) {\n\t  return isObject(d) &amp;&amp; =
objectToString(d) =3D=3D=3D '[object Date]';\n\t}\n\texports.isDate =3D =
isDate;\n\n\tfunction isError(e) {\n\t  return isObject(e) =
&amp;&amp;\n\t      (objectToString(e) =3D=3D=3D '[object Error]' || e =
instanceof Error);\n\t}\n\texports.isError =3D isError;\n\n\tfunction =
isFunction(arg) {\n\t  return typeof arg =3D=3D=3D =
'function';\n\t}\n\texports.isFunction =3D isFunction;\n\n\tfunction =
isPrimitive(arg) {\n\t  return arg =3D=3D=3D null ||\n\t         typeof =
arg =3D=3D=3D 'boolean' ||\n\t         typeof arg =3D=3D=3D 'number' =
||\n\t         typeof arg =3D=3D=3D 'string' ||\n\t         typeof arg =
=3D=3D=3D 'symbol' ||  // ES6 symbol\n\t         typeof arg =3D=3D=3D =
'undefined';\n\t}\n\texports.isPrimitive =3D =
isPrimitive;\n\n\texports.isBuffer =3D =
__webpack_require__(61);\n\n\tfunction objectToString(o) {\n\t  return =
Object.prototype.toString.call(o);\n\t}\n\n\n\tfunction pad(n) {\n\t  =
return n &lt; 10 ? '0' + n.toString(10) : =
n.toString(10);\n\t}\n\n\n\tvar months =3D ['Jan', 'Feb', 'Mar', 'Apr', =
'May', 'Jun', 'Jul', 'Aug', 'Sep',\n\t              'Oct', 'Nov', =
'Dec'];\n\n\t// 26 Feb 16:19:34\n\tfunction timestamp() {\n\t  var d =3D =
new Date();\n\t  var time =3D [pad(d.getHours()),\n\t              =
pad(d.getMinutes()),\n\t              =
pad(d.getSeconds())].join(':');\n\t  return [d.getDate(), =
months[d.getMonth()], time].join(' ');\n\t}\n\n\n\t// log is just a thin =
wrapper to console.log that prepends a timestamp\n\texports.log =3D =
function() {\n\t  console.log('%s - %s', timestamp(), =
exports.format.apply(exports, arguments));\n\t};\n\n\n\t/**\n\t * =
Inherit the prototype methods from one constructor into another.\n\t =
*\n\t * The Function.prototype.inherits from lang.js rewritten as a =
standalone\n\t * function (not on Function.prototype). NOTE: If this =
file is to be loaded\n\t * during bootstrapping this function needs to =
be rewritten using some native\n\t * functions as prototype setup using =
normal JavaScript does not work as\n\t * expected during bootstrapping =
(see mirror.js in r114903).\n\t *\n\t * @param {function} ctor =
Constructor function which needs to inherit the\n\t *     prototype.\n\t =
* @param {function} superCtor Constructor function to inherit prototype =
from.\n\t */\n\texports.inherits =3D =
__webpack_require__(62);\n\n\texports._extend =3D function(origin, add) =
{\n\t  // Don't do anything if add isn't an object\n\t  if (!add || =
!isObject(add)) return origin;\n\n\t  var keys =3D Object.keys(add);\n\t =
 var i =3D keys.length;\n\t  while (i--) {\n\t    origin[keys[i]] =3D =
add[keys[i]];\n\t  }\n\t  return origin;\n\t};\n\n\tfunction =
hasOwnProperty(obj, prop) {\n\t  return =
Object.prototype.hasOwnProperty.call(obj, prop);\n\t}\n\n\t/* WEBPACK =
VAR INJECTION */}.call(exports, (function() { return this; }()), =
__webpack_require__(30)))\n\n/***/ },\n/* 61 */\n/***/ function(module, =
exports) {\n\n\tmodule.exports =3D function isBuffer(arg) {\n\t  return =
arg &amp;&amp; typeof arg =3D=3D=3D 'object'\n\t    &amp;&amp; typeof =
arg.copy =3D=3D=3D 'function'\n\t    &amp;&amp; typeof arg.fill =
=3D=3D=3D 'function'\n\t    &amp;&amp; typeof arg.readUInt8 =3D=3D=3D =
'function';\n\t}\n\n/***/ },\n/* 62 */\n/***/ function(module, exports) =
{\n\n\tif (typeof Object.create =3D=3D=3D 'function') {\n\t  // =
implementation from standard node.js 'util' module\n\t  module.exports =
=3D function inherits(ctor, superCtor) {\n\t    ctor.super_ =3D =
superCtor\n\t    ctor.prototype =3D Object.create(superCtor.prototype, =
{\n\t      constructor: {\n\t        value: ctor,\n\t        enumerable: =
false,\n\t        writable: true,\n\t        configurable: true\n\t      =
}\n\t    });\n\t  };\n\t} else {\n\t  // old school shim for old =
browsers\n\t  module.exports =3D function inherits(ctor, superCtor) =
{\n\t    ctor.super_ =3D superCtor\n\t    var TempCtor =3D function () =
{}\n\t    TempCtor.prototype =3D superCtor.prototype\n\t    =
ctor.prototype =3D new TempCtor()\n\t    ctor.prototype.constructor =3D =
ctor\n\t  }\n\t}\n\n\n/***/ },\n/* 63 */\n/***/ function(module, =
exports, __webpack_require__) {\n\n\t// =
http://wiki.commonjs.org/wiki/Unit_Testing/1.0\n\t//\n\t// THIS IS NOT =
TESTED NOR LIKELY TO WORK OUTSIDE V8!\n\t//\n\t// Originally from =
narwhal.js (http://narwhaljs.org)\n\t// Copyright (c) 2009 Thomas =
Robinson &lt;280north.com&gt;\n\t//\n\t// Permission is hereby granted, =
free of charge, to any person obtaining a copy\n\t// of this software =
and associated documentation files (the 'Software'), to\n\t// deal in =
the Software without restriction, including without limitation the\n\t// =
rights to use, copy, modify, merge, publish, distribute, sublicense, =
and/or\n\t// sell copies of the Software, and to permit persons to whom =
the Software is\n\t// furnished to do so, subject to the following =
conditions:\n\t//\n\t// The above copyright notice and this permission =
notice shall be included in\n\t// all copies or substantial portions of =
the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT =
WARRANTY OF ANY KIND, EXPRESS OR\n\t// IMPLIED, INCLUDING BUT NOT =
LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t// FITNESS FOR A =
PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\t// =
AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN =
AN\n\t// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR =
IN CONNECTION\n\t// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN =
THE SOFTWARE.\n\n\t// when used in node, this will actually load the =
util module we depend on\n\t// versus loading the builtin util module as =
happens otherwise\n\t// this is a bug in node module loading as far as I =
am concerned\n\tvar util =3D __webpack_require__(60);\n\n\tvar pSlice =
=3D Array.prototype.slice;\n\tvar hasOwn =3D =
Object.prototype.hasOwnProperty;\n\n\t// 1. The assert module provides =
functions that throw\n\t// AssertionError's when particular conditions =
are not met. The\n\t// assert module must conform to the following =
interface.\n\n\tvar assert =3D module.exports =3D ok;\n\n\t// 2. The =
AssertionError is defined in assert.\n\t// new assert.AssertionError({ =
message: message,\n\t//                             actual: =
actual,\n\t//                             expected: expected =
})\n\n\tassert.AssertionError =3D function AssertionError(options) {\n\t =
 this.name =3D 'AssertionError';\n\t  this.actual =3D =
options.actual;\n\t  this.expected =3D options.expected;\n\t  =
this.operator =3D options.operator;\n\t  if (options.message) {\n\t    =
this.message =3D options.message;\n\t    this.generatedMessage =3D =
false;\n\t  } else {\n\t    this.message =3D getMessage(this);\n\t    =
this.generatedMessage =3D true;\n\t  }\n\t  var stackStartFunction =3D =
options.stackStartFunction || fail;\n\n\t  if (Error.captureStackTrace) =
{\n\t    Error.captureStackTrace(this, stackStartFunction);\n\t  }\n\t  =
else {\n\t    // non v8 browsers so we can have a stacktrace\n\t    var =
err =3D new Error();\n\t    if (err.stack) {\n\t      var out =3D =
err.stack;\n\n\t      // try to strip useless frames\n\t      var =
fn_name =3D stackStartFunction.name;\n\t      var idx =3D =
out.indexOf('\\n' + fn_name);\n\t      if (idx &gt;=3D 0) {\n\t        =
// once we have located the function frame\n\t        // we need to =
strip out everything before it (and its line)\n\t        var next_line =
=3D out.indexOf('\\n', idx + 1);\n\t        out =3D =
out.substring(next_line + 1);\n\t      }\n\n\t      this.stack =3D =
out;\n\t    }\n\t  }\n\t};\n\n\t// assert.AssertionError instanceof =
Error\n\tutil.inherits(assert.AssertionError, Error);\n\n\tfunction =
replacer(key, value) {\n\t  if (util.isUndefined(value)) {\n\t    return =
'' + value;\n\t  }\n\t  if (util.isNumber(value) &amp;&amp; =
!isFinite(value)) {\n\t    return value.toString();\n\t  }\n\t  if =
(util.isFunction(value) || util.isRegExp(value)) {\n\t    return =
value.toString();\n\t  }\n\t  return value;\n\t}\n\n\tfunction =
truncate(s, n) {\n\t  if (util.isString(s)) {\n\t    return s.length =
&lt; n ? s : s.slice(0, n);\n\t  } else {\n\t    return s;\n\t  =
}\n\t}\n\n\tfunction getMessage(self) {\n\t  return =
truncate(JSON.stringify(self.actual, replacer), 128) + ' ' +\n\t         =
self.operator + ' ' +\n\t         truncate(JSON.stringify(self.expected, =
replacer), 128);\n\t}\n\n\t// At present only the three keys mentioned =
above are used and\n\t// understood by the spec. Implementations or sub =
modules can pass\n\t// other keys to the AssertionError's constructor - =
they will be\n\t// ignored.\n\n\t// 3. All of the following functions =
must throw an AssertionError\n\t// when a corresponding condition is not =
met, with a message that\n\t// may be undefined if not provided.  All =
assertion methods provide\n\t// both the actual and expected values to =
the assertion error for\n\t// display purposes.\n\n\tfunction =
fail(actual, expected, message, operator, stackStartFunction) {\n\t  =
throw new assert.AssertionError({\n\t    message: message,\n\t    =
actual: actual,\n\t    expected: expected,\n\t    operator: =
operator,\n\t    stackStartFunction: stackStartFunction\n\t  =
});\n\t}\n\n\t// EXTENSION! allows for well behaved errors defined =
elsewhere.\n\tassert.fail =3D fail;\n\n\t// 4. Pure assertion tests =
whether a value is truthy, as determined\n\t// by !!guard.\n\t// =
assert.ok(guard, message_opt);\n\t// This statement is equivalent to =
assert.equal(true, !!guard,\n\t// message_opt);. To test strictly for =
the value true, use\n\t// assert.strictEqual(true, guard, =
message_opt);.\n\n\tfunction ok(value, message) {\n\t  if (!value) =
fail(value, true, message, '=3D=3D', assert.ok);\n\t}\n\tassert.ok =3D =
ok;\n\n\t// 5. The equality assertion tests shallow, coercive equality =
with\n\t// =3D=3D.\n\t// assert.equal(actual, expected, =
message_opt);\n\n\tassert.equal =3D function equal(actual, expected, =
message) {\n\t  if (actual !=3D expected) fail(actual, expected, =
message, '=3D=3D', assert.equal);\n\t};\n\n\t// 6. The non-equality =
assertion tests for whether two objects are not equal\n\t// with !=3D =
assert.notEqual(actual, expected, message_opt);\n\n\tassert.notEqual =3D =
function notEqual(actual, expected, message) {\n\t  if (actual =3D=3D =
expected) {\n\t    fail(actual, expected, message, '!=3D', =
assert.notEqual);\n\t  }\n\t};\n\n\t// 7. The equivalence assertion =
tests a deep equality relation.\n\t// assert.deepEqual(actual, expected, =
message_opt);\n\n\tassert.deepEqual =3D function deepEqual(actual, =
expected, message) {\n\t  if (!_deepEqual(actual, expected)) {\n\t    =
fail(actual, expected, message, 'deepEqual', assert.deepEqual);\n\t  =
}\n\t};\n\n\tfunction _deepEqual(actual, expected) {\n\t  // 7.1. All =
identical values are equivalent, as determined by =3D=3D=3D.\n\t  if =
(actual =3D=3D=3D expected) {\n\t    return true;\n\n\t  } else if =
(util.isBuffer(actual) &amp;&amp; util.isBuffer(expected)) {\n\t    if =
(actual.length !=3D expected.length) return false;\n\n\t    for (var i =
=3D 0; i &lt; actual.length; i++) {\n\t      if (actual[i] !=3D=3D =
expected[i]) return false;\n\t    }\n\n\t    return true;\n\n\t  // 7.2. =
If the expected value is a Date object, the actual value is\n\t  // =
equivalent if it is also a Date object that refers to the same time.\n\t =
 } else if (util.isDate(actual) &amp;&amp; util.isDate(expected)) {\n\t  =
  return actual.getTime() =3D=3D=3D expected.getTime();\n\n\t  // 7.3 If =
the expected value is a RegExp object, the actual value is\n\t  // =
equivalent if it is also a RegExp object with the same source and\n\t  =
// properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).\n\t  } =
else if (util.isRegExp(actual) &amp;&amp; util.isRegExp(expected)) {\n\t =
   return actual.source =3D=3D=3D expected.source &amp;&amp;\n\t         =
  actual.global =3D=3D=3D expected.global &amp;&amp;\n\t           =
actual.multiline =3D=3D=3D expected.multiline &amp;&amp;\n\t           =
actual.lastIndex =3D=3D=3D expected.lastIndex &amp;&amp;\n\t           =
actual.ignoreCase =3D=3D=3D expected.ignoreCase;\n\n\t  // 7.4. Other =
pairs that do not both pass typeof value =3D=3D 'object',\n\t  // =
equivalence is determined by =3D=3D.\n\t  } else if =
(!util.isObject(actual) &amp;&amp; !util.isObject(expected)) {\n\t    =
return actual =3D=3D expected;\n\n\t  // 7.5 For all other Object pairs, =
including Array objects, equivalence is\n\t  // determined by having the =
same number of owned properties (as verified\n\t  // with =
Object.prototype.hasOwnProperty.call), the same set of keys\n\t  // =
(although not necessarily the same order), equivalent values for =
every\n\t  // corresponding key, and an identical 'prototype' property. =
Note: this\n\t  // accounts for both named and indexed properties on =
Arrays.\n\t  } else {\n\t    return objEquiv(actual, expected);\n\t  =
}\n\t}\n\n\tfunction isArguments(object) {\n\t  return =
Object.prototype.toString.call(object) =3D=3D '[object =
Arguments]';\n\t}\n\n\tfunction objEquiv(a, b) {\n\t  if =
(util.isNullOrUndefined(a) || util.isNullOrUndefined(b))\n\t    return =
false;\n\t  // an identical 'prototype' property.\n\t  if (a.prototype =
!=3D=3D b.prototype) return false;\n\t  // if one is a primitive, the =
other must be same\n\t  if (util.isPrimitive(a) || util.isPrimitive(b)) =
{\n\t    return a =3D=3D=3D b;\n\t  }\n\t  var aIsArgs =3D =
isArguments(a),\n\t      bIsArgs =3D isArguments(b);\n\t  if ((aIsArgs =
&amp;&amp; !bIsArgs) || (!aIsArgs &amp;&amp; bIsArgs))\n\t    return =
false;\n\t  if (aIsArgs) {\n\t    a =3D pSlice.call(a);\n\t    b =3D =
pSlice.call(b);\n\t    return _deepEqual(a, b);\n\t  }\n\t  var ka =3D =
objectKeys(a),\n\t      kb =3D objectKeys(b),\n\t      key, i;\n\t  // =
having the same number of owned properties (keys incorporates\n\t  // =
hasOwnProperty)\n\t  if (ka.length !=3D kb.length)\n\t    return =
false;\n\t  //the same set of keys (although not necessarily the same =
order),\n\t  ka.sort();\n\t  kb.sort();\n\t  //~~~cheap key test\n\t  =
for (i =3D ka.length - 1; i &gt;=3D 0; i--) {\n\t    if (ka[i] !=3D =
kb[i])\n\t      return false;\n\t  }\n\t  //equivalent values for every =
corresponding key, and\n\t  //~~~possibly expensive deep test\n\t  for =
(i =3D ka.length - 1; i &gt;=3D 0; i--) {\n\t    key =3D ka[i];\n\t    =
if (!_deepEqual(a[key], b[key])) return false;\n\t  }\n\t  return =
true;\n\t}\n\n\t// 8. The non-equivalence assertion tests for any deep =
inequality.\n\t// assert.notDeepEqual(actual, expected, =
message_opt);\n\n\tassert.notDeepEqual =3D function notDeepEqual(actual, =
expected, message) {\n\t  if (_deepEqual(actual, expected)) {\n\t    =
fail(actual, expected, message, 'notDeepEqual', =
assert.notDeepEqual);\n\t  }\n\t};\n\n\t// 9. The strict equality =
assertion tests strict equality, as determined by =3D=3D=3D.\n\t// =
assert.strictEqual(actual, expected, =
message_opt);\n\n\tassert.strictEqual =3D function strictEqual(actual, =
expected, message) {\n\t  if (actual !=3D=3D expected) {\n\t    =
fail(actual, expected, message, '=3D=3D=3D', assert.strictEqual);\n\t  =
}\n\t};\n\n\t// 10. The strict non-equality assertion tests for strict =
inequality, as\n\t// determined by !=3D=3D.  =
assert.notStrictEqual(actual, expected, =
message_opt);\n\n\tassert.notStrictEqual =3D function =
notStrictEqual(actual, expected, message) {\n\t  if (actual =3D=3D=3D =
expected) {\n\t    fail(actual, expected, message, '!=3D=3D', =
assert.notStrictEqual);\n\t  }\n\t};\n\n\tfunction =
expectedException(actual, expected) {\n\t  if (!actual || !expected) =
{\n\t    return false;\n\t  }\n\n\t  if =
(Object.prototype.toString.call(expected) =3D=3D '[object RegExp]') =
{\n\t    return expected.test(actual);\n\t  } else if (actual instanceof =
expected) {\n\t    return true;\n\t  } else if (expected.call({}, =
actual) =3D=3D=3D true) {\n\t    return true;\n\t  }\n\n\t  return =
false;\n\t}\n\n\tfunction _throws(shouldThrow, block, expected, message) =
{\n\t  var actual;\n\n\t  if (util.isString(expected)) {\n\t    message =
=3D expected;\n\t    expected =3D null;\n\t  }\n\n\t  try {\n\t    =
block();\n\t  } catch (e) {\n\t    actual =3D e;\n\t  }\n\n\t  message =
=3D (expected &amp;&amp; expected.name ? ' (' + expected.name + ').' : =
'.') +\n\t            (message ? ' ' + message : '.');\n\n\t  if =
(shouldThrow &amp;&amp; !actual) {\n\t    fail(actual, expected, =
'Missing expected exception' + message);\n\t  }\n\n\t  if (!shouldThrow =
&amp;&amp; expectedException(actual, expected)) {\n\t    fail(actual, =
expected, 'Got unwanted exception' + message);\n\t  }\n\n\t  if =
((shouldThrow &amp;&amp; actual &amp;&amp; expected &amp;&amp;\n\t      =
!expectedException(actual, expected)) || (!shouldThrow &amp;&amp; =
actual)) {\n\t    throw actual;\n\t  }\n\t}\n\n\t// 11. Expected to =
throw an error:\n\t// assert.throws(block, Error_opt, =
message_opt);\n\n\tassert.throws =3D function(block, /*optional*/error, =
/*optional*/message) {\n\t  _throws.apply(this, =
[true].concat(pSlice.call(arguments)));\n\t};\n\n\t// EXTENSION! This is =
annoying to write outside this module.\n\tassert.doesNotThrow =3D =
function(block, /*optional*/message) {\n\t  _throws.apply(this, =
[false].concat(pSlice.call(arguments)));\n\t};\n\n\tassert.ifError =3D =
function(err) { if (err) {throw err;}};\n\n\tvar objectKeys =3D =
Object.keys || function (obj) {\n\t  var keys =3D [];\n\t  for (var key =
in obj) {\n\t    if (hasOwn.call(obj, key)) keys.push(key);\n\t  }\n\t  =
return keys;\n\t};\n\n\n/***/ },\n/* 64 */\n/***/ function(module, =
exports) {\n\n\t// Generated by CoffeeScript 1.7.1\n\n\t/*\n\tPDFPage - =
represents a single page in the PDF document\n\tBy Devon Govett\n\t =
*/\n\n\t(function() {\n\t  var PDFPage;\n\n\t  PDFPage =3D (function() =
{\n\t    var DEFAULT_MARGINS, SIZES;\n\n\t    function PDFPage(document, =
options) {\n\t      var dimensions;\n\t      this.document =3D =
document;\n\t      if (options =3D=3D null) {\n\t        options =3D =
{};\n\t      }\n\t      this.size =3D options.size || 'letter';\n\t      =
this.layout =3D options.layout || 'portrait';\n\t      if (typeof =
options.margin =3D=3D=3D 'number') {\n\t        this.margins =3D {\n\t   =
       top: options.margin,\n\t          left: options.margin,\n\t       =
   bottom: options.margin,\n\t          right: options.margin\n\t        =
};\n\t      } else {\n\t        this.margins =3D options.margins || =
DEFAULT_MARGINS;\n\t      }\n\t      dimensions =3D =
Array.isArray(this.size) ? this.size : =
SIZES[this.size.toUpperCase()];\n\t      this.width =3D =
dimensions[this.layout =3D=3D=3D 'portrait' ? 0 : 1];\n\t      =
this.height =3D dimensions[this.layout =3D=3D=3D 'portrait' ? 1 : =
0];\n\t      this.content =3D this.document.ref();\n\t      =
this.resources =3D this.document.ref({\n\t        ProcSet: ['PDF', =
'Text', 'ImageB', 'ImageC', 'ImageI']\n\t      });\n\t      =
Object.defineProperties(this, {\n\t        fonts: {\n\t          get: =
(function(_this) {\n\t            return function() {\n\t              =
var _base;\n\t              return (_base =3D _this.resources.data).Font =
!=3D null ? _base.Font : _base.Font =3D {};\n\t            };\n\t        =
  })(this)\n\t        },\n\t        xobjects: {\n\t          get: =
(function(_this) {\n\t            return function() {\n\t              =
var _base;\n\t              return (_base =3D =
_this.resources.data).XObject !=3D null ? _base.XObject : _base.XObject =
=3D {};\n\t            };\n\t          })(this)\n\t        },\n\t        =
ext_gstates: {\n\t          get: (function(_this) {\n\t            =
return function() {\n\t              var _base;\n\t              return =
(_base =3D _this.resources.data).ExtGState !=3D null ? _base.ExtGState : =
_base.ExtGState =3D {};\n\t            };\n\t          })(this)\n\t      =
  },\n\t        patterns: {\n\t          get: (function(_this) {\n\t     =
       return function() {\n\t              var _base;\n\t              =
return (_base =3D _this.resources.data).Pattern !=3D null ? =
_base.Pattern : _base.Pattern =3D {};\n\t            };\n\t          =
})(this)\n\t        },\n\t        annotations: {\n\t          get: =
(function(_this) {\n\t            return function() {\n\t              =
var _base;\n\t              return (_base =3D =
_this.dictionary.data).Annots !=3D null ? _base.Annots : _base.Annots =
=3D [];\n\t            };\n\t          })(this)\n\t        }\n\t      =
});\n\t      this.dictionary =3D this.document.ref({\n\t        Type: =
'Page',\n\t        Parent: this.document._root.data.Pages,\n\t        =
MediaBox: [0, 0, this.width, this.height],\n\t        Contents: =
this.content,\n\t        Resources: this.resources\n\t      });\n\t    =
}\n\n\t    PDFPage.prototype.maxY =3D function() {\n\t      return =
this.height - this.margins.bottom;\n\t    };\n\n\t    =
PDFPage.prototype.write =3D function(chunk) {\n\t      return =
this.content.write(chunk);\n\t    };\n\n\t    PDFPage.prototype.end =3D =
function() {\n\t      this.dictionary.end();\n\t      =
this.resources.end();\n\t      return this.content.end();\n\t    =
};\n\n\t    DEFAULT_MARGINS =3D {\n\t      top: 72,\n\t      left: =
72,\n\t      bottom: 72,\n\t      right: 72\n\t    };\n\n\t    SIZES =3D =
{\n\t      '4A0': [4767.87, 6740.79],\n\t      '2A0': [3370.39, =
4767.87],\n\t      A0: [2383.94, 3370.39],\n\t      A1: [1683.78, =
2383.94],\n\t      A2: [1190.55, 1683.78],\n\t      A3: [841.89, =
1190.55],\n\t      A4: [595.28, 841.89],\n\t      A5: [419.53, =
595.28],\n\t      A6: [297.64, 419.53],\n\t      A7: [209.76, =
297.64],\n\t      A8: [147.40, 209.76],\n\t      A9: [104.88, =
147.40],\n\t      A10: [73.70, 104.88],\n\t      B0: [2834.65, =
4008.19],\n\t      B1: [2004.09, 2834.65],\n\t      B2: [1417.32, =
2004.09],\n\t      B3: [1000.63, 1417.32],\n\t      B4: [708.66, =
1000.63],\n\t      B5: [498.90, 708.66],\n\t      B6: [354.33, =
498.90],\n\t      B7: [249.45, 354.33],\n\t      B8: [175.75, =
249.45],\n\t      B9: [124.72, 175.75],\n\t      B10: [87.87, =
124.72],\n\t      C0: [2599.37, 3676.54],\n\t      C1: [1836.85, =
2599.37],\n\t      C2: [1298.27, 1836.85],\n\t      C3: [918.43, =
1298.27],\n\t      C4: [649.13, 918.43],\n\t      C5: [459.21, =
649.13],\n\t      C6: [323.15, 459.21],\n\t      C7: [229.61, =
323.15],\n\t      C8: [161.57, 229.61],\n\t      C9: [113.39, =
161.57],\n\t      C10: [79.37, 113.39],\n\t      RA0: [2437.80, =
3458.27],\n\t      RA1: [1729.13, 2437.80],\n\t      RA2: [1218.90, =
1729.13],\n\t      RA3: [864.57, 1218.90],\n\t      RA4: [609.45, =
864.57],\n\t      SRA0: [2551.18, 3628.35],\n\t      SRA1: [1814.17, =
2551.18],\n\t      SRA2: [1275.59, 1814.17],\n\t      SRA3: [907.09, =
1275.59],\n\t      SRA4: [637.80, 907.09],\n\t      EXECUTIVE: [521.86, =
756.00],\n\t      FOLIO: [612.00, 936.00],\n\t      LEGAL: [612.00, =
1008.00],\n\t      LETTER: [612.00, 792.00],\n\t      TABLOID: [792.00, =
1224.00]\n\t    };\n\n\t    return PDFPage;\n\n\t  })();\n\n\t  =
module.exports =3D PDFPage;\n\n\t}).call(this);\n\n\n/***/ },\n/* 65 =
*/\n/***/ function(module, exports, __webpack_require__) {\n\n\t// =
Generated by CoffeeScript 1.7.1\n\t(function() {\n\t  var PDFGradient, =
PDFLinearGradient, PDFRadialGradient, namedColors, _ref;\n\n\t  _ref =3D =
__webpack_require__(66), PDFGradient =3D _ref.PDFGradient, =
PDFLinearGradient =3D _ref.PDFLinearGradient, PDFRadialGradient =3D =
_ref.PDFRadialGradient;\n\n\t  module.exports =3D {\n\t    initColor: =
function() {\n\t      this._opacityRegistry =3D {};\n\t      =
this._opacityCount =3D 0;\n\t      return this._gradCount =3D 0;\n\t    =
},\n\t    _normalizeColor: function(color) {\n\t      var hex, part;\n\t =
     if (color instanceof PDFGradient) {\n\t        return color;\n\t    =
  }\n\t      if (typeof color =3D=3D=3D 'string') {\n\t        if =
(color.charAt(0) =3D=3D=3D '#') {\n\t          if (color.length =
=3D=3D=3D 4) {\n\t            color =3D =
color.replace(/#([0-9A-F])([0-9A-F])([0-9A-F])/i, =
\"#$1$1$2$2$3$3\");\n\t          }\n\t          hex =3D =
parseInt(color.slice(1), 16);\n\t          color =3D [hex &gt;&gt; 16, =
hex &gt;&gt; 8 &amp; 0xff, hex &amp; 0xff];\n\t        } else if =
(namedColors[color]) {\n\t          color =3D namedColors[color];\n\t    =
    }\n\t      }\n\t      if (Array.isArray(color)) {\n\t        if =
(color.length =3D=3D=3D 3) {\n\t          color =3D (function() {\n\t    =
        var _i, _len, _results;\n\t            _results =3D [];\n\t      =
      for (_i =3D 0, _len =3D color.length; _i &lt; _len; _i++) {\n\t    =
          part =3D color[_i];\n\t              _results.push(part / =
255);\n\t            }\n\t            return _results;\n\t          =
})();\n\t        } else if (color.length =3D=3D=3D 4) {\n\t          =
color =3D (function() {\n\t            var _i, _len, _results;\n\t       =
     _results =3D [];\n\t            for (_i =3D 0, _len =3D =
color.length; _i &lt; _len; _i++) {\n\t              part =3D =
color[_i];\n\t              _results.push(part / 100);\n\t            =
}\n\t            return _results;\n\t          })();\n\t        }\n\t    =
    return color;\n\t      }\n\t      return null;\n\t    },\n\t    =
_setColor: function(color, stroke) {\n\t      var gstate, name, op, =
space;\n\t      color =3D this._normalizeColor(color);\n\t      if =
(!color) {\n\t        return false;\n\t      }\n\t      if =
(this._sMasked) {\n\t        gstate =3D this.ref({\n\t          Type: =
'ExtGState',\n\t          SMask: 'None'\n\t        });\n\t        =
gstate.end();\n\t        name =3D \"Gs\" + (++this._opacityCount);\n\t   =
     this.page.ext_gstates[name] =3D gstate;\n\t        =
this.addContent(\"/\" + name + \" gs\");\n\t        this._sMasked =3D =
false;\n\t      }\n\t      op =3D stroke ? 'SCN' : 'scn';\n\t      if =
(color instanceof PDFGradient) {\n\t        =
this._setColorSpace('Pattern', stroke);\n\t        color.apply(op);\n\t  =
    } else {\n\t        space =3D color.length =3D=3D=3D 4 ? =
'DeviceCMYK' : 'DeviceRGB';\n\t        this._setColorSpace(space, =
stroke);\n\t        color =3D color.join(' ');\n\t        =
this.addContent(\"\" + color + \" \" + op);\n\t      }\n\t      return =
true;\n\t    },\n\t    _setColorSpace: function(space, stroke) {\n\t     =
 var op;\n\t      op =3D stroke ? 'CS' : 'cs';\n\t      return =
this.addContent(\"/\" + space + \" \" + op);\n\t    },\n\t    fillColor: =
function(color, opacity) {\n\t      var set;\n\t      if (opacity =3D=3D =
null) {\n\t        opacity =3D 1;\n\t      }\n\t      set =3D =
this._setColor(color, false);\n\t      if (set) {\n\t        =
this.fillOpacity(opacity);\n\t      }\n\t      this._fillColor =3D =
[color, opacity];\n\t      return this;\n\t    },\n\t    strokeColor: =
function(color, opacity) {\n\t      var set;\n\t      if (opacity =3D=3D =
null) {\n\t        opacity =3D 1;\n\t      }\n\t      set =3D =
this._setColor(color, true);\n\t      if (set) {\n\t        =
this.strokeOpacity(opacity);\n\t      }\n\t      return this;\n\t    =
},\n\t    opacity: function(opacity) {\n\t      this._doOpacity(opacity, =
opacity);\n\t      return this;\n\t    },\n\t    fillOpacity: =
function(opacity) {\n\t      this._doOpacity(opacity, null);\n\t      =
return this;\n\t    },\n\t    strokeOpacity: function(opacity) {\n\t     =
 this._doOpacity(null, opacity);\n\t      return this;\n\t    },\n\t    =
_doOpacity: function(fillOpacity, strokeOpacity) {\n\t      var =
dictionary, id, key, name, _ref1;\n\t      if (!((fillOpacity !=3D null) =
|| (strokeOpacity !=3D null))) {\n\t        return;\n\t      }\n\t      =
if (fillOpacity !=3D null) {\n\t        fillOpacity =3D Math.max(0, =
Math.min(1, fillOpacity));\n\t      }\n\t      if (strokeOpacity !=3D =
null) {\n\t        strokeOpacity =3D Math.max(0, Math.min(1, =
strokeOpacity));\n\t      }\n\t      key =3D \"\" + fillOpacity + \"_\" =
+ strokeOpacity;\n\t      if (this._opacityRegistry[key]) {\n\t        =
_ref1 =3D this._opacityRegistry[key], dictionary =3D _ref1[0], name =3D =
_ref1[1];\n\t      } else {\n\t        dictionary =3D {\n\t          =
Type: 'ExtGState'\n\t        };\n\t        if (fillOpacity !=3D null) =
{\n\t          dictionary.ca =3D fillOpacity;\n\t        }\n\t        if =
(strokeOpacity !=3D null) {\n\t          dictionary.CA =3D =
strokeOpacity;\n\t        }\n\t        dictionary =3D =
this.ref(dictionary);\n\t        dictionary.end();\n\t        id =3D =
++this._opacityCount;\n\t        name =3D \"Gs\" + id;\n\t        =
this._opacityRegistry[key] =3D [dictionary, name];\n\t      }\n\t      =
this.page.ext_gstates[name] =3D dictionary;\n\t      return =
this.addContent(\"/\" + name + \" gs\");\n\t    },\n\t    =
linearGradient: function(x1, y1, x2, y2) {\n\t      return new =
PDFLinearGradient(this, x1, y1, x2, y2);\n\t    },\n\t    =
radialGradient: function(x1, y1, r1, x2, y2, r2) {\n\t      return new =
PDFRadialGradient(this, x1, y1, r1, x2, y2, r2);\n\t    }\n\t  };\n\n\t  =
namedColors =3D {\n\t    aliceblue: [240, 248, 255],\n\t    =
antiquewhite: [250, 235, 215],\n\t    aqua: [0, 255, 255],\n\t    =
aquamarine: [127, 255, 212],\n\t    azure: [240, 255, 255],\n\t    =
beige: [245, 245, 220],\n\t    bisque: [255, 228, 196],\n\t    black: =
[0, 0, 0],\n\t    blanchedalmond: [255, 235, 205],\n\t    blue: [0, 0, =
255],\n\t    blueviolet: [138, 43, 226],\n\t    brown: [165, 42, =
42],\n\t    burlywood: [222, 184, 135],\n\t    cadetblue: [95, 158, =
160],\n\t    chartreuse: [127, 255, 0],\n\t    chocolate: [210, 105, =
30],\n\t    coral: [255, 127, 80],\n\t    cornflowerblue: [100, 149, =
237],\n\t    cornsilk: [255, 248, 220],\n\t    crimson: [220, 20, =
60],\n\t    cyan: [0, 255, 255],\n\t    darkblue: [0, 0, 139],\n\t    =
darkcyan: [0, 139, 139],\n\t    darkgoldenrod: [184, 134, 11],\n\t    =
darkgray: [169, 169, 169],\n\t    darkgreen: [0, 100, 0],\n\t    =
darkgrey: [169, 169, 169],\n\t    darkkhaki: [189, 183, 107],\n\t    =
darkmagenta: [139, 0, 139],\n\t    darkolivegreen: [85, 107, 47],\n\t    =
darkorange: [255, 140, 0],\n\t    darkorchid: [153, 50, 204],\n\t    =
darkred: [139, 0, 0],\n\t    darksalmon: [233, 150, 122],\n\t    =
darkseagreen: [143, 188, 143],\n\t    darkslateblue: [72, 61, 139],\n\t  =
  darkslategray: [47, 79, 79],\n\t    darkslategrey: [47, 79, 79],\n\t   =
 darkturquoise: [0, 206, 209],\n\t    darkviolet: [148, 0, 211],\n\t    =
deeppink: [255, 20, 147],\n\t    deepskyblue: [0, 191, 255],\n\t    =
dimgray: [105, 105, 105],\n\t    dimgrey: [105, 105, 105],\n\t    =
dodgerblue: [30, 144, 255],\n\t    firebrick: [178, 34, 34],\n\t    =
floralwhite: [255, 250, 240],\n\t    forestgreen: [34, 139, 34],\n\t    =
fuchsia: [255, 0, 255],\n\t    gainsboro: [220, 220, 220],\n\t    =
ghostwhite: [248, 248, 255],\n\t    gold: [255, 215, 0],\n\t    =
goldenrod: [218, 165, 32],\n\t    gray: [128, 128, 128],\n\t    grey: =
[128, 128, 128],\n\t    green: [0, 128, 0],\n\t    greenyellow: [173, =
255, 47],\n\t    honeydew: [240, 255, 240],\n\t    hotpink: [255, 105, =
180],\n\t    indianred: [205, 92, 92],\n\t    indigo: [75, 0, 130],\n\t  =
  ivory: [255, 255, 240],\n\t    khaki: [240, 230, 140],\n\t    =
lavender: [230, 230, 250],\n\t    lavenderblush: [255, 240, 245],\n\t    =
lawngreen: [124, 252, 0],\n\t    lemonchiffon: [255, 250, 205],\n\t    =
lightblue: [173, 216, 230],\n\t    lightcoral: [240, 128, 128],\n\t    =
lightcyan: [224, 255, 255],\n\t    lightgoldenrodyellow: [250, 250, =
210],\n\t    lightgray: [211, 211, 211],\n\t    lightgreen: [144, 238, =
144],\n\t    lightgrey: [211, 211, 211],\n\t    lightpink: [255, 182, =
193],\n\t    lightsalmon: [255, 160, 122],\n\t    lightseagreen: [32, =
178, 170],\n\t    lightskyblue: [135, 206, 250],\n\t    lightslategray: =
[119, 136, 153],\n\t    lightslategrey: [119, 136, 153],\n\t    =
lightsteelblue: [176, 196, 222],\n\t    lightyellow: [255, 255, =
224],\n\t    lime: [0, 255, 0],\n\t    limegreen: [50, 205, 50],\n\t    =
linen: [250, 240, 230],\n\t    magenta: [255, 0, 255],\n\t    maroon: =
[128, 0, 0],\n\t    mediumaquamarine: [102, 205, 170],\n\t    =
mediumblue: [0, 0, 205],\n\t    mediumorchid: [186, 85, 211],\n\t    =
mediumpurple: [147, 112, 219],\n\t    mediumseagreen: [60, 179, =
113],\n\t    mediumslateblue: [123, 104, 238],\n\t    mediumspringgreen: =
[0, 250, 154],\n\t    mediumturquoise: [72, 209, 204],\n\t    =
mediumvioletred: [199, 21, 133],\n\t    midnightblue: [25, 25, 112],\n\t =
   mintcream: [245, 255, 250],\n\t    mistyrose: [255, 228, 225],\n\t    =
moccasin: [255, 228, 181],\n\t    navajowhite: [255, 222, 173],\n\t    =
navy: [0, 0, 128],\n\t    oldlace: [253, 245, 230],\n\t    olive: [128, =
128, 0],\n\t    olivedrab: [107, 142, 35],\n\t    orange: [255, 165, =
0],\n\t    orangered: [255, 69, 0],\n\t    orchid: [218, 112, 214],\n\t  =
  palegoldenrod: [238, 232, 170],\n\t    palegreen: [152, 251, 152],\n\t =
   paleturquoise: [175, 238, 238],\n\t    palevioletred: [219, 112, =
147],\n\t    papayawhip: [255, 239, 213],\n\t    peachpuff: [255, 218, =
185],\n\t    peru: [205, 133, 63],\n\t    pink: [255, 192, 203],\n\t    =
plum: [221, 160, 221],\n\t    powderblue: [176, 224, 230],\n\t    =
purple: [128, 0, 128],\n\t    red: [255, 0, 0],\n\t    rosybrown: [188, =
143, 143],\n\t    royalblue: [65, 105, 225],\n\t    saddlebrown: [139, =
69, 19],\n\t    salmon: [250, 128, 114],\n\t    sandybrown: [244, 164, =
96],\n\t    seagreen: [46, 139, 87],\n\t    seashell: [255, 245, =
238],\n\t    sienna: [160, 82, 45],\n\t    silver: [192, 192, 192],\n\t  =
  skyblue: [135, 206, 235],\n\t    slateblue: [106, 90, 205],\n\t    =
slategray: [112, 128, 144],\n\t    slategrey: [112, 128, 144],\n\t    =
snow: [255, 250, 250],\n\t    springgreen: [0, 255, 127],\n\t    =
steelblue: [70, 130, 180],\n\t    tan: [210, 180, 140],\n\t    teal: [0, =
128, 128],\n\t    thistle: [216, 191, 216],\n\t    tomato: [255, 99, =
71],\n\t    turquoise: [64, 224, 208],\n\t    violet: [238, 130, =
238],\n\t    wheat: [245, 222, 179],\n\t    white: [255, 255, 255],\n\t  =
  whitesmoke: [245, 245, 245],\n\t    yellow: [255, 255, 0],\n\t    =
yellowgreen: [154, 205, 50]\n\t  };\n\n\t}).call(this);\n\n\n/***/ =
},\n/* 66 */\n/***/ function(module, exports) {\n\n\t// Generated by =
CoffeeScript 1.7.1\n\t(function() {\n\t  var PDFGradient, =
PDFLinearGradient, PDFRadialGradient,\n\t    __hasProp =3D =
{}.hasOwnProperty,\n\t    __extends =3D function(child, parent) { for =
(var key in parent) { if (__hasProp.call(parent, key)) child[key] =3D =
parent[key]; } function ctor() { this.constructor =3D child; } =
ctor.prototype =3D parent.prototype; child.prototype =3D new ctor(); =
child.__super__ =3D parent.prototype; return child; };\n\n\t  =
PDFGradient =3D (function() {\n\t    function PDFGradient(doc) {\n\t     =
 this.doc =3D doc;\n\t      this.stops =3D [];\n\t      this.embedded =
=3D false;\n\t      this.transform =3D [1, 0, 0, 1, 0, 0];\n\t      =
this._colorSpace =3D 'DeviceRGB';\n\t    }\n\n\t    =
PDFGradient.prototype.stop =3D function(pos, color, opacity) {\n\t      =
if (opacity =3D=3D null) {\n\t        opacity =3D 1;\n\t      }\n\t      =
opacity =3D Math.max(0, Math.min(1, opacity));\n\t      =
this.stops.push([pos, this.doc._normalizeColor(color), opacity]);\n\t    =
  return this;\n\t    };\n\n\t    PDFGradient.prototype.embed =3D =
function() {\n\t      var bounds, dx, dy, encode, fn, form, grad, group, =
gstate, i, last, m, m0, m1, m11, m12, m2, m21, m22, m3, m4, m5, name, =
pattern, resources, sMask, shader, stop, stops, v, _i, _j, _len, _ref, =
_ref1, _ref2;\n\t      if (this.embedded || this.stops.length =3D=3D=3D =
0) {\n\t        return;\n\t      }\n\t      this.embedded =3D true;\n\t  =
    last =3D this.stops[this.stops.length - 1];\n\t      if (last[0] =
&lt; 1) {\n\t        this.stops.push([1, last[1], last[2]]);\n\t      =
}\n\t      bounds =3D [];\n\t      encode =3D [];\n\t      stops =3D =
[];\n\t      for (i =3D _i =3D 0, _ref =3D this.stops.length - 1; 0 =
&lt;=3D _ref ? _i &lt; _ref : _i &gt; _ref; i =3D 0 &lt;=3D _ref ? ++_i =
: --_i) {\n\t        encode.push(0, 1);\n\t        if (i + 2 !=3D=3D =
this.stops.length) {\n\t          bounds.push(this.stops[i + 1][0]);\n\t =
       }\n\t        fn =3D this.doc.ref({\n\t          FunctionType: =
2,\n\t          Domain: [0, 1],\n\t          C0: this.stops[i + =
0][1],\n\t          C1: this.stops[i + 1][1],\n\t          N: 1\n\t      =
  });\n\t        stops.push(fn);\n\t        fn.end();\n\t      }\n\t     =
 if (stops.length =3D=3D=3D 1) {\n\t        fn =3D stops[0];\n\t      } =
else {\n\t        fn =3D this.doc.ref({\n\t          FunctionType: =
3,\n\t          Domain: [0, 1],\n\t          Functions: stops,\n\t       =
   Bounds: bounds,\n\t          Encode: encode\n\t        });\n\t        =
fn.end();\n\t      }\n\t      this.id =3D 'Sh' + =
(++this.doc._gradCount);\n\t      m =3D this.doc._ctm.slice();\n\t      =
m0 =3D m[0], m1 =3D m[1], m2 =3D m[2], m3 =3D m[3], m4 =3D m[4], m5 =3D =
m[5];\n\t      _ref1 =3D this.transform, m11 =3D _ref1[0], m12 =3D =
_ref1[1], m21 =3D _ref1[2], m22 =3D _ref1[3], dx =3D _ref1[4], dy =3D =
_ref1[5];\n\t      m[0] =3D m0 * m11 + m2 * m12;\n\t      m[1] =3D m1 * =
m11 + m3 * m12;\n\t      m[2] =3D m0 * m21 + m2 * m22;\n\t      m[3] =3D =
m1 * m21 + m3 * m22;\n\t      m[4] =3D m0 * dx + m2 * dy + m4;\n\t      =
m[5] =3D m1 * dx + m3 * dy + m5;\n\t      shader =3D =
this.shader(fn);\n\t      shader.end();\n\t      pattern =3D =
this.doc.ref({\n\t        Type: 'Pattern',\n\t        PatternType: =
2,\n\t        Shading: shader,\n\t        Matrix: (function() {\n\t      =
    var _j, _len, _results;\n\t          _results =3D [];\n\t          =
for (_j =3D 0, _len =3D m.length; _j &lt; _len; _j++) {\n\t            v =
=3D m[_j];\n\t            _results.push(+v.toFixed(5));\n\t          =
}\n\t          return _results;\n\t        })()\n\t      });\n\t      =
this.doc.page.patterns[this.id] =3D pattern;\n\t      pattern.end();\n\t =
     if (this.stops.some(function(stop) {\n\t        return stop[2] &lt; =
1;\n\t      })) {\n\t        grad =3D this.opacityGradient();\n\t        =
grad._colorSpace =3D 'DeviceGray';\n\t        _ref2 =3D this.stops;\n\t  =
      for (_j =3D 0, _len =3D _ref2.length; _j &lt; _len; _j++) {\n\t    =
      stop =3D _ref2[_j];\n\t          grad.stop(stop[0], =
[stop[2]]);\n\t        }\n\t        grad =3D grad.embed();\n\t        =
group =3D this.doc.ref({\n\t          Type: 'Group',\n\t          S: =
'Transparency',\n\t          CS: 'DeviceGray'\n\t        });\n\t        =
group.end();\n\t        resources =3D this.doc.ref({\n\t          =
ProcSet: ['PDF', 'Text', 'ImageB', 'ImageC', 'ImageI'],\n\t          =
Shading: {\n\t            Sh1: grad.data.Shading\n\t          }\n\t      =
  });\n\t        resources.end();\n\t        form =3D this.doc.ref({\n\t =
         Type: 'XObject',\n\t          Subtype: 'Form',\n\t          =
FormType: 1,\n\t          BBox: [0, 0, this.doc.page.width, =
this.doc.page.height],\n\t          Group: group,\n\t          =
Resources: resources\n\t        });\n\t        form.end(\"/Sh1 =
sh\");\n\t        sMask =3D this.doc.ref({\n\t          Type: =
'Mask',\n\t          S: 'Luminosity',\n\t          G: form\n\t        =
});\n\t        sMask.end();\n\t        gstate =3D this.doc.ref({\n\t     =
     Type: 'ExtGState',\n\t          SMask: sMask\n\t        });\n\t     =
   this.opacity_id =3D ++this.doc._opacityCount;\n\t        name =3D =
\"Gs\" + this.opacity_id;\n\t        this.doc.page.ext_gstates[name] =3D =
gstate;\n\t        gstate.end();\n\t      }\n\t      return pattern;\n\t =
   };\n\n\t    PDFGradient.prototype.apply =3D function(op) {\n\t      =
if (!this.embedded) {\n\t        this.embed();\n\t      }\n\t      =
this.doc.addContent(\"/\" + this.id + \" \" + op);\n\t      if =
(this.opacity_id) {\n\t        this.doc.addContent(\"/Gs\" + =
this.opacity_id + \" gs\");\n\t        return this.doc._sMasked =3D =
true;\n\t      }\n\t    };\n\n\t    return PDFGradient;\n\n\t  =
})();\n\n\t  PDFLinearGradient =3D (function(_super) {\n\t    =
__extends(PDFLinearGradient, _super);\n\n\t    function =
PDFLinearGradient(doc, x1, y1, x2, y2) {\n\t      this.doc =3D doc;\n\t  =
    this.x1 =3D x1;\n\t      this.y1 =3D y1;\n\t      this.x2 =3D =
x2;\n\t      this.y2 =3D y2;\n\t      =
PDFLinearGradient.__super__.constructor.apply(this, arguments);\n\t    =
}\n\n\t    PDFLinearGradient.prototype.shader =3D function(fn) {\n\t     =
 return this.doc.ref({\n\t        ShadingType: 2,\n\t        ColorSpace: =
this._colorSpace,\n\t        Coords: [this.x1, this.y1, this.x2, =
this.y2],\n\t        Function: fn,\n\t        Extend: [true, true]\n\t   =
   });\n\t    };\n\n\t    PDFLinearGradient.prototype.opacityGradient =
=3D function() {\n\t      return new PDFLinearGradient(this.doc, =
this.x1, this.y1, this.x2, this.y2);\n\t    };\n\n\t    return =
PDFLinearGradient;\n\n\t  })(PDFGradient);\n\n\t  PDFRadialGradient =3D =
(function(_super) {\n\t    __extends(PDFRadialGradient, _super);\n\n\t   =
 function PDFRadialGradient(doc, x1, y1, r1, x2, y2, r2) {\n\t      =
this.doc =3D doc;\n\t      this.x1 =3D x1;\n\t      this.y1 =3D y1;\n\t  =
    this.r1 =3D r1;\n\t      this.x2 =3D x2;\n\t      this.y2 =3D =
y2;\n\t      this.r2 =3D r2;\n\t      =
PDFRadialGradient.__super__.constructor.apply(this, arguments);\n\t    =
}\n\n\t    PDFRadialGradient.prototype.shader =3D function(fn) {\n\t     =
 return this.doc.ref({\n\t        ShadingType: 3,\n\t        ColorSpace: =
this._colorSpace,\n\t        Coords: [this.x1, this.y1, this.r1, =
this.x2, this.y2, this.r2],\n\t        Function: fn,\n\t        Extend: =
[true, true]\n\t      });\n\t    };\n\n\t    =
PDFRadialGradient.prototype.opacityGradient =3D function() {\n\t      =
return new PDFRadialGradient(this.doc, this.x1, this.y1, this.r1, =
this.x2, this.y2, this.r2);\n\t    };\n\n\t    return =
PDFRadialGradient;\n\n\t  })(PDFGradient);\n\n\t  module.exports =3D =
{\n\t    PDFGradient: PDFGradient,\n\t    PDFLinearGradient: =
PDFLinearGradient,\n\t    PDFRadialGradient: PDFRadialGradient\n\t  =
};\n\n\t}).call(this);\n\n\n/***/ },\n/* 67 */\n/***/ function(module, =
exports, __webpack_require__) {\n\n\t// Generated by CoffeeScript =
1.7.1\n\t(function() {\n\t  var KAPPA, SVGPath,\n\t    __slice =3D =
[].slice;\n\n\t  SVGPath =3D __webpack_require__(68);\n\n\t  KAPPA =3D =
4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\n\n\t  module.exports =3D {\n\t    =
initVector: function() {\n\t      this._ctm =3D [1, 0, 0, 1, 0, 0];\n\t  =
    return this._ctmStack =3D [];\n\t    },\n\t    save: function() =
{\n\t      this._ctmStack.push(this._ctm.slice());\n\t      return =
this.addContent('q');\n\t    },\n\t    restore: function() {\n\t      =
this._ctm =3D this._ctmStack.pop() || [1, 0, 0, 1, 0, 0];\n\t      =
return this.addContent('Q');\n\t    },\n\t    closePath: function() =
{\n\t      return this.addContent('h');\n\t    },\n\t    lineWidth: =
function(w) {\n\t      return this.addContent(\"\" + w + \" w\");\n\t    =
},\n\t    _CAP_STYLES: {\n\t      BUTT: 0,\n\t      ROUND: 1,\n\t      =
SQUARE: 2\n\t    },\n\t    lineCap: function(c) {\n\t      if (typeof c =
=3D=3D=3D 'string') {\n\t        c =3D =
this._CAP_STYLES[c.toUpperCase()];\n\t      }\n\t      return =
this.addContent(\"\" + c + \" J\");\n\t    },\n\t    _JOIN_STYLES: {\n\t =
     MITER: 0,\n\t      ROUND: 1,\n\t      BEVEL: 2\n\t    },\n\t    =
lineJoin: function(j) {\n\t      if (typeof j =3D=3D=3D 'string') {\n\t  =
      j =3D this._JOIN_STYLES[j.toUpperCase()];\n\t      }\n\t      =
return this.addContent(\"\" + j + \" j\");\n\t    },\n\t    miterLimit: =
function(m) {\n\t      return this.addContent(\"\" + m + \" M\");\n\t    =
},\n\t    dash: function(length, options) {\n\t      var phase, space, =
_ref;\n\t      if (options =3D=3D null) {\n\t        options =3D {};\n\t =
     }\n\t      if (length =3D=3D null) {\n\t        return this;\n\t    =
  }\n\t      space =3D (_ref =3D options.space) !=3D null ? _ref : =
length;\n\t      phase =3D options.phase || 0;\n\t      return =
this.addContent(\"[\" + length + \" \" + space + \"] \" + phase + \" =
d\");\n\t    },\n\t    undash: function() {\n\t      return =
this.addContent(\"[] 0 d\");\n\t    },\n\t    moveTo: function(x, y) =
{\n\t      return this.addContent(\"\" + x + \" \" + y + \" m\");\n\t    =
},\n\t    lineTo: function(x, y) {\n\t      return this.addContent(\"\" =
+ x + \" \" + y + \" l\");\n\t    },\n\t    bezierCurveTo: =
function(cp1x, cp1y, cp2x, cp2y, x, y) {\n\t      return =
this.addContent(\"\" + cp1x + \" \" + cp1y + \" \" + cp2x + \" \" + cp2y =
+ \" \" + x + \" \" + y + \" c\");\n\t    },\n\t    quadraticCurveTo: =
function(cpx, cpy, x, y) {\n\t      return this.addContent(\"\" + cpx + =
\" \" + cpy + \" \" + x + \" \" + y + \" v\");\n\t    },\n\t    rect: =
function(x, y, w, h) {\n\t      return this.addContent(\"\" + x + \" \" =
+ y + \" \" + w + \" \" + h + \" re\");\n\t    },\n\t    roundedRect: =
function(x, y, w, h, r) {\n\t      if (r =3D=3D null) {\n\t        r =3D =
0;\n\t      }\n\t      this.moveTo(x + r, y);\n\t      this.lineTo(x + w =
- r, y);\n\t      this.quadraticCurveTo(x + w, y, x + w, y + r);\n\t     =
 this.lineTo(x + w, y + h - r);\n\t      this.quadraticCurveTo(x + w, y =
+ h, x + w - r, y + h);\n\t      this.lineTo(x + r, y + h);\n\t      =
this.quadraticCurveTo(x, y + h, x, y + h - r);\n\t      this.lineTo(x, y =
+ r);\n\t      return this.quadraticCurveTo(x, y, x + r, y);\n\t    =
},\n\t    ellipse: function(x, y, r1, r2) {\n\t      var ox, oy, xe, xm, =
ye, ym;\n\t      if (r2 =3D=3D null) {\n\t        r2 =3D r1;\n\t      =
}\n\t      x -=3D r1;\n\t      y -=3D r2;\n\t      ox =3D r1 * =
KAPPA;\n\t      oy =3D r2 * KAPPA;\n\t      xe =3D x + r1 * 2;\n\t      =
ye =3D y + r2 * 2;\n\t      xm =3D x + r1;\n\t      ym =3D y + r2;\n\t   =
   this.moveTo(x, ym);\n\t      this.bezierCurveTo(x, ym - oy, xm - ox, =
y, xm, y);\n\t      this.bezierCurveTo(xm + ox, y, xe, ym - oy, xe, =
ym);\n\t      this.bezierCurveTo(xe, ym + oy, xm + ox, ye, xm, ye);\n\t  =
    this.bezierCurveTo(xm - ox, ye, x, ym + oy, x, ym);\n\t      return =
this.closePath();\n\t    },\n\t    circle: function(x, y, radius) {\n\t  =
    return this.ellipse(x, y, radius);\n\t    },\n\t    polygon: =
function() {\n\t      var point, points, _i, _len;\n\t      points =3D 1 =
&lt;=3D arguments.length ? __slice.call(arguments, 0) : [];\n\t      =
this.moveTo.apply(this, points.shift());\n\t      for (_i =3D 0, _len =
=3D points.length; _i &lt; _len; _i++) {\n\t        point =3D =
points[_i];\n\t        this.lineTo.apply(this, point);\n\t      }\n\t    =
  return this.closePath();\n\t    },\n\t    path: function(path) {\n\t   =
   SVGPath.apply(this, path);\n\t      return this;\n\t    },\n\t    =
_windingRule: function(rule) {\n\t      if (/even-?odd/.test(rule)) =
{\n\t        return '*';\n\t      }\n\t      return '';\n\t    },\n\t    =
fill: function(color, rule) {\n\t      if =
(/(even-?odd)|(non-?zero)/.test(color)) {\n\t        rule =3D color;\n\t =
       color =3D null;\n\t      }\n\t      if (color) {\n\t        =
this.fillColor(color);\n\t      }\n\t      return this.addContent('f' + =
this._windingRule(rule));\n\t    },\n\t    stroke: function(color) {\n\t =
     if (color) {\n\t        this.strokeColor(color);\n\t      }\n\t     =
 return this.addContent('S');\n\t    },\n\t    fillAndStroke: =
function(fillColor, strokeColor, rule) {\n\t      var isFillRule;\n\t    =
  if (strokeColor =3D=3D null) {\n\t        strokeColor =3D =
fillColor;\n\t      }\n\t      isFillRule =3D =
/(even-?odd)|(non-?zero)/;\n\t      if (isFillRule.test(fillColor)) =
{\n\t        rule =3D fillColor;\n\t        fillColor =3D null;\n\t      =
}\n\t      if (isFillRule.test(strokeColor)) {\n\t        rule =3D =
strokeColor;\n\t        strokeColor =3D fillColor;\n\t      }\n\t      =
if (fillColor) {\n\t        this.fillColor(fillColor);\n\t        =
this.strokeColor(strokeColor);\n\t      }\n\t      return =
this.addContent('B' + this._windingRule(rule));\n\t    },\n\t    clip: =
function(rule) {\n\t      return this.addContent('W' + =
this._windingRule(rule) + ' n');\n\t    },\n\t    transform: =
function(m11, m12, m21, m22, dx, dy) {\n\t      var m, m0, m1, m2, m3, =
m4, m5, v, values;\n\t      m =3D this._ctm;\n\t      m0 =3D m[0], m1 =
=3D m[1], m2 =3D m[2], m3 =3D m[3], m4 =3D m[4], m5 =3D m[5];\n\t      =
m[0] =3D m0 * m11 + m2 * m12;\n\t      m[1] =3D m1 * m11 + m3 * m12;\n\t =
     m[2] =3D m0 * m21 + m2 * m22;\n\t      m[3] =3D m1 * m21 + m3 * =
m22;\n\t      m[4] =3D m0 * dx + m2 * dy + m4;\n\t      m[5] =3D m1 * dx =
+ m3 * dy + m5;\n\t      values =3D ((function() {\n\t        var _i, =
_len, _ref, _results;\n\t        _ref =3D [m11, m12, m21, m22, dx, =
dy];\n\t        _results =3D [];\n\t        for (_i =3D 0, _len =3D =
_ref.length; _i &lt; _len; _i++) {\n\t          v =3D _ref[_i];\n\t      =
    _results.push(+v.toFixed(5));\n\t        }\n\t        return =
_results;\n\t      })()).join(' ');\n\t      return this.addContent(\"\" =
+ values + \" cm\");\n\t    },\n\t    translate: function(x, y) {\n\t    =
  return this.transform(1, 0, 0, 1, x, y);\n\t    },\n\t    rotate: =
function(angle, options) {\n\t      var cos, rad, sin, x, x1, y, y1, =
_ref;\n\t      if (options =3D=3D null) {\n\t        options =3D {};\n\t =
     }\n\t      rad =3D angle * Math.PI / 180;\n\t      cos =3D =
Math.cos(rad);\n\t      sin =3D Math.sin(rad);\n\t      x =3D y =3D =
0;\n\t      if (options.origin !=3D null) {\n\t        _ref =3D =
options.origin, x =3D _ref[0], y =3D _ref[1];\n\t        x1 =3D x * cos =
- y * sin;\n\t        y1 =3D x * sin + y * cos;\n\t        x -=3D =
x1;\n\t        y -=3D y1;\n\t      }\n\t      return this.transform(cos, =
sin, -sin, cos, x, y);\n\t    },\n\t    scale: function(xFactor, =
yFactor, options) {\n\t      var x, y, _ref;\n\t      if (yFactor =3D=3D =
null) {\n\t        yFactor =3D xFactor;\n\t      }\n\t      if (options =
=3D=3D null) {\n\t        options =3D {};\n\t      }\n\t      if =
(arguments.length =3D=3D=3D 2) {\n\t        yFactor =3D xFactor;\n\t     =
   options =3D yFactor;\n\t      }\n\t      x =3D y =3D 0;\n\t      if =
(options.origin !=3D null) {\n\t        _ref =3D options.origin, x =3D =
_ref[0], y =3D _ref[1];\n\t        x -=3D xFactor * x;\n\t        y -=3D =
yFactor * y;\n\t      }\n\t      return this.transform(xFactor, 0, 0, =
yFactor, x, y);\n\t    }\n\t  };\n\n\t}).call(this);\n\n\n/***/ },\n/* =
68 */\n/***/ function(module, exports) {\n\n\t// Generated by =
CoffeeScript 1.7.1\n\t(function() {\n\t  var SVGPath;\n\n\t  SVGPath =3D =
(function() {\n\t    var apply, arcToSegments, cx, cy, parameters, =
parse, px, py, runners, segmentToBezier, solveArc, sx, sy;\n\n\t    =
function SVGPath() {}\n\n\t    SVGPath.apply =3D function(doc, path) =
{\n\t      var commands;\n\t      commands =3D parse(path);\n\t      =
return apply(commands, doc);\n\t    };\n\n\t    parameters =3D {\n\t     =
 A: 7,\n\t      a: 7,\n\t      C: 6,\n\t      c: 6,\n\t      H: 1,\n\t   =
   h: 1,\n\t      L: 2,\n\t      l: 2,\n\t      M: 2,\n\t      m: 2,\n\t =
     Q: 4,\n\t      q: 4,\n\t      S: 4,\n\t      s: 4,\n\t      T: =
2,\n\t      t: 2,\n\t      V: 1,\n\t      v: 1,\n\t      Z: 0,\n\t      =
z: 0\n\t    };\n\n\t    parse =3D function(path) {\n\t      var args, c, =
cmd, curArg, foundDecimal, params, ret, _i, _len;\n\t      ret =3D =
[];\n\t      args =3D [];\n\t      curArg =3D \"\";\n\t      =
foundDecimal =3D false;\n\t      params =3D 0;\n\t      for (_i =3D 0, =
_len =3D path.length; _i &lt; _len; _i++) {\n\t        c =3D =
path[_i];\n\t        if (parameters[c] !=3D null) {\n\t          params =
=3D parameters[c];\n\t          if (cmd) {\n\t            if =
(curArg.length &gt; 0) {\n\t              args[args.length] =3D =
+curArg;\n\t            }\n\t            ret[ret.length] =3D {\n\t       =
       cmd: cmd,\n\t              args: args\n\t            };\n\t       =
     args =3D [];\n\t            curArg =3D \"\";\n\t            =
foundDecimal =3D false;\n\t          }\n\t          cmd =3D c;\n\t       =
 } else if ((c =3D=3D=3D \" \" || c =3D=3D=3D \",\") || (c =3D=3D=3D =
\"-\" &amp;&amp; curArg.length &gt; 0 &amp;&amp; curArg[curArg.length - =
1] !=3D=3D 'e') || (c =3D=3D=3D \".\" &amp;&amp; foundDecimal)) {\n\t    =
      if (curArg.length =3D=3D=3D 0) {\n\t            continue;\n\t      =
    }\n\t          if (args.length =3D=3D=3D params) {\n\t            =
ret[ret.length] =3D {\n\t              cmd: cmd,\n\t              args: =
args\n\t            };\n\t            args =3D [+curArg];\n\t            =
if (cmd =3D=3D=3D \"M\") {\n\t              cmd =3D \"L\";\n\t           =
 }\n\t            if (cmd =3D=3D=3D \"m\") {\n\t              cmd =3D =
\"l\";\n\t            }\n\t          } else {\n\t            =
args[args.length] =3D +curArg;\n\t          }\n\t          foundDecimal =
=3D c =3D=3D=3D \".\";\n\t          curArg =3D c =3D=3D=3D '-' || c =
=3D=3D=3D '.' ? c : '';\n\t        } else {\n\t          curArg +=3D =
c;\n\t          if (c =3D=3D=3D '.') {\n\t            foundDecimal =3D =
true;\n\t          }\n\t        }\n\t      }\n\t      if (curArg.length =
&gt; 0) {\n\t        if (args.length =3D=3D=3D params) {\n\t          =
ret[ret.length] =3D {\n\t            cmd: cmd,\n\t            args: =
args\n\t          };\n\t          args =3D [+curArg];\n\t          if =
(cmd =3D=3D=3D \"M\") {\n\t            cmd =3D \"L\";\n\t          }\n\t =
         if (cmd =3D=3D=3D \"m\") {\n\t            cmd =3D \"l\";\n\t    =
      }\n\t        } else {\n\t          args[args.length] =3D =
+curArg;\n\t        }\n\t      }\n\t      ret[ret.length] =3D {\n\t      =
  cmd: cmd,\n\t        args: args\n\t      };\n\t      return ret;\n\t   =
 };\n\n\t    cx =3D cy =3D px =3D py =3D sx =3D sy =3D 0;\n\n\t    apply =
=3D function(commands, doc) {\n\t      var c, i, _i, _len, _name;\n\t    =
  cx =3D cy =3D px =3D py =3D sx =3D sy =3D 0;\n\t      for (i =3D _i =
=3D 0, _len =3D commands.length; _i &lt; _len; i =3D ++_i) {\n\t        =
c =3D commands[i];\n\t        if (typeof runners[_name =3D c.cmd] =
=3D=3D=3D \"function\") {\n\t          runners[_name](doc, c.args);\n\t  =
      }\n\t      }\n\t      return cx =3D cy =3D px =3D py =3D 0;\n\t    =
};\n\n\t    runners =3D {\n\t      M: function(doc, a) {\n\t        cx =
=3D a[0];\n\t        cy =3D a[1];\n\t        px =3D py =3D null;\n\t     =
   sx =3D cx;\n\t        sy =3D cy;\n\t        return doc.moveTo(cx, =
cy);\n\t      },\n\t      m: function(doc, a) {\n\t        cx +=3D =
a[0];\n\t        cy +=3D a[1];\n\t        px =3D py =3D null;\n\t        =
sx =3D cx;\n\t        sy =3D cy;\n\t        return doc.moveTo(cx, =
cy);\n\t      },\n\t      C: function(doc, a) {\n\t        cx =3D =
a[4];\n\t        cy =3D a[5];\n\t        px =3D a[2];\n\t        py =3D =
a[3];\n\t        return doc.bezierCurveTo.apply(doc, a);\n\t      },\n\t =
     c: function(doc, a) {\n\t        doc.bezierCurveTo(a[0] + cx, a[1] =
+ cy, a[2] + cx, a[3] + cy, a[4] + cx, a[5] + cy);\n\t        px =3D cx =
+ a[2];\n\t        py =3D cy + a[3];\n\t        cx +=3D a[4];\n\t        =
return cy +=3D a[5];\n\t      },\n\t      S: function(doc, a) {\n\t      =
  if (px =3D=3D=3D null) {\n\t          px =3D cx;\n\t          py =3D =
cy;\n\t        }\n\t        doc.bezierCurveTo(cx - (px - cx), cy - (py - =
cy), a[0], a[1], a[2], a[3]);\n\t        px =3D a[0];\n\t        py =3D =
a[1];\n\t        cx =3D a[2];\n\t        return cy =3D a[3];\n\t      =
},\n\t      s: function(doc, a) {\n\t        if (px =3D=3D=3D null) =
{\n\t          px =3D cx;\n\t          py =3D cy;\n\t        }\n\t       =
 doc.bezierCurveTo(cx - (px - cx), cy - (py - cy), cx + a[0], cy + a[1], =
cx + a[2], cy + a[3]);\n\t        px =3D cx + a[0];\n\t        py =3D cy =
+ a[1];\n\t        cx +=3D a[2];\n\t        return cy +=3D a[3];\n\t     =
 },\n\t      Q: function(doc, a) {\n\t        px =3D a[0];\n\t        py =
=3D a[1];\n\t        cx =3D a[2];\n\t        cy =3D a[3];\n\t        =
return doc.quadraticCurveTo(a[0], a[1], cx, cy);\n\t      },\n\t      q: =
function(doc, a) {\n\t        doc.quadraticCurveTo(a[0] + cx, a[1] + cy, =
a[2] + cx, a[3] + cy);\n\t        px =3D cx + a[0];\n\t        py =3D cy =
+ a[1];\n\t        cx +=3D a[2];\n\t        return cy +=3D a[3];\n\t     =
 },\n\t      T: function(doc, a) {\n\t        if (px =3D=3D=3D null) =
{\n\t          px =3D cx;\n\t          py =3D cy;\n\t        } else =
{\n\t          px =3D cx - (px - cx);\n\t          py =3D cy - (py - =
cy);\n\t        }\n\t        doc.quadraticCurveTo(px, py, a[0], =
a[1]);\n\t        px =3D cx - (px - cx);\n\t        py =3D cy - (py - =
cy);\n\t        cx =3D a[0];\n\t        return cy =3D a[1];\n\t      =
},\n\t      t: function(doc, a) {\n\t        if (px =3D=3D=3D null) =
{\n\t          px =3D cx;\n\t          py =3D cy;\n\t        } else =
{\n\t          px =3D cx - (px - cx);\n\t          py =3D cy - (py - =
cy);\n\t        }\n\t        doc.quadraticCurveTo(px, py, cx + a[0], cy =
+ a[1]);\n\t        cx +=3D a[0];\n\t        return cy +=3D a[1];\n\t    =
  },\n\t      A: function(doc, a) {\n\t        solveArc(doc, cx, cy, =
a);\n\t        cx =3D a[5];\n\t        return cy =3D a[6];\n\t      =
},\n\t      a: function(doc, a) {\n\t        a[5] +=3D cx;\n\t        =
a[6] +=3D cy;\n\t        solveArc(doc, cx, cy, a);\n\t        cx =3D =
a[5];\n\t        return cy =3D a[6];\n\t      },\n\t      L: =
function(doc, a) {\n\t        cx =3D a[0];\n\t        cy =3D a[1];\n\t   =
     px =3D py =3D null;\n\t        return doc.lineTo(cx, cy);\n\t      =
},\n\t      l: function(doc, a) {\n\t        cx +=3D a[0];\n\t        cy =
+=3D a[1];\n\t        px =3D py =3D null;\n\t        return =
doc.lineTo(cx, cy);\n\t      },\n\t      H: function(doc, a) {\n\t       =
 cx =3D a[0];\n\t        px =3D py =3D null;\n\t        return =
doc.lineTo(cx, cy);\n\t      },\n\t      h: function(doc, a) {\n\t       =
 cx +=3D a[0];\n\t        px =3D py =3D null;\n\t        return =
doc.lineTo(cx, cy);\n\t      },\n\t      V: function(doc, a) {\n\t       =
 cy =3D a[0];\n\t        px =3D py =3D null;\n\t        return =
doc.lineTo(cx, cy);\n\t      },\n\t      v: function(doc, a) {\n\t       =
 cy +=3D a[0];\n\t        px =3D py =3D null;\n\t        return =
doc.lineTo(cx, cy);\n\t      },\n\t      Z: function(doc) {\n\t        =
doc.closePath();\n\t        cx =3D sx;\n\t        return cy =3D sy;\n\t  =
    },\n\t      z: function(doc) {\n\t        doc.closePath();\n\t       =
 cx =3D sx;\n\t        return cy =3D sy;\n\t      }\n\t    };\n\n\t    =
solveArc =3D function(doc, x, y, coords) {\n\t      var bez, ex, ey, =
large, rot, rx, ry, seg, segs, sweep, _i, _len, _results;\n\t      rx =
=3D coords[0], ry =3D coords[1], rot =3D coords[2], large =3D coords[3], =
sweep =3D coords[4], ex =3D coords[5], ey =3D coords[6];\n\t      segs =
=3D arcToSegments(ex, ey, rx, ry, large, sweep, rot, x, y);\n\t      =
_results =3D [];\n\t      for (_i =3D 0, _len =3D segs.length; _i &lt; =
_len; _i++) {\n\t        seg =3D segs[_i];\n\t        bez =3D =
segmentToBezier.apply(null, seg);\n\t        =
_results.push(doc.bezierCurveTo.apply(doc, bez));\n\t      }\n\t      =
return _results;\n\t    };\n\n\t    arcToSegments =3D function(x, y, rx, =
ry, large, sweep, rotateX, ox, oy) {\n\t      var a00, a01, a10, a11, =
cos_th, d, i, pl, result, segments, sfactor, sfactor_sq, sin_th, th, =
th0, th1, th2, th3, th_arc, x0, x1, xc, y0, y1, yc, _i;\n\t      th =3D =
rotateX * (Math.PI / 180);\n\t      sin_th =3D Math.sin(th);\n\t      =
cos_th =3D Math.cos(th);\n\t      rx =3D Math.abs(rx);\n\t      ry =3D =
Math.abs(ry);\n\t      px =3D cos_th * (ox - x) * 0.5 + sin_th * (oy - =
y) * 0.5;\n\t      py =3D cos_th * (oy - y) * 0.5 - sin_th * (ox - x) * =
0.5;\n\t      pl =3D (px * px) / (rx * rx) + (py * py) / (ry * ry);\n\t  =
    if (pl &gt; 1) {\n\t        pl =3D Math.sqrt(pl);\n\t        rx *=3D =
pl;\n\t        ry *=3D pl;\n\t      }\n\t      a00 =3D cos_th / rx;\n\t  =
    a01 =3D sin_th / rx;\n\t      a10 =3D (-sin_th) / ry;\n\t      a11 =
=3D cos_th / ry;\n\t      x0 =3D a00 * ox + a01 * oy;\n\t      y0 =3D =
a10 * ox + a11 * oy;\n\t      x1 =3D a00 * x + a01 * y;\n\t      y1 =3D =
a10 * x + a11 * y;\n\t      d =3D (x1 - x0) * (x1 - x0) + (y1 - y0) * =
(y1 - y0);\n\t      sfactor_sq =3D 1 / d - 0.25;\n\t      if (sfactor_sq =
&lt; 0) {\n\t        sfactor_sq =3D 0;\n\t      }\n\t      sfactor =3D =
Math.sqrt(sfactor_sq);\n\t      if (sweep =3D=3D=3D large) {\n\t        =
sfactor =3D -sfactor;\n\t      }\n\t      xc =3D 0.5 * (x0 + x1) - =
sfactor * (y1 - y0);\n\t      yc =3D 0.5 * (y0 + y1) + sfactor * (x1 - =
x0);\n\t      th0 =3D Math.atan2(y0 - yc, x0 - xc);\n\t      th1 =3D =
Math.atan2(y1 - yc, x1 - xc);\n\t      th_arc =3D th1 - th0;\n\t      if =
(th_arc &lt; 0 &amp;&amp; sweep =3D=3D=3D 1) {\n\t        th_arc +=3D 2 =
* Math.PI;\n\t      } else if (th_arc &gt; 0 &amp;&amp; sweep =3D=3D=3D =
0) {\n\t        th_arc -=3D 2 * Math.PI;\n\t      }\n\t      segments =
=3D Math.ceil(Math.abs(th_arc / (Math.PI * 0.5 + 0.001)));\n\t      =
result =3D [];\n\t      for (i =3D _i =3D 0; 0 &lt;=3D segments ? _i =
&lt; segments : _i &gt; segments; i =3D 0 &lt;=3D segments ? ++_i : =
--_i) {\n\t        th2 =3D th0 + i * th_arc / segments;\n\t        th3 =
=3D th0 + (i + 1) * th_arc / segments;\n\t        result[i] =3D [xc, yc, =
th2, th3, rx, ry, sin_th, cos_th];\n\t      }\n\t      return =
result;\n\t    };\n\n\t    segmentToBezier =3D function(cx, cy, th0, =
th1, rx, ry, sin_th, cos_th) {\n\t      var a00, a01, a10, a11, t, =
th_half, x1, x2, x3, y1, y2, y3;\n\t      a00 =3D cos_th * rx;\n\t      =
a01 =3D -sin_th * ry;\n\t      a10 =3D sin_th * rx;\n\t      a11 =3D =
cos_th * ry;\n\t      th_half =3D 0.5 * (th1 - th0);\n\t      t =3D (8 / =
3) * Math.sin(th_half * 0.5) * Math.sin(th_half * 0.5) / =
Math.sin(th_half);\n\t      x1 =3D cx + Math.cos(th0) - t * =
Math.sin(th0);\n\t      y1 =3D cy + Math.sin(th0) + t * =
Math.cos(th0);\n\t      x3 =3D cx + Math.cos(th1);\n\t      y3 =3D cy + =
Math.sin(th1);\n\t      x2 =3D x3 + t * Math.sin(th1);\n\t      y2 =3D =
y3 - t * Math.cos(th1);\n\t      return [a00 * x1 + a01 * y1, a10 * x1 + =
a11 * y1, a00 * x2 + a01 * y2, a10 * x2 + a11 * y2, a00 * x3 + a01 * y3, =
a10 * x3 + a11 * y3];\n\t    };\n\n\t    return SVGPath;\n\n\t  =
})();\n\n\t  module.exports =3D SVGPath;\n\n\t}).call(this);\n\n\n/***/ =
},\n/* 69 */\n/***/ function(module, exports, __webpack_require__) =
{\n\n\t// Generated by CoffeeScript 1.7.1\n\t(function() {\n\t  var =
PDFFont;\n\n\t  PDFFont =3D __webpack_require__(70);\n\n\t  =
module.exports =3D {\n\t    initFonts: function() {\n\t      =
this._fontFamilies =3D {};\n\t      this._fontCount =3D 0;\n\t      =
this._fontSize =3D 12;\n\t      this._font =3D null;\n\t      =
this._registeredFonts =3D {};\n\t      \n\t    },\n\t    font: =
function(src, family, size) {\n\t      var cacheKey, font, id, _ref;\n\t =
     if (typeof family =3D=3D=3D 'number') {\n\t        size =3D =
family;\n\t        family =3D null;\n\t      }\n\t      if (typeof src =
=3D=3D=3D 'string' &amp;&amp; this._registeredFonts[src]) {\n\t        =
cacheKey =3D src;\n\t        _ref =3D this._registeredFonts[src], src =
=3D _ref.src, family =3D _ref.family;\n\t      } else {\n\t        =
cacheKey =3D family || src;\n\t        if (typeof cacheKey !=3D=3D =
'string') {\n\t          cacheKey =3D null;\n\t        }\n\t      }\n\t  =
    if (size !=3D null) {\n\t        this.fontSize(size);\n\t      }\n\t =
     if (font =3D this._fontFamilies[cacheKey]) {\n\t        this._font =
=3D font;\n\t        return this;\n\t      }\n\t      id =3D 'F' + =
(++this._fontCount);\n\t      this._font =3D new PDFFont(this, src, =
family, id);\n\t      if (font =3D this._fontFamilies[this._font.name]) =
{\n\t        this._font =3D font;\n\t        return this;\n\t      }\n\t =
     if (cacheKey) {\n\t        this._fontFamilies[cacheKey] =3D =
this._font;\n\t      }\n\t      this._fontFamilies[this._font.name] =3D =
this._font;\n\t      return this;\n\t    },\n\t    fontSize: =
function(_fontSize) {\n\t      this._fontSize =3D _fontSize;\n\t      =
return this;\n\t    },\n\t    currentLineHeight: function(includeGap) =
{\n\t      if (includeGap =3D=3D null) {\n\t        includeGap =3D =
false;\n\t      }\n\t      return this._font.lineHeight(this._fontSize, =
includeGap);\n\t    },\n\t    registerFont: function(name, src, family) =
{\n\t      this._registeredFonts[name] =3D {\n\t        src: src,\n\t    =
    family: family\n\t      };\n\t      return this;\n\t    }\n\t  =
};\n\n\t}).call(this);\n\n\n/***/ },\n/* 70 */\n/***/ function(module, =
exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION =
*/(function(Buffer, __dirname) {// Generated by CoffeeScript =
1.7.1\n\n\t/*\n\tPDFFont - embeds fonts in PDF documents\n\tBy Devon =
Govett\n\t */\n\n\t(function() {\n\t  var AFMFont, PDFFont, Subset, =
TTFFont, fs;\n\n\t  TTFFont =3D __webpack_require__(71);\n\n\t  AFMFont =
=3D __webpack_require__(87);\n\n\t  Subset =3D =
__webpack_require__(88);\n\n\t  fs =3D __webpack_require__(44);\n\n\t  =
PDFFont =3D (function() {\n\t    var STANDARD_FONTS, =
toUnicodeCmap;\n\n\t    function PDFFont(document, src, family, id) =
{\n\t      this.document =3D document;\n\t      this.id =3D id;\n\t      =
if (typeof src =3D=3D=3D 'string') {\n\t        if (src in =
STANDARD_FONTS) {\n\t          this.isAFM =3D true;\n\t          =
this.font =3D new AFMFont(STANDARD_FONTS[src]());\n\t          =
this.registerAFM(src);\n\t          return;\n\t        } else if =
(/\\.(ttf|ttc)$/i.test(src)) {\n\t          this.font =3D =
TTFFont.open(src, family);\n\t        } else if (/\\.dfont$/i.test(src)) =
{\n\t          this.font =3D TTFFont.fromDFont(src, family);\n\t        =
} else {\n\t          throw new Error('Not a supported font format or =
standard PDF font.');\n\t        }\n\t      } else if =
(Buffer.isBuffer(src)) {\n\t        this.font =3D =
TTFFont.fromBuffer(src, family);\n\t      } else if (src instanceof =
Uint8Array) {\n\t        this.font =3D TTFFont.fromBuffer(new =
Buffer(src), family);\n\t      } else if (src instanceof ArrayBuffer) =
{\n\t        this.font =3D TTFFont.fromBuffer(new Buffer(new =
Uint8Array(src)), family);\n\t      } else {\n\t        throw new =
Error('Not a supported font format or standard PDF font.');\n\t      =
}\n\t      this.subset =3D new Subset(this.font);\n\t      =
this.registerTTF();\n\t    }\n\n\t    STANDARD_FONTS =3D {\n\t      =
\"Courier\": function() {\n\t        return fs.readFileSync(__dirname + =
\"/font/data/Courier.afm\", 'utf8');\n\t      },\n\t      =
\"Courier-Bold\": function() {\n\t        return =
fs.readFileSync(__dirname + \"/font/data/Courier-Bold.afm\", =
'utf8');\n\t      },\n\t      \"Courier-Oblique\": function() {\n\t      =
  return fs.readFileSync(__dirname + \"/font/data/Courier-Oblique.afm\", =
'utf8');\n\t      },\n\t      \"Courier-BoldOblique\": function() {\n\t  =
      return fs.readFileSync(__dirname + =
\"/font/data/Courier-BoldOblique.afm\", 'utf8');\n\t      },\n\t      =
\"Helvetica\": function() {\n\t        return fs.readFileSync(__dirname =
+ \"/font/data/Helvetica.afm\", 'utf8');\n\t      },\n\t      =
\"Helvetica-Bold\": function() {\n\t        return =
fs.readFileSync(__dirname + \"/font/data/Helvetica-Bold.afm\", =
'utf8');\n\t      },\n\t      \"Helvetica-Oblique\": function() {\n\t    =
    return fs.readFileSync(__dirname + =
\"/font/data/Helvetica-Oblique.afm\", 'utf8');\n\t      },\n\t      =
\"Helvetica-BoldOblique\": function() {\n\t        return =
fs.readFileSync(__dirname + \"/font/data/Helvetica-BoldOblique.afm\", =
'utf8');\n\t      },\n\t      \"Times-Roman\": function() {\n\t        =
return fs.readFileSync(__dirname + \"/font/data/Times-Roman.afm\", =
'utf8');\n\t      },\n\t      \"Times-Bold\": function() {\n\t        =
return fs.readFileSync(__dirname + \"/font/data/Times-Bold.afm\", =
'utf8');\n\t      },\n\t      \"Times-Italic\": function() {\n\t        =
return fs.readFileSync(__dirname + \"/font/data/Times-Italic.afm\", =
'utf8');\n\t      },\n\t      \"Times-BoldItalic\": function() {\n\t     =
   return fs.readFileSync(__dirname + =
\"/font/data/Times-BoldItalic.afm\", 'utf8');\n\t      },\n\t      =
\"Symbol\": function() {\n\t        return fs.readFileSync(__dirname + =
\"/font/data/Symbol.afm\", 'utf8');\n\t      },\n\t      =
\"ZapfDingbats\": function() {\n\t        return =
fs.readFileSync(__dirname + \"/font/data/ZapfDingbats.afm\", =
'utf8');\n\t      }\n\t    };\n\n\t    PDFFont.prototype.use =3D =
function(characters) {\n\t      var _ref;\n\t      return (_ref =3D =
this.subset) !=3D null ? _ref.use(characters) : void 0;\n\t    };\n\n\t  =
  PDFFont.prototype.embed =3D function() {\n\t      if (this.embedded || =
(this.dictionary =3D=3D null)) {\n\t        return;\n\t      }\n\t      =
if (this.isAFM) {\n\t        this.embedAFM();\n\t      } else {\n\t      =
  this.embedTTF();\n\t      }\n\t      return this.embedded =3D =
true;\n\t    };\n\n\t    PDFFont.prototype.encode =3D function(text) =
{\n\t      var _ref;\n\t      if (this.isAFM) {\n\t        return =
this.font.encodeText(text);\n\t      } else {\n\t        return ((_ref =
=3D this.subset) !=3D null ? _ref.encodeText(text) : void 0) || =
text;\n\t      }\n\t    };\n\n\t    PDFFont.prototype.ref =3D function() =
{\n\t      return this.dictionary !=3D null ? this.dictionary : =
this.dictionary =3D this.document.ref();\n\t    };\n\n\t    =
PDFFont.prototype.registerTTF =3D function() {\n\t      var e, hi, low, =
raw, _ref;\n\t      this.name =3D this.font.name.postscriptName;\n\t     =
 this.scaleFactor =3D 1000.0 / this.font.head.unitsPerEm;\n\t      =
this.bbox =3D (function() {\n\t        var _i, _len, _ref, _results;\n\t =
       _ref =3D this.font.bbox;\n\t        _results =3D [];\n\t        =
for (_i =3D 0, _len =3D _ref.length; _i &lt; _len; _i++) {\n\t          =
e =3D _ref[_i];\n\t          _results.push(Math.round(e * =
this.scaleFactor));\n\t        }\n\t        return _results;\n\t      =
}).call(this);\n\t      this.stemV =3D 0;\n\t      if =
(this.font.post.exists) {\n\t        raw =3D =
this.font.post.italic_angle;\n\t        hi =3D raw &gt;&gt; 16;\n\t      =
  low =3D raw &amp; 0xFF;\n\t        if (hi &amp; 0x8000 !=3D=3D 0) =
{\n\t          hi =3D -((hi ^ 0xFFFF) + 1);\n\t        }\n\t        =
this.italicAngle =3D +(\"\" + hi + \".\" + low);\n\t      } else {\n\t   =
     this.italicAngle =3D 0;\n\t      }\n\t      this.ascender =3D =
Math.round(this.font.ascender * this.scaleFactor);\n\t      =
this.decender =3D Math.round(this.font.decender * this.scaleFactor);\n\t =
     this.lineGap =3D Math.round(this.font.lineGap * =
this.scaleFactor);\n\t      this.capHeight =3D (this.font.os2.exists =
&amp;&amp; this.font.os2.capHeight) || this.ascender;\n\t      =
this.xHeight =3D (this.font.os2.exists &amp;&amp; this.font.os2.xHeight) =
|| 0;\n\t      this.familyClass =3D (this.font.os2.exists &amp;&amp; =
this.font.os2.familyClass || 0) &gt;&gt; 8;\n\t      this.isSerif =3D =
(_ref =3D this.familyClass) =3D=3D=3D 1 || _ref =3D=3D=3D 2 || _ref =
=3D=3D=3D 3 || _ref =3D=3D=3D 4 || _ref =3D=3D=3D 5 || _ref =3D=3D=3D =
7;\n\t      this.isScript =3D this.familyClass =3D=3D=3D 10;\n\t      =
this.flags =3D 0;\n\t      if (this.font.post.isFixedPitch) {\n\t        =
this.flags |=3D 1 &lt;&lt; 0;\n\t      }\n\t      if (this.isSerif) =
{\n\t        this.flags |=3D 1 &lt;&lt; 1;\n\t      }\n\t      if =
(this.isScript) {\n\t        this.flags |=3D 1 &lt;&lt; 3;\n\t      =
}\n\t      if (this.italicAngle !=3D=3D 0) {\n\t        this.flags |=3D =
1 &lt;&lt; 6;\n\t      }\n\t      this.flags |=3D 1 &lt;&lt; 5;\n\t      =
if (!this.font.cmap.unicode) {\n\t        throw new Error('No unicode =
cmap for font');\n\t      }\n\t    };\n\n\t    =
PDFFont.prototype.embedTTF =3D function() {\n\t      var charWidths, =
cmap, code, data, descriptor, firstChar, fontfile, glyph;\n\t      data =
=3D this.subset.encode();\n\t      fontfile =3D this.document.ref();\n\t =
     fontfile.write(data);\n\t      fontfile.data.Length1 =3D =
fontfile.uncompressedLength;\n\t      fontfile.end();\n\t      =
descriptor =3D this.document.ref({\n\t        Type: =
'FontDescriptor',\n\t        FontName: this.subset.postscriptName,\n\t   =
     FontFile2: fontfile,\n\t        FontBBox: this.bbox,\n\t        =
Flags: this.flags,\n\t        StemV: this.stemV,\n\t        ItalicAngle: =
this.italicAngle,\n\t        Ascent: this.ascender,\n\t        Descent: =
this.decender,\n\t        CapHeight: this.capHeight,\n\t        XHeight: =
this.xHeight\n\t      });\n\t      descriptor.end();\n\t      firstChar =
=3D +Object.keys(this.subset.cmap)[0];\n\t      charWidths =3D =
(function() {\n\t        var _ref, _results;\n\t        _ref =3D =
this.subset.cmap;\n\t        _results =3D [];\n\t        for (code in =
_ref) {\n\t          glyph =3D _ref[code];\n\t          =
_results.push(Math.round(this.font.widthOfGlyph(glyph)));\n\t        =
}\n\t        return _results;\n\t      }).call(this);\n\t      cmap =3D =
this.document.ref();\n\t      =
cmap.end(toUnicodeCmap(this.subset.subset));\n\t      =
this.dictionary.data =3D {\n\t        Type: 'Font',\n\t        BaseFont: =
this.subset.postscriptName,\n\t        Subtype: 'TrueType',\n\t        =
FontDescriptor: descriptor,\n\t        FirstChar: firstChar,\n\t        =
LastChar: firstChar + charWidths.length - 1,\n\t        Widths: =
charWidths,\n\t        Encoding: 'MacRomanEncoding',\n\t        =
ToUnicode: cmap\n\t      };\n\t      return this.dictionary.end();\n\t   =
 };\n\n\t    toUnicodeCmap =3D function(map) {\n\t      var code, codes, =
range, unicode, unicodeMap, _i, _len;\n\t      unicodeMap =3D '/CIDInit =
/ProcSet findresource begin\\n12 dict begin\\nbegincmap\\n/CIDSystemInfo =
&lt;&lt;\\n  /Registry (Adobe)\\n  /Ordering (UCS)\\n  /Supplement =
0\\n&gt;&gt; def\\n/CMapName /Adobe-Identity-UCS def\\n/CMapType 2 =
def\\n1 =
begincodespacerange\\n&lt;00&gt;&lt;ff&gt;\\nendcodespacerange';\n\t     =
 codes =3D Object.keys(map).sort(function(a, b) {\n\t        return a - =
b;\n\t      });\n\t      range =3D [];\n\t      for (_i =3D 0, _len =3D =
codes.length; _i &lt; _len; _i++) {\n\t        code =3D codes[_i];\n\t   =
     if (range.length &gt;=3D 100) {\n\t          unicodeMap +=3D =
\"\\n\" + range.length + \" beginbfchar\\n\" + (range.join('\\n')) + =
\"\\nendbfchar\";\n\t          range =3D [];\n\t        }\n\t        =
unicode =3D ('0000' + map[code].toString(16)).slice(-4);\n\t        code =
=3D (+code).toString(16);\n\t        range.push(\"&lt;\" + code + =
\"&gt;&lt;\" + unicode + \"&gt;\");\n\t      }\n\t      if =
(range.length) {\n\t        unicodeMap +=3D \"\\n\" + range.length + \" =
beginbfchar\\n\" + (range.join('\\n')) + \"\\nendbfchar\\n\";\n\t      =
}\n\t      return unicodeMap +=3D 'endcmap\\nCMapName currentdict /CMap =
defineresource pop\\nend\\nend';\n\t    };\n\n\t    =
PDFFont.prototype.registerAFM =3D function(name) {\n\t      var =
_ref;\n\t      this.name =3D name;\n\t      return _ref =3D this.font, =
this.ascender =3D _ref.ascender, this.decender =3D _ref.decender, =
this.bbox =3D _ref.bbox, this.lineGap =3D _ref.lineGap, _ref;\n\t    =
};\n\n\t    PDFFont.prototype.embedAFM =3D function() {\n\t      =
this.dictionary.data =3D {\n\t        Type: 'Font',\n\t        BaseFont: =
this.name,\n\t        Subtype: 'Type1',\n\t        Encoding: =
'WinAnsiEncoding'\n\t      };\n\t      return this.dictionary.end();\n\t =
   };\n\n\t    PDFFont.prototype.widthOfString =3D function(string, =
size) {\n\t      var charCode, i, scale, width, _i, _ref;\n\t      =
string =3D '' + string;\n\t      width =3D 0;\n\t      for (i =3D _i =3D =
0, _ref =3D string.length; 0 &lt;=3D _ref ? _i &lt; _ref : _i &gt; _ref; =
i =3D 0 &lt;=3D _ref ? ++_i : --_i) {\n\t        charCode =3D =
string.charCodeAt(i);\n\t        width +=3D =
this.font.widthOfGlyph(this.font.characterToGlyph(charCode)) || 0;\n\t   =
   }\n\t      scale =3D size / 1000;\n\t      return width * scale;\n\t  =
  };\n\n\t    PDFFont.prototype.lineHeight =3D function(size, =
includeGap) {\n\t      var gap;\n\t      if (includeGap =3D=3D null) =
{\n\t        includeGap =3D false;\n\t      }\n\t      gap =3D =
includeGap ? this.lineGap : 0;\n\t      return (this.ascender + gap - =
this.decender) / 1000 * size;\n\t    };\n\n\t    return PDFFont;\n\n\t  =
})();\n\n\t  module.exports =3D PDFFont;\n\n\t}).call(this);\n\n\t/* =
WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2).Buffer, =
\"/\"))\n\n/***/ },\n/* 71 */\n/***/ function(module, exports, =
__webpack_require__) {\n\n\t// Generated by CoffeeScript =
1.7.1\n\t(function() {\n\t  var CmapTable, DFont, Data, Directory, =
GlyfTable, HeadTable, HheaTable, HmtxTable, LocaTable, MaxpTable, =
NameTable, OS2Table, PostTable, TTFFont, fs;\n\n\t  fs =3D =
__webpack_require__(44);\n\n\t  Data =3D __webpack_require__(72);\n\n\t  =
DFont =3D __webpack_require__(73);\n\n\t  Directory =3D =
__webpack_require__(74);\n\n\t  NameTable =3D =
__webpack_require__(75);\n\n\t  HeadTable =3D =
__webpack_require__(78);\n\n\t  CmapTable =3D =
__webpack_require__(79);\n\n\t  HmtxTable =3D =
__webpack_require__(80);\n\n\t  HheaTable =3D =
__webpack_require__(81);\n\n\t  MaxpTable =3D =
__webpack_require__(82);\n\n\t  PostTable =3D =
__webpack_require__(83);\n\n\t  OS2Table =3D =
__webpack_require__(84);\n\n\t  LocaTable =3D =
__webpack_require__(85);\n\n\t  GlyfTable =3D =
__webpack_require__(86);\n\n\t  TTFFont =3D (function() {\n\t    =
TTFFont.open =3D function(filename, name) {\n\t      var contents;\n\t   =
   contents =3D fs.readFileSync(filename);\n\t      return new =
TTFFont(contents, name);\n\t    };\n\n\t    TTFFont.fromDFont =3D =
function(filename, family) {\n\t      var dfont;\n\t      dfont =3D =
DFont.open(filename);\n\t      return new =
TTFFont(dfont.getNamedFont(family));\n\t    };\n\n\t    =
TTFFont.fromBuffer =3D function(buffer, family) {\n\t      var dfont, e, =
ttf;\n\t      try {\n\t        ttf =3D new TTFFont(buffer, family);\n\t  =
      if (!(ttf.head.exists &amp;&amp; ttf.name.exists &amp;&amp; =
ttf.cmap.exists)) {\n\t          dfont =3D new DFont(buffer);\n\t        =
  ttf =3D new TTFFont(dfont.getNamedFont(family));\n\t          if =
(!(ttf.head.exists &amp;&amp; ttf.name.exists &amp;&amp; =
ttf.cmap.exists)) {\n\t            throw new Error('Invalid TTF file in =
DFont');\n\t          }\n\t        }\n\t        return ttf;\n\t      } =
catch (_error) {\n\t        e =3D _error;\n\t        throw new =
Error('Unknown font format in buffer: ' + e.message);\n\t      }\n\t    =
};\n\n\t    function TTFFont(rawData, name) {\n\t      var data, i, =
numFonts, offset, offsets, version, _i, _j, _len;\n\t      this.rawData =
=3D rawData;\n\t      data =3D this.contents =3D new =
Data(this.rawData);\n\t      if (data.readString(4) =3D=3D=3D 'ttcf') =
{\n\t        if (!name) {\n\t          throw new Error(\"Must specify a =
font name for TTC files.\");\n\t        }\n\t        version =3D =
data.readInt();\n\t        numFonts =3D data.readInt();\n\t        =
offsets =3D [];\n\t        for (i =3D _i =3D 0; 0 &lt;=3D numFonts ? _i =
&lt; numFonts : _i &gt; numFonts; i =3D 0 &lt;=3D numFonts ? ++_i : =
--_i) {\n\t          offsets[i] =3D data.readInt();\n\t        }\n\t     =
   for (i =3D _j =3D 0, _len =3D offsets.length; _j &lt; _len; i =3D =
++_j) {\n\t          offset =3D offsets[i];\n\t          data.pos =3D =
offset;\n\t          this.parse();\n\t          if =
(this.name.postscriptName =3D=3D=3D name) {\n\t            return;\n\t   =
       }\n\t        }\n\t        throw new Error(\"Font \" + name + \" =
not found in TTC file.\");\n\t      } else {\n\t        data.pos =3D =
0;\n\t        this.parse();\n\t      }\n\t    }\n\n\t    =
TTFFont.prototype.parse =3D function() {\n\t      this.directory =3D new =
Directory(this.contents);\n\t      this.head =3D new =
HeadTable(this);\n\t      this.name =3D new NameTable(this);\n\t      =
this.cmap =3D new CmapTable(this);\n\t      this.hhea =3D new =
HheaTable(this);\n\t      this.maxp =3D new MaxpTable(this);\n\t      =
this.hmtx =3D new HmtxTable(this);\n\t      this.post =3D new =
PostTable(this);\n\t      this.os2 =3D new OS2Table(this);\n\t      =
this.loca =3D new LocaTable(this);\n\t      this.glyf =3D new =
GlyfTable(this);\n\t      this.ascender =3D (this.os2.exists &amp;&amp; =
this.os2.ascender) || this.hhea.ascender;\n\t      this.decender =3D =
(this.os2.exists &amp;&amp; this.os2.decender) || =
this.hhea.decender;\n\t      this.lineGap =3D (this.os2.exists =
&amp;&amp; this.os2.lineGap) || this.hhea.lineGap;\n\t      return =
this.bbox =3D [this.head.xMin, this.head.yMin, this.head.xMax, =
this.head.yMax];\n\t    };\n\n\t    TTFFont.prototype.characterToGlyph =
=3D function(character) {\n\t      var _ref;\n\t      return ((_ref =3D =
this.cmap.unicode) !=3D null ? _ref.codeMap[character] : void 0) || =
0;\n\t    };\n\n\t    TTFFont.prototype.widthOfGlyph =3D function(glyph) =
{\n\t      var scale;\n\t      scale =3D 1000.0 / =
this.head.unitsPerEm;\n\t      return this.hmtx.forGlyph(glyph).advance =
* scale;\n\t    };\n\n\t    return TTFFont;\n\n\t  })();\n\n\t  =
module.exports =3D TTFFont;\n\n\t}).call(this);\n\n\n/***/ },\n/* 72 =
*/\n/***/ function(module, exports) {\n\n\t// Generated by CoffeeScript =
1.7.1\n\t(function() {\n\t  var Data;\n\n\t  Data =3D (function() {\n\t  =
  function Data(data) {\n\t      this.data =3D data !=3D null ? data : =
[];\n\t      this.pos =3D 0;\n\t      this.length =3D =
this.data.length;\n\t    }\n\n\t    Data.prototype.readByte =3D =
function() {\n\t      return this.data[this.pos++];\n\t    };\n\n\t    =
Data.prototype.writeByte =3D function(byte) {\n\t      return =
this.data[this.pos++] =3D byte;\n\t    };\n\n\t    Data.prototype.byteAt =
=3D function(index) {\n\t      return this.data[index];\n\t    };\n\n\t  =
  Data.prototype.readBool =3D function() {\n\t      return =
!!this.readByte();\n\t    };\n\n\t    Data.prototype.writeBool =3D =
function(val) {\n\t      return this.writeByte(val ? 1 : 0);\n\t    =
};\n\n\t    Data.prototype.readUInt32 =3D function() {\n\t      var b1, =
b2, b3, b4;\n\t      b1 =3D this.readByte() * 0x1000000;\n\t      b2 =3D =
this.readByte() &lt;&lt; 16;\n\t      b3 =3D this.readByte() &lt;&lt; =
8;\n\t      b4 =3D this.readByte();\n\t      return b1 + b2 + b3 + =
b4;\n\t    };\n\n\t    Data.prototype.writeUInt32 =3D function(val) =
{\n\t      this.writeByte((val &gt;&gt;&gt; 24) &amp; 0xff);\n\t      =
this.writeByte((val &gt;&gt; 16) &amp; 0xff);\n\t      =
this.writeByte((val &gt;&gt; 8) &amp; 0xff);\n\t      return =
this.writeByte(val &amp; 0xff);\n\t    };\n\n\t    =
Data.prototype.readInt32 =3D function() {\n\t      var int;\n\t      int =
=3D this.readUInt32();\n\t      if (int &gt;=3D 0x80000000) {\n\t        =
return int - 0x100000000;\n\t      } else {\n\t        return int;\n\t   =
   }\n\t    };\n\n\t    Data.prototype.writeInt32 =3D function(val) =
{\n\t      if (val &lt; 0) {\n\t        val +=3D 0x100000000;\n\t      =
}\n\t      return this.writeUInt32(val);\n\t    };\n\n\t    =
Data.prototype.readUInt16 =3D function() {\n\t      var b1, b2;\n\t      =
b1 =3D this.readByte() &lt;&lt; 8;\n\t      b2 =3D this.readByte();\n\t  =
    return b1 | b2;\n\t    };\n\n\t    Data.prototype.writeUInt16 =3D =
function(val) {\n\t      this.writeByte((val &gt;&gt; 8) &amp; =
0xff);\n\t      return this.writeByte(val &amp; 0xff);\n\t    };\n\n\t   =
 Data.prototype.readInt16 =3D function() {\n\t      var int;\n\t      =
int =3D this.readUInt16();\n\t      if (int &gt;=3D 0x8000) {\n\t        =
return int - 0x10000;\n\t      } else {\n\t        return int;\n\t      =
}\n\t    };\n\n\t    Data.prototype.writeInt16 =3D function(val) {\n\t   =
   if (val &lt; 0) {\n\t        val +=3D 0x10000;\n\t      }\n\t      =
return this.writeUInt16(val);\n\t    };\n\n\t    =
Data.prototype.readString =3D function(length) {\n\t      var i, ret, =
_i;\n\t      ret =3D [];\n\t      for (i =3D _i =3D 0; 0 &lt;=3D length =
? _i &lt; length : _i &gt; length; i =3D 0 &lt;=3D length ? ++_i : --_i) =
{\n\t        ret[i] =3D String.fromCharCode(this.readByte());\n\t      =
}\n\t      return ret.join('');\n\t    };\n\n\t    =
Data.prototype.writeString =3D function(val) {\n\t      var i, _i, _ref, =
_results;\n\t      _results =3D [];\n\t      for (i =3D _i =3D 0, _ref =
=3D val.length; 0 &lt;=3D _ref ? _i &lt; _ref : _i &gt; _ref; i =3D 0 =
&lt;=3D _ref ? ++_i : --_i) {\n\t        =
_results.push(this.writeByte(val.charCodeAt(i)));\n\t      }\n\t      =
return _results;\n\t    };\n\n\t    Data.prototype.stringAt =3D =
function(pos, length) {\n\t      this.pos =3D pos;\n\t      return =
this.readString(length);\n\t    };\n\n\t    Data.prototype.readShort =3D =
function() {\n\t      return this.readInt16();\n\t    };\n\n\t    =
Data.prototype.writeShort =3D function(val) {\n\t      return =
this.writeInt16(val);\n\t    };\n\n\t    Data.prototype.readLongLong =3D =
function() {\n\t      var b1, b2, b3, b4, b5, b6, b7, b8;\n\t      b1 =
=3D this.readByte();\n\t      b2 =3D this.readByte();\n\t      b3 =3D =
this.readByte();\n\t      b4 =3D this.readByte();\n\t      b5 =3D =
this.readByte();\n\t      b6 =3D this.readByte();\n\t      b7 =3D =
this.readByte();\n\t      b8 =3D this.readByte();\n\t      if (b1 &amp; =
0x80) {\n\t        return ((b1 ^ 0xff) * 0x100000000000000 + (b2 ^ 0xff) =
* 0x1000000000000 + (b3 ^ 0xff) * 0x10000000000 + (b4 ^ 0xff) * =
0x100000000 + (b5 ^ 0xff) * 0x1000000 + (b6 ^ 0xff) * 0x10000 + (b7 ^ =
0xff) * 0x100 + (b8 ^ 0xff) + 1) * -1;\n\t      }\n\t      return b1 * =
0x100000000000000 + b2 * 0x1000000000000 + b3 * 0x10000000000 + b4 * =
0x100000000 + b5 * 0x1000000 + b6 * 0x10000 + b7 * 0x100 + b8;\n\t    =
};\n\n\t    Data.prototype.writeLongLong =3D function(val) {\n\t      =
var high, low;\n\t      high =3D Math.floor(val / 0x100000000);\n\t      =
low =3D val &amp; 0xffffffff;\n\t      this.writeByte((high &gt;&gt; 24) =
&amp; 0xff);\n\t      this.writeByte((high &gt;&gt; 16) &amp; 0xff);\n\t =
     this.writeByte((high &gt;&gt; 8) &amp; 0xff);\n\t      =
this.writeByte(high &amp; 0xff);\n\t      this.writeByte((low &gt;&gt; =
24) &amp; 0xff);\n\t      this.writeByte((low &gt;&gt; 16) &amp; =
0xff);\n\t      this.writeByte((low &gt;&gt; 8) &amp; 0xff);\n\t      =
return this.writeByte(low &amp; 0xff);\n\t    };\n\n\t    =
Data.prototype.readInt =3D function() {\n\t      return =
this.readInt32();\n\t    };\n\n\t    Data.prototype.writeInt =3D =
function(val) {\n\t      return this.writeInt32(val);\n\t    };\n\n\t    =
Data.prototype.slice =3D function(start, end) {\n\t      return =
this.data.slice(start, end);\n\t    };\n\n\t    Data.prototype.read =3D =
function(bytes) {\n\t      var buf, i, _i;\n\t      buf =3D [];\n\t      =
for (i =3D _i =3D 0; 0 &lt;=3D bytes ? _i &lt; bytes : _i &gt; bytes; i =
=3D 0 &lt;=3D bytes ? ++_i : --_i) {\n\t        =
buf.push(this.readByte());\n\t      }\n\t      return buf;\n\t    =
};\n\n\t    Data.prototype.write =3D function(bytes) {\n\t      var =
byte, _i, _len, _results;\n\t      _results =3D [];\n\t      for (_i =3D =
0, _len =3D bytes.length; _i &lt; _len; _i++) {\n\t        byte =3D =
bytes[_i];\n\t        _results.push(this.writeByte(byte));\n\t      =
}\n\t      return _results;\n\t    };\n\n\t    return Data;\n\n\t  =
})();\n\n\t  module.exports =3D Data;\n\n\t}).call(this);\n\n\n/***/ =
},\n/* 73 */\n/***/ function(module, exports, __webpack_require__) =
{\n\n\t// Generated by CoffeeScript 1.7.1\n\t(function() {\n\t  var =
DFont, Data, Directory, NameTable, fs;\n\n\t  fs =3D =
__webpack_require__(44);\n\n\t  Data =3D __webpack_require__(72);\n\n\t  =
Directory =3D __webpack_require__(74);\n\n\t  NameTable =3D =
__webpack_require__(75);\n\n\t  DFont =3D (function() {\n\t    =
DFont.open =3D function(filename) {\n\t      var contents;\n\t      =
contents =3D fs.readFileSync(filename);\n\t      return new =
DFont(contents);\n\t    };\n\n\t    function DFont(contents) {\n\t      =
this.contents =3D new Data(contents);\n\t      =
this.parse(this.contents);\n\t    }\n\n\t    DFont.prototype.parse =3D =
function(data) {\n\t      var attr, b2, b3, b4, dataLength, dataOffset, =
dataOfs, entry, font, handle, i, id, j, len, length, mapLength, =
mapOffset, maxIndex, maxTypeIndex, name, nameListOffset, nameOfs, p, =
pos, refListOffset, type, typeListOffset, _i, _j;\n\t      dataOffset =
=3D data.readInt();\n\t      mapOffset =3D data.readInt();\n\t      =
dataLength =3D data.readInt();\n\t      mapLength =3D =
data.readInt();\n\t      this.map =3D {};\n\t      data.pos =3D =
mapOffset + 24;\n\t      typeListOffset =3D data.readShort() + =
mapOffset;\n\t      nameListOffset =3D data.readShort() + mapOffset;\n\t =
     data.pos =3D typeListOffset;\n\t      maxIndex =3D =
data.readShort();\n\t      for (i =3D _i =3D 0; _i &lt;=3D maxIndex; i =
=3D _i +=3D 1) {\n\t        type =3D data.readString(4);\n\t        =
maxTypeIndex =3D data.readShort();\n\t        refListOffset =3D =
data.readShort();\n\t        this.map[type] =3D {\n\t          list: =
[],\n\t          named: {}\n\t        };\n\t        pos =3D =
data.pos;\n\t        data.pos =3D typeListOffset + refListOffset;\n\t    =
    for (j =3D _j =3D 0; _j &lt;=3D maxTypeIndex; j =3D _j +=3D 1) {\n\t =
         id =3D data.readShort();\n\t          nameOfs =3D =
data.readShort();\n\t          attr =3D data.readByte();\n\t          b2 =
=3D data.readByte() &lt;&lt; 16;\n\t          b3 =3D data.readByte() =
&lt;&lt; 8;\n\t          b4 =3D data.readByte();\n\t          dataOfs =
=3D dataOffset + (0 | b2 | b3 | b4);\n\t          handle =3D =
data.readUInt32();\n\t          entry =3D {\n\t            id: id,\n\t   =
         attributes: attr,\n\t            offset: dataOfs,\n\t           =
 handle: handle\n\t          };\n\t          p =3D data.pos;\n\t         =
 if (nameOfs !=3D=3D -1 &amp;&amp; (nameListOffset + nameOfs &lt; =
mapOffset + mapLength)) {\n\t            data.pos =3D nameListOffset + =
nameOfs;\n\t            len =3D data.readByte();\n\t            =
entry.name =3D data.readString(len);\n\t          } else if (type =
=3D=3D=3D 'sfnt') {\n\t            data.pos =3D entry.offset;\n\t        =
    length =3D data.readUInt32();\n\t            font =3D {};\n\t        =
    font.contents =3D new Data(data.slice(data.pos, data.pos + =
length));\n\t            font.directory =3D new =
Directory(font.contents);\n\t            name =3D new =
NameTable(font);\n\t            entry.name =3D name.fontName[0].raw;\n\t =
         }\n\t          data.pos =3D p;\n\t          =
this.map[type].list.push(entry);\n\t          if (entry.name) {\n\t      =
      this.map[type].named[entry.name] =3D entry;\n\t          }\n\t     =
   }\n\t        data.pos =3D pos;\n\t      }\n\t    };\n\n\t    =
DFont.prototype.getNamedFont =3D function(name) {\n\t      var data, =
entry, length, pos, ret, _ref;\n\t      data =3D this.contents;\n\t      =
pos =3D data.pos;\n\t      entry =3D (_ref =3D this.map.sfnt) !=3D null =
? _ref.named[name] : void 0;\n\t      if (!entry) {\n\t        throw new =
Error(\"Font \" + name + \" not found in DFont file.\");\n\t      }\n\t  =
    data.pos =3D entry.offset;\n\t      length =3D =
data.readUInt32();\n\t      ret =3D data.slice(data.pos, data.pos + =
length);\n\t      data.pos =3D pos;\n\t      return ret;\n\t    };\n\n\t =
   return DFont;\n\n\t  })();\n\n\t  module.exports =3D =
DFont;\n\n\t}).call(this);\n\n\n/***/ },\n/* 74 */\n/***/ =
function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR =
INJECTION */(function(Buffer) {// Generated by CoffeeScript =
1.7.1\n\t(function() {\n\t  var Data, Directory,\n\t    __slice =3D =
[].slice;\n\n\t  Data =3D __webpack_require__(72);\n\n\t  Directory =3D =
(function() {\n\t    var checksum;\n\n\t    function Directory(data) =
{\n\t      var entry, i, _i, _ref;\n\t      this.scalarType =3D =
data.readInt();\n\t      this.tableCount =3D data.readShort();\n\t      =
this.searchRange =3D data.readShort();\n\t      this.entrySelector =3D =
data.readShort();\n\t      this.rangeShift =3D data.readShort();\n\t     =
 this.tables =3D {};\n\t      for (i =3D _i =3D 0, _ref =3D =
this.tableCount; 0 &lt;=3D _ref ? _i &lt; _ref : _i &gt; _ref; i =3D 0 =
&lt;=3D _ref ? ++_i : --_i) {\n\t        entry =3D {\n\t          tag: =
data.readString(4),\n\t          checksum: data.readInt(),\n\t          =
offset: data.readInt(),\n\t          length: data.readInt()\n\t        =
};\n\t        this.tables[entry.tag] =3D entry;\n\t      }\n\t    =
}\n\n\t    Directory.prototype.encode =3D function(tables) {\n\t      =
var adjustment, directory, directoryLength, entrySelector, headOffset, =
log2, offset, rangeShift, searchRange, sum, table, tableCount, =
tableData, tag;\n\t      tableCount =3D Object.keys(tables).length;\n\t  =
    log2 =3D Math.log(2);\n\t      searchRange =3D =
Math.floor(Math.log(tableCount) / log2) * 16;\n\t      entrySelector =3D =
Math.floor(searchRange / log2);\n\t      rangeShift =3D tableCount * 16 =
- searchRange;\n\t      directory =3D new Data;\n\t      =
directory.writeInt(this.scalarType);\n\t      =
directory.writeShort(tableCount);\n\t      =
directory.writeShort(searchRange);\n\t      =
directory.writeShort(entrySelector);\n\t      =
directory.writeShort(rangeShift);\n\t      directoryLength =3D =
tableCount * 16;\n\t      offset =3D directory.pos + =
directoryLength;\n\t      headOffset =3D null;\n\t      tableData =3D =
[];\n\t      for (tag in tables) {\n\t        table =3D tables[tag];\n\t =
       directory.writeString(tag);\n\t        =
directory.writeInt(checksum(table));\n\t        =
directory.writeInt(offset);\n\t        =
directory.writeInt(table.length);\n\t        tableData =3D =
tableData.concat(table);\n\t        if (tag =3D=3D=3D 'head') {\n\t      =
    headOffset =3D offset;\n\t        }\n\t        offset +=3D =
table.length;\n\t        while (offset % 4) {\n\t          =
tableData.push(0);\n\t          offset++;\n\t        }\n\t      }\n\t    =
  directory.write(tableData);\n\t      sum =3D =
checksum(directory.data);\n\t      adjustment =3D 0xB1B0AFBA - sum;\n\t  =
    directory.pos =3D headOffset + 8;\n\t      =
directory.writeUInt32(adjustment);\n\t      return new =
Buffer(directory.data);\n\t    };\n\n\t    checksum =3D function(data) =
{\n\t      var i, sum, tmp, _i, _ref;\n\t      data =3D =
__slice.call(data);\n\t      while (data.length % 4) {\n\t        =
data.push(0);\n\t      }\n\t      tmp =3D new Data(data);\n\t      sum =
=3D 0;\n\t      for (i =3D _i =3D 0, _ref =3D data.length; _i &lt; _ref; =
i =3D _i +=3D 4) {\n\t        sum +=3D tmp.readUInt32();\n\t      }\n\t  =
    return sum &amp; 0xFFFFFFFF;\n\t    };\n\n\t    return =
Directory;\n\n\t  })();\n\n\t  module.exports =3D =
Directory;\n\n\t}).call(this);\n\n\t/* WEBPACK VAR INJECTION =
*/}.call(exports, __webpack_require__(2).Buffer))\n\n/***/ },\n/* 75 =
*/\n/***/ function(module, exports, __webpack_require__) {\n\n\t// =
Generated by CoffeeScript 1.7.1\n\t(function() {\n\t  var Data, =
NameEntry, NameTable, Table, utils,\n\t    __hasProp =3D =
{}.hasOwnProperty,\n\t    __extends =3D function(child, parent) { for =
(var key in parent) { if (__hasProp.call(parent, key)) child[key] =3D =
parent[key]; } function ctor() { this.constructor =3D child; } =
ctor.prototype =3D parent.prototype; child.prototype =3D new ctor(); =
child.__super__ =3D parent.prototype; return child; };\n\n\t  Table =3D =
__webpack_require__(76);\n\n\t  Data =3D __webpack_require__(72);\n\n\t  =
utils =3D __webpack_require__(77);\n\n\t  NameTable =3D =
(function(_super) {\n\t    var subsetTag;\n\n\t    __extends(NameTable, =
_super);\n\n\t    function NameTable() {\n\t      return =
NameTable.__super__.constructor.apply(this, arguments);\n\t    }\n\n\t   =
 NameTable.prototype.tag =3D 'name';\n\n\t    NameTable.prototype.parse =
=3D function(data) {\n\t      var count, entries, entry, format, i, =
name, stringOffset, strings, text, _i, _j, _len, _name;\n\t      =
data.pos =3D this.offset;\n\t      format =3D data.readShort();\n\t      =
count =3D data.readShort();\n\t      stringOffset =3D =
data.readShort();\n\t      entries =3D [];\n\t      for (i =3D _i =3D 0; =
0 &lt;=3D count ? _i &lt; count : _i &gt; count; i =3D 0 &lt;=3D count ? =
++_i : --_i) {\n\t        entries.push({\n\t          platformID: =
data.readShort(),\n\t          encodingID: data.readShort(),\n\t         =
 languageID: data.readShort(),\n\t          nameID: =
data.readShort(),\n\t          length: data.readShort(),\n\t          =
offset: this.offset + stringOffset + data.readShort()\n\t        });\n\t =
     }\n\t      strings =3D {};\n\t      for (i =3D _j =3D 0, _len =3D =
entries.length; _j &lt; _len; i =3D ++_j) {\n\t        entry =3D =
entries[i];\n\t        data.pos =3D entry.offset;\n\t        text =3D =
data.readString(entry.length);\n\t        name =3D new NameEntry(text, =
entry);\n\t        if (strings[_name =3D entry.nameID] =3D=3D null) =
{\n\t          strings[_name] =3D [];\n\t        }\n\t        =
strings[entry.nameID].push(name);\n\t      }\n\t      this.strings =3D =
strings;\n\t      this.copyright =3D strings[0];\n\t      =
this.fontFamily =3D strings[1];\n\t      this.fontSubfamily =3D =
strings[2];\n\t      this.uniqueSubfamily =3D strings[3];\n\t      =
this.fontName =3D strings[4];\n\t      this.version =3D strings[5];\n\t  =
    this.postscriptName =3D =
strings[6][0].raw.replace(/[\\x00-\\x19\\x80-\\xff]/g, \"\");\n\t      =
this.trademark =3D strings[7];\n\t      this.manufacturer =3D =
strings[8];\n\t      this.designer =3D strings[9];\n\t      =
this.description =3D strings[10];\n\t      this.vendorUrl =3D =
strings[11];\n\t      this.designerUrl =3D strings[12];\n\t      =
this.license =3D strings[13];\n\t      this.licenseUrl =3D =
strings[14];\n\t      this.preferredFamily =3D strings[15];\n\t      =
this.preferredSubfamily =3D strings[17];\n\t      this.compatibleFull =
=3D strings[18];\n\t      return this.sampleText =3D strings[19];\n\t    =
};\n\n\t    subsetTag =3D \"AAAAAA\";\n\n\t    =
NameTable.prototype.encode =3D function() {\n\t      var id, list, =
nameID, nameTable, postscriptName, strCount, strTable, string, strings, =
table, val, _i, _len, _ref;\n\t      strings =3D {};\n\t      _ref =3D =
this.strings;\n\t      for (id in _ref) {\n\t        val =3D =
_ref[id];\n\t        strings[id] =3D val;\n\t      }\n\t      =
postscriptName =3D new NameEntry(\"\" + subsetTag + \"+\" + =
this.postscriptName, {\n\t        platformID: 1,\n\t        encodingID: =
0,\n\t        languageID: 0\n\t      });\n\t      strings[6] =3D =
[postscriptName];\n\t      subsetTag =3D =
utils.successorOf(subsetTag);\n\t      strCount =3D 0;\n\t      for (id =
in strings) {\n\t        list =3D strings[id];\n\t        if (list !=3D =
null) {\n\t          strCount +=3D list.length;\n\t        }\n\t      =
}\n\t      table =3D new Data;\n\t      strTable =3D new Data;\n\t      =
table.writeShort(0);\n\t      table.writeShort(strCount);\n\t      =
table.writeShort(6 + 12 * strCount);\n\t      for (nameID in strings) =
{\n\t        list =3D strings[nameID];\n\t        if (list !=3D null) =
{\n\t          for (_i =3D 0, _len =3D list.length; _i &lt; _len; _i++) =
{\n\t            string =3D list[_i];\n\t            =
table.writeShort(string.platformID);\n\t            =
table.writeShort(string.encodingID);\n\t            =
table.writeShort(string.languageID);\n\t            =
table.writeShort(nameID);\n\t            =
table.writeShort(string.length);\n\t            =
table.writeShort(strTable.pos);\n\t            =
strTable.writeString(string.raw);\n\t          }\n\t        }\n\t      =
}\n\t      return nameTable =3D {\n\t        postscriptName: =
postscriptName.raw,\n\t        table: =
table.data.concat(strTable.data)\n\t      };\n\t    };\n\n\t    return =
NameTable;\n\n\t  })(Table);\n\n\t  module.exports =3D NameTable;\n\n\t  =
NameEntry =3D (function() {\n\t    function NameEntry(raw, entry) {\n\t  =
    this.raw =3D raw;\n\t      this.length =3D this.raw.length;\n\t      =
this.platformID =3D entry.platformID;\n\t      this.encodingID =3D =
entry.encodingID;\n\t      this.languageID =3D entry.languageID;\n\t    =
}\n\n\t    return NameEntry;\n\n\t  })();\n\n\t}).call(this);\n\n\n/***/ =
},\n/* 76 */\n/***/ function(module, exports) {\n\n\t// Generated by =
CoffeeScript 1.7.1\n\t(function() {\n\t  var Table;\n\n\t  Table =3D =
(function() {\n\t    function Table(file) {\n\t      var info;\n\t      =
this.file =3D file;\n\t      info =3D =
this.file.directory.tables[this.tag];\n\t      this.exists =3D =
!!info;\n\t      if (info) {\n\t        this.offset =3D info.offset, =
this.length =3D info.length;\n\t        =
this.parse(this.file.contents);\n\t      }\n\t    }\n\n\t    =
Table.prototype.parse =3D function() {};\n\n\t    Table.prototype.encode =
=3D function() {};\n\n\t    Table.prototype.raw =3D function() {\n\t     =
 if (!this.exists) {\n\t        return null;\n\t      }\n\t      =
this.file.contents.pos =3D this.offset;\n\t      return =
this.file.contents.read(this.length);\n\t    };\n\n\t    return =
Table;\n\n\t  })();\n\n\t  module.exports =3D =
Table;\n\n\t}).call(this);\n\n\n/***/ },\n/* 77 */\n/***/ =
function(module, exports) {\n\n\t// Generated by CoffeeScript =
1.7.1\n\n\t/*\n\t * An implementation of Ruby's string.succ method.\n\t =
* By Devon Govett\n\t *\n\t * Returns the successor to str. The =
successor is calculated by incrementing characters starting \n\t * from =
the rightmost alphanumeric (or the rightmost character if there are no =
alphanumerics) in the\n\t * string. Incrementing a digit always results =
in another digit, and incrementing a letter results in\n\t * another =
letter of the same case.\n\t *\n\t * If the increment generates a carry, =
the character to the left of it is incremented. This \n\t * process =
repeats until there is no carry, adding an additional character if =
necessary.\n\t *\n\t * succ(\"abcd\")      =3D=3D \"abce\"\n\t * =
succ(\"THX1138\")   =3D=3D \"THX1139\"\n\t * =
succ(\"&lt;&lt;koala&gt;&gt;\") =3D=3D \"&lt;&lt;koalb&gt;&gt;\"\n\t * =
succ(\"1999zzz\")   =3D=3D \"2000aaa\"\n\t * succ(\"ZZZ9999\")   =3D=3D =
\"AAAA0000\"\n\t */\n\n\t(function() {\n\t  exports.successorOf =3D =
function(input) {\n\t    var added, alphabet, carry, i, index, =
isUpperCase, last, length, next, result;\n\t    alphabet =3D =
'abcdefghijklmnopqrstuvwxyz';\n\t    length =3D alphabet.length;\n\t    =
result =3D input;\n\t    i =3D input.length;\n\t    while (i &gt;=3D 0) =
{\n\t      last =3D input.charAt(--i);\n\t      if (isNaN(last)) {\n\t   =
     index =3D alphabet.indexOf(last.toLowerCase());\n\t        if =
(index =3D=3D=3D -1) {\n\t          next =3D last;\n\t          carry =
=3D true;\n\t        } else {\n\t          next =3D =
alphabet.charAt((index + 1) % length);\n\t          isUpperCase =3D last =
=3D=3D=3D last.toUpperCase();\n\t          if (isUpperCase) {\n\t        =
    next =3D next.toUpperCase();\n\t          }\n\t          carry =3D =
index + 1 &gt;=3D length;\n\t          if (carry &amp;&amp; i =3D=3D=3D =
0) {\n\t            added =3D isUpperCase ? 'A' : 'a';\n\t            =
result =3D added + next + result.slice(1);\n\t            break;\n\t     =
     }\n\t        }\n\t      } else {\n\t        next =3D +last + 1;\n\t =
       carry =3D next &gt; 9;\n\t        if (carry) {\n\t          next =
=3D 0;\n\t        }\n\t        if (carry &amp;&amp; i =3D=3D=3D 0) {\n\t =
         result =3D '1' + next + result.slice(1);\n\t          =
break;\n\t        }\n\t      }\n\t      result =3D result.slice(0, i) + =
next + result.slice(i + 1);\n\t      if (!carry) {\n\t        break;\n\t =
     }\n\t    }\n\t    return result;\n\t  };\n\n\t  exports.invert =3D =
function(object) {\n\t    var key, ret, val;\n\t    ret =3D {};\n\t    =
for (key in object) {\n\t      val =3D object[key];\n\t      ret[val] =
=3D key;\n\t    }\n\t    return ret;\n\t  =
};\n\n\t}).call(this);\n\n\n/***/ },\n/* 78 */\n/***/ function(module, =
exports, __webpack_require__) {\n\n\t// Generated by CoffeeScript =
1.7.1\n\t(function() {\n\t  var Data, HeadTable, Table,\n\t    __hasProp =
=3D {}.hasOwnProperty,\n\t    __extends =3D function(child, parent) { =
for (var key in parent) { if (__hasProp.call(parent, key)) child[key] =
=3D parent[key]; } function ctor() { this.constructor =3D child; } =
ctor.prototype =3D parent.prototype; child.prototype =3D new ctor(); =
child.__super__ =3D parent.prototype; return child; };\n\n\t  Table =3D =
__webpack_require__(76);\n\n\t  Data =3D __webpack_require__(72);\n\n\t  =
HeadTable =3D (function(_super) {\n\t    __extends(HeadTable, =
_super);\n\n\t    function HeadTable() {\n\t      return =
HeadTable.__super__.constructor.apply(this, arguments);\n\t    }\n\n\t   =
 HeadTable.prototype.tag =3D 'head';\n\n\t    HeadTable.prototype.parse =
=3D function(data) {\n\t      data.pos =3D this.offset;\n\t      =
this.version =3D data.readInt();\n\t      this.revision =3D =
data.readInt();\n\t      this.checkSumAdjustment =3D data.readInt();\n\t =
     this.magicNumber =3D data.readInt();\n\t      this.flags =3D =
data.readShort();\n\t      this.unitsPerEm =3D data.readShort();\n\t     =
 this.created =3D data.readLongLong();\n\t      this.modified =3D =
data.readLongLong();\n\t      this.xMin =3D data.readShort();\n\t      =
this.yMin =3D data.readShort();\n\t      this.xMax =3D =
data.readShort();\n\t      this.yMax =3D data.readShort();\n\t      =
this.macStyle =3D data.readShort();\n\t      this.lowestRecPPEM =3D =
data.readShort();\n\t      this.fontDirectionHint =3D =
data.readShort();\n\t      this.indexToLocFormat =3D =
data.readShort();\n\t      return this.glyphDataFormat =3D =
data.readShort();\n\t    };\n\n\t    HeadTable.prototype.encode =3D =
function(loca) {\n\t      var table;\n\t      table =3D new Data;\n\t    =
  table.writeInt(this.version);\n\t      =
table.writeInt(this.revision);\n\t      =
table.writeInt(this.checkSumAdjustment);\n\t      =
table.writeInt(this.magicNumber);\n\t      =
table.writeShort(this.flags);\n\t      =
table.writeShort(this.unitsPerEm);\n\t      =
table.writeLongLong(this.created);\n\t      =
table.writeLongLong(this.modified);\n\t      =
table.writeShort(this.xMin);\n\t      table.writeShort(this.yMin);\n\t   =
   table.writeShort(this.xMax);\n\t      =
table.writeShort(this.yMax);\n\t      =
table.writeShort(this.macStyle);\n\t      =
table.writeShort(this.lowestRecPPEM);\n\t      =
table.writeShort(this.fontDirectionHint);\n\t      =
table.writeShort(loca.type);\n\t      =
table.writeShort(this.glyphDataFormat);\n\t      return table.data;\n\t  =
  };\n\n\t    return HeadTable;\n\n\t  })(Table);\n\n\t  module.exports =
=3D HeadTable;\n\n\t}).call(this);\n\n\n/***/ },\n/* 79 */\n/***/ =
function(module, exports, __webpack_require__) {\n\n\t// Generated by =
CoffeeScript 1.7.1\n\t(function() {\n\t  var CmapEntry, CmapTable, Data, =
Table,\n\t    __hasProp =3D {}.hasOwnProperty,\n\t    __extends =3D =
function(child, parent) { for (var key in parent) { if =
(__hasProp.call(parent, key)) child[key] =3D parent[key]; } function =
ctor() { this.constructor =3D child; } ctor.prototype =3D =
parent.prototype; child.prototype =3D new ctor(); child.__super__ =3D =
parent.prototype; return child; };\n\n\t  Table =3D =
__webpack_require__(76);\n\n\t  Data =3D __webpack_require__(72);\n\n\t  =
CmapTable =3D (function(_super) {\n\t    __extends(CmapTable, =
_super);\n\n\t    function CmapTable() {\n\t      return =
CmapTable.__super__.constructor.apply(this, arguments);\n\t    }\n\n\t   =
 CmapTable.prototype.tag =3D 'cmap';\n\n\t    CmapTable.prototype.parse =
=3D function(data) {\n\t      var entry, i, tableCount, _i;\n\t      =
data.pos =3D this.offset;\n\t      this.version =3D =
data.readUInt16();\n\t      tableCount =3D data.readUInt16();\n\t      =
this.tables =3D [];\n\t      this.unicode =3D null;\n\t      for (i =3D =
_i =3D 0; 0 &lt;=3D tableCount ? _i &lt; tableCount : _i &gt; =
tableCount; i =3D 0 &lt;=3D tableCount ? ++_i : --_i) {\n\t        entry =
=3D new CmapEntry(data, this.offset);\n\t        =
this.tables.push(entry);\n\t        if (entry.isUnicode) {\n\t          =
if (this.unicode =3D=3D null) {\n\t            this.unicode =3D =
entry;\n\t          }\n\t        }\n\t      }\n\t      return true;\n\t  =
  };\n\n\t    CmapTable.encode =3D function(charmap, encoding) {\n\t     =
 var result, table;\n\t      if (encoding =3D=3D null) {\n\t        =
encoding =3D 'macroman';\n\t      }\n\t      result =3D =
CmapEntry.encode(charmap, encoding);\n\t      table =3D new Data;\n\t    =
  table.writeUInt16(0);\n\t      table.writeUInt16(1);\n\t      =
result.table =3D table.data.concat(result.subtable);\n\t      return =
result;\n\t    };\n\n\t    return CmapTable;\n\n\t  })(Table);\n\n\t  =
CmapEntry =3D (function() {\n\t    function CmapEntry(data, offset) =
{\n\t      var code, count, endCode, glyphId, glyphIds, i, idDelta, =
idRangeOffset, index, saveOffset, segCount, segCountX2, start, =
startCode, tail, _i, _j, _k, _len;\n\t      this.platformID =3D =
data.readUInt16();\n\t      this.encodingID =3D data.readShort();\n\t    =
  this.offset =3D offset + data.readInt();\n\t      saveOffset =3D =
data.pos;\n\t      data.pos =3D this.offset;\n\t      this.format =3D =
data.readUInt16();\n\t      this.length =3D data.readUInt16();\n\t      =
this.language =3D data.readUInt16();\n\t      this.isUnicode =3D =
(this.platformID =3D=3D=3D 3 &amp;&amp; this.encodingID =3D=3D=3D 1 =
&amp;&amp; this.format =3D=3D=3D 4) || this.platformID =3D=3D=3D 0 =
&amp;&amp; this.format =3D=3D=3D 4;\n\t      this.codeMap =3D {};\n\t    =
  switch (this.format) {\n\t        case 0:\n\t          for (i =3D _i =
=3D 0; _i &lt; 256; i =3D ++_i) {\n\t            this.codeMap[i] =3D =
data.readByte();\n\t          }\n\t          break;\n\t        case =
4:\n\t          segCountX2 =3D data.readUInt16();\n\t          segCount =
=3D segCountX2 / 2;\n\t          data.pos +=3D 6;\n\t          endCode =
=3D (function() {\n\t            var _j, _results;\n\t            =
_results =3D [];\n\t            for (i =3D _j =3D 0; 0 &lt;=3D segCount =
? _j &lt; segCount : _j &gt; segCount; i =3D 0 &lt;=3D segCount ? ++_j : =
--_j) {\n\t              _results.push(data.readUInt16());\n\t           =
 }\n\t            return _results;\n\t          })();\n\t          =
data.pos +=3D 2;\n\t          startCode =3D (function() {\n\t            =
var _j, _results;\n\t            _results =3D [];\n\t            for (i =
=3D _j =3D 0; 0 &lt;=3D segCount ? _j &lt; segCount : _j &gt; segCount; =
i =3D 0 &lt;=3D segCount ? ++_j : --_j) {\n\t              =
_results.push(data.readUInt16());\n\t            }\n\t            return =
_results;\n\t          })();\n\t          idDelta =3D (function() {\n\t  =
          var _j, _results;\n\t            _results =3D [];\n\t          =
  for (i =3D _j =3D 0; 0 &lt;=3D segCount ? _j &lt; segCount : _j &gt; =
segCount; i =3D 0 &lt;=3D segCount ? ++_j : --_j) {\n\t              =
_results.push(data.readUInt16());\n\t            }\n\t            return =
_results;\n\t          })();\n\t          idRangeOffset =3D (function() =
{\n\t            var _j, _results;\n\t            _results =3D [];\n\t   =
         for (i =3D _j =3D 0; 0 &lt;=3D segCount ? _j &lt; segCount : _j =
&gt; segCount; i =3D 0 &lt;=3D segCount ? ++_j : --_j) {\n\t             =
 _results.push(data.readUInt16());\n\t            }\n\t            =
return _results;\n\t          })();\n\t          count =3D (this.length =
- data.pos + this.offset) / 2;\n\t          glyphIds =3D (function() =
{\n\t            var _j, _results;\n\t            _results =3D [];\n\t   =
         for (i =3D _j =3D 0; 0 &lt;=3D count ? _j &lt; count : _j &gt; =
count; i =3D 0 &lt;=3D count ? ++_j : --_j) {\n\t              =
_results.push(data.readUInt16());\n\t            }\n\t            return =
_results;\n\t          })();\n\t          for (i =3D _j =3D 0, _len =3D =
endCode.length; _j &lt; _len; i =3D ++_j) {\n\t            tail =3D =
endCode[i];\n\t            start =3D startCode[i];\n\t            for =
(code =3D _k =3D start; start &lt;=3D tail ? _k &lt;=3D tail : _k =
&gt;=3D tail; code =3D start &lt;=3D tail ? ++_k : --_k) {\n\t           =
   if (idRangeOffset[i] =3D=3D=3D 0) {\n\t                glyphId =3D =
code + idDelta[i];\n\t              } else {\n\t                index =
=3D idRangeOffset[i] / 2 + (code - start) - (segCount - i);\n\t          =
      glyphId =3D glyphIds[index] || 0;\n\t                if (glyphId =
!=3D=3D 0) {\n\t                  glyphId +=3D idDelta[i];\n\t           =
     }\n\t              }\n\t              this.codeMap[code] =3D =
glyphId &amp; 0xFFFF;\n\t            }\n\t          }\n\t      }\n\t     =
 data.pos =3D saveOffset;\n\t    }\n\n\t    CmapEntry.encode =3D =
function(charmap, encoding) {\n\t      var charMap, code, codeMap, =
codes, delta, deltas, diff, endCode, endCodes, entrySelector, glyphIDs, =
i, id, indexes, last, map, nextID, offset, old, rangeOffsets, =
rangeShift, result, searchRange, segCount, segCountX2, startCode, =
startCodes, startGlyph, subtable, _i, _j, _k, _l, _len, _len1, _len2, =
_len3, _len4, _len5, _len6, _len7, _m, _n, _name, _o, _p, _q;\n\t      =
subtable =3D new Data;\n\t      codes =3D =
Object.keys(charmap).sort(function(a, b) {\n\t        return a - b;\n\t  =
    });\n\t      switch (encoding) {\n\t        case 'macroman':\n\t     =
     id =3D 0;\n\t          indexes =3D (function() {\n\t            var =
_i, _results;\n\t            _results =3D [];\n\t            for (i =3D =
_i =3D 0; _i &lt; 256; i =3D ++_i) {\n\t              =
_results.push(0);\n\t            }\n\t            return _results;\n\t   =
       })();\n\t          map =3D {\n\t            0: 0\n\t          =
};\n\t          codeMap =3D {};\n\t          for (_i =3D 0, _len =3D =
codes.length; _i &lt; _len; _i++) {\n\t            code =3D =
codes[_i];\n\t            if (map[_name =3D charmap[code]] =3D=3D null) =
{\n\t              map[_name] =3D ++id;\n\t            }\n\t            =
codeMap[code] =3D {\n\t              old: charmap[code],\n\t             =
 \"new\": map[charmap[code]]\n\t            };\n\t            =
indexes[code] =3D map[charmap[code]];\n\t          }\n\t          =
subtable.writeUInt16(1);\n\t          subtable.writeUInt16(0);\n\t       =
   subtable.writeUInt32(12);\n\t          subtable.writeUInt16(0);\n\t   =
       subtable.writeUInt16(262);\n\t          =
subtable.writeUInt16(0);\n\t          subtable.write(indexes);\n\t       =
   return result =3D {\n\t            charMap: codeMap,\n\t            =
subtable: subtable.data,\n\t            maxGlyphID: id + 1\n\t          =
};\n\t        case 'unicode':\n\t          startCodes =3D [];\n\t        =
  endCodes =3D [];\n\t          nextID =3D 0;\n\t          map =3D =
{};\n\t          charMap =3D {};\n\t          last =3D diff =3D =
null;\n\t          for (_j =3D 0, _len1 =3D codes.length; _j &lt; _len1; =
_j++) {\n\t            code =3D codes[_j];\n\t            old =3D =
charmap[code];\n\t            if (map[old] =3D=3D null) {\n\t            =
  map[old] =3D ++nextID;\n\t            }\n\t            charMap[code] =
=3D {\n\t              old: old,\n\t              \"new\": map[old]\n\t  =
          };\n\t            delta =3D map[old] - code;\n\t            if =
((last =3D=3D null) || delta !=3D=3D diff) {\n\t              if (last) =
{\n\t                endCodes.push(last);\n\t              }\n\t         =
     startCodes.push(code);\n\t              diff =3D delta;\n\t         =
   }\n\t            last =3D code;\n\t          }\n\t          if (last) =
{\n\t            endCodes.push(last);\n\t          }\n\t          =
endCodes.push(0xFFFF);\n\t          startCodes.push(0xFFFF);\n\t         =
 segCount =3D startCodes.length;\n\t          segCountX2 =3D segCount * =
2;\n\t          searchRange =3D 2 * Math.pow(Math.log(segCount) / =
Math.LN2, 2);\n\t          entrySelector =3D Math.log(searchRange / 2) / =
Math.LN2;\n\t          rangeShift =3D 2 * segCount - searchRange;\n\t    =
      deltas =3D [];\n\t          rangeOffsets =3D [];\n\t          =
glyphIDs =3D [];\n\t          for (i =3D _k =3D 0, _len2 =3D =
startCodes.length; _k &lt; _len2; i =3D ++_k) {\n\t            startCode =
=3D startCodes[i];\n\t            endCode =3D endCodes[i];\n\t           =
 if (startCode =3D=3D=3D 0xFFFF) {\n\t              deltas.push(0);\n\t  =
            rangeOffsets.push(0);\n\t              break;\n\t            =
}\n\t            startGlyph =3D charMap[startCode][\"new\"];\n\t         =
   if (startCode - startGlyph &gt;=3D 0x8000) {\n\t              =
deltas.push(0);\n\t              rangeOffsets.push(2 * (glyphIDs.length =
+ segCount - i));\n\t              for (code =3D _l =3D startCode; =
startCode &lt;=3D endCode ? _l &lt;=3D endCode : _l &gt;=3D endCode; =
code =3D startCode &lt;=3D endCode ? ++_l : --_l) {\n\t                =
glyphIDs.push(charMap[code][\"new\"]);\n\t              }\n\t            =
} else {\n\t              deltas.push(startGlyph - startCode);\n\t       =
       rangeOffsets.push(0);\n\t            }\n\t          }\n\t         =
 subtable.writeUInt16(3);\n\t          subtable.writeUInt16(1);\n\t      =
    subtable.writeUInt32(12);\n\t          subtable.writeUInt16(4);\n\t  =
        subtable.writeUInt16(16 + segCount * 8 + glyphIDs.length * =
2);\n\t          subtable.writeUInt16(0);\n\t          =
subtable.writeUInt16(segCountX2);\n\t          =
subtable.writeUInt16(searchRange);\n\t          =
subtable.writeUInt16(entrySelector);\n\t          =
subtable.writeUInt16(rangeShift);\n\t          for (_m =3D 0, _len3 =3D =
endCodes.length; _m &lt; _len3; _m++) {\n\t            code =3D =
endCodes[_m];\n\t            subtable.writeUInt16(code);\n\t          =
}\n\t          subtable.writeUInt16(0);\n\t          for (_n =3D 0, =
_len4 =3D startCodes.length; _n &lt; _len4; _n++) {\n\t            code =
=3D startCodes[_n];\n\t            subtable.writeUInt16(code);\n\t       =
   }\n\t          for (_o =3D 0, _len5 =3D deltas.length; _o &lt; _len5; =
_o++) {\n\t            delta =3D deltas[_o];\n\t            =
subtable.writeUInt16(delta);\n\t          }\n\t          for (_p =3D 0, =
_len6 =3D rangeOffsets.length; _p &lt; _len6; _p++) {\n\t            =
offset =3D rangeOffsets[_p];\n\t            =
subtable.writeUInt16(offset);\n\t          }\n\t          for (_q =3D 0, =
_len7 =3D glyphIDs.length; _q &lt; _len7; _q++) {\n\t            id =3D =
glyphIDs[_q];\n\t            subtable.writeUInt16(id);\n\t          =
}\n\t          return result =3D {\n\t            charMap: charMap,\n\t  =
          subtable: subtable.data,\n\t            maxGlyphID: nextID + =
1\n\t          };\n\t      }\n\t    };\n\n\t    return CmapEntry;\n\n\t  =
})();\n\n\t  module.exports =3D =
CmapTable;\n\n\t}).call(this);\n\n\n/***/ },\n/* 80 */\n/***/ =
function(module, exports, __webpack_require__) {\n\n\t// Generated by =
CoffeeScript 1.7.1\n\t(function() {\n\t  var Data, HmtxTable, Table,\n\t =
   __hasProp =3D {}.hasOwnProperty,\n\t    __extends =3D function(child, =
parent) { for (var key in parent) { if (__hasProp.call(parent, key)) =
child[key] =3D parent[key]; } function ctor() { this.constructor =3D =
child; } ctor.prototype =3D parent.prototype; child.prototype =3D new =
ctor(); child.__super__ =3D parent.prototype; return child; };\n\n\t  =
Table =3D __webpack_require__(76);\n\n\t  Data =3D =
__webpack_require__(72);\n\n\t  HmtxTable =3D (function(_super) {\n\t    =
__extends(HmtxTable, _super);\n\n\t    function HmtxTable() {\n\t      =
return HmtxTable.__super__.constructor.apply(this, arguments);\n\t    =
}\n\n\t    HmtxTable.prototype.tag =3D 'hmtx';\n\n\t    =
HmtxTable.prototype.parse =3D function(data) {\n\t      var i, last, =
lsbCount, m, _i, _j, _ref, _results;\n\t      data.pos =3D =
this.offset;\n\t      this.metrics =3D [];\n\t      for (i =3D _i =3D 0, =
_ref =3D this.file.hhea.numberOfMetrics; 0 &lt;=3D _ref ? _i &lt; _ref : =
_i &gt; _ref; i =3D 0 &lt;=3D _ref ? ++_i : --_i) {\n\t        =
this.metrics.push({\n\t          advance: data.readUInt16(),\n\t         =
 lsb: data.readInt16()\n\t        });\n\t      }\n\t      lsbCount =3D =
this.file.maxp.numGlyphs - this.file.hhea.numberOfMetrics;\n\t      =
this.leftSideBearings =3D (function() {\n\t        var _j, _results;\n\t =
       _results =3D [];\n\t        for (i =3D _j =3D 0; 0 &lt;=3D =
lsbCount ? _j &lt; lsbCount : _j &gt; lsbCount; i =3D 0 &lt;=3D lsbCount =
? ++_j : --_j) {\n\t          _results.push(data.readInt16());\n\t       =
 }\n\t        return _results;\n\t      })();\n\t      this.widths =3D =
(function() {\n\t        var _j, _len, _ref1, _results;\n\t        _ref1 =
=3D this.metrics;\n\t        _results =3D [];\n\t        for (_j =3D 0, =
_len =3D _ref1.length; _j &lt; _len; _j++) {\n\t          m =3D =
_ref1[_j];\n\t          _results.push(m.advance);\n\t        }\n\t       =
 return _results;\n\t      }).call(this);\n\t      last =3D =
this.widths[this.widths.length - 1];\n\t      _results =3D [];\n\t      =
for (i =3D _j =3D 0; 0 &lt;=3D lsbCount ? _j &lt; lsbCount : _j &gt; =
lsbCount; i =3D 0 &lt;=3D lsbCount ? ++_j : --_j) {\n\t        =
_results.push(this.widths.push(last));\n\t      }\n\t      return =
_results;\n\t    };\n\n\t    HmtxTable.prototype.forGlyph =3D =
function(id) {\n\t      var metrics;\n\t      if (id in this.metrics) =
{\n\t        return this.metrics[id];\n\t      }\n\t      return metrics =
=3D {\n\t        advance: this.metrics[this.metrics.length - =
1].advance,\n\t        lsb: this.leftSideBearings[id - =
this.metrics.length]\n\t      };\n\t    };\n\n\t    =
HmtxTable.prototype.encode =3D function(mapping) {\n\t      var id, =
metric, table, _i, _len;\n\t      table =3D new Data;\n\t      for (_i =
=3D 0, _len =3D mapping.length; _i &lt; _len; _i++) {\n\t        id =3D =
mapping[_i];\n\t        metric =3D this.forGlyph(id);\n\t        =
table.writeUInt16(metric.advance);\n\t        =
table.writeUInt16(metric.lsb);\n\t      }\n\t      return =
table.data;\n\t    };\n\n\t    return HmtxTable;\n\n\t  })(Table);\n\n\t =
 module.exports =3D HmtxTable;\n\n\t}).call(this);\n\n\n/***/ },\n/* 81 =
*/\n/***/ function(module, exports, __webpack_require__) {\n\n\t// =
Generated by CoffeeScript 1.7.1\n\t(function() {\n\t  var Data, =
HheaTable, Table,\n\t    __hasProp =3D {}.hasOwnProperty,\n\t    =
__extends =3D function(child, parent) { for (var key in parent) { if =
(__hasProp.call(parent, key)) child[key] =3D parent[key]; } function =
ctor() { this.constructor =3D child; } ctor.prototype =3D =
parent.prototype; child.prototype =3D new ctor(); child.__super__ =3D =
parent.prototype; return child; };\n\n\t  Table =3D =
__webpack_require__(76);\n\n\t  Data =3D __webpack_require__(72);\n\n\t  =
HheaTable =3D (function(_super) {\n\t    __extends(HheaTable, =
_super);\n\n\t    function HheaTable() {\n\t      return =
HheaTable.__super__.constructor.apply(this, arguments);\n\t    }\n\n\t   =
 HheaTable.prototype.tag =3D 'hhea';\n\n\t    HheaTable.prototype.parse =
=3D function(data) {\n\t      data.pos =3D this.offset;\n\t      =
this.version =3D data.readInt();\n\t      this.ascender =3D =
data.readShort();\n\t      this.decender =3D data.readShort();\n\t      =
this.lineGap =3D data.readShort();\n\t      this.advanceWidthMax =3D =
data.readShort();\n\t      this.minLeftSideBearing =3D =
data.readShort();\n\t      this.minRightSideBearing =3D =
data.readShort();\n\t      this.xMaxExtent =3D data.readShort();\n\t     =
 this.caretSlopeRise =3D data.readShort();\n\t      this.caretSlopeRun =
=3D data.readShort();\n\t      this.caretOffset =3D =
data.readShort();\n\t      data.pos +=3D 4 * 2;\n\t      =
this.metricDataFormat =3D data.readShort();\n\t      return =
this.numberOfMetrics =3D data.readUInt16();\n\t    };\n\n\t    =
HheaTable.prototype.encode =3D function(ids) {\n\t      var i, table, =
_i, _ref;\n\t      table =3D new Data;\n\t      =
table.writeInt(this.version);\n\t      =
table.writeShort(this.ascender);\n\t      =
table.writeShort(this.decender);\n\t      =
table.writeShort(this.lineGap);\n\t      =
table.writeShort(this.advanceWidthMax);\n\t      =
table.writeShort(this.minLeftSideBearing);\n\t      =
table.writeShort(this.minRightSideBearing);\n\t      =
table.writeShort(this.xMaxExtent);\n\t      =
table.writeShort(this.caretSlopeRise);\n\t      =
table.writeShort(this.caretSlopeRun);\n\t      =
table.writeShort(this.caretOffset);\n\t      for (i =3D _i =3D 0, _ref =
=3D 4 * 2; 0 &lt;=3D _ref ? _i &lt; _ref : _i &gt; _ref; i =3D 0 &lt;=3D =
_ref ? ++_i : --_i) {\n\t        table.writeByte(0);\n\t      }\n\t      =
table.writeShort(this.metricDataFormat);\n\t      =
table.writeUInt16(ids.length);\n\t      return table.data;\n\t    =
};\n\n\t    return HheaTable;\n\n\t  })(Table);\n\n\t  module.exports =
=3D HheaTable;\n\n\t}).call(this);\n\n\n/***/ },\n/* 82 */\n/***/ =
function(module, exports, __webpack_require__) {\n\n\t// Generated by =
CoffeeScript 1.7.1\n\t(function() {\n\t  var Data, MaxpTable, Table,\n\t =
   __hasProp =3D {}.hasOwnProperty,\n\t    __extends =3D function(child, =
parent) { for (var key in parent) { if (__hasProp.call(parent, key)) =
child[key] =3D parent[key]; } function ctor() { this.constructor =3D =
child; } ctor.prototype =3D parent.prototype; child.prototype =3D new =
ctor(); child.__super__ =3D parent.prototype; return child; };\n\n\t  =
Table =3D __webpack_require__(76);\n\n\t  Data =3D =
__webpack_require__(72);\n\n\t  MaxpTable =3D (function(_super) {\n\t    =
__extends(MaxpTable, _super);\n\n\t    function MaxpTable() {\n\t      =
return MaxpTable.__super__.constructor.apply(this, arguments);\n\t    =
}\n\n\t    MaxpTable.prototype.tag =3D 'maxp';\n\n\t    =
MaxpTable.prototype.parse =3D function(data) {\n\t      data.pos =3D =
this.offset;\n\t      this.version =3D data.readInt();\n\t      =
this.numGlyphs =3D data.readUInt16();\n\t      this.maxPoints =3D =
data.readUInt16();\n\t      this.maxContours =3D data.readUInt16();\n\t  =
    this.maxCompositePoints =3D data.readUInt16();\n\t      =
this.maxComponentContours =3D data.readUInt16();\n\t      this.maxZones =
=3D data.readUInt16();\n\t      this.maxTwilightPoints =3D =
data.readUInt16();\n\t      this.maxStorage =3D data.readUInt16();\n\t   =
   this.maxFunctionDefs =3D data.readUInt16();\n\t      =
this.maxInstructionDefs =3D data.readUInt16();\n\t      =
this.maxStackElements =3D data.readUInt16();\n\t      =
this.maxSizeOfInstructions =3D data.readUInt16();\n\t      =
this.maxComponentElements =3D data.readUInt16();\n\t      return =
this.maxComponentDepth =3D data.readUInt16();\n\t    };\n\n\t    =
MaxpTable.prototype.encode =3D function(ids) {\n\t      var table;\n\t   =
   table =3D new Data;\n\t      table.writeInt(this.version);\n\t      =
table.writeUInt16(ids.length);\n\t      =
table.writeUInt16(this.maxPoints);\n\t      =
table.writeUInt16(this.maxContours);\n\t      =
table.writeUInt16(this.maxCompositePoints);\n\t      =
table.writeUInt16(this.maxComponentContours);\n\t      =
table.writeUInt16(this.maxZones);\n\t      =
table.writeUInt16(this.maxTwilightPoints);\n\t      =
table.writeUInt16(this.maxStorage);\n\t      =
table.writeUInt16(this.maxFunctionDefs);\n\t      =
table.writeUInt16(this.maxInstructionDefs);\n\t      =
table.writeUInt16(this.maxStackElements);\n\t      =
table.writeUInt16(this.maxSizeOfInstructions);\n\t      =
table.writeUInt16(this.maxComponentElements);\n\t      =
table.writeUInt16(this.maxComponentDepth);\n\t      return =
table.data;\n\t    };\n\n\t    return MaxpTable;\n\n\t  })(Table);\n\n\t =
 module.exports =3D MaxpTable;\n\n\t}).call(this);\n\n\n/***/ },\n/* 83 =
*/\n/***/ function(module, exports, __webpack_require__) {\n\n\t// =
Generated by CoffeeScript 1.7.1\n\t(function() {\n\t  var Data, =
PostTable, Table,\n\t    __hasProp =3D {}.hasOwnProperty,\n\t    =
__extends =3D function(child, parent) { for (var key in parent) { if =
(__hasProp.call(parent, key)) child[key] =3D parent[key]; } function =
ctor() { this.constructor =3D child; } ctor.prototype =3D =
parent.prototype; child.prototype =3D new ctor(); child.__super__ =3D =
parent.prototype; return child; };\n\n\t  Table =3D =
__webpack_require__(76);\n\n\t  Data =3D __webpack_require__(72);\n\n\t  =
PostTable =3D (function(_super) {\n\t    var POSTSCRIPT_GLYPHS;\n\n\t    =
__extends(PostTable, _super);\n\n\t    function PostTable() {\n\t      =
return PostTable.__super__.constructor.apply(this, arguments);\n\t    =
}\n\n\t    PostTable.prototype.tag =3D 'post';\n\n\t    =
PostTable.prototype.parse =3D function(data) {\n\t      var i, length, =
numberOfGlyphs, _i, _results;\n\t      data.pos =3D this.offset;\n\t     =
 this.format =3D data.readInt();\n\t      this.italicAngle =3D =
data.readInt();\n\t      this.underlinePosition =3D =
data.readShort();\n\t      this.underlineThickness =3D =
data.readShort();\n\t      this.isFixedPitch =3D data.readInt();\n\t     =
 this.minMemType42 =3D data.readInt();\n\t      this.maxMemType42 =3D =
data.readInt();\n\t      this.minMemType1 =3D data.readInt();\n\t      =
this.maxMemType1 =3D data.readInt();\n\t      switch (this.format) {\n\t =
       case 0x00010000:\n\t          break;\n\t        case =
0x00020000:\n\t          numberOfGlyphs =3D data.readUInt16();\n\t       =
   this.glyphNameIndex =3D [];\n\t          for (i =3D _i =3D 0; 0 =
&lt;=3D numberOfGlyphs ? _i &lt; numberOfGlyphs : _i &gt; =
numberOfGlyphs; i =3D 0 &lt;=3D numberOfGlyphs ? ++_i : --_i) {\n\t      =
      this.glyphNameIndex.push(data.readUInt16());\n\t          }\n\t    =
      this.names =3D [];\n\t          _results =3D [];\n\t          =
while (data.pos &lt; this.offset + this.length) {\n\t            length =
=3D data.readByte();\n\t            =
_results.push(this.names.push(data.readString(length)));\n\t          =
}\n\t          return _results;\n\t          break;\n\t        case =
0x00025000:\n\t          numberOfGlyphs =3D data.readUInt16();\n\t       =
   return this.offsets =3D data.read(numberOfGlyphs);\n\t        case =
0x00030000:\n\t          break;\n\t        case 0x00040000:\n\t          =
return this.map =3D (function() {\n\t            var _j, _ref, =
_results1;\n\t            _results1 =3D [];\n\t            for (i =3D _j =
=3D 0, _ref =3D this.file.maxp.numGlyphs; 0 &lt;=3D _ref ? _j &lt; _ref =
: _j &gt; _ref; i =3D 0 &lt;=3D _ref ? ++_j : --_j) {\n\t              =
_results1.push(data.readUInt32());\n\t            }\n\t            =
return _results1;\n\t          }).call(this);\n\t      }\n\t    };\n\n\t =
   PostTable.prototype.glyphFor =3D function(code) {\n\t      var =
index;\n\t      switch (this.format) {\n\t        case 0x00010000:\n\t   =
       return POSTSCRIPT_GLYPHS[code] || '.notdef';\n\t        case =
0x00020000:\n\t          index =3D this.glyphNameIndex[code];\n\t        =
  if (index &lt;=3D 257) {\n\t            return =
POSTSCRIPT_GLYPHS[index];\n\t          } else {\n\t            return =
this.names[index - 258] || '.notdef';\n\t          }\n\t          =
break;\n\t        case 0x00025000:\n\t          return =
POSTSCRIPT_GLYPHS[code + this.offsets[code]] || '.notdef';\n\t        =
case 0x00030000:\n\t          return '.notdef';\n\t        case =
0x00040000:\n\t          return this.map[code] || 0xFFFF;\n\t      }\n\t =
   };\n\n\t    PostTable.prototype.encode =3D function(mapping) {\n\t    =
  var id, index, indexes, position, post, raw, string, strings, table, =
_i, _j, _k, _len, _len1, _len2;\n\t      if (!this.exists) {\n\t        =
return null;\n\t      }\n\t      raw =3D this.raw();\n\t      if =
(this.format =3D=3D=3D 0x00030000) {\n\t        return raw;\n\t      =
}\n\t      table =3D new Data(raw.slice(0, 32));\n\t      =
table.writeUInt32(0x00020000);\n\t      table.pos =3D 32;\n\t      =
indexes =3D [];\n\t      strings =3D [];\n\t      for (_i =3D 0, _len =
=3D mapping.length; _i &lt; _len; _i++) {\n\t        id =3D =
mapping[_i];\n\t        post =3D this.glyphFor(id);\n\t        position =
=3D POSTSCRIPT_GLYPHS.indexOf(post);\n\t        if (position !=3D=3D -1) =
{\n\t          indexes.push(position);\n\t        } else {\n\t          =
indexes.push(257 + strings.length);\n\t          strings.push(post);\n\t =
       }\n\t      }\n\t      =
table.writeUInt16(Object.keys(mapping).length);\n\t      for (_j =3D 0, =
_len1 =3D indexes.length; _j &lt; _len1; _j++) {\n\t        index =3D =
indexes[_j];\n\t        table.writeUInt16(index);\n\t      }\n\t      =
for (_k =3D 0, _len2 =3D strings.length; _k &lt; _len2; _k++) {\n\t      =
  string =3D strings[_k];\n\t        table.writeByte(string.length);\n\t =
       table.writeString(string);\n\t      }\n\t      return =
table.data;\n\t    };\n\n\t    POSTSCRIPT_GLYPHS =3D '.notdef .null =
nonmarkingreturn space exclam quotedbl numbersign dollar =
percent\\nampersand quotesingle parenleft parenright asterisk plus comma =
hyphen period slash\\nzero one two three four five six seven eight nine =
colon semicolon less equal greater\\nquestion at A B C D E F G H I J K L =
M N O P Q R S T U V W X Y Z\\nbracketleft backslash bracketright =
asciicircum underscore grave\\na b c d e f g h i j k l m n o p q r s t u =
v w x y z\\nbraceleft bar braceright asciitilde Adieresis Aring Ccedilla =
Eacute Ntilde Odieresis\\nUdieresis aacute agrave acircumflex adieresis =
atilde aring ccedilla eacute egrave\\necircumflex edieresis iacute =
igrave icircumflex idieresis ntilde oacute ograve\\nocircumflex =
odieresis otilde uacute ugrave ucircumflex udieresis dagger degree =
cent\\nsterling section bullet paragraph germandbls registered copyright =
trademark acute\\ndieresis notequal AE Oslash infinity plusminus =
lessequal greaterequal yen mu\\npartialdiff summation product pi =
integral ordfeminine ordmasculine Omega ae oslash\\nquestiondown =
exclamdown logicalnot radical florin approxequal Delta =
guillemotleft\\nguillemotright ellipsis nonbreakingspace Agrave Atilde =
Otilde OE oe endash emdash\\nquotedblleft quotedblright quoteleft =
quoteright divide lozenge ydieresis Ydieresis\\nfraction currency =
guilsinglleft guilsinglright fi fl daggerdbl =
periodcentered\\nquotesinglbase quotedblbase perthousand Acircumflex =
Ecircumflex Aacute Edieresis\\nEgrave Iacute Icircumflex Idieresis =
Igrave Oacute Ocircumflex apple Ograve Uacute\\nUcircumflex Ugrave =
dotlessi circumflex tilde macron breve dotaccent ring =
cedilla\\nhungarumlaut ogonek caron Lslash lslash Scaron scaron Zcaron =
zcaron brokenbar Eth\\neth Yacute yacute Thorn thorn minus multiply =
onesuperior twosuperior threesuperior\\nonehalf onequarter threequarters =
franc Gbreve gbreve Idotaccent Scedilla scedilla\\nCacute cacute Ccaron =
ccaron dcroat'.split(/\\s+/g);\n\n\t    return PostTable;\n\n\t  =
})(Table);\n\n\t  module.exports =3D =
PostTable;\n\n\t}).call(this);\n\n\n/***/ },\n/* 84 */\n/***/ =
function(module, exports, __webpack_require__) {\n\n\t// Generated by =
CoffeeScript 1.7.1\n\t(function() {\n\t  var OS2Table, Table,\n\t    =
__hasProp =3D {}.hasOwnProperty,\n\t    __extends =3D function(child, =
parent) { for (var key in parent) { if (__hasProp.call(parent, key)) =
child[key] =3D parent[key]; } function ctor() { this.constructor =3D =
child; } ctor.prototype =3D parent.prototype; child.prototype =3D new =
ctor(); child.__super__ =3D parent.prototype; return child; };\n\n\t  =
Table =3D __webpack_require__(76);\n\n\t  OS2Table =3D (function(_super) =
{\n\t    __extends(OS2Table, _super);\n\n\t    function OS2Table() {\n\t =
     return OS2Table.__super__.constructor.apply(this, arguments);\n\t   =
 }\n\n\t    OS2Table.prototype.tag =3D 'OS/2';\n\n\t    =
OS2Table.prototype.parse =3D function(data) {\n\t      var i;\n\t      =
data.pos =3D this.offset;\n\t      this.version =3D =
data.readUInt16();\n\t      this.averageCharWidth =3D =
data.readShort();\n\t      this.weightClass =3D data.readUInt16();\n\t   =
   this.widthClass =3D data.readUInt16();\n\t      this.type =3D =
data.readShort();\n\t      this.ySubscriptXSize =3D =
data.readShort();\n\t      this.ySubscriptYSize =3D =
data.readShort();\n\t      this.ySubscriptXOffset =3D =
data.readShort();\n\t      this.ySubscriptYOffset =3D =
data.readShort();\n\t      this.ySuperscriptXSize =3D =
data.readShort();\n\t      this.ySuperscriptYSize =3D =
data.readShort();\n\t      this.ySuperscriptXOffset =3D =
data.readShort();\n\t      this.ySuperscriptYOffset =3D =
data.readShort();\n\t      this.yStrikeoutSize =3D data.readShort();\n\t =
     this.yStrikeoutPosition =3D data.readShort();\n\t      =
this.familyClass =3D data.readShort();\n\t      this.panose =3D =
(function() {\n\t        var _i, _results;\n\t        _results =3D =
[];\n\t        for (i =3D _i =3D 0; _i &lt; 10; i =3D ++_i) {\n\t        =
  _results.push(data.readByte());\n\t        }\n\t        return =
_results;\n\t      })();\n\t      this.charRange =3D (function() {\n\t   =
     var _i, _results;\n\t        _results =3D [];\n\t        for (i =3D =
_i =3D 0; _i &lt; 4; i =3D ++_i) {\n\t          =
_results.push(data.readInt());\n\t        }\n\t        return =
_results;\n\t      })();\n\t      this.vendorID =3D =
data.readString(4);\n\t      this.selection =3D data.readShort();\n\t    =
  this.firstCharIndex =3D data.readShort();\n\t      this.lastCharIndex =
=3D data.readShort();\n\t      if (this.version &gt; 0) {\n\t        =
this.ascent =3D data.readShort();\n\t        this.descent =3D =
data.readShort();\n\t        this.lineGap =3D data.readShort();\n\t      =
  this.winAscent =3D data.readShort();\n\t        this.winDescent =3D =
data.readShort();\n\t        this.codePageRange =3D (function() {\n\t    =
      var _i, _results;\n\t          _results =3D [];\n\t          for =
(i =3D _i =3D 0; _i &lt; 2; i =3D ++_i) {\n\t            =
_results.push(data.readInt());\n\t          }\n\t          return =
_results;\n\t        })();\n\t        if (this.version &gt; 1) {\n\t     =
     this.xHeight =3D data.readShort();\n\t          this.capHeight =3D =
data.readShort();\n\t          this.defaultChar =3D =
data.readShort();\n\t          this.breakChar =3D data.readShort();\n\t  =
        return this.maxContext =3D data.readShort();\n\t        }\n\t    =
  }\n\t    };\n\n\t    OS2Table.prototype.encode =3D function() {\n\t    =
  return this.raw();\n\t    };\n\n\t    return OS2Table;\n\n\t  =
})(Table);\n\n\t  module.exports =3D =
OS2Table;\n\n\t}).call(this);\n\n\n/***/ },\n/* 85 */\n/***/ =
function(module, exports, __webpack_require__) {\n\n\t// Generated by =
CoffeeScript 1.7.1\n\t(function() {\n\t  var Data, LocaTable, Table,\n\t =
   __hasProp =3D {}.hasOwnProperty,\n\t    __extends =3D function(child, =
parent) { for (var key in parent) { if (__hasProp.call(parent, key)) =
child[key] =3D parent[key]; } function ctor() { this.constructor =3D =
child; } ctor.prototype =3D parent.prototype; child.prototype =3D new =
ctor(); child.__super__ =3D parent.prototype; return child; };\n\n\t  =
Table =3D __webpack_require__(76);\n\n\t  Data =3D =
__webpack_require__(72);\n\n\t  LocaTable =3D (function(_super) {\n\t    =
__extends(LocaTable, _super);\n\n\t    function LocaTable() {\n\t      =
return LocaTable.__super__.constructor.apply(this, arguments);\n\t    =
}\n\n\t    LocaTable.prototype.tag =3D 'loca';\n\n\t    =
LocaTable.prototype.parse =3D function(data) {\n\t      var format, =
i;\n\t      data.pos =3D this.offset;\n\t      format =3D =
this.file.head.indexToLocFormat;\n\t      if (format =3D=3D=3D 0) {\n\t  =
      return this.offsets =3D (function() {\n\t          var _i, _ref, =
_results;\n\t          _results =3D [];\n\t          for (i =3D _i =3D =
0, _ref =3D this.length; _i &lt; _ref; i =3D _i +=3D 2) {\n\t            =
_results.push(data.readUInt16() * 2);\n\t          }\n\t          return =
_results;\n\t        }).call(this);\n\t      } else {\n\t        return =
this.offsets =3D (function() {\n\t          var _i, _ref, _results;\n\t  =
        _results =3D [];\n\t          for (i =3D _i =3D 0, _ref =3D =
this.length; _i &lt; _ref; i =3D _i +=3D 4) {\n\t            =
_results.push(data.readUInt32());\n\t          }\n\t          return =
_results;\n\t        }).call(this);\n\t      }\n\t    };\n\n\t    =
LocaTable.prototype.indexOf =3D function(id) {\n\t      return =
this.offsets[id];\n\t    };\n\n\t    LocaTable.prototype.lengthOf =3D =
function(id) {\n\t      return this.offsets[id + 1] - =
this.offsets[id];\n\t    };\n\n\t    LocaTable.prototype.encode =3D =
function(offsets) {\n\t      var o, offset, ret, table, _i, _j, _k, =
_len, _len1, _len2, _ref;\n\t      table =3D new Data;\n\t      for (_i =
=3D 0, _len =3D offsets.length; _i &lt; _len; _i++) {\n\t        offset =
=3D offsets[_i];\n\t        if (!(offset &gt; 0xFFFF)) {\n\t          =
continue;\n\t        }\n\t        _ref =3D this.offsets;\n\t        for =
(_j =3D 0, _len1 =3D _ref.length; _j &lt; _len1; _j++) {\n\t          o =
=3D _ref[_j];\n\t          table.writeUInt32(o);\n\t        }\n\t        =
return ret =3D {\n\t          format: 1,\n\t          table: =
table.data\n\t        };\n\t      }\n\t      for (_k =3D 0, _len2 =3D =
offsets.length; _k &lt; _len2; _k++) {\n\t        o =3D offsets[_k];\n\t =
       table.writeUInt16(o / 2);\n\t      }\n\t      return ret =3D =
{\n\t        format: 0,\n\t        table: table.data\n\t      };\n\t    =
};\n\n\t    return LocaTable;\n\n\t  })(Table);\n\n\t  module.exports =
=3D LocaTable;\n\n\t}).call(this);\n\n\n/***/ },\n/* 86 */\n/***/ =
function(module, exports, __webpack_require__) {\n\n\t// Generated by =
CoffeeScript 1.7.1\n\t(function() {\n\t  var CompoundGlyph, Data, =
GlyfTable, SimpleGlyph, Table,\n\t    __hasProp =3D =
{}.hasOwnProperty,\n\t    __extends =3D function(child, parent) { for =
(var key in parent) { if (__hasProp.call(parent, key)) child[key] =3D =
parent[key]; } function ctor() { this.constructor =3D child; } =
ctor.prototype =3D parent.prototype; child.prototype =3D new ctor(); =
child.__super__ =3D parent.prototype; return child; },\n\t    __slice =
=3D [].slice;\n\n\t  Table =3D __webpack_require__(76);\n\n\t  Data =3D =
__webpack_require__(72);\n\n\t  GlyfTable =3D (function(_super) {\n\t    =
__extends(GlyfTable, _super);\n\n\t    function GlyfTable() {\n\t      =
return GlyfTable.__super__.constructor.apply(this, arguments);\n\t    =
}\n\n\t    GlyfTable.prototype.tag =3D 'glyf';\n\n\t    =
GlyfTable.prototype.parse =3D function(data) {\n\t      return =
this.cache =3D {};\n\t    };\n\n\t    GlyfTable.prototype.glyphFor =3D =
function(id) {\n\t      var data, index, length, loca, numberOfContours, =
raw, xMax, xMin, yMax, yMin;\n\t      if (id in this.cache) {\n\t        =
return this.cache[id];\n\t      }\n\t      loca =3D this.file.loca;\n\t  =
    data =3D this.file.contents;\n\t      index =3D =
loca.indexOf(id);\n\t      length =3D loca.lengthOf(id);\n\t      if =
(length =3D=3D=3D 0) {\n\t        return this.cache[id] =3D null;\n\t    =
  }\n\t      data.pos =3D this.offset + index;\n\t      raw =3D new =
Data(data.read(length));\n\t      numberOfContours =3D =
raw.readShort();\n\t      xMin =3D raw.readShort();\n\t      yMin =3D =
raw.readShort();\n\t      xMax =3D raw.readShort();\n\t      yMax =3D =
raw.readShort();\n\t      if (numberOfContours =3D=3D=3D -1) {\n\t       =
 this.cache[id] =3D new CompoundGlyph(raw, xMin, yMin, xMax, yMax);\n\t  =
    } else {\n\t        this.cache[id] =3D new SimpleGlyph(raw, =
numberOfContours, xMin, yMin, xMax, yMax);\n\t      }\n\t      return =
this.cache[id];\n\t    };\n\n\t    GlyfTable.prototype.encode =3D =
function(glyphs, mapping, old2new) {\n\t      var glyph, id, offsets, =
table, _i, _len;\n\t      table =3D [];\n\t      offsets =3D [];\n\t     =
 for (_i =3D 0, _len =3D mapping.length; _i &lt; _len; _i++) {\n\t       =
 id =3D mapping[_i];\n\t        glyph =3D glyphs[id];\n\t        =
offsets.push(table.length);\n\t        if (glyph) {\n\t          table =
=3D table.concat(glyph.encode(old2new));\n\t        }\n\t      }\n\t     =
 offsets.push(table.length);\n\t      return {\n\t        table: =
table,\n\t        offsets: offsets\n\t      };\n\t    };\n\n\t    return =
GlyfTable;\n\n\t  })(Table);\n\n\t  SimpleGlyph =3D (function() {\n\t    =
function SimpleGlyph(raw, numberOfContours, xMin, yMin, xMax, yMax) =
{\n\t      this.raw =3D raw;\n\t      this.numberOfContours =3D =
numberOfContours;\n\t      this.xMin =3D xMin;\n\t      this.yMin =3D =
yMin;\n\t      this.xMax =3D xMax;\n\t      this.yMax =3D yMax;\n\t      =
this.compound =3D false;\n\t    }\n\n\t    SimpleGlyph.prototype.encode =
=3D function() {\n\t      return this.raw.data;\n\t    };\n\n\t    =
return SimpleGlyph;\n\n\t  })();\n\n\t  CompoundGlyph =3D (function() =
{\n\t    var ARG_1_AND_2_ARE_WORDS, MORE_COMPONENTS, =
WE_HAVE_AN_X_AND_Y_SCALE, WE_HAVE_A_SCALE, WE_HAVE_A_TWO_BY_TWO, =
WE_HAVE_INSTRUCTIONS;\n\n\t    ARG_1_AND_2_ARE_WORDS =3D 0x0001;\n\n\t   =
 WE_HAVE_A_SCALE =3D 0x0008;\n\n\t    MORE_COMPONENTS =3D 0x0020;\n\n\t  =
  WE_HAVE_AN_X_AND_Y_SCALE =3D 0x0040;\n\n\t    WE_HAVE_A_TWO_BY_TWO =3D =
0x0080;\n\n\t    WE_HAVE_INSTRUCTIONS =3D 0x0100;\n\n\t    function =
CompoundGlyph(raw, xMin, yMin, xMax, yMax) {\n\t      var data, =
flags;\n\t      this.raw =3D raw;\n\t      this.xMin =3D xMin;\n\t      =
this.yMin =3D yMin;\n\t      this.xMax =3D xMax;\n\t      this.yMax =3D =
yMax;\n\t      this.compound =3D true;\n\t      this.glyphIDs =3D =
[];\n\t      this.glyphOffsets =3D [];\n\t      data =3D this.raw;\n\t   =
   while (true) {\n\t        flags =3D data.readShort();\n\t        =
this.glyphOffsets.push(data.pos);\n\t        =
this.glyphIDs.push(data.readShort());\n\t        if (!(flags &amp; =
MORE_COMPONENTS)) {\n\t          break;\n\t        }\n\t        if =
(flags &amp; ARG_1_AND_2_ARE_WORDS) {\n\t          data.pos +=3D 4;\n\t  =
      } else {\n\t          data.pos +=3D 2;\n\t        }\n\t        if =
(flags &amp; WE_HAVE_A_TWO_BY_TWO) {\n\t          data.pos +=3D 8;\n\t   =
     } else if (flags &amp; WE_HAVE_AN_X_AND_Y_SCALE) {\n\t          =
data.pos +=3D 4;\n\t        } else if (flags &amp; WE_HAVE_A_SCALE) =
{\n\t          data.pos +=3D 2;\n\t        }\n\t      }\n\t    }\n\n\t   =
 CompoundGlyph.prototype.encode =3D function(mapping) {\n\t      var i, =
id, result, _i, _len, _ref;\n\t      result =3D new =
Data(__slice.call(this.raw.data));\n\t      _ref =3D this.glyphIDs;\n\t  =
    for (i =3D _i =3D 0, _len =3D _ref.length; _i &lt; _len; i =3D ++_i) =
{\n\t        id =3D _ref[i];\n\t        result.pos =3D =
this.glyphOffsets[i];\n\t        result.writeShort(mapping[id]);\n\t     =
 }\n\t      return result.data;\n\t    };\n\n\t    return =
CompoundGlyph;\n\n\t  })();\n\n\t  module.exports =3D =
GlyfTable;\n\n\t}).call(this);\n\n\n/***/ },\n/* 87 */\n/***/ =
function(module, exports, __webpack_require__) {\n\n\t// Generated by =
CoffeeScript 1.7.1\n\t(function() {\n\t  var AFMFont, fs;\n\n\t  fs =3D =
__webpack_require__(44);\n\n\t  AFMFont =3D (function() {\n\t    var =
WIN_ANSI_MAP, characters;\n\n\t    AFMFont.open =3D function(filename) =
{\n\t      return new AFMFont(fs.readFileSync(filename, 'utf8'));\n\t    =
};\n\n\t    function AFMFont(contents) {\n\t      var e, i;\n\t      =
this.contents =3D contents;\n\t      this.attributes =3D {};\n\t      =
this.glyphWidths =3D {};\n\t      this.boundingBoxes =3D {};\n\t      =
this.parse();\n\t      this.charWidths =3D (function() {\n\t        var =
_i, _results;\n\t        _results =3D [];\n\t        for (i =3D _i =3D =
0; _i &lt;=3D 255; i =3D ++_i) {\n\t          =
_results.push(this.glyphWidths[characters[i]]);\n\t        }\n\t        =
return _results;\n\t      }).call(this);\n\t      this.bbox =3D =
(function() {\n\t        var _i, _len, _ref, _results;\n\t        _ref =
=3D this.attributes['FontBBox'].split(/\\s+/);\n\t        _results =3D =
[];\n\t        for (_i =3D 0, _len =3D _ref.length; _i &lt; _len; _i++) =
{\n\t          e =3D _ref[_i];\n\t          _results.push(+e);\n\t       =
 }\n\t        return _results;\n\t      }).call(this);\n\t      =
this.ascender =3D +(this.attributes['Ascender'] || 0);\n\t      =
this.decender =3D +(this.attributes['Descender'] || 0);\n\t      =
this.lineGap =3D (this.bbox[3] - this.bbox[1]) - (this.ascender - =
this.decender);\n\t    }\n\n\t    AFMFont.prototype.parse =3D function() =
{\n\t      var a, key, line, match, name, section, value, _i, _len, =
_ref;\n\t      section =3D '';\n\t      _ref =3D =
this.contents.split('\\n');\n\t      for (_i =3D 0, _len =3D =
_ref.length; _i &lt; _len; _i++) {\n\t        line =3D _ref[_i];\n\t     =
   if (match =3D line.match(/^Start(\\w+)/)) {\n\t          section =3D =
match[1];\n\t          continue;\n\t        } else if (match =3D =
line.match(/^End(\\w+)/)) {\n\t          section =3D '';\n\t          =
continue;\n\t        }\n\t        switch (section) {\n\t          case =
'FontMetrics':\n\t            match =3D =
line.match(/(^\\w+)\\s+(.*)/);\n\t            key =3D match[1];\n\t      =
      value =3D match[2];\n\t            if (a =3D this.attributes[key]) =
{\n\t              if (!Array.isArray(a)) {\n\t                a =3D =
this.attributes[key] =3D [a];\n\t              }\n\t              =
a.push(value);\n\t            } else {\n\t              =
this.attributes[key] =3D value;\n\t            }\n\t            =
break;\n\t          case 'CharMetrics':\n\t            if =
(!/^CH?\\s/.test(line)) {\n\t              continue;\n\t            =
}\n\t            name =3D line.match(/\\bN\\s+(\\.?\\w+)\\s*;/)[1];\n\t  =
          this.glyphWidths[name] =3D =
+line.match(/\\bWX\\s+(\\d+)\\s*;/)[1];\n\t        }\n\t      }\n\t    =
};\n\n\t    WIN_ANSI_MAP =3D {\n\t      402: 131,\n\t      8211: =
150,\n\t      8212: 151,\n\t      8216: 145,\n\t      8217: 146,\n\t     =
 8218: 130,\n\t      8220: 147,\n\t      8221: 148,\n\t      8222: =
132,\n\t      8224: 134,\n\t      8225: 135,\n\t      8226: 149,\n\t     =
 8230: 133,\n\t      8364: 128,\n\t      8240: 137,\n\t      8249: =
139,\n\t      8250: 155,\n\t      710: 136,\n\t      8482: 153,\n\t      =
338: 140,\n\t      339: 156,\n\t      732: 152,\n\t      352: 138,\n\t   =
   353: 154,\n\t      376: 159,\n\t      381: 142,\n\t      382: 158\n\t =
   };\n\n\t    AFMFont.prototype.encodeText =3D function(text) {\n\t     =
 var char, i, string, _i, _ref;\n\t      string =3D '';\n\t      for (i =
=3D _i =3D 0, _ref =3D text.length; 0 &lt;=3D _ref ? _i &lt; _ref : _i =
&gt; _ref; i =3D 0 &lt;=3D _ref ? ++_i : --_i) {\n\t        char =3D =
text.charCodeAt(i);\n\t        char =3D WIN_ANSI_MAP[char] || char;\n\t  =
      string +=3D String.fromCharCode(char);\n\t      }\n\t      return =
string;\n\t    };\n\n\t    AFMFont.prototype.characterToGlyph =3D =
function(character) {\n\t      return characters[WIN_ANSI_MAP[character] =
|| character];\n\t    };\n\n\t    AFMFont.prototype.widthOfGlyph =3D =
function(glyph) {\n\t      return this.glyphWidths[glyph];\n\t    =
};\n\n\t    characters =3D '.notdef       .notdef        .notdef        =
.notdef\\n.notdef       .notdef        .notdef        .notdef\\n.notdef  =
     .notdef        .notdef        .notdef\\n.notdef       .notdef       =
 .notdef        .notdef\\n.notdef       .notdef        .notdef        =
.notdef\\n.notdef       .notdef        .notdef        .notdef\\n.notdef  =
     .notdef        .notdef        .notdef\\n.notdef       .notdef       =
 .notdef        .notdef\\n\\nspace         exclam         quotedbl       =
numbersign\\ndollar        percent        ampersand      =
quotesingle\\nparenleft     parenright     asterisk       plus\\ncomma   =
      hyphen         period         slash\\nzero          one            =
two            three\\nfour          five           six            =
seven\\neight         nine           colon          semicolon\\nless     =
     equal          greater        question\\n\\nat            A         =
     B              C\\nD             E              F              =
G\\nH             I              J              K\\nL             M      =
        N              O\\nP             Q              R              =
S\\nT             U              V              W\\nX             Y      =
        Z              bracketleft\\nbackslash     bracketright   =
asciicircum    underscore\\n\\ngrave         a              b            =
  c\\nd             e              f              g\\nh             i    =
          j              k\\nl             m              n              =
o\\np             q              r              s\\nt             u      =
        v              w\\nx             y              z              =
braceleft\\nbar           braceright     asciitilde     =
.notdef\\n\\nEuro          .notdef        quotesinglbase =
florin\\nquotedblbase  ellipsis       dagger         =
daggerdbl\\ncircumflex    perthousand    Scaron         =
guilsinglleft\\nOE            .notdef        Zcaron         =
.notdef\\n.notdef       quoteleft      quoteright     =
quotedblleft\\nquotedblright bullet         endash         =
emdash\\ntilde         trademark      scaron         guilsinglright\\noe =
           .notdef        zcaron         ydieresis\\n\\nspace         =
exclamdown     cent           sterling\\ncurrency      yen            =
brokenbar      section\\ndieresis      copyright      ordfeminine    =
guillemotleft\\nlogicalnot    hyphen         registered     =
macron\\ndegree        plusminus      twosuperior    =
threesuperior\\nacute         mu             paragraph      =
periodcentered\\ncedilla       onesuperior    ordmasculine   =
guillemotright\\nonequarter    onehalf        threequarters  =
questiondown\\n\\nAgrave        Aacute         Acircumflex    =
Atilde\\nAdieresis     Aring          AE             Ccedilla\\nEgrave   =
     Eacute         Ecircumflex    Edieresis\\nIgrave        Iacute      =
   Icircumflex    Idieresis\\nEth           Ntilde         Ograve        =
 Oacute\\nOcircumflex   Otilde         Odieresis      multiply\\nOslash  =
      Ugrave         Uacute         Ucircumflex\\nUdieresis     Yacute   =
      Thorn          germandbls\\n\\nagrave        aacute         =
acircumflex    atilde\\nadieresis     aring          ae             =
ccedilla\\negrave        eacute         ecircumflex    =
edieresis\\nigrave        iacute         icircumflex    idieresis\\neth  =
         ntilde         ograve         oacute\\nocircumflex   otilde     =
    odieresis      divide\\noslash        ugrave         uacute         =
ucircumflex\\nudieresis     yacute         thorn          =
ydieresis'.split(/\\s+/);\n\n\t    return AFMFont;\n\n\t  })();\n\n\t  =
module.exports =3D AFMFont;\n\n\t}).call(this);\n\n\n/***/ },\n/* 88 =
*/\n/***/ function(module, exports, __webpack_require__) {\n\n\t// =
Generated by CoffeeScript 1.7.1\n\t(function() {\n\t  var CmapTable, =
Subset, utils,\n\t    __indexOf =3D [].indexOf || function(item) { for =
(var i =3D 0, l =3D this.length; i &lt; l; i++) { if (i in this =
&amp;&amp; this[i] =3D=3D=3D item) return i; } return -1; };\n\n\t  =
CmapTable =3D __webpack_require__(79);\n\n\t  utils =3D =
__webpack_require__(77);\n\n\t  Subset =3D (function() {\n\t    function =
Subset(font) {\n\t      this.font =3D font;\n\t      this.subset =3D =
{};\n\t      this.unicodes =3D {};\n\t      this.next =3D 33;\n\t    =
}\n\n\t    Subset.prototype.use =3D function(character) {\n\t      var =
i, _i, _ref;\n\t      if (typeof character =3D=3D=3D 'string') {\n\t     =
   for (i =3D _i =3D 0, _ref =3D character.length; 0 &lt;=3D _ref ? _i =
&lt; _ref : _i &gt; _ref; i =3D 0 &lt;=3D _ref ? ++_i : --_i) {\n\t      =
    this.use(character.charCodeAt(i));\n\t        }\n\t        =
return;\n\t      }\n\t      if (!this.unicodes[character]) {\n\t        =
this.subset[this.next] =3D character;\n\t        return =
this.unicodes[character] =3D this.next++;\n\t      }\n\t    };\n\n\t    =
Subset.prototype.encodeText =3D function(text) {\n\t      var char, i, =
string, _i, _ref;\n\t      string =3D '';\n\t      for (i =3D _i =3D 0, =
_ref =3D text.length; 0 &lt;=3D _ref ? _i &lt; _ref : _i &gt; _ref; i =
=3D 0 &lt;=3D _ref ? ++_i : --_i) {\n\t        char =3D =
this.unicodes[text.charCodeAt(i)];\n\t        string +=3D =
String.fromCharCode(char);\n\t      }\n\t      return string;\n\t    =
};\n\n\t    Subset.prototype.generateCmap =3D function() {\n\t      var =
mapping, roman, unicode, unicodeCmap, _ref;\n\t      unicodeCmap =3D =
this.font.cmap.tables[0].codeMap;\n\t      mapping =3D {};\n\t      _ref =
=3D this.subset;\n\t      for (roman in _ref) {\n\t        unicode =3D =
_ref[roman];\n\t        mapping[roman] =3D unicodeCmap[unicode];\n\t     =
 }\n\t      return mapping;\n\t    };\n\n\t    Subset.prototype.glyphIDs =
=3D function() {\n\t      var ret, roman, unicode, unicodeCmap, val, =
_ref;\n\t      unicodeCmap =3D this.font.cmap.tables[0].codeMap;\n\t     =
 ret =3D [0];\n\t      _ref =3D this.subset;\n\t      for (roman in =
_ref) {\n\t        unicode =3D _ref[roman];\n\t        val =3D =
unicodeCmap[unicode];\n\t        if ((val !=3D null) &amp;&amp; =
__indexOf.call(ret, val) &lt; 0) {\n\t          ret.push(val);\n\t       =
 }\n\t      }\n\t      return ret.sort();\n\t    };\n\n\t    =
Subset.prototype.glyphsFor =3D function(glyphIDs) {\n\t      var =
additionalIDs, glyph, glyphs, id, _i, _len, _ref;\n\t      glyphs =3D =
{};\n\t      for (_i =3D 0, _len =3D glyphIDs.length; _i &lt; _len; =
_i++) {\n\t        id =3D glyphIDs[_i];\n\t        glyphs[id] =3D =
this.font.glyf.glyphFor(id);\n\t      }\n\t      additionalIDs =3D =
[];\n\t      for (id in glyphs) {\n\t        glyph =3D glyphs[id];\n\t   =
     if (glyph !=3D null ? glyph.compound : void 0) {\n\t          =
additionalIDs.push.apply(additionalIDs, glyph.glyphIDs);\n\t        =
}\n\t      }\n\t      if (additionalIDs.length &gt; 0) {\n\t        _ref =
=3D this.glyphsFor(additionalIDs);\n\t        for (id in _ref) {\n\t     =
     glyph =3D _ref[id];\n\t          glyphs[id] =3D glyph;\n\t        =
}\n\t      }\n\t      return glyphs;\n\t    };\n\n\t    =
Subset.prototype.encode =3D function() {\n\t      var cmap, code, glyf, =
glyphs, id, ids, loca, name, new2old, newIDs, nextGlyphID, old2new, =
oldID, oldIDs, tables, _ref, _ref1;\n\t      cmap =3D =
CmapTable.encode(this.generateCmap(), 'unicode');\n\t      glyphs =3D =
this.glyphsFor(this.glyphIDs());\n\t      old2new =3D {\n\t        0: =
0\n\t      };\n\t      _ref =3D cmap.charMap;\n\t      for (code in =
_ref) {\n\t        ids =3D _ref[code];\n\t        old2new[ids.old] =3D =
ids[\"new\"];\n\t      }\n\t      nextGlyphID =3D cmap.maxGlyphID;\n\t   =
   for (oldID in glyphs) {\n\t        if (!(oldID in old2new)) {\n\t     =
     old2new[oldID] =3D nextGlyphID++;\n\t        }\n\t      }\n\t      =
new2old =3D utils.invert(old2new);\n\t      newIDs =3D =
Object.keys(new2old).sort(function(a, b) {\n\t        return a - b;\n\t  =
    });\n\t      oldIDs =3D (function() {\n\t        var _i, _len, =
_results;\n\t        _results =3D [];\n\t        for (_i =3D 0, _len =3D =
newIDs.length; _i &lt; _len; _i++) {\n\t          id =3D newIDs[_i];\n\t =
         _results.push(new2old[id]);\n\t        }\n\t        return =
_results;\n\t      })();\n\t      glyf =3D this.font.glyf.encode(glyphs, =
oldIDs, old2new);\n\t      loca =3D =
this.font.loca.encode(glyf.offsets);\n\t      name =3D =
this.font.name.encode();\n\t      this.postscriptName =3D =
name.postscriptName;\n\t      this.cmap =3D {};\n\t      _ref1 =3D =
cmap.charMap;\n\t      for (code in _ref1) {\n\t        ids =3D =
_ref1[code];\n\t        this.cmap[code] =3D ids.old;\n\t      }\n\t      =
tables =3D {\n\t        cmap: cmap.table,\n\t        glyf: =
glyf.table,\n\t        loca: loca.table,\n\t        hmtx: =
this.font.hmtx.encode(oldIDs),\n\t        hhea: =
this.font.hhea.encode(oldIDs),\n\t        maxp: =
this.font.maxp.encode(oldIDs),\n\t        post: =
this.font.post.encode(oldIDs),\n\t        name: name.table,\n\t        =
head: this.font.head.encode(loca)\n\t      };\n\t      if =
(this.font.os2.exists) {\n\t        tables['OS/2'] =3D =
this.font.os2.raw();\n\t      }\n\t      return =
this.font.directory.encode(tables);\n\t    };\n\n\t    return =
Subset;\n\n\t  })();\n\n\t  module.exports =3D =
Subset;\n\n\t}).call(this);\n\n\n/***/ },\n/* 89 */\n/***/ =
function(module, exports, __webpack_require__) {\n\n\t// Generated by =
CoffeeScript 1.7.1\n\t(function() {\n\t  var LineWrapper;\n\n\t  =
LineWrapper =3D __webpack_require__(90);\n\n\t  module.exports =3D {\n\t =
   initText: function() {\n\t      this.x =3D 0;\n\t      this.y =3D =
0;\n\t      return this._lineGap =3D 0;\n\t    },\n\t    lineGap: =
function(_lineGap) {\n\t      this._lineGap =3D _lineGap;\n\t      =
return this;\n\t    },\n\t    moveDown: function(lines) {\n\t      if =
(lines =3D=3D null) {\n\t        lines =3D 1;\n\t      }\n\t      this.y =
+=3D this.currentLineHeight(true) * lines + this._lineGap;\n\t      =
return this;\n\t    },\n\t    moveUp: function(lines) {\n\t      if =
(lines =3D=3D null) {\n\t        lines =3D 1;\n\t      }\n\t      this.y =
-=3D this.currentLineHeight(true) * lines + this._lineGap;\n\t      =
return this;\n\t    },\n\t    _text: function(text, x, y, options, =
lineCallback) {\n\t      var line, wrapper, _i, _len, _ref;\n\t      =
options =3D this._initOptions(x, y, options);\n\t      text =3D '' + =
text;\n\t      if (options.wordSpacing) {\n\t        text =3D =
text.replace(/\\s{2,}/g, ' ');\n\t      }\n\t      if (options.width) =
{\n\t        wrapper =3D this._wrapper;\n\t        if (!wrapper) {\n\t   =
       wrapper =3D new LineWrapper(this, options);\n\t          =
wrapper.on('line', lineCallback);\n\t        }\n\t        this._wrapper =
=3D options.continued ? wrapper : null;\n\t        this._textOptions =3D =
options.continued ? options : null;\n\t        wrapper.wrap(text, =
options);\n\t      } else {\n\t        _ref =3D text.split('\\n');\n\t   =
     for (_i =3D 0, _len =3D _ref.length; _i &lt; _len; _i++) {\n\t      =
    line =3D _ref[_i];\n\t          lineCallback(line, options);\n\t     =
   }\n\t      }\n\t      return this;\n\t    },\n\t    text: =
function(text, x, y, options) {\n\t      return this._text(text, x, y, =
options, this._line.bind(this));\n\t    },\n\t    widthOfString: =
function(string, options) {\n\t      if (options =3D=3D null) {\n\t      =
  options =3D {};\n\t      }\n\t      return =
this._font.widthOfString(string, this._fontSize) + =
(options.characterSpacing || 0) * (string.length - 1);\n\t    },\n\t    =
heightOfString: function(text, options) {\n\t      var height, lineGap, =
x, y;\n\t      if (options =3D=3D null) {\n\t        options =3D {};\n\t =
     }\n\t      x =3D this.x, y =3D this.y;\n\t      options =3D =
this._initOptions(options);\n\t      options.height =3D Infinity;\n\t    =
  lineGap =3D options.lineGap || this._lineGap || 0;\n\t      =
this._text(text, this.x, this.y, options, (function(_this) {\n\t        =
return function(line, options) {\n\t          return _this.y +=3D =
_this.currentLineHeight(true) + lineGap;\n\t        };\n\t      =
})(this));\n\t      height =3D this.y - y;\n\t      this.x =3D x;\n\t    =
  this.y =3D y;\n\t      return height;\n\t    },\n\t    list: =
function(list, x, y, options, wrapper) {\n\t      var flatten, i, =
indent, itemIndent, items, level, levels, r;\n\t      options =3D =
this._initOptions(x, y, options);\n\t      r =3D =
Math.round((this._font.ascender / 1000 * this._fontSize) / 3);\n\t      =
indent =3D options.textIndent || r * 5;\n\t      itemIndent =3D =
options.bulletIndent || r * 8;\n\t      level =3D 1;\n\t      items =3D =
[];\n\t      levels =3D [];\n\t      flatten =3D function(list) {\n\t    =
    var i, item, _i, _len, _results;\n\t        _results =3D [];\n\t     =
   for (i =3D _i =3D 0, _len =3D list.length; _i &lt; _len; i =3D ++_i) =
{\n\t          item =3D list[i];\n\t          if (Array.isArray(item)) =
{\n\t            level++;\n\t            flatten(item);\n\t            =
_results.push(level--);\n\t          } else {\n\t            =
items.push(item);\n\t            _results.push(levels.push(level));\n\t  =
        }\n\t        }\n\t        return _results;\n\t      };\n\t      =
flatten(list);\n\t      wrapper =3D new LineWrapper(this, options);\n\t  =
    wrapper.on('line', this._line.bind(this));\n\t      level =3D 1;\n\t =
     i =3D 0;\n\t      wrapper.on('firstLine', (function(_this) {\n\t    =
    return function() {\n\t          var diff, l;\n\t          if ((l =
=3D levels[i++]) !=3D=3D level) {\n\t            diff =3D itemIndent * =
(l - level);\n\t            _this.x +=3D diff;\n\t            =
wrapper.lineWidth -=3D diff;\n\t            level =3D l;\n\t          =
}\n\t          _this.circle(_this.x - indent + r, _this.y + r + (r / 2), =
r);\n\t          return _this.fill();\n\t        };\n\t      =
})(this));\n\t      wrapper.on('sectionStart', (function(_this) {\n\t    =
    return function() {\n\t          var pos;\n\t          pos =3D =
indent + itemIndent * (level - 1);\n\t          _this.x +=3D pos;\n\t    =
      return wrapper.lineWidth -=3D pos;\n\t        };\n\t      =
})(this));\n\t      wrapper.on('sectionEnd', (function(_this) {\n\t      =
  return function() {\n\t          var pos;\n\t          pos =3D indent =
+ itemIndent * (level - 1);\n\t          _this.x -=3D pos;\n\t          =
return wrapper.lineWidth +=3D pos;\n\t        };\n\t      })(this));\n\t =
     wrapper.wrap(items.join('\\n'), options);\n\t      return this;\n\t =
   },\n\t    _initOptions: function(x, y, options) {\n\t      var key, =
margins, val, _ref;\n\t      if (x =3D=3D null) {\n\t        x =3D =
{};\n\t      }\n\t      if (options =3D=3D null) {\n\t        options =
=3D {};\n\t      }\n\t      if (typeof x =3D=3D=3D 'object') {\n\t       =
 options =3D x;\n\t        x =3D null;\n\t      }\n\t      options =3D =
(function() {\n\t        var k, opts, v;\n\t        opts =3D {};\n\t     =
   for (k in options) {\n\t          v =3D options[k];\n\t          =
opts[k] =3D v;\n\t        }\n\t        return opts;\n\t      })();\n\t   =
   if (this._textOptions) {\n\t        _ref =3D this._textOptions;\n\t   =
     for (key in _ref) {\n\t          val =3D _ref[key];\n\t          if =
(key !=3D=3D 'continued') {\n\t            if (options[key] =3D=3D null) =
{\n\t              options[key] =3D val;\n\t            }\n\t          =
}\n\t        }\n\t      }\n\t      if (x !=3D null) {\n\t        this.x =
=3D x;\n\t      }\n\t      if (y !=3D null) {\n\t        this.y =3D =
y;\n\t      }\n\t      if (options.lineBreak !=3D=3D false) {\n\t        =
margins =3D this.page.margins;\n\t        if (options.width =3D=3D null) =
{\n\t          options.width =3D this.page.width - this.x - =
margins.right;\n\t        }\n\t      }\n\t      options.columns || =
(options.columns =3D 0);\n\t      if (options.columnGap =3D=3D null) =
{\n\t        options.columnGap =3D 18;\n\t      }\n\t      return =
options;\n\t    },\n\t    _line: function(text, options, wrapper) {\n\t  =
    var lineGap;\n\t      if (options =3D=3D null) {\n\t        options =
=3D {};\n\t      }\n\t      this._fragment(text, this.x, this.y, =
options);\n\t      lineGap =3D options.lineGap || this._lineGap || =
0;\n\t      if (!wrapper) {\n\t        return this.x +=3D =
this.widthOfString(text);\n\t      } else {\n\t        return this.y =
+=3D this.currentLineHeight(true) + lineGap;\n\t      }\n\t    },\n\t    =
_fragment: function(text, x, y, options) {\n\t      var align, =
characterSpacing, commands, d, encoded, i, lineWidth, lineY, mode, =
renderedWidth, spaceWidth, textWidth, word, wordSpacing, words, _base, =
_i, _len, _name;\n\t      text =3D '' + text;\n\t      if (text.length =
=3D=3D=3D 0) {\n\t        return;\n\t      }\n\t      align =3D =
options.align || 'left';\n\t      wordSpacing =3D options.wordSpacing || =
0;\n\t      characterSpacing =3D options.characterSpacing || 0;\n\t      =
if (options.width) {\n\t        switch (align) {\n\t          case =
'right':\n\t            textWidth =3D =
this.widthOfString(text.replace(/\\s+$/, ''), options);\n\t            x =
+=3D options.lineWidth - textWidth;\n\t            break;\n\t          =
case 'center':\n\t            x +=3D options.lineWidth / 2 - =
options.textWidth / 2;\n\t            break;\n\t          case =
'justify':\n\t            words =3D text.trim().split(/\\s+/);\n\t       =
     textWidth =3D this.widthOfString(text.replace(/\\s+/g, ''), =
options);\n\t            spaceWidth =3D this.widthOfString(' ') + =
characterSpacing;\n\t            wordSpacing =3D Math.max(0, =
(options.lineWidth - textWidth) / Math.max(1, words.length - 1) - =
spaceWidth);\n\t        }\n\t      }\n\t      renderedWidth =3D =
options.textWidth + (wordSpacing * (options.wordCount - 1)) + =
(characterSpacing * (text.length - 1));\n\t      if (options.link) {\n\t =
       this.link(x, y, renderedWidth, this.currentLineHeight(), =
options.link);\n\t      }\n\t      if (options.underline || =
options.strike) {\n\t        this.save();\n\t        if =
(!options.stroke) {\n\t          this.strokeColor.apply(this, =
this._fillColor);\n\t        }\n\t        lineWidth =3D this._fontSize =
&lt; 10 ? 0.5 : Math.floor(this._fontSize / 10);\n\t        =
this.lineWidth(lineWidth);\n\t        d =3D options.underline ? 1 : =
2;\n\t        lineY =3D y + this.currentLineHeight() / d;\n\t        if =
(options.underline) {\n\t          lineY -=3D lineWidth;\n\t        =
}\n\t        this.moveTo(x, lineY);\n\t        this.lineTo(x + =
renderedWidth, lineY);\n\t        this.stroke();\n\t        =
this.restore();\n\t      }\n\t      this.save();\n\t      =
this.transform(1, 0, 0, -1, 0, this.page.height);\n\t      y =3D =
this.page.height - y - (this._font.ascender / 1000 * =
this._fontSize);\n\t      if ((_base =3D this.page.fonts)[_name =3D =
this._font.id] =3D=3D null) {\n\t        _base[_name] =3D =
this._font.ref();\n\t      }\n\t      this._font.use(text);\n\t      =
this.addContent(\"BT\");\n\t      this.addContent(\"\" + x + \" \" + y + =
\" Td\");\n\t      this.addContent(\"/\" + this._font.id + \" \" + =
this._fontSize + \" Tf\");\n\t      mode =3D options.fill &amp;&amp; =
options.stroke ? 2 : options.stroke ? 1 : 0;\n\t      if (mode) {\n\t    =
    this.addContent(\"\" + mode + \" Tr\");\n\t      }\n\t      if =
(characterSpacing) {\n\t        this.addContent(\"\" + characterSpacing =
+ \" Tc\");\n\t      }\n\t      if (wordSpacing) {\n\t        words =3D =
text.trim().split(/\\s+/);\n\t        wordSpacing +=3D =
this.widthOfString(' ') + characterSpacing;\n\t        wordSpacing *=3D =
1000 / this._fontSize;\n\t        commands =3D [];\n\t        for (_i =
=3D 0, _len =3D words.length; _i &lt; _len; _i++) {\n\t          word =
=3D words[_i];\n\t          encoded =3D this._font.encode(word);\n\t     =
     encoded =3D ((function() {\n\t            var _j, _ref, =
_results;\n\t            _results =3D [];\n\t            for (i =3D _j =
=3D 0, _ref =3D encoded.length; _j &lt; _ref; i =3D _j +=3D 1) {\n\t     =
         _results.push(encoded.charCodeAt(i).toString(16));\n\t          =
  }\n\t            return _results;\n\t          })()).join('');\n\t     =
     commands.push(\"&lt;\" + encoded + \"&gt; \" + (-wordSpacing));\n\t =
       }\n\t        this.addContent(\"[\" + (commands.join(' ')) + \"] =
TJ\");\n\t      } else {\n\t        encoded =3D =
this._font.encode(text);\n\t        encoded =3D ((function() {\n\t       =
   var _j, _ref, _results;\n\t          _results =3D [];\n\t          =
for (i =3D _j =3D 0, _ref =3D encoded.length; _j &lt; _ref; i =3D _j =
+=3D 1) {\n\t            =
_results.push(encoded.charCodeAt(i).toString(16));\n\t          }\n\t    =
      return _results;\n\t        })()).join('');\n\t        =
this.addContent(\"&lt;\" + encoded + \"&gt; Tj\");\n\t      }\n\t      =
this.addContent(\"ET\");\n\t      return this.restore();\n\t    }\n\t  =
};\n\n\t}).call(this);\n\n\n/***/ },\n/* 90 */\n/***/ function(module, =
exports, __webpack_require__) {\n\n\t// Generated by CoffeeScript =
1.7.1\n\t(function() {\n\t  var EventEmitter, LineBreaker, =
LineWrapper,\n\t    __hasProp =3D {}.hasOwnProperty,\n\t    __extends =
=3D function(child, parent) { for (var key in parent) { if =
(__hasProp.call(parent, key)) child[key] =3D parent[key]; } function =
ctor() { this.constructor =3D child; } ctor.prototype =3D =
parent.prototype; child.prototype =3D new ctor(); child.__super__ =3D =
parent.prototype; return child; };\n\n\t  EventEmitter =3D =
__webpack_require__(26).EventEmitter;\n\n\t  LineBreaker =3D =
__webpack_require__(91);\n\n\t  LineWrapper =3D (function(_super) {\n\t  =
  __extends(LineWrapper, _super);\n\n\t    function =
LineWrapper(document, options) {\n\t      var _ref;\n\t      =
this.document =3D document;\n\t      this.indent =3D options.indent || =
0;\n\t      this.characterSpacing =3D options.characterSpacing || 0;\n\t =
     this.wordSpacing =3D options.wordSpacing =3D=3D=3D 0;\n\t      =
this.columns =3D options.columns || 1;\n\t      this.columnGap =3D (_ref =
=3D options.columnGap) !=3D null ? _ref : 18;\n\t      this.lineWidth =
=3D (options.width - (this.columnGap * (this.columns - 1))) / =
this.columns;\n\t      this.spaceLeft =3D this.lineWidth;\n\t      =
this.startX =3D this.document.x;\n\t      this.startY =3D =
this.document.y;\n\t      this.column =3D 1;\n\t      this.ellipsis =3D =
options.ellipsis;\n\t      this.continuedX =3D 0;\n\t      if =
(options.height !=3D null) {\n\t        this.height =3D =
options.height;\n\t        this.maxY =3D this.startY + =
options.height;\n\t      } else {\n\t        this.maxY =3D =
this.document.page.maxY();\n\t      }\n\t      this.on('firstLine', =
(function(_this) {\n\t        return function(options) {\n\t          =
var indent;\n\t          indent =3D _this.continuedX || =
_this.indent;\n\t          _this.document.x +=3D indent;\n\t          =
_this.lineWidth -=3D indent;\n\t          return _this.once('line', =
function() {\n\t            _this.document.x -=3D indent;\n\t            =
_this.lineWidth +=3D indent;\n\t            if (options.continued =
&amp;&amp; !_this.continuedX) {\n\t              _this.continuedX =3D =
_this.indent;\n\t            }\n\t            if (!options.continued) =
{\n\t              return _this.continuedX =3D 0;\n\t            }\n\t   =
       });\n\t        };\n\t      })(this));\n\t      =
this.on('lastLine', (function(_this) {\n\t        return =
function(options) {\n\t          var align;\n\t          align =3D =
options.align;\n\t          if (align =3D=3D=3D 'justify') {\n\t         =
   options.align =3D 'left';\n\t          }\n\t          _this.lastLine =
=3D true;\n\t          return _this.once('line', function() {\n\t        =
    _this.document.y +=3D options.paragraphGap || 0;\n\t            =
options.align =3D align;\n\t            return _this.lastLine =3D =
false;\n\t          });\n\t        };\n\t      })(this));\n\t    }\n\n\t =
   LineWrapper.prototype.wordWidth =3D function(word) {\n\t      return =
this.document.widthOfString(word, this) + this.characterSpacing + =
this.wordSpacing;\n\t    };\n\n\t    LineWrapper.prototype.eachWord =3D =
function(text, fn) {\n\t      var bk, breaker, fbk, l, last, lbk, =
shouldContinue, w, word, wordWidths;\n\t      breaker =3D new =
LineBreaker(text);\n\t      last =3D null;\n\t      wordWidths =3D =
{};\n\t      while (bk =3D breaker.nextBreak()) {\n\t        word =3D =
text.slice((last !=3D null ? last.position : void 0) || 0, =
bk.position);\n\t        w =3D wordWidths[word] !=3D null ? =
wordWidths[word] : wordWidths[word] =3D this.wordWidth(word);\n\t        =
if (w &gt; this.lineWidth + this.continuedX) {\n\t          lbk =3D =
last;\n\t          fbk =3D {};\n\t          while (word.length) {\n\t    =
        l =3D word.length;\n\t            while (w &gt; this.spaceLeft) =
{\n\t              w =3D this.wordWidth(word.slice(0, --l));\n\t         =
   }\n\t            fbk.required =3D l &lt; word.length;\n\t            =
shouldContinue =3D fn(word.slice(0, l), w, fbk, lbk);\n\t            lbk =
=3D {\n\t              required: false\n\t            };\n\t            =
word =3D word.slice(l);\n\t            w =3D this.wordWidth(word);\n\t   =
         if (shouldContinue =3D=3D=3D false) {\n\t              =
break;\n\t            }\n\t          }\n\t        } else {\n\t          =
shouldContinue =3D fn(word, w, bk, last);\n\t        }\n\t        if =
(shouldContinue =3D=3D=3D false) {\n\t          break;\n\t        }\n\t  =
      last =3D bk;\n\t      }\n\t    };\n\n\t    =
LineWrapper.prototype.wrap =3D function(text, options) {\n\t      var =
buffer, emitLine, lc, nextY, textWidth, wc, y;\n\t      if =
(options.indent !=3D null) {\n\t        this.indent =3D =
options.indent;\n\t      }\n\t      if (options.characterSpacing !=3D =
null) {\n\t        this.characterSpacing =3D =
options.characterSpacing;\n\t      }\n\t      if (options.wordSpacing =
!=3D null) {\n\t        this.wordSpacing =3D options.wordSpacing;\n\t    =
  }\n\t      if (options.ellipsis !=3D null) {\n\t        this.ellipsis =
=3D options.ellipsis;\n\t      }\n\t      nextY =3D this.document.y + =
this.document.currentLineHeight(true);\n\t      if (this.document.y &gt; =
this.maxY || nextY &gt; this.maxY) {\n\t        this.nextSection();\n\t  =
    }\n\t      buffer =3D '';\n\t      textWidth =3D 0;\n\t      wc =3D =
0;\n\t      lc =3D 0;\n\t      y =3D this.document.y;\n\t      emitLine =
=3D (function(_this) {\n\t        return function() {\n\t          =
options.textWidth =3D textWidth + _this.wordSpacing * (wc - 1);\n\t      =
    options.wordCount =3D wc;\n\t          options.lineWidth =3D =
_this.lineWidth;\n\t          y =3D _this.document.y;\n\t          =
_this.emit('line', buffer, options, _this);\n\t          return =
lc++;\n\t        };\n\t      })(this);\n\t      =
this.emit('sectionStart', options, this);\n\t      this.eachWord(text, =
(function(_this) {\n\t        return function(word, w, bk, last) {\n\t   =
       var lh, shouldContinue;\n\t          if ((last =3D=3D null) || =
last.required) {\n\t            _this.emit('firstLine', options, =
_this);\n\t            _this.spaceLeft =3D _this.lineWidth;\n\t          =
}\n\t          if (w &lt;=3D _this.spaceLeft) {\n\t            buffer =
+=3D word;\n\t            textWidth +=3D w;\n\t            wc++;\n\t     =
     }\n\t          if (bk.required || w &gt; _this.spaceLeft) {\n\t     =
       if (bk.required) {\n\t              _this.emit('lastLine', =
options, _this);\n\t            }\n\t            lh =3D =
_this.document.currentLineHeight(true);\n\t            if ((_this.height =
!=3D null) &amp;&amp; _this.ellipsis &amp;&amp; _this.document.y + lh * =
2 &gt; _this.maxY &amp;&amp; _this.column &gt;=3D _this.columns) {\n\t   =
           if (_this.ellipsis =3D=3D=3D true) {\n\t                =
_this.ellipsis =3D '=E2=80=A6';\n\t              }\n\t              =
buffer =3D buffer.replace(/\\s+$/, '');\n\t              textWidth =3D =
_this.wordWidth(buffer + _this.ellipsis);\n\t              while =
(textWidth &gt; _this.lineWidth) {\n\t                buffer =3D =
buffer.slice(0, -1).replace(/\\s+$/, '');\n\t                textWidth =
=3D _this.wordWidth(buffer + _this.ellipsis);\n\t              }\n\t     =
         buffer =3D buffer + _this.ellipsis;\n\t            }\n\t        =
    emitLine();\n\t            if (_this.document.y + lh &gt; =
_this.maxY) {\n\t              shouldContinue =3D =
_this.nextSection();\n\t              if (!shouldContinue) {\n\t         =
       wc =3D 0;\n\t                buffer =3D '';\n\t                =
return false;\n\t              }\n\t            }\n\t            if =
(bk.required) {\n\t              if (w &gt; _this.spaceLeft) {\n\t       =
         buffer =3D word;\n\t                textWidth =3D w;\n\t        =
        wc =3D 1;\n\t                emitLine();\n\t              }\n\t  =
            _this.spaceLeft =3D _this.lineWidth;\n\t              buffer =
=3D '';\n\t              textWidth =3D 0;\n\t              return wc =3D =
0;\n\t            } else {\n\t              _this.spaceLeft =3D =
_this.lineWidth - w;\n\t              buffer =3D word;\n\t              =
textWidth =3D w;\n\t              return wc =3D 1;\n\t            }\n\t  =
        } else {\n\t            return _this.spaceLeft -=3D w;\n\t       =
   }\n\t        };\n\t      })(this));\n\t      if (wc &gt; 0) {\n\t     =
   this.emit('lastLine', options, this);\n\t        emitLine();\n\t      =
}\n\t      this.emit('sectionEnd', options, this);\n\t      if =
(options.continued =3D=3D=3D true) {\n\t        if (lc &gt; 1) {\n\t     =
     this.continuedX =3D 0;\n\t        }\n\t        this.continuedX +=3D =
options.textWidth;\n\t        return this.document.y =3D y;\n\t      } =
else {\n\t        return this.document.x =3D this.startX;\n\t      }\n\t =
   };\n\n\t    LineWrapper.prototype.nextSection =3D function(options) =
{\n\t      var _ref;\n\t      this.emit('sectionEnd', options, =
this);\n\t      if (++this.column &gt; this.columns) {\n\t        if =
(this.height !=3D null) {\n\t          return false;\n\t        }\n\t    =
    this.document.addPage();\n\t        this.column =3D 1;\n\t        =
this.startY =3D this.document.page.margins.top;\n\t        this.maxY =3D =
this.document.page.maxY();\n\t        this.document.x =3D =
this.startX;\n\t        if (this.document._fillColor) {\n\t          =
(_ref =3D this.document).fillColor.apply(_ref, =
this.document._fillColor);\n\t        }\n\t        =
this.emit('pageBreak', options, this);\n\t      } else {\n\t        =
this.document.x +=3D this.lineWidth + this.columnGap;\n\t        =
this.document.y =3D this.startY;\n\t        this.emit('columnBreak', =
options, this);\n\t      }\n\t      this.emit('sectionStart', options, =
this);\n\t      return true;\n\t    };\n\n\t    return =
LineWrapper;\n\n\t  })(EventEmitter);\n\n\t  module.exports =3D =
LineWrapper;\n\n\t}).call(this);\n\n\n/***/ },\n/* 91 */\n/***/ =
function(module, exports, __webpack_require__) {\n\n\t// Generated by =
CoffeeScript 1.7.1\n\t(function() {\n\t  var AI, AL, BA, BK, CB, CI_BRK, =
CJ, CP_BRK, CR, DI_BRK, ID, IN_BRK, LF, LineBreaker, NL, NS, PR_BRK, SA, =
SG, SP, UnicodeTrie, WJ, XX, characterClasses, classTrie, pairTable, =
_ref, _ref1;\n\n\t  UnicodeTrie =3D __webpack_require__(92);\n\n\t  =
classTrie =3D new UnicodeTrie(__webpack_require__(93));\n\n\t  _ref =3D =
__webpack_require__(94), BK =3D _ref.BK, CR =3D _ref.CR, LF =3D _ref.LF, =
NL =3D _ref.NL, CB =3D _ref.CB, BA =3D _ref.BA, SP =3D _ref.SP, WJ =3D =
_ref.WJ, SP =3D _ref.SP, BK =3D _ref.BK, LF =3D _ref.LF, NL =3D _ref.NL, =
AI =3D _ref.AI, AL =3D _ref.AL, SA =3D _ref.SA, SG =3D _ref.SG, XX =3D =
_ref.XX, CJ =3D _ref.CJ, ID =3D _ref.ID, NS =3D _ref.NS, =
characterClasses =3D _ref.characterClasses;\n\n\t  _ref1 =3D =
__webpack_require__(95), DI_BRK =3D _ref1.DI_BRK, IN_BRK =3D =
_ref1.IN_BRK, CI_BRK =3D _ref1.CI_BRK, CP_BRK =3D _ref1.CP_BRK, PR_BRK =
=3D _ref1.PR_BRK, pairTable =3D _ref1.pairTable;\n\n\t  LineBreaker =3D =
(function() {\n\t    var Break, mapClass, mapFirst;\n\n\t    function =
LineBreaker(string) {\n\t      this.string =3D string;\n\t      this.pos =
=3D 0;\n\t      this.lastPos =3D 0;\n\t      this.curClass =3D null;\n\t =
     this.nextClass =3D null;\n\t    }\n\n\t    =
LineBreaker.prototype.nextCodePoint =3D function() {\n\t      var code, =
next;\n\t      code =3D this.string.charCodeAt(this.pos++);\n\t      =
next =3D this.string.charCodeAt(this.pos);\n\t      if ((0xd800 &lt;=3D =
code &amp;&amp; code &lt;=3D 0xdbff) &amp;&amp; (0xdc00 &lt;=3D next =
&amp;&amp; next &lt;=3D 0xdfff)) {\n\t        this.pos++;\n\t        =
return ((code - 0xd800) * 0x400) + (next - 0xdc00) + 0x10000;\n\t      =
}\n\t      return code;\n\t    };\n\n\t    mapClass =3D function(c) =
{\n\t      switch (c) {\n\t        case AI:\n\t          return AL;\n\t  =
      case SA:\n\t        case SG:\n\t        case XX:\n\t          =
return AL;\n\t        case CJ:\n\t          return NS;\n\t        =
default:\n\t          return c;\n\t      }\n\t    };\n\n\t    mapFirst =
=3D function(c) {\n\t      switch (c) {\n\t        case LF:\n\t        =
case NL:\n\t          return BK;\n\t        case CB:\n\t          return =
BA;\n\t        case SP:\n\t          return WJ;\n\t        default:\n\t  =
        return c;\n\t      }\n\t    };\n\n\t    =
LineBreaker.prototype.nextCharClass =3D function(first) {\n\t      if =
(first =3D=3D null) {\n\t        first =3D false;\n\t      }\n\t      =
return mapClass(classTrie.get(this.nextCodePoint()));\n\t    };\n\n\t    =
Break =3D (function() {\n\t      function Break(position, required) =
{\n\t        this.position =3D position;\n\t        this.required =3D =
required !=3D null ? required : false;\n\t      }\n\n\t      return =
Break;\n\n\t    })();\n\n\t    LineBreaker.prototype.nextBreak =3D =
function() {\n\t      var cur, lastClass, shouldBreak;\n\t      if =
(this.curClass =3D=3D null) {\n\t        this.curClass =3D =
mapFirst(this.nextCharClass());\n\t      }\n\t      while (this.pos &lt; =
this.string.length) {\n\t        this.lastPos =3D this.pos;\n\t        =
lastClass =3D this.nextClass;\n\t        this.nextClass =3D =
this.nextCharClass();\n\t        if (this.curClass =3D=3D=3D BK || =
(this.curClass =3D=3D=3D CR &amp;&amp; this.nextClass !=3D=3D LF)) {\n\t =
         this.curClass =3D mapFirst(mapClass(this.nextClass));\n\t       =
   return new Break(this.lastPos, true);\n\t        }\n\t        cur =3D =
(function() {\n\t          switch (this.nextClass) {\n\t            case =
SP:\n\t              return this.curClass;\n\t            case BK:\n\t   =
         case LF:\n\t            case NL:\n\t              return =
BK;\n\t            case CR:\n\t              return CR;\n\t            =
case CB:\n\t              return BA;\n\t          }\n\t        =
}).call(this);\n\t        if (cur !=3D null) {\n\t          =
this.curClass =3D cur;\n\t          if (this.nextClass =3D=3D=3D CB) =
{\n\t            return new Break(this.lastPos);\n\t          }\n\t      =
    continue;\n\t        }\n\t        shouldBreak =3D false;\n\t        =
switch (pairTable[this.curClass][this.nextClass]) {\n\t          case =
DI_BRK:\n\t            shouldBreak =3D true;\n\t            break;\n\t   =
       case IN_BRK:\n\t            shouldBreak =3D lastClass =3D=3D=3D =
SP;\n\t            break;\n\t          case CI_BRK:\n\t            =
shouldBreak =3D lastClass =3D=3D=3D SP;\n\t            if (!shouldBreak) =
{\n\t              continue;\n\t            }\n\t            break;\n\t  =
        case CP_BRK:\n\t            if (lastClass !=3D=3D SP) {\n\t      =
        continue;\n\t            }\n\t        }\n\t        this.curClass =
=3D this.nextClass;\n\t        if (shouldBreak) {\n\t          return =
new Break(this.lastPos);\n\t        }\n\t      }\n\t      if (this.pos =
&gt;=3D this.string.length) {\n\t        if (this.lastPos &lt; =
this.string.length) {\n\t          this.lastPos =3D =
this.string.length;\n\t          return new =
Break(this.string.length);\n\t        } else {\n\t          return =
null;\n\t        }\n\t      }\n\t    };\n\n\t    return =
LineBreaker;\n\n\t  })();\n\n\t  module.exports =3D =
LineBreaker;\n\n\t}).call(this);\n\n\n/***/ },\n/* 92 */\n/***/ =
function(module, exports) {\n\n\t// Generated by CoffeeScript =
1.7.1\n\tvar UnicodeTrie,\n\t  __slice =3D [].slice;\n\n\tUnicodeTrie =
=3D (function() {\n\t  var DATA_BLOCK_LENGTH, DATA_GRANULARITY, =
DATA_MASK, INDEX_1_OFFSET, INDEX_2_BLOCK_LENGTH, INDEX_2_BMP_LENGTH, =
INDEX_2_MASK, INDEX_SHIFT, LSCP_INDEX_2_LENGTH, LSCP_INDEX_2_OFFSET, =
OMITTED_BMP_INDEX_1_LENGTH, SHIFT_1, SHIFT_1_2, SHIFT_2, =
UTF8_2B_INDEX_2_LENGTH, UTF8_2B_INDEX_2_OFFSET;\n\n\t  SHIFT_1 =3D 6 + =
5;\n\n\t  SHIFT_2 =3D 5;\n\n\t  SHIFT_1_2 =3D SHIFT_1 - SHIFT_2;\n\n\t  =
OMITTED_BMP_INDEX_1_LENGTH =3D 0x10000 &gt;&gt; SHIFT_1;\n\n\t  =
INDEX_2_BLOCK_LENGTH =3D 1 &lt;&lt; SHIFT_1_2;\n\n\t  INDEX_2_MASK =3D =
INDEX_2_BLOCK_LENGTH - 1;\n\n\t  INDEX_SHIFT =3D 2;\n\n\t  =
DATA_BLOCK_LENGTH =3D 1 &lt;&lt; SHIFT_2;\n\n\t  DATA_MASK =3D =
DATA_BLOCK_LENGTH - 1;\n\n\t  LSCP_INDEX_2_OFFSET =3D 0x10000 &gt;&gt; =
SHIFT_2;\n\n\t  LSCP_INDEX_2_LENGTH =3D 0x400 &gt;&gt; SHIFT_2;\n\n\t  =
INDEX_2_BMP_LENGTH =3D LSCP_INDEX_2_OFFSET + LSCP_INDEX_2_LENGTH;\n\n\t  =
UTF8_2B_INDEX_2_OFFSET =3D INDEX_2_BMP_LENGTH;\n\n\t  =
UTF8_2B_INDEX_2_LENGTH =3D 0x800 &gt;&gt; 6;\n\n\t  INDEX_1_OFFSET =3D =
UTF8_2B_INDEX_2_OFFSET + UTF8_2B_INDEX_2_LENGTH;\n\n\t  DATA_GRANULARITY =
=3D 1 &lt;&lt; INDEX_SHIFT;\n\n\t  function UnicodeTrie(json) {\n\t    =
var _ref, _ref1;\n\t    if (json =3D=3D null) {\n\t      json =3D =
{};\n\t    }\n\t    this.data =3D json.data || [];\n\t    this.highStart =
=3D (_ref =3D json.highStart) !=3D null ? _ref : 0;\n\t    =
this.errorValue =3D (_ref1 =3D json.errorValue) !=3D null ? _ref1 : =
-1;\n\t  }\n\n\t  UnicodeTrie.prototype.get =3D function(codePoint) =
{\n\t    var index;\n\t    if (codePoint &lt; 0 || codePoint &gt; =
0x10ffff) {\n\t      return this.errorValue;\n\t    }\n\t    if =
(codePoint &lt; 0xd800 || (codePoint &gt; 0xdbff &amp;&amp; codePoint =
&lt;=3D 0xffff)) {\n\t      index =3D (this.data[codePoint &gt;&gt; =
SHIFT_2] &lt;&lt; INDEX_SHIFT) + (codePoint &amp; DATA_MASK);\n\t      =
return this.data[index];\n\t    }\n\t    if (codePoint &lt;=3D 0xffff) =
{\n\t      index =3D (this.data[LSCP_INDEX_2_OFFSET + ((codePoint - =
0xd800) &gt;&gt; SHIFT_2)] &lt;&lt; INDEX_SHIFT) + (codePoint &amp; =
DATA_MASK);\n\t      return this.data[index];\n\t    }\n\t    if =
(codePoint &lt; this.highStart) {\n\t      index =3D =
this.data[(INDEX_1_OFFSET - OMITTED_BMP_INDEX_1_LENGTH) + (codePoint =
&gt;&gt; SHIFT_1)];\n\t      index =3D this.data[index + ((codePoint =
&gt;&gt; SHIFT_2) &amp; INDEX_2_MASK)];\n\t      index =3D (index =
&lt;&lt; INDEX_SHIFT) + (codePoint &amp; DATA_MASK);\n\t      return =
this.data[index];\n\t    }\n\t    return this.data[this.data.length - =
DATA_GRANULARITY];\n\t  };\n\n\t  UnicodeTrie.prototype.toJSON =3D =
function() {\n\t    var res;\n\t    res =3D {\n\t      data: =
__slice.call(this.data),\n\t      highStart: this.highStart,\n\t      =
errorValue: this.errorValue\n\t    };\n\t    return res;\n\t  };\n\n\t  =
return UnicodeTrie;\n\n\t})();\n\n\tmodule.exports =3D =
UnicodeTrie;\n\n\n/***/ },\n/* 93 */\n/***/ function(module, exports) =
{\n\n\tmodule.exports =3D {\n\t\t\"data\": =
[\n\t\t\t1961,\n\t\t\t1969,\n\t\t\t1977,\n\t\t\t1985,\n\t\t\t2025,\n\t\t\=
t2033,\n\t\t\t2041,\n\t\t\t2049,\n\t\t\t2057,\n\t\t\t2065,\n\t\t\t2073,\n=
\t\t\t2081,\n\t\t\t2089,\n\t\t\t2097,\n\t\t\t2105,\n\t\t\t2113,\n\t\t\t21=
21,\n\t\t\t2129,\n\t\t\t2137,\n\t\t\t2145,\n\t\t\t2153,\n\t\t\t2161,\n\t\=
t\t2169,\n\t\t\t2177,\n\t\t\t2185,\n\t\t\t2193,\n\t\t\t2201,\n\t\t\t2209,=
\n\t\t\t2217,\n\t\t\t2225,\n\t\t\t2233,\n\t\t\t2241,\n\t\t\t2249,\n\t\t\t=
2257,\n\t\t\t2265,\n\t\t\t2273,\n\t\t\t2281,\n\t\t\t2289,\n\t\t\t2297,\n\=
t\t\t2305,\n\t\t\t2313,\n\t\t\t2321,\n\t\t\t2329,\n\t\t\t2337,\n\t\t\t234=
5,\n\t\t\t2353,\n\t\t\t2361,\n\t\t\t2369,\n\t\t\t2377,\n\t\t\t2385,\n\t\t=
\t2393,\n\t\t\t2401,\n\t\t\t2409,\n\t\t\t2417,\n\t\t\t2425,\n\t\t\t2433,\=
n\t\t\t2441,\n\t\t\t2449,\n\t\t\t2457,\n\t\t\t2465,\n\t\t\t2473,\n\t\t\t2=
481,\n\t\t\t2489,\n\t\t\t2497,\n\t\t\t2505,\n\t\t\t2513,\n\t\t\t2521,\n\t=
\t\t2529,\n\t\t\t2529,\n\t\t\t2537,\n\t\t\t2009,\n\t\t\t2545,\n\t\t\t2553=
,\n\t\t\t2561,\n\t\t\t2569,\n\t\t\t2577,\n\t\t\t2585,\n\t\t\t2593,\n\t\t\=
t2601,\n\t\t\t2609,\n\t\t\t2617,\n\t\t\t2625,\n\t\t\t2633,\n\t\t\t2641,\n=
\t\t\t2649,\n\t\t\t2657,\n\t\t\t2665,\n\t\t\t2673,\n\t\t\t2681,\n\t\t\t26=
89,\n\t\t\t2697,\n\t\t\t2705,\n\t\t\t2713,\n\t\t\t2721,\n\t\t\t2729,\n\t\=
t\t2737,\n\t\t\t2745,\n\t\t\t2753,\n\t\t\t2761,\n\t\t\t2769,\n\t\t\t2777,=
\n\t\t\t2785,\n\t\t\t2793,\n\t\t\t2801,\n\t\t\t2809,\n\t\t\t2817,\n\t\t\t=
2825,\n\t\t\t2833,\n\t\t\t2841,\n\t\t\t2849,\n\t\t\t2857,\n\t\t\t2865,\n\=
t\t\t2873,\n\t\t\t2881,\n\t\t\t2889,\n\t\t\t2009,\n\t\t\t2897,\n\t\t\t290=
5,\n\t\t\t2913,\n\t\t\t2009,\n\t\t\t2921,\n\t\t\t2929,\n\t\t\t2937,\n\t\t=
\t2945,\n\t\t\t2953,\n\t\t\t2961,\n\t\t\t2969,\n\t\t\t2009,\n\t\t\t2977,\=
n\t\t\t2977,\n\t\t\t2985,\n\t\t\t2993,\n\t\t\t3001,\n\t\t\t3009,\n\t\t\t3=
009,\n\t\t\t3009,\n\t\t\t3017,\n\t\t\t3017,\n\t\t\t3017,\n\t\t\t3025,\n\t=
\t\t3025,\n\t\t\t3033,\n\t\t\t3041,\n\t\t\t3041,\n\t\t\t3049,\n\t\t\t3049=
,\n\t\t\t3049,\n\t\t\t3049,\n\t\t\t3049,\n\t\t\t3049,\n\t\t\t3049,\n\t\t\=
t3049,\n\t\t\t3049,\n\t\t\t3049,\n\t\t\t3057,\n\t\t\t3065,\n\t\t\t3073,\n=
\t\t\t3073,\n\t\t\t3073,\n\t\t\t3081,\n\t\t\t3089,\n\t\t\t3097,\n\t\t\t30=
97,\n\t\t\t3097,\n\t\t\t3097,\n\t\t\t3097,\n\t\t\t3097,\n\t\t\t3097,\n\t\=
t\t3097,\n\t\t\t3097,\n\t\t\t3097,\n\t\t\t3097,\n\t\t\t3097,\n\t\t\t3097,=
\n\t\t\t3097,\n\t\t\t3097,\n\t\t\t3097,\n\t\t\t3097,\n\t\t\t3097,\n\t\t\t=
3097,\n\t\t\t3105,\n\t\t\t3113,\n\t\t\t3113,\n\t\t\t3121,\n\t\t\t3129,\n\=
t\t\t3137,\n\t\t\t3145,\n\t\t\t3153,\n\t\t\t3161,\n\t\t\t3161,\n\t\t\t316=
9,\n\t\t\t3177,\n\t\t\t3185,\n\t\t\t3193,\n\t\t\t3193,\n\t\t\t3193,\n\t\t=
\t3193,\n\t\t\t3201,\n\t\t\t3209,\n\t\t\t3209,\n\t\t\t3217,\n\t\t\t3225,\=
n\t\t\t3233,\n\t\t\t3241,\n\t\t\t3241,\n\t\t\t3241,\n\t\t\t3249,\n\t\t\t3=
257,\n\t\t\t3265,\n\t\t\t3273,\n\t\t\t3273,\n\t\t\t3281,\n\t\t\t3289,\n\t=
\t\t3297,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t3305,\n\t\t\t3313,\n\t\t\t3321=
,\n\t\t\t3329,\n\t\t\t3337,\n\t\t\t3345,\n\t\t\t3353,\n\t\t\t3361,\n\t\t\=
t3369,\n\t\t\t3377,\n\t\t\t3385,\n\t\t\t3393,\n\t\t\t2009,\n\t\t\t2009,\n=
\t\t\t3401,\n\t\t\t3409,\n\t\t\t3417,\n\t\t\t3417,\n\t\t\t3417,\n\t\t\t34=
17,\n\t\t\t3417,\n\t\t\t3417,\n\t\t\t3425,\n\t\t\t3425,\n\t\t\t3433,\n\t\=
t\t3433,\n\t\t\t3433,\n\t\t\t3433,\n\t\t\t3433,\n\t\t\t3433,\n\t\t\t3433,=
\n\t\t\t3433,\n\t\t\t3433,\n\t\t\t3433,\n\t\t\t3433,\n\t\t\t3433,\n\t\t\t=
3433,\n\t\t\t3433,\n\t\t\t3433,\n\t\t\t3441,\n\t\t\t3449,\n\t\t\t3457,\n\=
t\t\t3465,\n\t\t\t3473,\n\t\t\t3481,\n\t\t\t3489,\n\t\t\t3497,\n\t\t\t350=
5,\n\t\t\t3513,\n\t\t\t3521,\n\t\t\t3529,\n\t\t\t3537,\n\t\t\t3545,\n\t\t=
\t3553,\n\t\t\t3561,\n\t\t\t3569,\n\t\t\t3577,\n\t\t\t3585,\n\t\t\t3593,\=
n\t\t\t3601,\n\t\t\t3609,\n\t\t\t3617,\n\t\t\t3625,\n\t\t\t3625,\n\t\t\t3=
633,\n\t\t\t3641,\n\t\t\t3649,\n\t\t\t3649,\n\t\t\t3649,\n\t\t\t3649,\n\t=
\t\t3649,\n\t\t\t3657,\n\t\t\t3665,\n\t\t\t3665,\n\t\t\t3673,\n\t\t\t3681=
,\n\t\t\t3681,\n\t\t\t3681,\n\t\t\t3681,\n\t\t\t3689,\n\t\t\t3697,\n\t\t\=
t3697,\n\t\t\t3705,\n\t\t\t3713,\n\t\t\t3721,\n\t\t\t3729,\n\t\t\t3737,\n=
\t\t\t3745,\n\t\t\t3753,\n\t\t\t3761,\n\t\t\t3769,\n\t\t\t3777,\n\t\t\t37=
85,\n\t\t\t3793,\n\t\t\t3801,\n\t\t\t3809,\n\t\t\t3817,\n\t\t\t3825,\n\t\=
t\t3833,\n\t\t\t3841,\n\t\t\t3849,\n\t\t\t3857,\n\t\t\t3865,\n\t\t\t3873,=
\n\t\t\t3881,\n\t\t\t3881,\n\t\t\t3881,\n\t\t\t3881,\n\t\t\t3881,\n\t\t\t=
3881,\n\t\t\t3881,\n\t\t\t3881,\n\t\t\t3881,\n\t\t\t3881,\n\t\t\t3881,\n\=
t\t\t3881,\n\t\t\t3889,\n\t\t\t3897,\n\t\t\t3905,\n\t\t\t3913,\n\t\t\t392=
1,\n\t\t\t3921,\n\t\t\t3921,\n\t\t\t3921,\n\t\t\t3921,\n\t\t\t3921,\n\t\t=
\t3921,\n\t\t\t3921,\n\t\t\t3921,\n\t\t\t3921,\n\t\t\t3929,\n\t\t\t2009,\=
n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t3937,\n\t\t\t3=
937,\n\t\t\t3937,\n\t\t\t3937,\n\t\t\t3937,\n\t\t\t3937,\n\t\t\t3937,\n\t=
\t\t3945,\n\t\t\t3953,\n\t\t\t3953,\n\t\t\t3953,\n\t\t\t3961,\n\t\t\t3969=
,\n\t\t\t3969,\n\t\t\t3977,\n\t\t\t3985,\n\t\t\t3993,\n\t\t\t4001,\n\t\t\=
t2009,\n\t\t\t2009,\n\t\t\t4009,\n\t\t\t4009,\n\t\t\t4009,\n\t\t\t4009,\n=
\t\t\t4009,\n\t\t\t4009,\n\t\t\t4009,\n\t\t\t4009,\n\t\t\t4009,\n\t\t\t40=
09,\n\t\t\t4009,\n\t\t\t4009,\n\t\t\t4017,\n\t\t\t4025,\n\t\t\t4033,\n\t\=
t\t4041,\n\t\t\t4049,\n\t\t\t4057,\n\t\t\t4065,\n\t\t\t4073,\n\t\t\t4081,=
\n\t\t\t4081,\n\t\t\t4081,\n\t\t\t4081,\n\t\t\t4081,\n\t\t\t4081,\n\t\t\t=
4081,\n\t\t\t4089,\n\t\t\t4097,\n\t\t\t4097,\n\t\t\t4105,\n\t\t\t4113,\n\=
t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t411=
3,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t=
\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\=
n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4=
113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t=
\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113=
,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\=
t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n=
\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t41=
13,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\=
t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,=
\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t=
4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\=
t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t411=
3,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t=
\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\=
n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4=
113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t=
\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113=
,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\=
t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n=
\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t41=
13,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\=
t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,=
\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t=
4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\=
t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t411=
3,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t=
\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\=
n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4=
113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t=
\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113=
,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\=
t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n=
\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t41=
13,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\=
t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,=
\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t=
4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4121,\n\=
t\t\t4121,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t412=
9,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t=
\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\=
n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4=
129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t=
\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129=
,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\=
t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n=
\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t41=
29,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\=
t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,=
\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t=
4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\=
t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t412=
9,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t=
\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\=
n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4=
129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t=
\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129=
,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\=
t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n=
\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t41=
29,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\=
t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,=
\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t=
4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\=
t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t412=
9,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t=
\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\=
n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4=
129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t=
\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129=
,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\=
t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n=
\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t41=
29,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\=
t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,=
\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t=
4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\=
t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t412=
9,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t=
\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\=
n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4=
129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t=
\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129=
,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\=
t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n=
\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t41=
29,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\=
t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,=
\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t=
4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\=
t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t412=
9,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t=
\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\=
n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4=
129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t=
\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129=
,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\=
t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n=
\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t41=
29,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\=
t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,=
\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t=
4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\=
t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t412=
9,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t=
\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\=
n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4=
129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t=
\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129=
,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\=
t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n=
\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t41=
29,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\=
t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,=
\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t=
4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\=
t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t412=
9,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t=
\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\=
n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4=
129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t=
\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129=
,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\=
t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n=
\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t41=
29,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\=
t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,=
\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t=
4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\=
t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t412=
9,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t=
\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\=
n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4=
129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t=
\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129=
,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\=
t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n=
\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t41=
29,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\=
t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,=
\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t=
4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\=
t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t412=
9,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t=
\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\=
n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4=
129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t=
\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129=
,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\=
t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n=
\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t41=
29,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\=
t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,=
\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t=
4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\=
t\t\t4137,\n\t\t\t4145,\n\t\t\t4145,\n\t\t\t4145,\n\t\t\t4145,\n\t\t\t414=
5,\n\t\t\t4145,\n\t\t\t4145,\n\t\t\t4145,\n\t\t\t4145,\n\t\t\t4145,\n\t\t=
\t4145,\n\t\t\t4145,\n\t\t\t4145,\n\t\t\t4145,\n\t\t\t4145,\n\t\t\t4145,\=
n\t\t\t4145,\n\t\t\t4145,\n\t\t\t4145,\n\t\t\t4145,\n\t\t\t4145,\n\t\t\t4=
145,\n\t\t\t4145,\n\t\t\t4145,\n\t\t\t4145,\n\t\t\t4145,\n\t\t\t4145,\n\t=
\t\t4145,\n\t\t\t4145,\n\t\t\t4145,\n\t\t\t4145,\n\t\t\t4145,\n\t\t\t4145=
,\n\t\t\t4145,\n\t\t\t4145,\n\t\t\t4145,\n\t\t\t4145,\n\t\t\t4153,\n\t\t\=
t4161,\n\t\t\t4169,\n\t\t\t4169,\n\t\t\t4169,\n\t\t\t4169,\n\t\t\t4169,\n=
\t\t\t4169,\n\t\t\t4169,\n\t\t\t4169,\n\t\t\t4177,\n\t\t\t4185,\n\t\t\t41=
93,\n\t\t\t4201,\n\t\t\t4209,\n\t\t\t4217,\n\t\t\t4217,\n\t\t\t4225,\n\t\=
t\t4233,\n\t\t\t4233,\n\t\t\t4233,\n\t\t\t4233,\n\t\t\t4233,\n\t\t\t4233,=
\n\t\t\t4233,\n\t\t\t4233,\n\t\t\t4241,\n\t\t\t4249,\n\t\t\t4257,\n\t\t\t=
4265,\n\t\t\t4273,\n\t\t\t4281,\n\t\t\t4289,\n\t\t\t4297,\n\t\t\t4305,\n\=
t\t\t4313,\n\t\t\t4321,\n\t\t\t4329,\n\t\t\t4337,\n\t\t\t4345,\n\t\t\t435=
3,\n\t\t\t4361,\n\t\t\t4361,\n\t\t\t4369,\n\t\t\t4377,\n\t\t\t4385,\n\t\t=
\t4385,\n\t\t\t4385,\n\t\t\t4385,\n\t\t\t4393,\n\t\t\t4401,\n\t\t\t4409,\=
n\t\t\t4409,\n\t\t\t4409,\n\t\t\t4409,\n\t\t\t4409,\n\t\t\t4409,\n\t\t\t4=
417,\n\t\t\t4425,\n\t\t\t4433,\n\t\t\t4441,\n\t\t\t4449,\n\t\t\t4457,\n\t=
\t\t4465,\n\t\t\t4473,\n\t\t\t4481,\n\t\t\t4489,\n\t\t\t4497,\n\t\t\t4505=
,\n\t\t\t4513,\n\t\t\t4521,\n\t\t\t4529,\n\t\t\t4537,\n\t\t\t4545,\n\t\t\=
t4553,\n\t\t\t4561,\n\t\t\t4569,\n\t\t\t4577,\n\t\t\t4585,\n\t\t\t4593,\n=
\t\t\t4601,\n\t\t\t4609,\n\t\t\t4617,\n\t\t\t4625,\n\t\t\t4633,\n\t\t\t46=
41,\n\t\t\t4649,\n\t\t\t4657,\n\t\t\t4665,\n\t\t\t4673,\n\t\t\t4681,\n\t\=
t\t4689,\n\t\t\t4697,\n\t\t\t4705,\n\t\t\t4713,\n\t\t\t4721,\n\t\t\t4729,=
\n\t\t\t4737,\n\t\t\t4745,\n\t\t\t4753,\n\t\t\t4761,\n\t\t\t4769,\n\t\t\t=
4777,\n\t\t\t4785,\n\t\t\t4793,\n\t\t\t4801,\n\t\t\t4809,\n\t\t\t4817,\n\=
t\t\t4825,\n\t\t\t4833,\n\t\t\t4841,\n\t\t\t4849,\n\t\t\t4857,\n\t\t\t486=
5,\n\t\t\t4873,\n\t\t\t4881,\n\t\t\t4889,\n\t\t\t4897,\n\t\t\t4905,\n\t\t=
\t4913,\n\t\t\t4921,\n\t\t\t4929,\n\t\t\t4937,\n\t\t\t4945,\n\t\t\t4953,\=
n\t\t\t4961,\n\t\t\t4969,\n\t\t\t4977,\n\t\t\t4985,\n\t\t\t4993,\n\t\t\t5=
001,\n\t\t\t5009,\n\t\t\t5017,\n\t\t\t5025,\n\t\t\t5033,\n\t\t\t5041,\n\t=
\t\t5049,\n\t\t\t5057,\n\t\t\t5065,\n\t\t\t5073,\n\t\t\t5081,\n\t\t\t5089=
,\n\t\t\t5097,\n\t\t\t5105,\n\t\t\t5113,\n\t\t\t5121,\n\t\t\t5129,\n\t\t\=
t5137,\n\t\t\t5145,\n\t\t\t5153,\n\t\t\t5161,\n\t\t\t5169,\n\t\t\t5177,\n=
\t\t\t5185,\n\t\t\t5193,\n\t\t\t5201,\n\t\t\t5209,\n\t\t\t5217,\n\t\t\t52=
25,\n\t\t\t5233,\n\t\t\t5241,\n\t\t\t5249,\n\t\t\t5257,\n\t\t\t5265,\n\t\=
t\t5273,\n\t\t\t5281,\n\t\t\t5289,\n\t\t\t5297,\n\t\t\t5305,\n\t\t\t5313,=
\n\t\t\t5321,\n\t\t\t5329,\n\t\t\t5337,\n\t\t\t5345,\n\t\t\t5353,\n\t\t\t=
5361,\n\t\t\t5369,\n\t\t\t5377,\n\t\t\t5385,\n\t\t\t5393,\n\t\t\t5401,\n\=
t\t\t5409,\n\t\t\t5417,\n\t\t\t5425,\n\t\t\t5433,\n\t\t\t5441,\n\t\t\t544=
9,\n\t\t\t5457,\n\t\t\t5465,\n\t\t\t5473,\n\t\t\t5481,\n\t\t\t5489,\n\t\t=
\t5497,\n\t\t\t5505,\n\t\t\t5513,\n\t\t\t5521,\n\t\t\t5529,\n\t\t\t5537,\=
n\t\t\t5545,\n\t\t\t5553,\n\t\t\t5561,\n\t\t\t5569,\n\t\t\t5577,\n\t\t\t5=
585,\n\t\t\t5593,\n\t\t\t5601,\n\t\t\t5609,\n\t\t\t5617,\n\t\t\t5625,\n\t=
\t\t5633,\n\t\t\t5641,\n\t\t\t5649,\n\t\t\t5657,\n\t\t\t5665,\n\t\t\t5673=
,\n\t\t\t5681,\n\t\t\t5689,\n\t\t\t5697,\n\t\t\t5705,\n\t\t\t5713,\n\t\t\=
t5721,\n\t\t\t5729,\n\t\t\t5737,\n\t\t\t5745,\n\t\t\t5753,\n\t\t\t5761,\n=
\t\t\t5769,\n\t\t\t5777,\n\t\t\t5785,\n\t\t\t5793,\n\t\t\t5801,\n\t\t\t58=
09,\n\t\t\t5817,\n\t\t\t5825,\n\t\t\t5833,\n\t\t\t5841,\n\t\t\t5849,\n\t\=
t\t5857,\n\t\t\t5865,\n\t\t\t5873,\n\t\t\t5881,\n\t\t\t5889,\n\t\t\t5897,=
\n\t\t\t5905,\n\t\t\t5913,\n\t\t\t5921,\n\t\t\t5929,\n\t\t\t5937,\n\t\t\t=
5945,\n\t\t\t5953,\n\t\t\t5961,\n\t\t\t5969,\n\t\t\t5977,\n\t\t\t5985,\n\=
t\t\t5993,\n\t\t\t6001,\n\t\t\t6009,\n\t\t\t6017,\n\t\t\t6025,\n\t\t\t603=
3,\n\t\t\t6041,\n\t\t\t6049,\n\t\t\t6057,\n\t\t\t6065,\n\t\t\t6073,\n\t\t=
\t6081,\n\t\t\t6089,\n\t\t\t6097,\n\t\t\t6105,\n\t\t\t6113,\n\t\t\t6121,\=
n\t\t\t6129,\n\t\t\t6137,\n\t\t\t6145,\n\t\t\t6153,\n\t\t\t6161,\n\t\t\t6=
169,\n\t\t\t6177,\n\t\t\t6185,\n\t\t\t6193,\n\t\t\t6201,\n\t\t\t6209,\n\t=
\t\t6217,\n\t\t\t6225,\n\t\t\t6233,\n\t\t\t6241,\n\t\t\t6249,\n\t\t\t6257=
,\n\t\t\t6265,\n\t\t\t6273,\n\t\t\t6281,\n\t\t\t6289,\n\t\t\t6297,\n\t\t\=
t6305,\n\t\t\t6313,\n\t\t\t6321,\n\t\t\t6329,\n\t\t\t6337,\n\t\t\t6345,\n=
\t\t\t6353,\n\t\t\t6361,\n\t\t\t6369,\n\t\t\t6377,\n\t\t\t6385,\n\t\t\t63=
93,\n\t\t\t6401,\n\t\t\t6409,\n\t\t\t6417,\n\t\t\t6425,\n\t\t\t6433,\n\t\=
t\t6441,\n\t\t\t6449,\n\t\t\t6457,\n\t\t\t6465,\n\t\t\t6473,\n\t\t\t6481,=
\n\t\t\t6489,\n\t\t\t6497,\n\t\t\t6505,\n\t\t\t6513,\n\t\t\t6521,\n\t\t\t=
6529,\n\t\t\t6537,\n\t\t\t6545,\n\t\t\t6553,\n\t\t\t6561,\n\t\t\t6569,\n\=
t\t\t6577,\n\t\t\t6585,\n\t\t\t6593,\n\t\t\t6601,\n\t\t\t6609,\n\t\t\t661=
7,\n\t\t\t6625,\n\t\t\t6633,\n\t\t\t6641,\n\t\t\t6649,\n\t\t\t6657,\n\t\t=
\t6665,\n\t\t\t6673,\n\t\t\t6681,\n\t\t\t6689,\n\t\t\t6697,\n\t\t\t6705,\=
n\t\t\t6713,\n\t\t\t6721,\n\t\t\t6729,\n\t\t\t6737,\n\t\t\t6745,\n\t\t\t6=
753,\n\t\t\t6761,\n\t\t\t6769,\n\t\t\t6777,\n\t\t\t6785,\n\t\t\t6793,\n\t=
\t\t6801,\n\t\t\t6809,\n\t\t\t6817,\n\t\t\t6825,\n\t\t\t6833,\n\t\t\t6841=
,\n\t\t\t6849,\n\t\t\t6857,\n\t\t\t6865,\n\t\t\t6873,\n\t\t\t6881,\n\t\t\=
t6889,\n\t\t\t6897,\n\t\t\t6905,\n\t\t\t6913,\n\t\t\t6921,\n\t\t\t6929,\n=
\t\t\t6937,\n\t\t\t6945,\n\t\t\t6953,\n\t\t\t6961,\n\t\t\t6969,\n\t\t\t69=
77,\n\t\t\t6985,\n\t\t\t6993,\n\t\t\t7001,\n\t\t\t7009,\n\t\t\t7017,\n\t\=
t\t7025,\n\t\t\t7033,\n\t\t\t7041,\n\t\t\t7049,\n\t\t\t7057,\n\t\t\t7065,=
\n\t\t\t7073,\n\t\t\t7081,\n\t\t\t7089,\n\t\t\t7097,\n\t\t\t7105,\n\t\t\t=
7113,\n\t\t\t7121,\n\t\t\t7129,\n\t\t\t7137,\n\t\t\t7145,\n\t\t\t7153,\n\=
t\t\t7161,\n\t\t\t7169,\n\t\t\t7177,\n\t\t\t7185,\n\t\t\t7193,\n\t\t\t720=
1,\n\t\t\t7209,\n\t\t\t7217,\n\t\t\t7225,\n\t\t\t7233,\n\t\t\t2009,\n\t\t=
\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\=
n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2=
009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t=
\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009=
,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\=
t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t7241,\n\t\t\t7241,\n\t\t\t7241,\n=
\t\t\t7241,\n\t\t\t7241,\n\t\t\t7241,\n\t\t\t7241,\n\t\t\t7241,\n\t\t\t72=
41,\n\t\t\t7241,\n\t\t\t7241,\n\t\t\t7241,\n\t\t\t7241,\n\t\t\t7241,\n\t\=
t\t7241,\n\t\t\t7241,\n\t\t\t7241,\n\t\t\t7241,\n\t\t\t7241,\n\t\t\t7241,=
\n\t\t\t7241,\n\t\t\t7241,\n\t\t\t7241,\n\t\t\t7241,\n\t\t\t7241,\n\t\t\t=
7241,\n\t\t\t7241,\n\t\t\t7241,\n\t\t\t7241,\n\t\t\t7241,\n\t\t\t7241,\n\=
t\t\t7241,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t200=
9,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t=
\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\=
n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2=
009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t=
\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009=
,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\=
t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n=
\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t20=
09,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\=
t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,=
\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t=
2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\=
t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t200=
9,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t=
\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\=
n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2=
009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t=
\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009=
,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\=
t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n=
\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t20=
09,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\=
t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,=
\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t=
2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\=
t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t200=
9,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t=
\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\=
n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2=
009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t=
\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009=
,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\=
t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n=
\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t20=
09,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t7249,\n\t\=
t\t7249,\n\t\t\t7249,\n\t\t\t7249,\n\t\t\t7249,\n\t\t\t7249,\n\t\t\t7249,=
\n\t\t\t7249,\n\t\t\t7249,\n\t\t\t7249,\n\t\t\t7249,\n\t\t\t7249,\n\t\t\t=
7249,\n\t\t\t7249,\n\t\t\t7249,\n\t\t\t7249,\n\t\t\t7257,\n\t\t\t7265,\n\=
t\t\t7273,\n\t\t\t7281,\n\t\t\t7281,\n\t\t\t7281,\n\t\t\t7281,\n\t\t\t728=
1,\n\t\t\t7281,\n\t\t\t7281,\n\t\t\t7281,\n\t\t\t7281,\n\t\t\t7281,\n\t\t=
\t7281,\n\t\t\t7281,\n\t\t\t7281,\n\t\t\t7281,\n\t\t\t7289,\n\t\t\t7297,\=
n\t\t\t7305,\n\t\t\t7305,\n\t\t\t7305,\n\t\t\t7305,\n\t\t\t7313,\n\t\t\t7=
321,\n\t\t\t7329,\n\t\t\t7337,\n\t\t\t7345,\n\t\t\t7353,\n\t\t\t7353,\n\t=
\t\t7353,\n\t\t\t7361,\n\t\t\t7369,\n\t\t\t7377,\n\t\t\t7385,\n\t\t\t7393=
,\n\t\t\t7401,\n\t\t\t7409,\n\t\t\t7417,\n\t\t\t7425,\n\t\t\t7241,\n\t\t\=
t7241,\n\t\t\t7241,\n\t\t\t7241,\n\t\t\t7241,\n\t\t\t7241,\n\t\t\t7241,\n=
\t\t\t7241,\n\t\t\t7241,\n\t\t\t7241,\n\t\t\t7241,\n\t\t\t7241,\n\t\t\t72=
41,\n\t\t\t7241,\n\t\t\t7241,\n\t\t\t7241,\n\t\t\t7241,\n\t\t\t7241,\n\t\=
t\t7241,\n\t\t\t7241,\n\t\t\t7241,\n\t\t\t7241,\n\t\t\t7241,\n\t\t\t7241,=
\n\t\t\t7241,\n\t\t\t7241,\n\t\t\t7241,\n\t\t\t7241,\n\t\t\t7241,\n\t\t\t=
7241,\n\t\t\t7241,\n\t\t\t7241,\n\t\t\t7972,\n\t\t\t7972,\n\t\t\t8100,\n\=
t\t\t8164,\n\t\t\t8228,\n\t\t\t8292,\n\t\t\t8356,\n\t\t\t8420,\n\t\t\t848=
4,\n\t\t\t8548,\n\t\t\t8612,\n\t\t\t8676,\n\t\t\t8740,\n\t\t\t8804,\n\t\t=
\t8868,\n\t\t\t8932,\n\t\t\t8996,\n\t\t\t9060,\n\t\t\t9124,\n\t\t\t9188,\=
n\t\t\t9252,\n\t\t\t9316,\n\t\t\t9380,\n\t\t\t9444,\n\t\t\t9508,\n\t\t\t9=
572,\n\t\t\t9636,\n\t\t\t9700,\n\t\t\t9764,\n\t\t\t9828,\n\t\t\t9892,\n\t=
\t\t9956,\n\t\t\t2593,\n\t\t\t2657,\n\t\t\t2721,\n\t\t\t2529,\n\t\t\t2785=
,\n\t\t\t2529,\n\t\t\t2849,\n\t\t\t2913,\n\t\t\t2977,\n\t\t\t3041,\n\t\t\=
t3105,\n\t\t\t3169,\n\t\t\t3233,\n\t\t\t3297,\n\t\t\t2529,\n\t\t\t2529,\n=
\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t25=
29,\n\t\t\t3361,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t3425,\n\t\=
t\t2529,\n\t\t\t2529,\n\t\t\t3489,\n\t\t\t3553,\n\t\t\t2529,\n\t\t\t3617,=
\n\t\t\t3681,\n\t\t\t3745,\n\t\t\t3809,\n\t\t\t3873,\n\t\t\t3937,\n\t\t\t=
4001,\n\t\t\t4065,\n\t\t\t4129,\n\t\t\t4193,\n\t\t\t4257,\n\t\t\t4321,\n\=
t\t\t4385,\n\t\t\t4449,\n\t\t\t4513,\n\t\t\t4577,\n\t\t\t4641,\n\t\t\t470=
5,\n\t\t\t4769,\n\t\t\t4833,\n\t\t\t4897,\n\t\t\t4961,\n\t\t\t5025,\n\t\t=
\t5089,\n\t\t\t5153,\n\t\t\t5217,\n\t\t\t5281,\n\t\t\t5345,\n\t\t\t5409,\=
n\t\t\t5473,\n\t\t\t5537,\n\t\t\t5601,\n\t\t\t5665,\n\t\t\t5729,\n\t\t\t5=
793,\n\t\t\t5857,\n\t\t\t5921,\n\t\t\t5985,\n\t\t\t6049,\n\t\t\t6113,\n\t=
\t\t6177,\n\t\t\t6241,\n\t\t\t6305,\n\t\t\t6369,\n\t\t\t6433,\n\t\t\t6497=
,\n\t\t\t6561,\n\t\t\t6625,\n\t\t\t6689,\n\t\t\t6753,\n\t\t\t6817,\n\t\t\=
t6881,\n\t\t\t6945,\n\t\t\t7009,\n\t\t\t7073,\n\t\t\t7137,\n\t\t\t7201,\n=
\t\t\t7265,\n\t\t\t7329,\n\t\t\t7393,\n\t\t\t7457,\n\t\t\t7521,\n\t\t\t75=
85,\n\t\t\t7649,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\=
t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,=
\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t=
2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\=
t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t252=
9,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t=
\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\=
n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2=
529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t=
\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529=
,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\=
t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n=
\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t25=
29,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\=
t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,=
\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t=
2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\=
t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t252=
9,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t=
\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\=
n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2=
529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t=
\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529=
,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\=
t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n=
\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t25=
29,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\=
t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,=
\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t=
2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\=
t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t252=
9,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t=
\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\=
n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2=
529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t=
\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529=
,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\=
t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n=
\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t25=
29,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\=
t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,=
\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t=
2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\=
t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t252=
9,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t=
\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\=
n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2=
529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t=
\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529=
,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\=
t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n=
\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t25=
29,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\=
t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,=
\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t=
2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\=
t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t252=
9,\n\t\t\t2529,\n\t\t\t7713,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t=
\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\=
n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2=
009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t=
\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009=
,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\=
t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n=
\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t20=
09,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\=
t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,=
\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t=
2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t7433,\n\=
t\t\t7433,\n\t\t\t7433,\n\t\t\t7433,\n\t\t\t7433,\n\t\t\t7433,\n\t\t\t743=
3,\n\t\t\t7441,\n\t\t\t7449,\n\t\t\t7457,\n\t\t\t7457,\n\t\t\t7457,\n\t\t=
\t7457,\n\t\t\t7457,\n\t\t\t7457,\n\t\t\t7465,\n\t\t\t2009,\n\t\t\t2009,\=
n\t\t\t2009,\n\t\t\t2009,\n\t\t\t7473,\n\t\t\t7473,\n\t\t\t7473,\n\t\t\t7=
473,\n\t\t\t7473,\n\t\t\t7473,\n\t\t\t7473,\n\t\t\t7473,\n\t\t\t7481,\n\t=
\t\t7489,\n\t\t\t7497,\n\t\t\t7505,\n\t\t\t7505,\n\t\t\t7505,\n\t\t\t7505=
,\n\t\t\t7505,\n\t\t\t7513,\n\t\t\t7521,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\=
t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n=
\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t20=
09,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\=
t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,=
\n\t\t\t2009,\n\t\t\t7529,\n\t\t\t7529,\n\t\t\t7537,\n\t\t\t7545,\n\t\t\t=
7545,\n\t\t\t7545,\n\t\t\t7545,\n\t\t\t7545,\n\t\t\t7553,\n\t\t\t7561,\n\=
t\t\t7561,\n\t\t\t7561,\n\t\t\t7561,\n\t\t\t7561,\n\t\t\t7561,\n\t\t\t756=
1,\n\t\t\t7569,\n\t\t\t7577,\n\t\t\t7585,\n\t\t\t7593,\n\t\t\t7593,\n\t\t=
\t7593,\n\t\t\t7593,\n\t\t\t7593,\n\t\t\t7593,\n\t\t\t7601,\n\t\t\t7609,\=
n\t\t\t7609,\n\t\t\t7609,\n\t\t\t7609,\n\t\t\t7609,\n\t\t\t7609,\n\t\t\t7=
609,\n\t\t\t7609,\n\t\t\t7609,\n\t\t\t7609,\n\t\t\t7609,\n\t\t\t7609,\n\t=
\t\t7609,\n\t\t\t7609,\n\t\t\t7609,\n\t\t\t7609,\n\t\t\t7609,\n\t\t\t7609=
,\n\t\t\t7609,\n\t\t\t7609,\n\t\t\t7609,\n\t\t\t7609,\n\t\t\t7609,\n\t\t\=
t7609,\n\t\t\t7609,\n\t\t\t7617,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n=
\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t20=
09,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t7625,\n\t\t\t7633,\n\t\=
t\t7641,\n\t\t\t7649,\n\t\t\t7657,\n\t\t\t7665,\n\t\t\t7673,\n\t\t\t7681,=
\n\t\t\t7689,\n\t\t\t7697,\n\t\t\t7705,\n\t\t\t2009,\n\t\t\t7713,\n\t\t\t=
7721,\n\t\t\t7729,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\=
t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t200=
9,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t=
\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\=
n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2=
009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t=
\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t7737=
,\n\t\t\t7745,\n\t\t\t7753,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\=
t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n=
\t\t\t7761,\n\t\t\t7761,\n\t\t\t7761,\n\t\t\t7761,\n\t\t\t7761,\n\t\t\t77=
61,\n\t\t\t7761,\n\t\t\t7761,\n\t\t\t7761,\n\t\t\t7761,\n\t\t\t7761,\n\t\=
t\t7761,\n\t\t\t7761,\n\t\t\t7761,\n\t\t\t7761,\n\t\t\t7761,\n\t\t\t7761,=
\n\t\t\t7761,\n\t\t\t7761,\n\t\t\t7761,\n\t\t\t7761,\n\t\t\t7761,\n\t\t\t=
7761,\n\t\t\t7761,\n\t\t\t7761,\n\t\t\t7761,\n\t\t\t7761,\n\t\t\t7761,\n\=
t\t\t7761,\n\t\t\t7761,\n\t\t\t7761,\n\t\t\t7761,\n\t\t\t7761,\n\t\t\t776=
1,\n\t\t\t7761,\n\t\t\t7769,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t=
\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\=
n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2=
009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t=
\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009=
,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t7777,\n\t\t\t7777,\n\t\t\t7777,\n\t\t\=
t7777,\n\t\t\t7777,\n\t\t\t7777,\n\t\t\t7777,\n\t\t\t7777,\n\t\t\t7777,\n=
\t\t\t7777,\n\t\t\t7777,\n\t\t\t7777,\n\t\t\t7777,\n\t\t\t7777,\n\t\t\t77=
77,\n\t\t\t7777,\n\t\t\t7777,\n\t\t\t7777,\n\t\t\t7785,\n\t\t\t7793,\n\t\=
t\t7801,\n\t\t\t7809,\n\t\t\t7809,\n\t\t\t7809,\n\t\t\t7809,\n\t\t\t7809,=
\n\t\t\t7809,\n\t\t\t7817,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t=
7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\=
t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t782=
5,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t=
\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\=
n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7=
825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t=
\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825=
,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\=
t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n=
\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t78=
25,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\=
t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,=
\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t=
7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\=
t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t782=
5,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t=
\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\=
n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7=
825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t=
\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825=
,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\=
t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n=
\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t78=
25,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\=
t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,=
\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t=
7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\=
t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t782=
5,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t=
\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\=
n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7=
825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t=
\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825=
,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\=
t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n=
\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t78=
25,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\=
t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,=
\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t=
7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\=
t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t782=
5,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t=
\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\=
n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7=
825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t=
\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825=
,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\=
t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n=
\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t78=
25,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\=
t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,=
\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t=
7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\=
t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t782=
5,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t=
\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\=
n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7=
825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t=
\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825=
,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\=
t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n=
\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t78=
25,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\=
t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,=
\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t=
7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\=
t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t782=
5,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t=
\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\=
n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7=
825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t=
\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825=
,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\=
t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n=
\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t78=
25,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\=
t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,=
\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t=
7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\=
t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t782=
5,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t=
\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\=
n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7=
825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t=
\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7833,\n\t\t\t7841,\n\t\t\t7849=
,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t7857,\n\t\t\t2009,\n\t\t\=
t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n=
\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t20=
09,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\=
t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,=
\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t=
2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\=
t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t200=
9,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t=
\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\=
n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2=
009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t=
\t\t7865,\n\t\t\t7865,\n\t\t\t7865,\n\t\t\t7865,\n\t\t\t7865,\n\t\t\t7865=
,\n\t\t\t7865,\n\t\t\t7865,\n\t\t\t7865,\n\t\t\t7865,\n\t\t\t7865,\n\t\t\=
t7873,\n\t\t\t7881,\n\t\t\t7889,\n\t\t\t7897,\n\t\t\t7897,\n\t\t\t7897,\n=
\t\t\t7897,\n\t\t\t7905,\n\t\t\t7913,\n\t\t\t7913,\n\t\t\t7913,\n\t\t\t79=
13,\n\t\t\t7913,\n\t\t\t7913,\n\t\t\t7913,\n\t\t\t7913,\n\t\t\t7913,\n\t\=
t\t7913,\n\t\t\t7913,\n\t\t\t7913,\n\t\t\t7913,\n\t\t\t7913,\n\t\t\t7913,=
\n\t\t\t7913,\n\t\t\t7913,\n\t\t\t7913,\n\t\t\t7913,\n\t\t\t7913,\n\t\t\t=
7913,\n\t\t\t7913,\n\t\t\t7913,\n\t\t\t7913,\n\t\t\t7913,\n\t\t\t7913,\n\=
t\t\t7913,\n\t\t\t7913,\n\t\t\t7913,\n\t\t\t7913,\n\t\t\t7913,\n\t\t\t791=
3,\n\t\t\t7913,\n\t\t\t7913,\n\t\t\t7913,\n\t\t\t7913,\n\t\t\t7913,\n\t\t=
\t7913,\n\t\t\t7913,\n\t\t\t7913,\n\t\t\t7913,\n\t\t\t7913,\n\t\t\t7913,\=
n\t\t\t7921,\n\t\t\t7929,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2=
009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t=
\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009=
,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\=
t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n=
\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t20=
09,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\=
t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,=
\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t=
7937,\n\t\t\t7937,\n\t\t\t7937,\n\t\t\t7937,\n\t\t\t7937,\n\t\t\t7937,\n\=
t\t\t7937,\n\t\t\t7945,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t200=
9,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t7953,\n\t\t=
\t7953,\n\t\t\t7953,\n\t\t\t7953,\n\t\t\t7953,\n\t\t\t7953,\n\t\t\t7953,\=
n\t\t\t2009,\n\t\t\t7961,\n\t\t\t7969,\n\t\t\t7977,\n\t\t\t7985,\n\t\t\t7=
993,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t8001,\n\t\t\t8009,\n\t\t\t8009,\n\t=
\t\t8009,\n\t\t\t8009,\n\t\t\t8009,\n\t\t\t8009,\n\t\t\t8009,\n\t\t\t8009=
,\n\t\t\t8009,\n\t\t\t8009,\n\t\t\t8009,\n\t\t\t8009,\n\t\t\t8009,\n\t\t\=
t8017,\n\t\t\t8025,\n\t\t\t8025,\n\t\t\t8025,\n\t\t\t8025,\n\t\t\t8025,\n=
\t\t\t8025,\n\t\t\t8025,\n\t\t\t8033,\n\t\t\t8041,\n\t\t\t8049,\n\t\t\t80=
57,\n\t\t\t8065,\n\t\t\t8073,\n\t\t\t8081,\n\t\t\t8081,\n\t\t\t8081,\n\t\=
t\t8081,\n\t\t\t8081,\n\t\t\t8081,\n\t\t\t8081,\n\t\t\t8081,\n\t\t\t8081,=
\n\t\t\t8081,\n\t\t\t8081,\n\t\t\t8089,\n\t\t\t2009,\n\t\t\t8097,\n\t\t\t=
8097,\n\t\t\t8097,\n\t\t\t8105,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\=
t\t\t2009,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t811=
3,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t=
\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\=
n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8=
113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t=
\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113=
,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\=
t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n=
\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t81=
13,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\=
t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,=
\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t=
8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\=
t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t811=
3,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t=
\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\=
n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8=
113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t=
\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113=
,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\=
t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n=
\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t81=
13,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\=
t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,=
\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t=
8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\=
t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t811=
3,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t=
\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\=
n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8=
113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t=
\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113=
,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\=
t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n=
\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t81=
13,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\=
t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,=
\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t=
8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\=
t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t811=
3,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t=
\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\=
n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8=
113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t=
\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113=
,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\=
t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n=
\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t81=
13,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\=
t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,=
\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t=
8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\=
t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t811=
3,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t=
\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\=
n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8=
113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t=
\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113=
,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\=
t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n=
\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t81=
13,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\=
t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,=
\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t=
8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\=
t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t811=
3,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t=
\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\=
n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8=
113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t=
\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113=
,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\=
t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n=
\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t81=
13,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\=
t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,=
\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t=
8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\=
t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t811=
3,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t=
\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\=
n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8=
113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t=
\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113=
,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\=
t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n=
\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t81=
13,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\=
t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,=
\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t=
8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\=
t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t811=
3,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t=
\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\=
n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8=
113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t=
\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113=
,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\=
t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n=
\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t81=
13,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\=
t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,=
\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t=
8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\=
t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t811=
3,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t=
\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\=
n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8=
113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t=
\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113=
,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\=
t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n=
\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t81=
13,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\=
t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,=
\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t=
8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\=
t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t811=
3,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t=
\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\=
n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8=
113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t=
\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113=
,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\=
t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n=
\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t81=
13,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\=
t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,=
\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t=
8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\=
t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t811=
3,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t=
\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\=
n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8=
113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t=
\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113=
,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\=
t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n=
\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t81=
13,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\=
t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,=
\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t=
8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\=
t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t811=
3,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t=
\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\=
n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8=
113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t=
\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113=
,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\=
t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n=
\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t81=
13,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\=
t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,=
\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t=
8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\=
t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t811=
3,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t=
\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\=
n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8=
113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t=
\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113=
,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\=
t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n=
\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t81=
13,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\=
t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,=
\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t=
8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\=
t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t811=
3,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t=
\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\=
n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8=
113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t=
\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113=
,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\=
t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n=
\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t81=
13,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\=
t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,=
\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t=
8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\=
t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t811=
3,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t=
\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\=
n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8=
113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t=
\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113=
,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\=
t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n=
\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t81=
13,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\=
t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,=
\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t=
8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\=
t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t811=
3,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t=
\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\=
n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8=
113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t=
\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113=
,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\=
t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n=
\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t81=
13,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\=
t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,=
\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t=
8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\=
t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t811=
3,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t=
\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\=
n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8=
113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t=
\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113=
,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\=
t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n=
\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t81=
13,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\=
t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,=
\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t=
8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\=
t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t811=
3,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t=
\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\=
n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8=
113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t=
\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113=
,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\=
t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n=
\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t81=
13,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\=
t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,=
\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t=
8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\=
t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t811=
3,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t=
\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\=
n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8=
113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t=
\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113=
,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\=
t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n=
\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t81=
13,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\=
t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,=
\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t=
8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\=
t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t811=
3,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t=
\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\=
n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8=
113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t=
\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113=
,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\=
t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n=
\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t81=
13,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\=
t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,=
\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t=
8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\=
t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t811=
3,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t=
\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\=
n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8=
113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t=
\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113=
,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\=
t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n=
\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t81=
13,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\=
t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,=
\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t=
8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\=
t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t811=
3,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t=
\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\=
n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8=
113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t=
\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113=
,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\=
t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n=
\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t81=
13,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\=
t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,=
\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t=
8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\=
t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t811=
3,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t=
\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\=
n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8=
113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t=
\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113=
,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\=
t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n=
\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t81=
13,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\=
t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,=
\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t=
8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\=
t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t811=
3,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t=
\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\=
n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8=
113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t=
\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113=
,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\=
t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n=
\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t81=
13,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\=
t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,=
\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t=
8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\=
t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t811=
3,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t=
\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\=
n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8=
113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t=
\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113=
,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\=
t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n=
\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t81=
13,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\=
t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,=
\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t=
8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\=
t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t811=
3,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t=
\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\=
n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8=
113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t=
\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113=
,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\=
t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n=
\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t81=
13,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\=
t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,=
\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t=
8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\=
t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t811=
3,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t=
\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\=
n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8=
113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t=
\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113=
,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\=
t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n=
\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t81=
13,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\=
t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,=
\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t=
8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\=
t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t811=
3,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t=
\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\=
n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8=
113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t=
\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113=
,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\=
t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n=
\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t81=
13,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\=
t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,=
\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t=
8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\=
t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t811=
3,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t=
\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\=
n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8=
113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t=
\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113=
,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\=
t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n=
\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t81=
13,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\=
t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,=
\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t=
8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\=
t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t811=
3,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t=
\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\=
n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8=
113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t=
\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113=
,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\=
t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n=
\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t81=
13,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\=
t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,=
\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t=
8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\=
t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t811=
3,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t=
\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\=
n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8=
113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t=
\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113=
,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\=
t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n=
\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t81=
13,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\=
t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,=
\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t=
8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\=
t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t811=
3,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t=
\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\=
n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8=
113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t=
\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113=
,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\=
t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n=
\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t81=
13,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\=
t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,=
\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t=
8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\=
t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t811=
3,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t=
\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\=
n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8=
113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t=
\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113=
,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\=
t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n=
\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t81=
13,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\=
t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,=
\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t=
8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\=
t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t811=
3,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t=
\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\=
n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8=
113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t=
\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113=
,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\=
t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n=
\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t81=
13,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\=
t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,=
\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t=
8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\=
t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t811=
3,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t=
\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\=
n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8=
113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t=
\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113=
,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\=
t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n=
\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t81=
13,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\=
t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,=
\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t=
8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\=
t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t811=
3,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t=
\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\=
n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8=
113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t=
\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113=
,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\=
t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n=
\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t81=
13,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\=
t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,=
\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t=
8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\=
t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t811=
3,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t=
\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\=
n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8=
113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t=
\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113=
,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\=
t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n=
\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t81=
13,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\=
t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,=
\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t=
8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\=
t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t811=
3,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t=
\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\=
n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8=
113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t=
\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113=
,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\=
t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n=
\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t81=
13,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\=
t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,=
\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t=
8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\=
t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t811=
3,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t=
\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\=
n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8=
113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t=
\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113=
,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\=
t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n=
\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t81=
13,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\=
t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,=
\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t=
8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\=
t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t811=
3,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t=
\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\=
n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8=
113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t=
\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113=
,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\=
t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n=
\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t81=
13,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\=
t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,=
\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t=
8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\=
t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t811=
3,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t=
\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\=
n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8=
113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t=
\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113=
,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\=
t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n=
\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t81=
13,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\=
t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,=
\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t=
8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\=
t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t811=
3,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t=
\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\=
n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8=
113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t=
\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113=
,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\=
t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n=
\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t81=
13,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\=
t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,=
\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t=
8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\=
t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t811=
3,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t=
\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\=
n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8=
113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t=
\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113=
,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\=
t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n=
\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t81=
13,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\=
t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,=
\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t=
8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\=
t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t811=
3,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t=
\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\=
n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8=
113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t=
\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113=
,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\=
t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n=
\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t81=
13,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\=
t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,=
\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t=
8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\=
t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t811=
3,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t=
\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\=
n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8=
113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t=
\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113=
,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\=
t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n=
\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t81=
13,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\=
t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,=
\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t=
8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\=
t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t811=
3,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t=
\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\=
n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8=
113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t=
\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113=
,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\=
t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n=
\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t81=
13,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\=
t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,=
\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t=
8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\=
t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t811=
3,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t=
\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\=
n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8=
113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t=
\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113=
,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\=
t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n=
\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t81=
13,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\=
t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,=
\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t=
8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\=
t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t811=
3,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t=
\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\=
n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8=
113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t=
\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113=
,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\=
t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n=
\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t81=
13,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\=
t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,=
\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t=
8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\=
t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t811=
3,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t=
\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\=
n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8=
113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t=
\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113=
,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\=
t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n=
\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t81=
13,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\=
t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,=
\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t=
8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\=
t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t811=
3,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t=
\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\=
n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8=
113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t=
\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113=
,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\=
t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n=
\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t81=
13,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\=
t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,=
\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t=
8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\=
t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t811=
3,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t=
\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\=
n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8=
113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t=
\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113=
,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\=
t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n=
\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t81=
13,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\=
t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,=
\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t=
8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\=
t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t811=
3,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t=
\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\=
n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8=
113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t=
\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113=
,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\=
t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n=
\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t81=
13,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\=
t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,=
\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t=
8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\=
t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t811=
3,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t=
\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\=
n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8=
113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t=
\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113=
,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\=
t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n=
\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t81=
13,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\=
t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,=
\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t=
8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\=
t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t811=
3,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t=
\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\=
n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8=
113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t=
\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113=
,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\=
t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n=
\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t81=
13,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\=
t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,=
\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t=
8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\=
t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t811=
3,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t=
\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\=
n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8=
113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t=
\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113=
,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\=
t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n=
\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t81=
13,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\=
t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,=
\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t=
8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\=
t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t811=
3,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t=
\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\=
n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8=
113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t=
\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113=
,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\=
t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n=
\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t81=
13,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\=
t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,=
\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t=
8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\=
t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t811=
3,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8121,\n\t\t\t8129,\n\t\t\t8137,\n\t\t=
\t8137,\n\t\t\t8137,\n\t\t\t8137,\n\t\t\t8137,\n\t\t\t8137,\n\t\t\t8137,\=
n\t\t\t8137,\n\t\t\t8137,\n\t\t\t8137,\n\t\t\t8137,\n\t\t\t8137,\n\t\t\t8=
137,\n\t\t\t8137,\n\t\t\t8145,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t=
\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009=
,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\=
t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n=
\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t20=
09,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\=
t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,=
\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t=
2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\=
t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t200=
9,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t=
\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\=
n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2=
009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t=
\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009=
,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\=
t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n=
\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t20=
09,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\=
t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,=
\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t67496,\n\t\t\t67496,\n\t\t\t67496,\n\t\=
t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\=
n\t\t\t21,\n\t\t\t21,\n\t\t\t17,\n\t\t\t34,\n\t\t\t30,\n\t\t\t30,\n\t\t\t=
33,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t=
\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,=
\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t38,\n\t\t\=
t6,\n\t\t\t3,\n\t\t\t12,\n\t\t\t9,\n\t\t\t10,\n\t\t\t12,\n\t\t\t3,\n\t\t\=
t0,\n\t\t\t2,\n\t\t\t12,\n\t\t\t9,\n\t\t\t8,\n\t\t\t16,\n\t\t\t8,\n\t\t\t=
7,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\=
t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t8,\n\t\t\t8,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t12,\n\t\t\t6,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,=
\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\=
t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t0,\n\t\t\t9,\n\t\t\t2,\n\t\t\t1=
2,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t0,\n\t\t\t17,\n\t\t\t1,\n\t\t\t12,\n\t\t\t21,\n=
\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\=
t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t=
0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\=
n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t=
\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\=
t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,=
\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\=
t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t=
\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t39,\n\t\t\t=
39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t=
\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,=
\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\=
t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\=
t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39=
,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t=
\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n=
\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t3=
9,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\=
t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\=
n\t\t\t21,\n\t\t\t35,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t=
21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t=
\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,=
\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\=
t21,\n\t\t\t21,\n\t\t\t4,\n\t\t\t0,\n\t\t\t10,\n\t\t\t9,\n\t\t\t9,\n\t\t\=
t9,\n\t\t\t12,\n\t\t\t29,\n\t\t\t29,\n\t\t\t12,\n\t\t\t29,\n\t\t\t3,\n\t\=
t\t12,\n\t\t\t17,\n\t\t\t12,\n\t\t\t12,\n\t\t\t10,\n\t\t\t9,\n\t\t\t29,\n=
\t\t\t29,\n\t\t\t18,\n\t\t\t12,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t2=
9,\n\t\t\t29,\n\t\t\t3,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t0,\n\t\t\=
t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t1=
2,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,=
\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\=
t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t1=
2,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,=
\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\=
t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t1=
2,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,=
\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\=
t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t1=
2,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,=
\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\=
t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t1=
2,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,=
\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\=
t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t1=
2,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,=
\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\=
t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t1=
2,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,=
\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\=
t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t29,\n\t\t\t18,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t18=
,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29,\n\t\t\t29,\n=
\t\t\t29,\n\t\t\t29,\n\t\t\t12,\n\t\t\t29,\n\t\t\t12,\n\t\t\t18,\n\t\t\t1=
2,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,=
\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\=
t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\=
t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21=
,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t=
\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n=
\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t2=
1,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\=
t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\=
n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t=
21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t=
\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,=
\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t4,\n\t\t\t21,\n\t\t\t=
21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t=
\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t4,\n\t\t\t4,\n\t\t\t4,\n\=
t\t\t4,\n\t\t\t4,\n\t\t\t4,\n\t\t\t4,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\=
t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21=
,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t8,\n\t\t\t39,\n\t\t\t39=
,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t1=
2,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,=
\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\=
t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t1=
2,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,=
\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\=
t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t1=
2,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,=
\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\=
t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t1=
2,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,=
\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\=
t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t1=
2,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,=
\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\=
t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t1=
2,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,=
\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\=
t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t1=
2,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,=
\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\=
t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t39,\n\t\t\t8,\n\t\t\t17,\n\t\t\t39,\n\t\t\t39,\n\=
t\t\t39,\n\t\t\t39,\n\t\t\t9,\n\t\t\t39,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,=
\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\=
t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\=
t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21=
,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t=
\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n=
\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t2=
1,\n\t\t\t21,\n\t\t\t21,\n\t\t\t17,\n\t\t\t21,\n\t\t\t12,\n\t\t\t21,\n\t\=
t\t21,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t6,\n\t\t\t21,\n\t\t\t39,\n=
\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t3=
9,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\=
t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\=
n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t=
13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t=
\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,=
\n\t\t\t13,\n\t\t\t13,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\=
t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t10,\n\t\t\t10,\n\t\t=
\t10,\n\t\t\t8,\n\t\t\t8,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t=
\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,=
\n\t\t\t21,\n\t\t\t21,\n\t\t\t6,\n\t\t\t6,\n\t\t\t6,\n\t\t\t6,\n\t\t\t6,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,=
\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\=
t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t=
\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n=
\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t2=
1,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t11,\n\t\t\t11,\n\t\=
t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\=
n\t\t\t11,\n\t\t\t10,\n\t\t\t11,\n\t\t\t11,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t21,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,=
\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\=
t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t1=
2,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,=
\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\=
t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t6,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,=
\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\=
t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t12,\n\t\t\t12,\n\=
t\t\t21,\n\t\t\t21,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t=
\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t12,\n=
\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t1=
2,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,=
\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\=
t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\=
t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21=
,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t=
\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n=
\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t2=
1,\n\t\t\t39,\n\t\t\t39,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,=
\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\=
t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t1=
2,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t=
21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t=
\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t12,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,=
\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\=
t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t11,\n\t\t\t11,\n\=
t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11=
,\n\t\t\t11,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t1=
2,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t=
21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t8,\n\t\t\t6,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t1=
2,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t=
21,\n\t\t\t21,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t=
\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t12,\n\t\t\t21,=
\n\t\t\t21,\n\t\t\t21,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\=
t21,\n\t\t\t21,\n\t\t\t39,\n\t\t\t39,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t1=
2,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\=
n\t\t\t21,\n\t\t\t39,\n\t\t\t39,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,=
\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\=
t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n=
\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t3=
9,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\=
t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\=
n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t=
21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t=
\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,=
\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\=
t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t1=
2,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,=
\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\=
t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\=
t\t\t21,\n\t\t\t21,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21=
,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t21,\n\t\t\t21,\n\t\t\t17,\n\t\t\t17,\n\t\t\t11,\n\t\t\t11,\n\t\t\t1=
1,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\=
t\t11,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t39,\n\t\t\t21,\n\t\t\t21,\n\t=
\t\t21,\n\t\t\t39,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,=
\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\=
t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t1=
2,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t39,\n\t\t\t39,\n\t\t\t21,\n\t\t\t12,\n\t\t\t21,\=
n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t=
21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t=
\t\t21,\n\t\t\t21,\n\t\t\t12,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,=
\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t21,\n\t\t\t39,\n\t\t\=
t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t39,\n\t\t\t39,\n\t\t\t11=
,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t=
\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t12,\n\t\t\t12,\n\t\t\t10,\n\t\t\t10,\n=
\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t10,\n\t\t\t1=
2,\n\t\t\t9,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t=
\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t39,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t1=
2,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,=
\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\=
t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t39,\n\t\t\t39,\n\t\t\t21,\n\=
t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21=
,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t=
\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n=
\t\t\t21,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t3=
9,\n\t\t\t39,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\=
n\t\t\t39,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t=
11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t21,\n\t\t\t21,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,=
\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\=
t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t39,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t1=
2,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t39,\n\t=
\t\t39,\n\t\t\t21,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,=
\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\=
t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t39,\n\=
t\t\t39,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n=
\t\t\t21,\n\t\t\t39,\n\t\t\t39,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t1=
1,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\=
t\t12,\n\t\t\t9,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n=
\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t3=
9,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\=
t\t39,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,=
\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\=
t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t=
\t12,\n\t\t\t39,\n\t\t\t39,\n\t\t\t21,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n=
\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t2=
1,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\=
t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\=
n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t39,\n\t\t\t39,\n\t\t\t=
39,\n\t\t\t39,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t39,\n\t\t\t39,\n\t\t\t11,\n\t\t\t11,=
\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\=
t11,\n\t\t\t11,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39=
,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t=
\t21,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t1=
2,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,=
\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\=
t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\=
t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21=
,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t=
\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t39,\n\t\t\t39,\n\t\t\t12,\n\t\t\t39,\n=
\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t21,\n\t\t\t3=
9,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\=
t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\=
n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t=
11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t9,\=
n\t\t\t12,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t=
39,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t39,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,=
\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\=
t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t1=
2,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\=
n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t=
21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t=
\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,=
\n\t\t\t39,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\=
t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\=
t\t\t39,\n\t\t\t39,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11=
,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t39,\n\t\t=
\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n=
\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t1=
2,\n\t\t\t12,\n\t\t\t39,\n\t\t\t39,\n\t\t\t21,\n\t\t\t21,\n\t\t\t39,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,=
\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\=
t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t=
\t39,\n\t\t\t39,\n\t\t\t21,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n=
\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t2=
1,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\=
t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\=
n\t\t\t21,\n\t\t\t21,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t=
39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t21,\n\t\t\t21,\n\t\t\t39,\n\t\t\t39,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,=
\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\=
t11,\n\t\t\t39,\n\t\t\t12,\n\t\t\t12,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\=
t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39=
,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t21,\n\t\t=
\t21,\n\t\t\t39,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t1=
2,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,=
\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\=
t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\=
t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21=
,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t=
\t21,\n\t\t\t21,\n\t\t\t12,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n=
\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t21,\n\t\t\t39,\n\t\t\t3=
9,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t39,\n\t\t\t39,\n\t\t\t11,\=
n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t=
11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t10,\n\t\t\t12,=
\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t39,\n\t\t\=
t39,\n\t\t\t21,\n\t\t\t21,\n\t\t\t39,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t1=
2,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,=
\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\=
t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\=
t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21=
,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t=
\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n=
\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t2=
1,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\=
t\t21,\n\t\t\t21,\n\t\t\t12,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\=
n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t=
39,\n\t\t\t39,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t=
\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,=
\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\=
t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\=
t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36=
,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t=
\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n=
\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t3=
6,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\=
t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t9,\n\t\t\t36,\n\t\t\t36,\n=
\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t3=
6,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\=
t\t12,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\=
n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t17,\n\t\t\t17,\n\t\t\t=
39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t36,\n\t\t\t36,\n\t=
\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,=
\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\=
t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\=
t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36=
,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t=
\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n=
\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t3=
6,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\=
t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\=
n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t=
36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t=
\t\t36,\n\t\t\t36,\n\t\t\t39,\n\t\t\t39,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,=
\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\=
t11,\n\t\t\t39,\n\t\t\t39,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\=
t\t\t12,\n\t\t\t18,\n\t\t\t18,\n\t\t\t18,\n\t\t\t18,\n\t\t\t12,\n\t\t\t18=
,\n\t\t\t18,\n\t\t\t4,\n\t\t\t18,\n\t\t\t18,\n\t\t\t17,\n\t\t\t4,\n\t\t\t=
6,\n\t\t\t6,\n\t\t\t6,\n\t\t\t6,\n\t\t\t6,\n\t\t\t4,\n\t\t\t12,\n\t\t\t6,=
\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t12,\n\t\t\=
t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t11,\n\t\t\t11,\n\=
t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11=
,\n\t\t\t11,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t17,\n\t\t\t21,\n=
\t\t\t12,\n\t\t\t21,\n\t\t\t12,\n\t\t\t21,\n\t\t\t0,\n\t\t\t1,\n\t\t\t0,\=
n\t\t\t1,\n\t\t\t21,\n\t\t\t21,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t1=
2,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,=
\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\=
t12,\n\t\t\t12,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t21,\n\=
t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21=
,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t=
\t17,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t17,\n=
\t\t\t21,\n\t\t\t21,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t1=
2,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\=
t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\=
n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t=
21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t=
\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,=
\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\=
t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\=
t\t\t21,\n\t\t\t21,\n\t\t\t39,\n\t\t\t17,\n\t\t\t17,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t12,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t12,\n\t\t\t18,\n\t\t\t18,\n\t\t\t17,\n\t\t\t18,\n\t\t\t12,\n\t\t\t1=
2,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t4,\n\t\t\t4,\n\t\t\t39,\n\t\t\=
t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\=
t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36=
,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t=
\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n=
\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t3=
6,\n\t\t\t36,\n\t\t\t36,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\=
t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t17,\=
n\t\t\t17,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t36,\n\t\t\t=
36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t=
\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,=
\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\=
t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\=
t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36=
,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t=
\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n=
\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t3=
6,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\=
t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\=
n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t=
36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,=
\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\=
t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t25,\n\t\t\t25,\n\t\t=
\t25,\n\t\t\t25,\n\t\t\t25,\n\t\t\t25,\n\t\t\t25,\n\t\t\t25,\n\t\t\t25,\n=
\t\t\t25,\n\t\t\t25,\n\t\t\t25,\n\t\t\t25,\n\t\t\t25,\n\t\t\t25,\n\t\t\t2=
5,\n\t\t\t25,\n\t\t\t25,\n\t\t\t25,\n\t\t\t25,\n\t\t\t25,\n\t\t\t25,\n\t\=
t\t25,\n\t\t\t25,\n\t\t\t25,\n\t\t\t25,\n\t\t\t25,\n\t\t\t25,\n\t\t\t25,\=
n\t\t\t25,\n\t\t\t25,\n\t\t\t25,\n\t\t\t26,\n\t\t\t26,\n\t\t\t26,\n\t\t\t=
26,\n\t\t\t26,\n\t\t\t26,\n\t\t\t26,\n\t\t\t26,\n\t\t\t26,\n\t\t\t26,\n\t=
\t\t26,\n\t\t\t26,\n\t\t\t26,\n\t\t\t26,\n\t\t\t26,\n\t\t\t26,\n\t\t\t26,=
\n\t\t\t26,\n\t\t\t26,\n\t\t\t26,\n\t\t\t26,\n\t\t\t26,\n\t\t\t26,\n\t\t\=
t26,\n\t\t\t26,\n\t\t\t26,\n\t\t\t26,\n\t\t\t26,\n\t\t\t26,\n\t\t\t26,\n\=
t\t\t26,\n\t\t\t26,\n\t\t\t26,\n\t\t\t26,\n\t\t\t26,\n\t\t\t26,\n\t\t\t26=
,\n\t\t\t26,\n\t\t\t26,\n\t\t\t26,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t=
\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n=
\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t2=
7,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\=
t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\=
n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t=
27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t=
\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,=
\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\=
t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t1=
2,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t39,\n\t=
\t\t39,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t12,\n\t\t\t17,\n\t\t\t12,=
\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\=
t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t1=
2,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,=
\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\=
t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\=
t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39=
,\n\t\t\t17,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t1=
2,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,=
\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\=
t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t17,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t0,\n\t\t\t1,=
\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\=
t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t1=
2,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\=
t\t17,\n\t\t\t17,\n\t\t\t17,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,=
\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\=
t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\=
t\t\t21,\n\t\t\t21,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39=
,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t1=
2,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\=
t\t21,\n\t\t\t17,\n\t\t\t17,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\=
n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,=
\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t39,\n\t\t\=
t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\=
t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t12,\n\t\t\t39,\n\t\t\t21,\n\t\t\t21,\n\t\t\t39,\n\t\t\t39,\n\t\t\t3=
9,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\=
t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\=
n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t=
36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t=
\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,=
\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\=
t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\=
t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36=
,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t=
\t36,\n\t\t\t36,\n\t\t\t17,\n\t\t\t17,\n\t\t\t5,\n\t\t\t36,\n\t\t\t17,\n\=
t\t\t12,\n\t\t\t17,\n\t\t\t9,\n\t\t\t36,\n\t\t\t36,\n\t\t\t39,\n\t\t\t39,=
\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\=
t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\=
t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t12,\n\t\t\t6,\n\t\t\t6,\n\t\t\t17,\n\t\t\t17,\n\t\t\t18,\n\t\t\t12,=
\n\t\t\t6,\n\t\t\t6,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t4=
,\n\t\t\t39,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t=
\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t39,\n\t\t\t39,\n=
\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t12,\n\t\t\t12,\n\t\t\t1=
2,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,=
\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\=
t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t1=
2,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,=
\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\=
t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t21=
,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t=
\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n=
\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t2=
1,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\=
t\t21,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t12,\n\t\t\t39,\=
n\t\t\t39,\n\t\t\t39,\n\t\t\t6,\n\t\t\t6,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11=
,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t=
\t11,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n=
\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t3=
6,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\=
t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\=
n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t=
36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t=
\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,=
\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\=
t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t39,\n\=
t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t11,\n\t\t\t11=
,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t=
\t11,\n\t\t\t11,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n=
\t\t\t36,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t1=
2,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,=
\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\=
t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21=
,\n\t\t\t21,\n\t\t\t39,\n\t\t\t39,\n\t\t\t12,\n\t\t\t12,\n\t\t\t36,\n\t\t=
\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n=
\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t3=
6,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\=
t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\=
n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t=
36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t=
\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,=
\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\=
t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\=
t\t\t39,\n\t\t\t39,\n\t\t\t21,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11=
,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t=
\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n=
\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t1=
1,\n\t\t\t11,\n\t\t\t11,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\=
t\t39,\n\t\t\t39,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\=
n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t=
36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t=
\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,=
\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\=
t39,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t1=
2,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t=
\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,=
\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\=
t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\=
t\t\t39,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11=
,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t17,\n\t\t\t17,\n\t\t=
\t12,\n\t\t\t17,\n\t\t\t17,\n\t\t\t17,\n\t\t\t17,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t1=
2,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\=
t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,=
\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\=
t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t=
\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n=
\t\t\t21,\n\t\t\t21,\n\t\t\t12,\n\t\t\t12,\n\t\t\t11,\n\t\t\t11,\n\t\t\t1=
1,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\=
t\t11,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,=
\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\=
t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21=
,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t=
\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t39,\n=
\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t3=
9,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,=
\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\=
t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\=
t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21=
,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t=
\t21,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t17,\n\t\t\t17,\n\t\t\t17,\n=
\t\t\t17,\n\t\t\t17,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t1=
1,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t39,\n\t\=
t\t39,\n\t\t\t39,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t11,\n\t\t\t11,\=
n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t=
11,\n\t\t\t11,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,=
\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\=
t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t17,\n\t\t\t17,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t12,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t3=
9,\n\t\t\t39,\n\t\t\t39,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t12,\n\t\=
t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\=
n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t=
21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t=
\t\t21,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t12,=
\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\=
t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t1=
2,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\=
n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t=
21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t=
\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,=
\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\=
t21,\n\t\t\t21,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t1=
2,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t18,\n\t\t\t12,\n\t\t\t39,\n\t\t\t17,=
\n\t\t\t17,\n\t\t\t17,\n\t\t\t17,\n\t\t\t17,\n\t\t\t17,\n\t\t\t17,\n\t\t\=
t4,\n\t\t\t17,\n\t\t\t17,\n\t\t\t17,\n\t\t\t20,\n\t\t\t21,\n\t\t\t21,\n\t=
\t\t21,\n\t\t\t21,\n\t\t\t17,\n\t\t\t4,\n\t\t\t17,\n\t\t\t17,\n\t\t\t19,\=
n\t\t\t29,\n\t\t\t29,\n\t\t\t12,\n\t\t\t3,\n\t\t\t3,\n\t\t\t0,\n\t\t\t3,\=
n\t\t\t3,\n\t\t\t3,\n\t\t\t0,\n\t\t\t3,\n\t\t\t29,\n\t\t\t29,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t15,\n\t\t\t15,\n\t\t\t15,\n\t\t\t17,\n\t\t\t30,\n\t\t\t=
30,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t4,\n\t\=
t\t10,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10,\=
n\t\t\t10,\n\t\t\t12,\n\t\t\t3,\n\t\t\t3,\n\t\t\t29,\n\t\t\t5,\n\t\t\t5,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
8,\n\t\t\t0,\n\t\t\t1,\n\t\t\t5,\n\t\t\t5,\n\t\t\t5,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t17,\n\t\t\t12,\n\t\t\t17,\n=
\t\t\t17,\n\t\t\t17,\n\t\t\t17,\n\t\t\t12,\n\t\t\t17,\n\t\t\t17,\n\t\t\t1=
7,\n\t\t\t22,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t39,\n\t\=
t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\=
n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t12,\n\t\t\t12,\n\t\t\t39,\n\t\t\t=
39,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t0,\n\t\t\t1,\n\t\t\t29,\n\t\t\t12,\n=
\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t1=
2,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t0,\n\t\t=
\t1,\n\t\t\t39,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t9,\n\t\t\t9,\n\t\t\t=
9,\n\t\t\t9,\n\t\t\t9,\n\t\t\t9,\n\t\t\t9,\n\t\t\t10,\n\t\t\t9,\n\t\t\t9,=
\n\t\t\t9,\n\t\t\t9,\n\t\t\t9,\n\t\t\t9,\n\t\t\t9,\n\t\t\t9,\n\t\t\t9,\n\=
t\t\t9,\n\t\t\t9,\n\t\t\t9,\n\t\t\t9,\n\t\t\t9,\n\t\t\t10,\n\t\t\t9,\n\t\=
t\t9,\n\t\t\t9,\n\t\t\t9,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t=
\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,=
\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\=
t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\=
t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21=
,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t=
\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n=
\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t2=
1,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\=
t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\=
n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t10,\n\t\t\t12,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t10,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,=
\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29,\n\t\t\t12,\n\t\t\=
t12,\n\t\t\t9,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29,\n\t\t\t29,=
\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\=
t12,\n\t\t\t12,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t1=
2,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
29,\n\t\t\t12,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t=
\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,=
\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29,\n\t\t\t29,\n\t\t\=
t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\=
t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n=
\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t2=
9,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,=
\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\=
t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29,\n\t\t\t12,\n\t\t\t29,\n\t\t\t12,\n=
\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t1=
2,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,=
\n\t\t\t12,\n\t\t\t12,\n\t\t\t29,\n\t\t\t12,\n\t\t\t29,\n\t\t\t29,\n\t\t\=
t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\=
t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29,\n\t\t\t12,\n\t\t\t29=
,\n\t\t\t9,\n\t\t\t9,\n\t\t\t12,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29,\n\t\t\t29,\n\t=
\t\t29,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29,\n\t\t\t12,\n\t\t\t29,=
\n\t\t\t12,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\=
t29,\n\t\t\t12,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t12,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29,\n\t\t\t1=
2,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29,\n\t\t\t=
29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t29,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29,=
\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\=
t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29=
,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29,\n\t\t\t29,\n\t\t\t12,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29,\n\t\t\t1=
2,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,=
\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\=
t12,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t1=
2,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t14,\n\t\t\t14,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,=
\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\=
t12,\n\t\t\t12,\n\t\t\t0,\n\t\t\t1,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,=
\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\=
t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t1=
4,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\=
t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\=
n\t\t\t39,\n\t\t\t39,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,=
\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\=
t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t39,\n\t\t=
\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n=
\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t3=
9,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\=
t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\=
n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t=
29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t=
\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,=
\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\=
t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\=
t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29=
,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t=
\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n=
\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t12,\n\t\t\t29,\n\t\t\t29,\n\t\t\t2=
9,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\=
t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\=
n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t=
29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t=
\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,=
\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\=
t29,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29,\n\=
t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29=
,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t=
\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n=
\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t2=
9,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\=
t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t=
\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,=
\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29,\n\t\t\=
t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29=
,\n\t\t\t29,\n\t\t\t12,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t=
\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29,\n\t\t\t29,\n\t\t\t1=
2,\n\t\t\t12,\n\t\t\t29,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t29,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29,\n\t\t\t29,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29,\n\t\t\t29,\n\t\t\t=
29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29,\n\t=
\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,=
\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\=
t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29,\n\=
t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t1=
2,\n\t\t\t12,\n\t\t\t12,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\=
t\t12,\n\t\t\t29,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29,\n\t\t\t29,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t14,\n\t\t\t14,\n\t\t\t29,\n\t\t\t29,\n\t=
\t\t14,\n\t\t\t12,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,=
\n\t\t\t14,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\=
t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t=
\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t29,\n\t\t\t12,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t1=
2,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29,\n\t=
\t\t29,\n\t\t\t12,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t12,\n\t\t\t29,=
\n\t\t\t14,\n\t\t\t29,\n\t\t\t29,\n\t\t\t12,\n\t\t\t29,\n\t\t\t29,\n\t\t\=
t12,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t14,\n\t\t\t12,\n\t\t\t12,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t1=
2,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t29,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,=
\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\=
t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t14,\n\=
t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14=
,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t29,\n\t\t\t29,\n\t\t=
\t29,\n\t\t\t29,\n\t\t\t14,\n\t\t\t12,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n=
\t\t\t29,\n\t\t\t14,\n\t\t\t14,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t1=
4,\n\t\t\t14,\n\t\t\t29,\n\t\t\t29,\n\t\t\t14,\n\t\t\t29,\n\t\t\t29,\n\t\=
t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t12,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t29,\n\t\t\t29,\n\t\t\t14,\n\t\t\t29,\n\t\t\t=
29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t14,\n\t\t\t14,\n\t=
\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t29,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,=
\n\t\t\t14,\n\t\t\t29,\n\t\t\t29,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\=
t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t12,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t1=
2,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,=
\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\=
t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t3,\n\t\t\t3,\n\t\t\t=
3,\n\t\t\t3,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t6,\n\t\t\t6,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t0,\n\t\t\t1,\n\t\t\t0,\n\t\t\=
t1,\n\t\t\t0,\n\t\t\t1,\n\t\t\t0,\n\t\t\t1,\n\t\t\t0,\n\t\t\t1,\n\t\t\t0,=
\n\t\t\t1,\n\t\t\t0,\n\t\t\t1,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29=
,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t=
\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n=
\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t2=
9,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,=
\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\=
t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t0,\n\t\t\t1,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,=
\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\=
t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t12,\n\t\t\t0,\n\t\t\t1,\n\t\t\t0,\n\t\t\t1,\n\t\t\t0,\n\t=
\t\t1,\n\t\t\t0,\n\t\t\t1,\n\t\t\t0,\n\t\t\t1,\n\t\t\t12,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,=
\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\=
t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t0,\n\t\t\t1,\n\t\t\t0,\n\t\t\t1,\n\t\t\t0,=
\n\t\t\t1,\n\t\t\t0,\n\t\t\t1,\n\t\t\t0,\n\t\t\t1,\n\t\t\t0,\n\t\t\t1,\n\=
t\t\t0,\n\t\t\t1,\n\t\t\t0,\n\t\t\t1,\n\t\t\t0,\n\t\t\t1,\n\t\t\t0,\n\t\t=
\t1,\n\t\t\t0,\n\t\t\t1,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,=
\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\=
t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t0,\n\=
t\t\t1,\n\t\t\t0,\n\t\t\t1,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t1=
2,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t0,\n\t\t\t1,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t1=
2,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,=
\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29,\n\t\t\=
t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\=
t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t1=
2,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,=
\n\t\t\t6,\n\t\t\t17,\n\t\t\t17,\n\t\t\t17,\n\t\t\t12,\n\t\t\t6,\n\t\t\t1=
7,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,=
\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\=
t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t12,\n\t\t\t17,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39=
,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t=
\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t21,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t1=
2,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,=
\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\=
t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t39,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t=
\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n=
\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t2=
1,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\=
t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\=
n\t\t\t21,\n\t\t\t3,\n\t\t\t3,\n\t\t\t3,\n\t\t\t3,\n\t\t\t3,\n\t\t\t3,\n\=
t\t\t3,\n\t\t\t3,\n\t\t\t3,\n\t\t\t3,\n\t\t\t3,\n\t\t\t3,\n\t\t\t3,\n\t\t=
\t3,\n\t\t\t17,\n\t\t\t17,\n\t\t\t17,\n\t\t\t17,\n\t\t\t17,\n\t\t\t17,\n\=
t\t\t17,\n\t\t\t17,\n\t\t\t12,\n\t\t\t17,\n\t\t\t0,\n\t\t\t17,\n\t\t\t12,=
\n\t\t\t12,\n\t\t\t3,\n\t\t\t3,\n\t\t\t12,\n\t\t\t12,\n\t\t\t3,\n\t\t\t3,=
\n\t\t\t0,\n\t\t\t1,\n\t\t\t0,\n\t\t\t1,\n\t\t\t0,\n\t\t\t1,\n\t\t\t0,\n\=
t\t\t1,\n\t\t\t17,\n\t\t\t17,\n\t\t\t17,\n\t\t\t17,\n\t\t\t6,\n\t\t\t12,\=
n\t\t\t17,\n\t\t\t17,\n\t\t\t12,\n\t\t\t17,\n\t\t\t17,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t19,\n\t\t\t19,\n\t\t\t39,\n\t=
\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,=
\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\=
t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\=
t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14=
,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t=
\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t1,\n\t\t\t1,\n\t\t\t14,\n\t\t\t14,\n\t=
\t\t5,\n\t\t\t14,\n\t\t\t14,\n\t\t\t0,\n\t\t\t1,\n\t\t\t0,\n\t\t\t1,\n\t\=
t\t0,\n\t\t\t1,\n\t\t\t0,\n\t\t\t1,\n\t\t\t0,\n\t\t\t1,\n\t\t\t14,\n\t\t\=
t14,\n\t\t\t0,\n\t\t\t1,\n\t\t\t0,\n\t\t\t1,\n\t\t\t0,\n\t\t\t1,\n\t\t\t0=
,\n\t\t\t1,\n\t\t\t5,\n\t\t\t0,\n\t\t\t1,\n\t\t\t1,\n\t\t\t14,\n\t\t\t14,=
\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\=
t14,\n\t\t\t14,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\=
t\t\t21,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14=
,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t5,\n\t\t\=
t5,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t39,\n\t\t\t32,\n\t\t\t14,\n\t=
\t\t32,\n\t\t\t14,\n\t\t\t32,\n\t\t\t14,\n\t\t\t32,\n\t\t\t14,\n\t\t\t32,=
\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\=
t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\=
t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14=
,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t32,\n\t\t=
\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n=
\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t1=
4,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\=
t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\=
n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t32,\n\t\t\t14,\n\t\t\t=
32,\n\t\t\t14,\n\t\t\t32,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t=
\t\t14,\n\t\t\t14,\n\t\t\t32,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,=
\n\t\t\t14,\n\t\t\t14,\n\t\t\t32,\n\t\t\t32,\n\t\t\t39,\n\t\t\t39,\n\t\t\=
t21,\n\t\t\t21,\n\t\t\t5,\n\t\t\t5,\n\t\t\t5,\n\t\t\t5,\n\t\t\t14,\n\t\t\=
t5,\n\t\t\t32,\n\t\t\t14,\n\t\t\t32,\n\t\t\t14,\n\t\t\t32,\n\t\t\t14,\n\t=
\t\t32,\n\t\t\t14,\n\t\t\t32,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,=
\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\=
t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\=
t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14=
,\n\t\t\t14,\n\t\t\t32,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t=
\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n=
\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t1=
4,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\=
t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\=
n\t\t\t32,\n\t\t\t14,\n\t\t\t32,\n\t\t\t14,\n\t\t\t32,\n\t\t\t14,\n\t\t\t=
14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t32,\n\t\t\t14,\n\t=
\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t32,\n\t\t\t32,=
\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t5,\n\t\t\t32,\n\t\t\t=
5,\n\t\t\t5,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t=
\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n=
\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t1=
4,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\=
t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\=
n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t39,\n\t\t\t=
39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t=
\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t32,\n\t\t\t32,\n\t\t\t32,=
\n\t\t\t32,\n\t\t\t32,\n\t\t\t32,\n\t\t\t32,\n\t\t\t32,\n\t\t\t32,\n\t\t\=
t32,\n\t\t\t32,\n\t\t\t32,\n\t\t\t32,\n\t\t\t32,\n\t\t\t32,\n\t\t\t32,\n\=
t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14=
,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t=
\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n=
\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t1=
4,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\=
t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\=
n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t=
29,\n\t\t\t29,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t=
\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,=
\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\=
t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\=
t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14=
,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t=
\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n=
\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t1=
2,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,=
\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\=
t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\=
t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14=
,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t=
\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n=
\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t1=
4,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\=
t\t14,\n\t\t\t14,\n\t\t\t5,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n=
\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t1=
4,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\=
t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\=
n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t=
14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t=
\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,=
\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t39,\n\t\t\=
t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\=
t\t\t39,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t1=
2,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t17,\n\t\t\t17,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,=
\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\=
t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t12,\n\t\t\t17,\n\t\t\t6,\n\t\t\t17,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t1=
1,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,=
\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\=
t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t2=
1,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\=
t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\=
n\t\t\t21,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,=
\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\=
t12,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\=
t\t\t39,\n\t\t\t21,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t1=
2,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t12,\n\t=
\t\t17,\n\t\t\t17,\n\t\t\t17,\n\t\t\t17,\n\t\t\t17,\n\t\t\t39,\n\t\t\t39,=
\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\=
t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t1=
2,\n\t\t\t21,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,=
\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t12,\n\t\t\=
t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t10,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t1=
2,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,=
\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\=
t12,\n\t\t\t12,\n\t\t\t18,\n\t\t\t18,\n\t\t\t6,\n\t\t\t6,\n\t\t\t39,\n\t\=
t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\=
n\t\t\t21,\n\t\t\t21,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,=
\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\=
t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n=
\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t2=
1,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\=
t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\=
n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t17,\n\t\t\t=
17,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t=
\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,=
\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\=
t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\=
t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21=
,\n\t\t\t21,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t39,\n\t\t\t39,\n=
\t\t\t39,\n\t\t\t39,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t1=
1,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,=
\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\=
t21,\n\t\t\t21,\n\t\t\t17,\n\t\t\t17,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t2=
1,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\=
t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\=
n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t12,\n\t\t\t25,\n\t\t\t=
25,\n\t\t\t25,\n\t\t\t25,\n\t\t\t25,\n\t\t\t25,\n\t\t\t25,\n\t\t\t25,\n\t=
\t\t25,\n\t\t\t25,\n\t\t\t25,\n\t\t\t25,\n\t\t\t25,\n\t\t\t25,\n\t\t\t25,=
\n\t\t\t25,\n\t\t\t25,\n\t\t\t25,\n\t\t\t25,\n\t\t\t25,\n\t\t\t25,\n\t\t\=
t25,\n\t\t\t25,\n\t\t\t25,\n\t\t\t25,\n\t\t\t25,\n\t\t\t25,\n\t\t\t25,\n\=
t\t\t25,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21=
,\n\t\t\t21,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t1=
2,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,=
\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\=
t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t12,\n\t\t\t17,\n\t\t\t17,\n\t\t\t17,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t11,\n\t\t\t11,\n\t\t=
\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n=
\t\t\t11,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t12,\n\t\t\t1=
2,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,=
\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\=
t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\=
t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21=
,\n\t\t\t21,\n\t\t\t21,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t=
\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t12,\n\t\t\t21,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t1=
2,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t39,\n\t\=
t\t39,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\=
n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t39,\n\t\t\t39,\n\t\t\t=
12,\n\t\t\t17,\n\t\t\t17,\n\t\t\t17,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t=
\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,=
\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\=
t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\=
t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36=
,\n\t\t\t36,\n\t\t\t36,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t17,\n\t\t\t1=
7,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t39,\n\t\=
t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\=
n\t\t\t39,\n\t\t\t39,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,=
\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\=
t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t1=
2,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\=
n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t17,\n\t\t\t21,\n\t\t\t21,\n\t\t\t=
39,\n\t\t\t39,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t=
\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t39,\n\t\t\t39,=
\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t23,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
3,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
3,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
3,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
3,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
3,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\=
t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24=
,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t=
\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n=
\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t2=
4,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\=
t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\=
n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t=
24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t=
\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,=
\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\=
t24,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\=
t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t26=
,\n\t\t\t26,\n\t\t\t26,\n\t\t\t26,\n\t\t\t26,\n\t\t\t26,\n\t\t\t26,\n\t\t=
\t26,\n\t\t\t26,\n\t\t\t26,\n\t\t\t26,\n\t\t\t26,\n\t\t\t26,\n\t\t\t26,\n=
\t\t\t26,\n\t\t\t26,\n\t\t\t26,\n\t\t\t26,\n\t\t\t26,\n\t\t\t26,\n\t\t\t2=
6,\n\t\t\t26,\n\t\t\t26,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\=
t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\=
n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t=
27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t=
\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,=
\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\=
t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\=
t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27=
,\n\t\t\t27,\n\t\t\t27,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t=
\t37,\n\t\t\t37,\n\t\t\t37,\n\t\t\t37,\n\t\t\t37,\n\t\t\t37,\n\t\t\t37,\n=
\t\t\t37,\n\t\t\t37,\n\t\t\t37,\n\t\t\t37,\n\t\t\t37,\n\t\t\t37,\n\t\t\t3=
7,\n\t\t\t37,\n\t\t\t37,\n\t\t\t37,\n\t\t\t37,\n\t\t\t37,\n\t\t\t37,\n\t\=
t\t37,\n\t\t\t37,\n\t\t\t37,\n\t\t\t37,\n\t\t\t37,\n\t\t\t37,\n\t\t\t37,\=
n\t\t\t37,\n\t\t\t37,\n\t\t\t37,\n\t\t\t37,\n\t\t\t37,\n\t\t\t14,\n\t\t\t=
14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t=
\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,=
\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\=
t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\=
t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t1=
2,\n\t\t\t12,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\=
t\t13,\n\t\t\t21,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\=
n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t12,\n\t\t\t=
13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t=
\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,=
\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\=
t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\=
t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13=
,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t12,\n\t\t\t12,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t1=
2,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,=
\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\=
t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t0,\n\t\t\t1,\n\t\t\t39,\n\t\t\t39,\n\t=
\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,=
\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\=
t39,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t1=
2,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,=
\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\=
t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t10,\n\t\t\t12,\n\t\t\t39,\n\=
t\t\t39,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21=
,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t=
\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t8,\n\t\t\t1,\n\t\t\t1,\n\t\=
t\t8,\n\t\t\t8,\n\t\t\t6,\n\t\t\t6,\n\t\t\t0,\n\t\t\t1,\n\t\t\t15,\n\t\t\=
t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t21,\n\=
t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t39=
,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t=
\t39,\n\t\t\t39,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n=
\t\t\t0,\n\t\t\t1,\n\t\t\t0,\n\t\t\t1,\n\t\t\t0,\n\t\t\t1,\n\t\t\t0,\n\t\=
t\t1,\n\t\t\t0,\n\t\t\t1,\n\t\t\t0,\n\t\t\t1,\n\t\t\t0,\n\t\t\t1,\n\t\t\t=
0,\n\t\t\t1,\n\t\t\t14,\n\t\t\t14,\n\t\t\t0,\n\t\t\t1,\n\t\t\t14,\n\t\t\t=
14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t1,\n\t\=
t\t14,\n\t\t\t1,\n\t\t\t39,\n\t\t\t5,\n\t\t\t5,\n\t\t\t6,\n\t\t\t6,\n\t\t=
\t14,\n\t\t\t0,\n\t\t\t1,\n\t\t\t0,\n\t\t\t1,\n\t\t\t0,\n\t\t\t1,\n\t\t\t=
14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t=
\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t9,\n\t\t\t10,\n\t\t\t14,\n\t\t\t39,\=
n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,=
\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\=
t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t1=
2,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t39,\n\t\t\t39,\n\t\t\t22,\n\t\t\t39,\n\t\t\t6,\n\t\t\t14,\n\t\=
t\t14,\n\t\t\t9,\n\t\t\t10,\n\t\t\t14,\n\t\t\t14,\n\t\t\t0,\n\t\t\t1,\n\t=
\t\t14,\n\t\t\t14,\n\t\t\t1,\n\t\t\t14,\n\t\t\t1,\n\t\t\t14,\n\t\t\t14,\n=
\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t1=
4,\n\t\t\t14,\n\t\t\t14,\n\t\t\t5,\n\t\t\t5,\n\t\t\t14,\n\t\t\t14,\n\t\t\=
t14,\n\t\t\t6,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t=
\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,=
\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\=
t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\=
t\t\t14,\n\t\t\t14,\n\t\t\t0,\n\t\t\t14,\n\t\t\t1,\n\t\t\t14,\n\t\t\t14,\=
n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t=
14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t=
\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,=
\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\=
t14,\n\t\t\t0,\n\t\t\t14,\n\t\t\t1,\n\t\t\t14,\n\t\t\t0,\n\t\t\t1,\n\t\t\=
t1,\n\t\t\t0,\n\t\t\t1,\n\t\t\t1,\n\t\t\t5,\n\t\t\t12,\n\t\t\t32,\n\t\t\t=
32,\n\t\t\t32,\n\t\t\t32,\n\t\t\t32,\n\t\t\t32,\n\t\t\t32,\n\t\t\t32,\n\t=
\t\t32,\n\t\t\t32,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,=
\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\=
t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t1=
2,\n\t\t\t5,\n\t\t\t5,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\=
t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t1=
2,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t=
\t\t10,\n\t\t\t9,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t9,\n\t\t\t9,\n\=
t\t\t39,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t=
\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t21,\n\t\t\t21,\n=
\t\t\t21,\n\t\t\t31,\n\t\t\t29,\n\t\t\t39,\n\t\t\t39,\n\t\t\t12,\n\t\t\t1=
2,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,=
\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\=
t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t39,\n\t\t\t39,\n\t\t=
\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t17,\n\t\t\t17,\n\t\t\t17,\n\t\t\t39,\n=
\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t1=
2,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,=
\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\=
t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t1=
2,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t39,\n\t\t\t39,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,=
\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\=
t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t1=
2,\n\t\t\t12,\n\t\t\t39,\n\t\t\t17,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,=
\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\=
t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t17,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t1=
2,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,=
\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\=
t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t39,\n\t\t\t39,\n\t\t\t11,\n\t\t=
\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n=
\t\t\t11,\n\t\t\t11,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t3=
9,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\=
t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\=
n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,=
\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\=
t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t39,\n\t\t\t1=
7,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,=
\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\=
t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t12,\n\t\t\t12,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t17,\n\t\t\t1=
2,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,=
\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\=
t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\=
t\t\t21,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t1=
2,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\=
n\t\t\t39,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t=
21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,=
\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t17,\n\t\t\=
t17,\n\t\t\t17,\n\t\t\t17,\n\t\t\t17,\n\t\t\t17,\n\t\t\t17,\n\t\t\t17,\n\=
t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t1=
2,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,=
\n\t\t\t12,\n\t\t\t12,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t17,\n\t\t\=
t17,\n\t\t\t17,\n\t\t\t17,\n\t\t\t17,\n\t\t\t17,\n\t\t\t17,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t1=
2,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,=
\n\t\t\t12,\n\t\t\t12,\n\t\t\t39,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\=
t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t1=
2,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t=
\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,=
\n\t\t\t21,\n\t\t\t17,\n\t\t\t17,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\=
t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t11,\n=
\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t1=
1,\n\t\t\t11,\n\t\t\t11,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\=
t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\=
n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t21,\n\t\t\t=
21,\n\t\t\t21,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,=
\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\=
t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t2=
1,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t12,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t17,\n\t\t\t17,\n\t\t\t17,\n\t\t\t17,\n\t\t\t39,\n\t\t\t39,\=
n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t=
39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,=
\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\=
t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39=
,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t11,\n\t\t\t11,\n\t\t=
\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n=
\t\t\t11,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t3=
9,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,=
\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\=
t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\=
t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21=
,\n\t\t\t39,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t=
\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t17,\n\t\t\t17,\n=
\t\t\t17,\n\t\t\t17,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t3=
9,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\=
t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\=
n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t=
39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,=
\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\=
t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t1=
2,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\=
t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\=
n\t\t\t21,\n\t\t\t21,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
17,\n\t\t\t17,\n\t\t\t12,\n\t\t\t17,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t=
\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,=
\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\=
t11,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\=
t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t1=
2,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t=
21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t=
\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,=
\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t11,\n\t\t\t11,\n\t\t\=
t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\=
t\t\t11,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39=
,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t=
\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n=
\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t1=
2,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t39,\n\t\t\t39,=
\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\=
t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t17,\n\t\t\t17,\n\=
t\t\t17,\n\t\t\t17,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39=
,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t=
\t39,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t1=
2,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,=
\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\=
t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t=
\t1,\n\t\t\t1,\n\t\t\t1,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,=
\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t1,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t0,\n\t\t\t1,\n\t\t\t0,\n\t\t\t1,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,=
\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\=
t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t1=
2,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t0,\n\t\=
t\t1,\n\t\t\t1,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t1=
2,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t=
\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,=
\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\=
t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\=
t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21=
,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t=
\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n=
\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t2=
1,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\=
t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\=
n\t\t\t21,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t14,\n\t\t\t14,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,=
\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\=
t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\=
t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39=
,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t1=
2,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t=
\t\t21,\n\t\t\t21,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,=
\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\=
t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\=
t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t=
\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t1=
2,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,=
\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\=
t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t1=
2,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,=
\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\=
t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t1=
2,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t39,\n\t\t\t39,\n\t\t\t11,\n\t\=
t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\=
n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t=
11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t=
\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,=
\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\=
t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\=
t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11=
,\n\t\t\t11,\n\t\t\t11,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t1=
2,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t39,=
\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\=
t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\=
t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14=
,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t=
\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n=
\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t1=
4,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t29,\n\t\=
t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\=
n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t=
29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t=
\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,=
\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\=
t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\=
t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t12,\n\t\t\t39=
,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t=
\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n=
\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t2=
9,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\=
t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\=
n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t=
29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t=
\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,=
\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t12,\n\t\t\=
t12,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t29,\n\t\t\t29,\n\=
t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29=
,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t=
\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n=
\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t2=
9,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\=
t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\=
n\t\t\t29,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t=
39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t28,\n\t=
\t\t28,\n\t\t\t28,\n\t\t\t28,\n\t\t\t28,\n\t\t\t28,\n\t\t\t28,\n\t\t\t28,=
\n\t\t\t28,\n\t\t\t28,\n\t\t\t28,\n\t\t\t28,\n\t\t\t28,\n\t\t\t28,\n\t\t\=
t28,\n\t\t\t28,\n\t\t\t28,\n\t\t\t28,\n\t\t\t28,\n\t\t\t28,\n\t\t\t28,\n\=
t\t\t28,\n\t\t\t28,\n\t\t\t28,\n\t\t\t28,\n\t\t\t28,\n\t\t\t14,\n\t\t\t14=
,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t=
\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n=
\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t1=
4,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\=
t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\=
n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t=
14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t=
\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t12,\n\t\t\t12,=
\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t12,\n\t\t\=
t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\=
t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14=
,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t=
\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n=
\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t1=
4,\n\t\t\t14,\n\t\t\t12,\n\t\t\t14,\n\t\t\t12,\n\t\t\t14,\n\t\t\t12,\n\t\=
t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\=
n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t12,\n\t\t\t14,\n\t\t\t12,\n\t\t\t=
12,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t=
\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,=
\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\=
t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\=
t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14=
,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t=
\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n=
\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t1=
4,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\=
t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\=
n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t=
14,\n\t\t\t14,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t12,\n\t\t\t12,\n\t=
\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t14,\n\t\t\t14,=
\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\=
t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\=
t\t\t14,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n=
\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t1=
4,\n\t\t\t14,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t=
39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t=
\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t14,\n\t\t\t14,=
\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\=
t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\=
t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14=
,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t=
\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n=
\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t1=
4,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\=
t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t39,\=
n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t=
39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t=
\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,=
\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t12,\n\t\t\=
t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\=
t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12=
,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t=
\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n=
\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t1=
2,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\=
t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\=
n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t39,\n\t\t\t39,\n\t\t\t=
39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t=
\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,=
\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\=
t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\=
t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14=
,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t=
\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n=
\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t1=
4,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\=
t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\=
n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t39,\n\t\t\t=
39,\n\t\t\t39,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t=
\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,=
\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\=
t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\=
t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21=
,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t=
\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n=
\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t2=
1,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\=
t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\=
n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t=
21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t=
\t\t21,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,=
\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\=
t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\=
t\t\t39\n\t\t],\n\t\t\"highStart\": 919552,\n\t\t\"errorValue\": =
0\n\t};\n\n/***/ },\n/* 94 */\n/***/ function(module, exports) {\n\n\t// =
Generated by CoffeeScript 1.7.1\n\t(function() {\n\t  var AI, AL, B2, =
BA, BB, BK, CB, CJ, CL, CM, CP, CR, EX, GL, H2, H3, HL, HY, ID, IN, IS, =
JL, JT, JV, LF, NL, NS, NU, OP, PO, PR, QU, RI, SA, SG, SP, SY, WJ, XX, =
ZW;\n\n\t  exports.OP =3D OP =3D 0;\n\n\t  exports.CL =3D CL =3D =
1;\n\n\t  exports.CP =3D CP =3D 2;\n\n\t  exports.QU =3D QU =3D 3;\n\n\t =
 exports.GL =3D GL =3D 4;\n\n\t  exports.NS =3D NS =3D 5;\n\n\t  =
exports.EX =3D EX =3D 6;\n\n\t  exports.SY =3D SY =3D 7;\n\n\t  =
exports.IS =3D IS =3D 8;\n\n\t  exports.PR =3D PR =3D 9;\n\n\t  =
exports.PO =3D PO =3D 10;\n\n\t  exports.NU =3D NU =3D 11;\n\n\t  =
exports.AL =3D AL =3D 12;\n\n\t  exports.HL =3D HL =3D 13;\n\n\t  =
exports.ID =3D ID =3D 14;\n\n\t  exports.IN =3D IN =3D 15;\n\n\t  =
exports.HY =3D HY =3D 16;\n\n\t  exports.BA =3D BA =3D 17;\n\n\t  =
exports.BB =3D BB =3D 18;\n\n\t  exports.B2 =3D B2 =3D 19;\n\n\t  =
exports.ZW =3D ZW =3D 20;\n\n\t  exports.CM =3D CM =3D 21;\n\n\t  =
exports.WJ =3D WJ =3D 22;\n\n\t  exports.H2 =3D H2 =3D 23;\n\n\t  =
exports.H3 =3D H3 =3D 24;\n\n\t  exports.JL =3D JL =3D 25;\n\n\t  =
exports.JV =3D JV =3D 26;\n\n\t  exports.JT =3D JT =3D 27;\n\n\t  =
exports.RI =3D RI =3D 28;\n\n\t  exports.AI =3D AI =3D 29;\n\n\t  =
exports.BK =3D BK =3D 30;\n\n\t  exports.CB =3D CB =3D 31;\n\n\t  =
exports.CJ =3D CJ =3D 32;\n\n\t  exports.CR =3D CR =3D 33;\n\n\t  =
exports.LF =3D LF =3D 34;\n\n\t  exports.NL =3D NL =3D 35;\n\n\t  =
exports.SA =3D SA =3D 36;\n\n\t  exports.SG =3D SG =3D 37;\n\n\t  =
exports.SP =3D SP =3D 38;\n\n\t  exports.XX =3D XX =3D =
39;\n\n\t}).call(this);\n\n\n/***/ },\n/* 95 */\n/***/ function(module, =
exports) {\n\n\t// Generated by CoffeeScript 1.7.1\n\t(function() {\n\t  =
var CI_BRK, CP_BRK, DI_BRK, IN_BRK, PR_BRK;\n\n\t  exports.DI_BRK =3D =
DI_BRK =3D 0;\n\n\t  exports.IN_BRK =3D IN_BRK =3D 1;\n\n\t  =
exports.CI_BRK =3D CI_BRK =3D 2;\n\n\t  exports.CP_BRK =3D CP_BRK =3D =
3;\n\n\t  exports.PR_BRK =3D PR_BRK =3D 4;\n\n\t  exports.pairTable =3D =
[[PR_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, =
PR_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, =
PR_BRK, PR_BRK, PR_BRK, PR_BRK, CP_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, =
PR_BRK, PR_BRK, PR_BRK], [DI_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, =
PR_BRK, PR_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, DI_BRK, =
DI_BRK, DI_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, =
DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK], [DI_BRK, PR_BRK, =
PR_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, =
IN_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, =
PR_BRK, CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK], =
[PR_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, =
IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, =
IN_BRK, IN_BRK, PR_BRK, CI_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, =
IN_BRK, IN_BRK], [IN_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, =
PR_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, =
IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, CI_BRK, PR_BRK, IN_BRK, =
IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK], [DI_BRK, PR_BRK, PR_BRK, =
IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, =
DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, =
CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK], =
[DI_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, =
DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, =
DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, =
DI_BRK, DI_BRK], [DI_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, =
PR_BRK, PR_BRK, PR_BRK, DI_BRK, DI_BRK, IN_BRK, DI_BRK, DI_BRK, DI_BRK, =
DI_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, =
DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK], [DI_BRK, PR_BRK, PR_BRK, =
IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, DI_BRK, DI_BRK, IN_BRK, =
IN_BRK, IN_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, =
CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK], =
[IN_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, =
DI_BRK, DI_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, IN_BRK, IN_BRK, =
DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, =
IN_BRK, DI_BRK], [IN_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, =
PR_BRK, PR_BRK, PR_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, =
DI_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, =
DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK], [IN_BRK, PR_BRK, PR_BRK, =
IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, =
IN_BRK, IN_BRK, DI_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, =
CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK], =
[IN_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, =
DI_BRK, DI_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, IN_BRK, IN_BRK, IN_BRK, =
DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, =
DI_BRK, DI_BRK], [IN_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, =
PR_BRK, PR_BRK, PR_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, =
IN_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, =
DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK], [DI_BRK, PR_BRK, PR_BRK, =
IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, DI_BRK, IN_BRK, DI_BRK, =
DI_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, =
CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK], =
[DI_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, =
DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, IN_BRK, =
DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, =
DI_BRK, DI_BRK], [DI_BRK, PR_BRK, PR_BRK, IN_BRK, DI_BRK, IN_BRK, =
PR_BRK, PR_BRK, PR_BRK, DI_BRK, DI_BRK, IN_BRK, DI_BRK, DI_BRK, DI_BRK, =
DI_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, =
DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK], [DI_BRK, PR_BRK, PR_BRK, =
IN_BRK, DI_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, =
DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, =
CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK], =
[IN_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, =
IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, =
IN_BRK, IN_BRK, PR_BRK, CI_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, =
IN_BRK, IN_BRK], [DI_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, =
PR_BRK, PR_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, =
DI_BRK, IN_BRK, IN_BRK, DI_BRK, PR_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, =
DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK], [DI_BRK, DI_BRK, DI_BRK, =
DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, =
DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, PR_BRK, =
DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK], =
[IN_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, =
DI_BRK, DI_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, IN_BRK, IN_BRK, IN_BRK, =
DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, =
DI_BRK, DI_BRK], [IN_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, =
PR_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, =
IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, CI_BRK, PR_BRK, IN_BRK, =
IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK], [DI_BRK, PR_BRK, PR_BRK, =
IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, DI_BRK, IN_BRK, DI_BRK, =
DI_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, =
CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, DI_BRK], =
[DI_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, =
DI_BRK, IN_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, IN_BRK, =
DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, =
IN_BRK, DI_BRK], [DI_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, =
PR_BRK, PR_BRK, PR_BRK, DI_BRK, IN_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, =
IN_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, IN_BRK, =
IN_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK], [DI_BRK, PR_BRK, PR_BRK, =
IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, DI_BRK, IN_BRK, DI_BRK, =
DI_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, =
CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, DI_BRK], =
[DI_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, =
DI_BRK, IN_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, IN_BRK, =
DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, =
IN_BRK, DI_BRK], [DI_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, =
PR_BRK, PR_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, =
DI_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, =
DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK]];\n\n\t}).call(this);\n\n\n/***/ =
},\n/* 96 */\n/***/ function(module, exports, __webpack_require__) =
{\n\n\t/* WEBPACK VAR INJECTION */(function(Buffer) {// Generated by =
CoffeeScript 1.7.1\n\t(function() {\n\t  var PDFImage;\n\n\t  PDFImage =
=3D __webpack_require__(97);\n\n\t  module.exports =3D {\n\t    =
initImages: function() {\n\t      this._imageRegistry =3D {};\n\t      =
return this._imageCount =3D 0;\n\t    },\n\t    image: function(src, x, =
y, options) {\n\t      var bh, bp, bw, h, hp, image, ip, w, wp, _base, =
_name, _ref, _ref1, _ref2;\n\t      if (options =3D=3D null) {\n\t       =
 options =3D {};\n\t      }\n\t      if (typeof x =3D=3D=3D 'object') =
{\n\t        options =3D x;\n\t        x =3D null;\n\t      }\n\t      x =
=3D (_ref =3D x !=3D null ? x : options.x) !=3D null ? _ref : =
this.x;\n\t      y =3D (_ref1 =3D y !=3D null ? y : options.y) !=3D null =
? _ref1 : this.y;\n\t      if (!Buffer.isBuffer(src)) {\n\t        image =
=3D this._imageRegistry[src];\n\t      }\n\t      if (!image) {\n\t      =
  image =3D PDFImage.open(src, 'I' + (++this._imageCount));\n\t        =
image.embed(this);\n\t        if (!Buffer.isBuffer(src)) {\n\t          =
this._imageRegistry[src] =3D image;\n\t        }\n\t      }\n\t      if =
((_base =3D this.page.xobjects)[_name =3D image.label] =3D=3D null) =
{\n\t        _base[_name] =3D image.obj;\n\t      }\n\t      w =3D =
options.width || image.width;\n\t      h =3D options.height || =
image.height;\n\t      if (options.width &amp;&amp; !options.height) =
{\n\t        wp =3D w / image.width;\n\t        w =3D image.width * =
wp;\n\t        h =3D image.height * wp;\n\t      } else if =
(options.height &amp;&amp; !options.width) {\n\t        hp =3D h / =
image.height;\n\t        w =3D image.width * hp;\n\t        h =3D =
image.height * hp;\n\t      } else if (options.scale) {\n\t        w =3D =
image.width * options.scale;\n\t        h =3D image.height * =
options.scale;\n\t      } else if (options.fit) {\n\t        _ref2 =3D =
options.fit, bw =3D _ref2[0], bh =3D _ref2[1];\n\t        bp =3D bw / =
bh;\n\t        ip =3D image.width / image.height;\n\t        if (ip &gt; =
bp) {\n\t          w =3D bw;\n\t          h =3D bw / ip;\n\t        } =
else {\n\t          h =3D bh;\n\t          w =3D bh * ip;\n\t        =
}\n\t        if (options.align =3D=3D=3D 'center') {\n\t          x =3D =
x + bw / 2 - w / 2;\n\t        } else if (options.align =3D=3D=3D =
'right') {\n\t          x =3D x + bw - w;\n\t        }\n\t        if =
(options.valign =3D=3D=3D 'center') {\n\t          y =3D y + bh / 2 - h =
/ 2;\n\t        } else if (options.valign =3D=3D=3D 'bottom') {\n\t      =
    y =3D y + bh - h;\n\t        }\n\t      }\n\t      if (this.y =
=3D=3D=3D y) {\n\t        this.y +=3D h;\n\t      }\n\t      =
this.save();\n\t      this.transform(w, 0, 0, -h, x, y + h);\n\t      =
this.addContent(\"/\" + image.label + \" Do\");\n\t      =
this.restore();\n\t      return this;\n\t    }\n\t  =
};\n\n\t}).call(this);\n\n\t/* WEBPACK VAR INJECTION */}.call(exports, =
__webpack_require__(2).Buffer))\n\n/***/ },\n/* 97 */\n/***/ =
function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR =
INJECTION */(function(Buffer) {// Generated by CoffeeScript =
1.7.1\n\n\t/*\n\tPDFImage - embeds images in PDF documents\n\tBy Devon =
Govett\n\t */\n\n\t(function() {\n\t  var Data, JPEG, PDFImage, PNG, =
fs;\n\n\t  fs =3D __webpack_require__(44);\n\n\t  Data =3D =
__webpack_require__(72);\n\n\t  JPEG =3D __webpack_require__(98);\n\n\t  =
PNG =3D __webpack_require__(99);\n\n\t  PDFImage =3D (function() {\n\t   =
 function PDFImage() {}\n\n\t    PDFImage.open =3D function(src, label) =
{\n\t      var data, match;\n\t      if (Buffer.isBuffer(src)) {\n\t     =
   data =3D src;\n\t      } else {\n\t        if (match =3D =
/^data:.+;base64,(.*)$/.exec(src)) {\n\t          data =3D new =
Buffer(match[1], 'base64');\n\t        } else {\n\t          data =3D =
fs.readFileSync(src);\n\t          if (!data) {\n\t            =
return;\n\t          }\n\t        }\n\t      }\n\t      if (data[0] =
=3D=3D=3D 0xff &amp;&amp; data[1] =3D=3D=3D 0xd8) {\n\t        return =
new JPEG(data, label);\n\t      } else if (data[0] =3D=3D=3D 0x89 =
&amp;&amp; data.toString('ascii', 1, 4) =3D=3D=3D 'PNG') {\n\t        =
return new PNG(data, label);\n\t      } else {\n\t        throw new =
Error('Unknown image format.');\n\t      }\n\t    };\n\n\t    return =
PDFImage;\n\n\t  })();\n\n\t  module.exports =3D =
PDFImage;\n\n\t}).call(this);\n\n\t/* WEBPACK VAR INJECTION =
*/}.call(exports, __webpack_require__(2).Buffer))\n\n/***/ },\n/* 98 =
*/\n/***/ function(module, exports, __webpack_require__) {\n\n\t// =
Generated by CoffeeScript 1.7.1\n\t(function() {\n\t  var JPEG, fs,\n\t  =
  __indexOf =3D [].indexOf || function(item) { for (var i =3D 0, l =3D =
this.length; i &lt; l; i++) { if (i in this &amp;&amp; this[i] =3D=3D=3D =
item) return i; } return -1; };\n\n\t  fs =3D =
__webpack_require__(44);\n\n\t  JPEG =3D (function() {\n\t    var =
MARKERS;\n\n\t    MARKERS =3D [0xFFC0, 0xFFC1, 0xFFC2, 0xFFC3, 0xFFC5, =
0xFFC6, 0xFFC7, 0xFFC8, 0xFFC9, 0xFFCA, 0xFFCB, 0xFFCC, 0xFFCD, 0xFFCE, =
0xFFCF];\n\n\t    function JPEG(data, label) {\n\t      var channels, =
marker, pos;\n\t      this.data =3D data;\n\t      this.label =3D =
label;\n\t      if (this.data.readUInt16BE(0) !=3D=3D 0xFFD8) {\n\t      =
  throw \"SOI not found in JPEG\";\n\t      }\n\t      pos =3D 2;\n\t    =
  while (pos &lt; this.data.length) {\n\t        marker =3D =
this.data.readUInt16BE(pos);\n\t        pos +=3D 2;\n\t        if =
(__indexOf.call(MARKERS, marker) &gt;=3D 0) {\n\t          break;\n\t    =
    }\n\t        pos +=3D this.data.readUInt16BE(pos);\n\t      }\n\t    =
  if (__indexOf.call(MARKERS, marker) &lt; 0) {\n\t        throw =
\"Invalid JPEG.\";\n\t      }\n\t      pos +=3D 2;\n\t      this.bits =
=3D this.data[pos++];\n\t      this.height =3D =
this.data.readUInt16BE(pos);\n\t      pos +=3D 2;\n\t      this.width =
=3D this.data.readUInt16BE(pos);\n\t      pos +=3D 2;\n\t      channels =
=3D this.data[pos++];\n\t      this.colorSpace =3D (function() {\n\t     =
   switch (channels) {\n\t          case 1:\n\t            return =
'DeviceGray';\n\t          case 3:\n\t            return =
'DeviceRGB';\n\t          case 4:\n\t            return =
'DeviceCMYK';\n\t        }\n\t      })();\n\t      this.obj =3D =
null;\n\t    }\n\n\t    JPEG.prototype.embed =3D function(document) =
{\n\t      if (this.obj) {\n\t        return;\n\t      }\n\t      =
this.obj =3D document.ref({\n\t        Type: 'XObject',\n\t        =
Subtype: 'Image',\n\t        BitsPerComponent: this.bits,\n\t        =
Width: this.width,\n\t        Height: this.height,\n\t        =
ColorSpace: this.colorSpace,\n\t        Filter: 'DCTDecode'\n\t      =
});\n\t      if (this.colorSpace =3D=3D=3D 'DeviceCMYK') {\n\t        =
this.obj.data['Decode'] =3D [1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, =
0.0];\n\t      }\n\t      this.obj.end(this.data);\n\t      return =
this.data =3D null;\n\t    };\n\n\t    return JPEG;\n\n\t  })();\n\n\t  =
module.exports =3D JPEG;\n\n\t}).call(this);\n\n\n/***/ },\n/* 99 =
*/\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* =
WEBPACK VAR INJECTION */(function(Buffer) {// Generated by CoffeeScript =
1.7.1\n\t(function() {\n\t  var PNG, PNGImage, zlib;\n\n\t  zlib =3D =
__webpack_require__(47);\n\n\t  PNG =3D __webpack_require__(100);\n\n\t  =
PNGImage =3D (function() {\n\t    function PNGImage(data, label) {\n\t   =
   this.label =3D label;\n\t      this.image =3D new PNG(data);\n\t      =
this.width =3D this.image.width;\n\t      this.height =3D =
this.image.height;\n\t      this.imgData =3D this.image.imgData;\n\t     =
 this.obj =3D null;\n\t    }\n\n\t    PNGImage.prototype.embed =3D =
function(document) {\n\t      var mask, palette, params, rgb, val, x, =
_i, _len;\n\t      this.document =3D document;\n\t      if (this.obj) =
{\n\t        return;\n\t      }\n\t      this.obj =3D document.ref({\n\t =
       Type: 'XObject',\n\t        Subtype: 'Image',\n\t        =
BitsPerComponent: this.image.bits,\n\t        Width: this.width,\n\t     =
   Height: this.height,\n\t        Filter: 'FlateDecode'\n\t      =
});\n\t      if (!this.image.hasAlphaChannel) {\n\t        params =3D =
document.ref({\n\t          Predictor: 15,\n\t          Colors: =
this.image.colors,\n\t          BitsPerComponent: this.image.bits,\n\t   =
       Columns: this.width\n\t        });\n\t        =
this.obj.data['DecodeParms'] =3D params;\n\t        params.end();\n\t    =
  }\n\t      if (this.image.palette.length =3D=3D=3D 0) {\n\t        =
this.obj.data['ColorSpace'] =3D this.image.colorSpace;\n\t      } else =
{\n\t        palette =3D document.ref();\n\t        palette.end(new =
Buffer(this.image.palette));\n\t        this.obj.data['ColorSpace'] =3D =
['Indexed', 'DeviceRGB', (this.image.palette.length / 3) - 1, =
palette];\n\t      }\n\t      if (this.image.transparency.grayscale) =
{\n\t        val =3D this.image.transparency.greyscale;\n\t        =
return this.obj.data['Mask'] =3D [val, val];\n\t      } else if =
(this.image.transparency.rgb) {\n\t        rgb =3D =
this.image.transparency.rgb;\n\t        mask =3D [];\n\t        for (_i =
=3D 0, _len =3D rgb.length; _i &lt; _len; _i++) {\n\t          x =3D =
rgb[_i];\n\t          mask.push(x, x);\n\t        }\n\t        return =
this.obj.data['Mask'] =3D mask;\n\t      } else if =
(this.image.transparency.indexed) {\n\t        return =
this.loadIndexedAlphaChannel();\n\t      } else if =
(this.image.hasAlphaChannel) {\n\t        return =
this.splitAlphaChannel();\n\t      } else {\n\t        return =
this.finalize();\n\t      }\n\t    };\n\n\t    =
PNGImage.prototype.finalize =3D function() {\n\t      var sMask;\n\t     =
 if (this.alphaChannel) {\n\t        sMask =3D this.document.ref({\n\t   =
       Type: 'XObject',\n\t          Subtype: 'Image',\n\t          =
Height: this.height,\n\t          Width: this.width,\n\t          =
BitsPerComponent: 8,\n\t          Filter: 'FlateDecode',\n\t          =
ColorSpace: 'DeviceGray',\n\t          Decode: [0, 1]\n\t        });\n\t =
       sMask.end(this.alphaChannel);\n\t        this.obj.data['SMask'] =
=3D sMask;\n\t      }\n\t      this.obj.end(this.imgData);\n\t      =
this.image =3D null;\n\t      return this.imgData =3D null;\n\t    =
};\n\n\t    PNGImage.prototype.splitAlphaChannel =3D function() {\n\t    =
  return this.image.decodePixels((function(_this) {\n\t        return =
function(pixels) {\n\t          var a, alphaChannel, colorByteSize, =
done, i, imgData, len, p, pixelCount;\n\t          colorByteSize =3D =
_this.image.colors * _this.image.bits / 8;\n\t          pixelCount =3D =
_this.width * _this.height;\n\t          imgData =3D new =
Buffer(pixelCount * colorByteSize);\n\t          alphaChannel =3D new =
Buffer(pixelCount);\n\t          i =3D p =3D a =3D 0;\n\t          len =
=3D pixels.length;\n\t          while (i &lt; len) {\n\t            =
imgData[p++] =3D pixels[i++];\n\t            imgData[p++] =3D =
pixels[i++];\n\t            imgData[p++] =3D pixels[i++];\n\t            =
alphaChannel[a++] =3D pixels[i++];\n\t          }\n\t          done =3D =
0;\n\t          zlib.deflate(imgData, function(err, imgData) {\n\t       =
     _this.imgData =3D imgData;\n\t            if (err) {\n\t            =
  throw err;\n\t            }\n\t            if (++done =3D=3D=3D 2) =
{\n\t              return _this.finalize();\n\t            }\n\t         =
 });\n\t          return zlib.deflate(alphaChannel, function(err, =
alphaChannel) {\n\t            _this.alphaChannel =3D alphaChannel;\n\t  =
          if (err) {\n\t              throw err;\n\t            }\n\t    =
        if (++done =3D=3D=3D 2) {\n\t              return =
_this.finalize();\n\t            }\n\t          });\n\t        };\n\t    =
  })(this));\n\t    };\n\n\t    =
PNGImage.prototype.loadIndexedAlphaChannel =3D function(fn) {\n\t      =
var transparency;\n\t      transparency =3D =
this.image.transparency.indexed;\n\t      return =
this.image.decodePixels((function(_this) {\n\t        return =
function(pixels) {\n\t          var alphaChannel, i, j, _i, _ref;\n\t    =
      alphaChannel =3D new Buffer(_this.width * _this.height);\n\t       =
   i =3D 0;\n\t          for (j =3D _i =3D 0, _ref =3D pixels.length; _i =
&lt; _ref; j =3D _i +=3D 1) {\n\t            alphaChannel[i++] =3D =
transparency[pixels[j]];\n\t          }\n\t          return =
zlib.deflate(alphaChannel, function(err, alphaChannel) {\n\t            =
_this.alphaChannel =3D alphaChannel;\n\t            if (err) {\n\t       =
       throw err;\n\t            }\n\t            return =
_this.finalize();\n\t          });\n\t        };\n\t      })(this));\n\t =
   };\n\n\t    return PNGImage;\n\n\t  })();\n\n\t  module.exports =3D =
PNGImage;\n\n\t}).call(this);\n\n\t/* WEBPACK VAR INJECTION =
*/}.call(exports, __webpack_require__(2).Buffer))\n\n/***/ },\n/* 100 =
*/\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* =
WEBPACK VAR INJECTION */(function(Buffer) {// Generated by CoffeeScript =
1.4.0\n\n\t/*\n\t# MIT LICENSE\n\t# Copyright (c) 2011 Devon Govett\n\t# =
\n\t# Permission is hereby granted, free of charge, to any person =
obtaining a copy of this \n\t# software and associated documentation =
files (the \"Software\"), to deal in the Software \n\t# without =
restriction, including without limitation the rights to use, copy, =
modify, merge, \n\t# publish, distribute, sublicense, and/or sell copies =
of the Software, and to permit persons \n\t# to whom the Software is =
furnished to do so, subject to the following conditions:\n\t# \n\t# The =
above copyright notice and this permission notice shall be included in =
all copies or \n\t# substantial portions of the Software.\n\t# \n\t# THE =
SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR =
IMPLIED, INCLUDING \n\t# BUT NOT LIMITED TO THE WARRANTIES OF =
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND \n\t# =
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE =
LIABLE FOR ANY CLAIM, \n\t# DAMAGES OR OTHER LIABILITY, WHETHER IN AN =
ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, \n\t# OUT OF OR IN =
CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE =
SOFTWARE.\n\t*/\n\n\n\t(function() {\n\t  var PNG, fs, zlib;\n\n\t  fs =
=3D __webpack_require__(44);\n\n\t  zlib =3D =
__webpack_require__(47);\n\n\t  module.exports =3D PNG =3D (function() =
{\n\n\t    PNG.decode =3D function(path, fn) {\n\t      return =
fs.readFile(path, function(err, file) {\n\t        var png;\n\t        =
png =3D new PNG(file);\n\t        return png.decode(function(pixels) =
{\n\t          return fn(pixels);\n\t        });\n\t      });\n\t    =
};\n\n\t    PNG.load =3D function(path) {\n\t      var file;\n\t      =
file =3D fs.readFileSync(path);\n\t      return new PNG(file);\n\t    =
};\n\n\t    function PNG(data) {\n\t      var chunkSize, colors, i, =
index, key, section, short, text, _i, _j, _ref;\n\t      this.data =3D =
data;\n\t      this.pos =3D 8;\n\t      this.palette =3D [];\n\t      =
this.imgData =3D [];\n\t      this.transparency =3D {};\n\t      =
this.text =3D {};\n\t      while (true) {\n\t        chunkSize =3D =
this.readUInt32();\n\t        section =3D ((function() {\n\t          =
var _i, _results;\n\t          _results =3D [];\n\t          for (i =3D =
_i =3D 0; _i &lt; 4; i =3D ++_i) {\n\t            =
_results.push(String.fromCharCode(this.data[this.pos++]));\n\t          =
}\n\t          return _results;\n\t        }).call(this)).join('');\n\t  =
      switch (section) {\n\t          case 'IHDR':\n\t            =
this.width =3D this.readUInt32();\n\t            this.height =3D =
this.readUInt32();\n\t            this.bits =3D =
this.data[this.pos++];\n\t            this.colorType =3D =
this.data[this.pos++];\n\t            this.compressionMethod =3D =
this.data[this.pos++];\n\t            this.filterMethod =3D =
this.data[this.pos++];\n\t            this.interlaceMethod =3D =
this.data[this.pos++];\n\t            break;\n\t          case =
'PLTE':\n\t            this.palette =3D this.read(chunkSize);\n\t        =
    break;\n\t          case 'IDAT':\n\t            for (i =3D _i =3D 0; =
_i &lt; chunkSize; i =3D _i +=3D 1) {\n\t              =
this.imgData.push(this.data[this.pos++]);\n\t            }\n\t           =
 break;\n\t          case 'tRNS':\n\t            this.transparency =3D =
{};\n\t            switch (this.colorType) {\n\t              case =
3:\n\t                this.transparency.indexed =3D =
this.read(chunkSize);\n\t                short =3D 255 - =
this.transparency.indexed.length;\n\t                if (short &gt; 0) =
{\n\t                  for (i =3D _j =3D 0; 0 &lt;=3D short ? _j &lt; =
short : _j &gt; short; i =3D 0 &lt;=3D short ? ++_j : --_j) {\n\t        =
            this.transparency.indexed.push(255);\n\t                  =
}\n\t                }\n\t                break;\n\t              case =
0:\n\t                this.transparency.grayscale =3D =
this.read(chunkSize)[0];\n\t                break;\n\t              case =
2:\n\t                this.transparency.rgb =3D =
this.read(chunkSize);\n\t            }\n\t            break;\n\t         =
 case 'tEXt':\n\t            text =3D this.read(chunkSize);\n\t          =
  index =3D text.indexOf(0);\n\t            key =3D =
String.fromCharCode.apply(String, text.slice(0, index));\n\t            =
this.text[key] =3D String.fromCharCode.apply(String, text.slice(index + =
1));\n\t            break;\n\t          case 'IEND':\n\t            =
this.colors =3D (function() {\n\t              switch (this.colorType) =
{\n\t                case 0:\n\t                case 3:\n\t              =
  case 4:\n\t                  return 1;\n\t                case 2:\n\t  =
              case 6:\n\t                  return 3;\n\t              =
}\n\t            }).call(this);\n\t            this.hasAlphaChannel =3D =
(_ref =3D this.colorType) =3D=3D=3D 4 || _ref =3D=3D=3D 6;\n\t           =
 colors =3D this.colors + (this.hasAlphaChannel ? 1 : 0);\n\t            =
this.pixelBitlength =3D this.bits * colors;\n\t            =
this.colorSpace =3D (function() {\n\t              switch (this.colors) =
{\n\t                case 1:\n\t                  return =
'DeviceGray';\n\t                case 3:\n\t                  return =
'DeviceRGB';\n\t              }\n\t            }).call(this);\n\t        =
    this.imgData =3D new Buffer(this.imgData);\n\t            =
return;\n\t          default:\n\t            this.pos +=3D =
chunkSize;\n\t        }\n\t        this.pos +=3D 4;\n\t        if =
(this.pos &gt; this.data.length) {\n\t          throw new =
Error(\"Incomplete or corrupt PNG file\");\n\t        }\n\t      }\n\t   =
   return;\n\t    }\n\n\t    PNG.prototype.read =3D function(bytes) =
{\n\t      var i, _i, _results;\n\t      _results =3D [];\n\t      for =
(i =3D _i =3D 0; 0 &lt;=3D bytes ? _i &lt; bytes : _i &gt; bytes; i =3D =
0 &lt;=3D bytes ? ++_i : --_i) {\n\t        =
_results.push(this.data[this.pos++]);\n\t      }\n\t      return =
_results;\n\t    };\n\n\t    PNG.prototype.readUInt32 =3D function() =
{\n\t      var b1, b2, b3, b4;\n\t      b1 =3D this.data[this.pos++] =
&lt;&lt; 24;\n\t      b2 =3D this.data[this.pos++] &lt;&lt; 16;\n\t      =
b3 =3D this.data[this.pos++] &lt;&lt; 8;\n\t      b4 =3D =
this.data[this.pos++];\n\t      return b1 | b2 | b3 | b4;\n\t    =
};\n\n\t    PNG.prototype.readUInt16 =3D function() {\n\t      var b1, =
b2;\n\t      b1 =3D this.data[this.pos++] &lt;&lt; 8;\n\t      b2 =3D =
this.data[this.pos++];\n\t      return b1 | b2;\n\t    };\n\n\t    =
PNG.prototype.decodePixels =3D function(fn) {\n\t      var _this =3D =
this;\n\t      return zlib.inflate(this.imgData, function(err, data) =
{\n\t        var byte, c, col, i, left, length, p, pa, paeth, pb, pc, =
pixelBytes, pixels, pos, row, scanlineLength, upper, upperLeft, _i, _j, =
_k, _l, _m;\n\t        if (err) {\n\t          throw err;\n\t        =
}\n\t        pixelBytes =3D _this.pixelBitlength / 8;\n\t        =
scanlineLength =3D pixelBytes * _this.width;\n\t        pixels =3D new =
Buffer(scanlineLength * _this.height);\n\t        length =3D =
data.length;\n\t        row =3D 0;\n\t        pos =3D 0;\n\t        c =
=3D 0;\n\t        while (pos &lt; length) {\n\t          switch =
(data[pos++]) {\n\t            case 0:\n\t              for (i =3D _i =
=3D 0; _i &lt; scanlineLength; i =3D _i +=3D 1) {\n\t                =
pixels[c++] =3D data[pos++];\n\t              }\n\t              =
break;\n\t            case 1:\n\t              for (i =3D _j =3D 0; _j =
&lt; scanlineLength; i =3D _j +=3D 1) {\n\t                byte =3D =
data[pos++];\n\t                left =3D i &lt; pixelBytes ? 0 : =
pixels[c - pixelBytes];\n\t                pixels[c++] =3D (byte + left) =
% 256;\n\t              }\n\t              break;\n\t            case =
2:\n\t              for (i =3D _k =3D 0; _k &lt; scanlineLength; i =3D =
_k +=3D 1) {\n\t                byte =3D data[pos++];\n\t                =
col =3D (i - (i % pixelBytes)) / pixelBytes;\n\t                upper =
=3D row &amp;&amp; pixels[(row - 1) * scanlineLength + col * pixelBytes =
+ (i % pixelBytes)];\n\t                pixels[c++] =3D (upper + byte) % =
256;\n\t              }\n\t              break;\n\t            case =
3:\n\t              for (i =3D _l =3D 0; _l &lt; scanlineLength; i =3D =
_l +=3D 1) {\n\t                byte =3D data[pos++];\n\t                =
col =3D (i - (i % pixelBytes)) / pixelBytes;\n\t                left =3D =
i &lt; pixelBytes ? 0 : pixels[c - pixelBytes];\n\t                upper =
=3D row &amp;&amp; pixels[(row - 1) * scanlineLength + col * pixelBytes =
+ (i % pixelBytes)];\n\t                pixels[c++] =3D (byte + =
Math.floor((left + upper) / 2)) % 256;\n\t              }\n\t            =
  break;\n\t            case 4:\n\t              for (i =3D _m =3D 0; _m =
&lt; scanlineLength; i =3D _m +=3D 1) {\n\t                byte =3D =
data[pos++];\n\t                col =3D (i - (i % pixelBytes)) / =
pixelBytes;\n\t                left =3D i &lt; pixelBytes ? 0 : pixels[c =
- pixelBytes];\n\t                if (row =3D=3D=3D 0) {\n\t             =
     upper =3D upperLeft =3D 0;\n\t                } else {\n\t          =
        upper =3D pixels[(row - 1) * scanlineLength + col * pixelBytes + =
(i % pixelBytes)];\n\t                  upperLeft =3D col &amp;&amp; =
pixels[(row - 1) * scanlineLength + (col - 1) * pixelBytes + (i % =
pixelBytes)];\n\t                }\n\t                p =3D left + upper =
- upperLeft;\n\t                pa =3D Math.abs(p - left);\n\t           =
     pb =3D Math.abs(p - upper);\n\t                pc =3D Math.abs(p - =
upperLeft);\n\t                if (pa &lt;=3D pb &amp;&amp; pa &lt;=3D =
pc) {\n\t                  paeth =3D left;\n\t                } else if =
(pb &lt;=3D pc) {\n\t                  paeth =3D upper;\n\t              =
  } else {\n\t                  paeth =3D upperLeft;\n\t                =
}\n\t                pixels[c++] =3D (byte + paeth) % 256;\n\t           =
   }\n\t              break;\n\t            default:\n\t              =
throw new Error(\"Invalid filter algorithm: \" + data[pos - 1]);\n\t     =
     }\n\t          row++;\n\t        }\n\t        return =
fn(pixels);\n\t      });\n\t    };\n\n\t    PNG.prototype.decodePalette =
=3D function() {\n\t      var c, i, length, palette, pos, ret, =
transparency, _i, _ref, _ref1;\n\t      palette =3D this.palette;\n\t    =
  transparency =3D this.transparency.indexed || [];\n\t      ret =3D new =
Buffer(transparency.length + palette.length);\n\t      pos =3D 0;\n\t    =
  length =3D palette.length;\n\t      c =3D 0;\n\t      for (i =3D _i =
=3D 0, _ref =3D palette.length; _i &lt; _ref; i =3D _i +=3D 3) {\n\t     =
   ret[pos++] =3D palette[i];\n\t        ret[pos++] =3D palette[i + =
1];\n\t        ret[pos++] =3D palette[i + 2];\n\t        ret[pos++] =3D =
(_ref1 =3D transparency[c++]) !=3D null ? _ref1 : 255;\n\t      }\n\t    =
  return ret;\n\t    };\n\n\t    PNG.prototype.copyToImageData =3D =
function(imageData, pixels) {\n\t      var alpha, colors, data, i, =
input, j, k, length, palette, v, _ref;\n\t      colors =3D =
this.colors;\n\t      palette =3D null;\n\t      alpha =3D =
this.hasAlphaChannel;\n\t      if (this.palette.length) {\n\t        =
palette =3D (_ref =3D this._decodedPalette) !=3D null ? _ref : =
this._decodedPalette =3D this.decodePalette();\n\t        colors =3D =
4;\n\t        alpha =3D true;\n\t      }\n\t      data =3D (imageData =
!=3D null ? imageData.data : void 0) || imageData;\n\t      length =3D =
data.length;\n\t      input =3D palette || pixels;\n\t      i =3D j =3D =
0;\n\t      if (colors =3D=3D=3D 1) {\n\t        while (i &lt; length) =
{\n\t          k =3D palette ? pixels[i / 4] * 4 : j;\n\t          v =3D =
input[k++];\n\t          data[i++] =3D v;\n\t          data[i++] =3D =
v;\n\t          data[i++] =3D v;\n\t          data[i++] =3D alpha ? =
input[k++] : 255;\n\t          j =3D k;\n\t        }\n\t      } else =
{\n\t        while (i &lt; length) {\n\t          k =3D palette ? =
pixels[i / 4] * 4 : j;\n\t          data[i++] =3D input[k++];\n\t        =
  data[i++] =3D input[k++];\n\t          data[i++] =3D input[k++];\n\t   =
       data[i++] =3D alpha ? input[k++] : 255;\n\t          j =3D k;\n\t =
       }\n\t      }\n\t    };\n\n\t    PNG.prototype.decode =3D =
function(fn) {\n\t      var ret,\n\t        _this =3D this;\n\t      ret =
=3D new Buffer(this.width * this.height * 4);\n\t      return =
this.decodePixels(function(pixels) {\n\t        =
_this.copyToImageData(ret, pixels);\n\t        return fn(ret);\n\t      =
});\n\t    };\n\n\t    return PNG;\n\n\t  =
})();\n\n\t}).call(this);\n\n\t/* WEBPACK VAR INJECTION =
*/}.call(exports, __webpack_require__(2).Buffer))\n\n/***/ },\n/* 101 =
*/\n/***/ function(module, exports) {\n\n\t// Generated by CoffeeScript =
1.7.1\n\t(function() {\n\t  module.exports =3D {\n\t    annotate: =
function(x, y, w, h, options) {\n\t      var key, ref, val;\n\t      =
options.Type =3D 'Annot';\n\t      options.Rect =3D this._convertRect(x, =
y, w, h);\n\t      options.Border =3D [0, 0, 0];\n\t      if =
(options.Subtype !=3D=3D 'Link') {\n\t        if (options.C =3D=3D null) =
{\n\t          options.C =3D this._normalizeColor(options.color || [0, =
0, 0]);\n\t        }\n\t      }\n\t      delete options.color;\n\t      =
if (typeof options.Dest =3D=3D=3D 'string') {\n\t        options.Dest =
=3D new String(options.Dest);\n\t      }\n\t      for (key in options) =
{\n\t        val =3D options[key];\n\t        =
options[key[0].toUpperCase() + key.slice(1)] =3D val;\n\t      }\n\t     =
 ref =3D this.ref(options);\n\t      =
this.page.annotations.push(ref);\n\t      ref.end();\n\t      return =
this;\n\t    },\n\t    note: function(x, y, w, h, contents, options) =
{\n\t      if (options =3D=3D null) {\n\t        options =3D {};\n\t     =
 }\n\t      options.Subtype =3D 'Text';\n\t      options.Contents =3D =
new String(contents);\n\t      options.Name =3D 'Comment';\n\t      if =
(options.color =3D=3D null) {\n\t        options.color =3D [243, 223, =
92];\n\t      }\n\t      return this.annotate(x, y, w, h, options);\n\t  =
  },\n\t    link: function(x, y, w, h, url, options) {\n\t      if =
(options =3D=3D null) {\n\t        options =3D {};\n\t      }\n\t      =
options.Subtype =3D 'Link';\n\t      options.A =3D this.ref({\n\t        =
S: 'URI',\n\t        URI: new String(url)\n\t      });\n\t      =
options.A.end();\n\t      return this.annotate(x, y, w, h, options);\n\t =
   },\n\t    _markup: function(x, y, w, h, options) {\n\t      var x1, =
x2, y1, y2, _ref;\n\t      if (options =3D=3D null) {\n\t        options =
=3D {};\n\t      }\n\t      _ref =3D this._convertRect(x, y, w, h), x1 =
=3D _ref[0], y1 =3D _ref[1], x2 =3D _ref[2], y2 =3D _ref[3];\n\t      =
options.QuadPoints =3D [x1, y2, x2, y2, x1, y1, x2, y1];\n\t      =
options.Contents =3D new String;\n\t      return this.annotate(x, y, w, =
h, options);\n\t    },\n\t    highlight: function(x, y, w, h, options) =
{\n\t      if (options =3D=3D null) {\n\t        options =3D {};\n\t     =
 }\n\t      options.Subtype =3D 'Highlight';\n\t      if (options.color =
=3D=3D null) {\n\t        options.color =3D [241, 238, 148];\n\t      =
}\n\t      return this._markup(x, y, w, h, options);\n\t    },\n\t    =
underline: function(x, y, w, h, options) {\n\t      if (options =3D=3D =
null) {\n\t        options =3D {};\n\t      }\n\t      options.Subtype =
=3D 'Underline';\n\t      return this._markup(x, y, w, h, options);\n\t  =
  },\n\t    strike: function(x, y, w, h, options) {\n\t      if (options =
=3D=3D null) {\n\t        options =3D {};\n\t      }\n\t      =
options.Subtype =3D 'StrikeOut';\n\t      return this._markup(x, y, w, =
h, options);\n\t    },\n\t    lineAnnotation: function(x1, y1, x2, y2, =
options) {\n\t      if (options =3D=3D null) {\n\t        options =3D =
{};\n\t      }\n\t      options.Subtype =3D 'Line';\n\t      =
options.Contents =3D new String;\n\t      options.L =3D [x1, =
this.page.height - y1, x2, this.page.height - y2];\n\t      return =
this.annotate(x1, y1, x2, y2, options);\n\t    },\n\t    rectAnnotation: =
function(x, y, w, h, options) {\n\t      if (options =3D=3D null) {\n\t  =
      options =3D {};\n\t      }\n\t      options.Subtype =3D =
'Square';\n\t      options.Contents =3D new String;\n\t      return =
this.annotate(x, y, w, h, options);\n\t    },\n\t    ellipseAnnotation: =
function(x, y, w, h, options) {\n\t      if (options =3D=3D null) {\n\t  =
      options =3D {};\n\t      }\n\t      options.Subtype =3D =
'Circle';\n\t      options.Contents =3D new String;\n\t      return =
this.annotate(x, y, w, h, options);\n\t    },\n\t    textAnnotation: =
function(x, y, w, h, text, options) {\n\t      if (options =3D=3D null) =
{\n\t        options =3D {};\n\t      }\n\t      options.Subtype =3D =
'FreeText';\n\t      options.Contents =3D new String(text);\n\t      =
options.DA =3D new String;\n\t      return this.annotate(x, y, w, h, =
options);\n\t    },\n\t    _convertRect: function(x1, y1, w, h) {\n\t    =
  var m0, m1, m2, m3, m4, m5, x2, y2, _ref;\n\t      y2 =3D y1;\n\t      =
y1 +=3D h;\n\t      x2 =3D x1 + w;\n\t      _ref =3D this._ctm, m0 =3D =
_ref[0], m1 =3D _ref[1], m2 =3D _ref[2], m3 =3D _ref[3], m4 =3D _ref[4], =
m5 =3D _ref[5];\n\t      x1 =3D m0 * x1 + m2 * y1 + m4;\n\t      y1 =3D =
m1 * x1 + m3 * y1 + m5;\n\t      x2 =3D m0 * x2 + m2 * y2 + m4;\n\t      =
y2 =3D m1 * x2 + m3 * y2 + m5;\n\t      return [x1, y1, x2, y2];\n\t    =
}\n\t  };\n\n\t}).call(this);\n\n\n/***/ },\n/* 102 */\n/***/ =
function(module, exports) {\n\n\tmodule.exports =3D {\n\t\t'4A0': =
[4767.87, 6740.79],\n\t\t'2A0': [3370.39, 4767.87],\n\t\tA0: [2383.94, =
3370.39],\n\t\tA1: [1683.78, 2383.94],\n\t\tA2: [1190.55, =
1683.78],\n\t\tA3: [841.89, 1190.55],\n\t\tA4: [595.28, =
841.89],\n\t\tA5: [419.53, 595.28],\n\t\tA6: [297.64, 419.53],\n\t\tA7: =
[209.76, 297.64],\n\t\tA8: [147.40, 209.76],\n\t\tA9: [104.88, =
147.40],\n\t\tA10: [73.70, 104.88],\n\t\tB0: [2834.65, =
4008.19],\n\t\tB1: [2004.09, 2834.65],\n\t\tB2: [1417.32, =
2004.09],\n\t\tB3: [1000.63, 1417.32],\n\t\tB4: [708.66, =
1000.63],\n\t\tB5: [498.90, 708.66],\n\t\tB6: [354.33, 498.90],\n\t\tB7: =
[249.45, 354.33],\n\t\tB8: [175.75, 249.45],\n\t\tB9: [124.72, =
175.75],\n\t\tB10: [87.87, 124.72],\n\t\tC0: [2599.37, =
3676.54],\n\t\tC1: [1836.85, 2599.37],\n\t\tC2: [1298.27, =
1836.85],\n\t\tC3: [918.43, 1298.27],\n\t\tC4: [649.13, =
918.43],\n\t\tC5: [459.21, 649.13],\n\t\tC6: [323.15, 459.21],\n\t\tC7: =
[229.61, 323.15],\n\t\tC8: [161.57, 229.61],\n\t\tC9: [113.39, =
161.57],\n\t\tC10: [79.37, 113.39],\n\t\tRA0: [2437.80, =
3458.27],\n\t\tRA1: [1729.13, 2437.80],\n\t\tRA2: [1218.90, =
1729.13],\n\t\tRA3: [864.57, 1218.90],\n\t\tRA4: [609.45, =
864.57],\n\t\tSRA0: [2551.18, 3628.35],\n\t\tSRA1: [1814.17, =
2551.18],\n\t\tSRA2: [1275.59, 1814.17],\n\t\tSRA3: [907.09, =
1275.59],\n\t\tSRA4: [637.80, 907.09],\n\t\tEXECUTIVE: [521.86, =
756.00],\n\t\tFOLIO: [612.00, 936.00],\n\t\tLEGAL: [612.00, =
1008.00],\n\t\tLETTER: [612.00, 792.00],\n\t\tTABLOID: [792.00, =
1224.00]\n\t};\n\n\n/***/ },\n/* 103 */\n/***/ function(module, exports, =
__webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(Buffer) =
{/* jslint node: true */\n\t'use strict';\n\n\tvar pdfKit =3D =
__webpack_require__(24);\n\tvar PDFImage =3D =
__webpack_require__(97);\n\n\tfunction ImageMeasure(pdfDoc, =
imageDictionary) {\n\t\tthis.pdfDoc =3D =
pdfDoc;\n\t\tthis.imageDictionary =3D imageDictionary || =
{};\n\t}\n\n\tImageMeasure.prototype.measureImage =3D function(src) =
{\n\t\tvar image, label;\n\t\tvar that =3D this;\n\n\t\tif =
(!this.pdfDoc._imageRegistry[src]) {\n\t\t\tlabel =3D 'I' + =
(++this.pdfDoc._imageCount);\n\t\t\timage =3D =
PDFImage.open(realImageSrc(src), =
label);\n\t\t\timage.embed(this.pdfDoc);\n\t\t\tthis.pdfDoc._imageRegistr=
y[src] =3D image;\n\t\t} else {\n\t\t\timage =3D =
this.pdfDoc._imageRegistry[src];\n\t\t}\n\n\t\treturn { width: =
image.width, height: image.height };\n\n\t\tfunction realImageSrc(src) =
{\n\t\t\tvar img =3D that.imageDictionary[src];\n\n\t\t\tif (!img) =
return src;\n\n\t\t\tvar index =3D img.indexOf('base64,');\n\t\t\tif =
(index &lt; 0) {\n\t\t\t\tthrow 'invalid image format, images dictionary =
should contain dataURL entries';\n\t\t\t}\n\n\t\t\treturn new =
Buffer(img.substring(index + 7), =
'base64');\n\t\t}\n\t};\n\n\tmodule.exports =3D ImageMeasure;\n\n\t/* =
WEBPACK VAR INJECTION */}.call(exports, =
__webpack_require__(2).Buffer))\n\n/***/ },\n/* 104 */\n/***/ =
function(module, exports) {\n\n\t/* jslint node: true */\n\t'use =
strict';\n\n\n\tfunction groupDecorations(line) {\n\t\tvar groups =3D =
[], curGroup =3D null;\n\t\tfor(var i =3D 0, l =3D line.inlines.length; =
i &lt; l; i++) {\n\t\t\tvar inline =3D line.inlines[i];\n\t\t\tvar =
decoration =3D inline.decoration;\n\t\t\tif(!decoration) =
{\n\t\t\t\tcurGroup =3D null;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tvar =
color =3D inline.decorationColor || inline.color || 'black';\n\t\t\tvar =
style =3D inline.decorationStyle || 'solid';\n\t\t\tdecoration =3D =
Array.isArray(decoration) ? decoration : [ decoration ];\n\t\t\tfor(var =
ii =3D 0, ll =3D decoration.length; ii &lt; ll; ii++) {\n\t\t\t\tvar =
deco =3D decoration[ii];\n\t\t\t\tif(!curGroup || deco !=3D=3D =
curGroup.decoration ||\n\t\t\t\t\t\tstyle !=3D=3D =
curGroup.decorationStyle || color !=3D=3D curGroup.decorationColor =
||\n\t\t\t\t\t\tdeco =3D=3D=3D 'lineThrough') =
{\n\t\t\t\n\t\t\t\t\tcurGroup =3D {\n\t\t\t\t\t\tline: =
line,\n\t\t\t\t\t\tdecoration: deco, \n\t\t\t\t\t\tdecorationColor: =
color, \n\t\t\t\t\t\tdecorationStyle: style,\n\t\t\t\t\t\tinlines: [ =
inline ]\n\t\t\t\t\t};\n\t\t\t\t\tgroups.push(curGroup);\n\t\t\t\t} else =
{\n\t\t\t\t\tcurGroup.inlines.push(inline);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\=
t\t\n\t\treturn groups;\n\t}\n\n\tfunction drawDecoration(group, x, y, =
pdfKitDoc) {\n\t\tfunction maxInline() {\n\t\t\tvar max =3D =
0;\n\t\t\tfor (var i =3D 0, l =3D group.inlines.length; i &lt; l; i++) =
{\n\t\t\t\tvar inl =3D group.inlines[i];\n\t\t\t\tmax =3D inl.fontSize =
&gt; max ? i : max;\n\t\t\t}\n\t\t\treturn =
group.inlines[max];\n\t\t}\n\t\tfunction width() {\n\t\t\tvar sum =3D =
0;\n\t\t\tfor (var i =3D 0, l =3D group.inlines.length; i &lt; l; i++) =
{\n\t\t\t\tsum +=3D group.inlines[i].width;\n\t\t\t}\n\t\t\treturn =
sum;\n\t\t}\n\t\tvar firstInline =3D =
group.inlines[0],\n\t\t\tbiggerInline =3D maxInline(),\n\t\t\ttotalWidth =
=3D width(),\n\t\t\tlineAscent =3D =
group.line.getAscenderHeight(),\n\t\t\tascent =3D =
biggerInline.font.ascender / 1000 * biggerInline.fontSize,\n\t\t\theight =
=3D biggerInline.height,\n\t\t\tdescent =3D height - =
ascent;\n\t\t\n\t\tvar lw =3D 0.5 + =
Math.floor(Math.max(biggerInline.fontSize - 8, 0) / 2) * =
0.12;\n\t\t\n\t\tswitch (group.decoration) {\n\t\t\tcase =
'underline':\n\t\t\t\ty +=3D lineAscent + descent * =
0.45;\n\t\t\t\tbreak;\n\t\t\tcase 'overline':\n\t\t\t\ty +=3D lineAscent =
- (ascent * 0.85);\n\t\t\t\tbreak;\n\t\t\tcase 'lineThrough':\n\t\t\t\ty =
+=3D lineAscent - (ascent * =
0.25);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow 'Unkown decoration =
: ' + =
group.decoration;\n\t\t}\n\t\tpdfKitDoc.save();\n\t\t\n\t\tif(group.decor=
ationStyle =3D=3D=3D 'double') {\n\t\t\tvar gap =3D Math.max(0.5, =
lw*2);\n\t\t\tpdfKitDoc\t.fillColor(group.decorationColor)\n\t\t\t\t\t\t.=
rect(x + firstInline.x, y-lw/2, totalWidth, =
lw/2).fill()\n\t\t\t\t\t\t.rect(x + firstInline.x, y+gap-lw/2, =
totalWidth, lw/2).fill();\n\t\t} else if(group.decorationStyle =3D=3D=3D =
'dashed') {\n\t\t\tvar nbDashes =3D Math.ceil(totalWidth / =
(3.96+2.84));\n\t\t\tvar rdx =3D x + =
firstInline.x;\n\t\t\tpdfKitDoc.rect(rdx, y, totalWidth, =
lw).clip();\n\t\t\tpdfKitDoc.fillColor(group.decorationColor);\n\t\t\tfor=
 (var i =3D 0; i &lt; nbDashes; i++) {\n\t\t\t\tpdfKitDoc.rect(rdx, =
y-lw/2, 3.96, lw).fill();\n\t\t\t\trdx +=3D 3.96 + 2.84;\n\t\t\t}\n\t\t} =
else if(group.decorationStyle =3D=3D=3D 'dotted') {\n\t\t\tvar nbDots =
=3D Math.ceil(totalWidth / (lw*3));\n\t\t\tvar rx =3D x + =
firstInline.x;\n\t\t\tpdfKitDoc.rect(rx, y, totalWidth, =
lw).clip();\n\t\t\tpdfKitDoc.fillColor(group.decorationColor);\n\t\t\tfor=
 (var ii =3D 0; ii &lt; nbDots; ii++) {\n\t\t\t\tpdfKitDoc.rect(rx, =
y-lw/2, lw, lw).fill();\n\t\t\t\trx +=3D (lw*3);\n\t\t\t}\n\t\t} else =
if(group.decorationStyle =3D=3D=3D 'wavy') {\n\t\t\tvar sh =3D 0.7, sv =
=3D 1;\n\t\t\tvar nbWaves =3D Math.ceil(totalWidth / =
(sh*2))+1;\n\t\t\tvar rwx =3D x + firstInline.x - =
1;\n\t\t\tpdfKitDoc.rect(x + firstInline.x, y-sv, totalWidth, =
y+sv).clip();\n\t\t\tpdfKitDoc.lineWidth(0.24);\n\t\t\tpdfKitDoc.moveTo(r=
wx, y);\n\t\t\tfor(var iii =3D 0; iii &lt; nbWaves; iii++) =
{\n\t\t\t\tpdfKitDoc   .bezierCurveTo(rwx+sh, y-sv, rwx+sh*2, y-sv, =
rwx+sh*3, y)\n\t\t\t\t\t\t\t.bezierCurveTo(rwx+sh*4, y+sv, rwx+sh*5, =
y+sv, rwx+sh*6, y);\n\t\t\t\t\trwx +=3D =
sh*6;\n\t\t\t\t}\n\t\t\tpdfKitDoc.stroke(group.decorationColor);\n\t\t\t\=
n\t\t} else =
{\n\t\t\tpdfKitDoc\t.fillColor(group.decorationColor)\n\t\t\t\t\t\t.rect(=
x + firstInline.x, y-lw/2, totalWidth, =
lw)\n\t\t\t\t\t\t.fill();\n\t\t}\n\t\tpdfKitDoc.restore();\n\t}\n\n\tfunc=
tion drawDecorations(line, x, y, pdfKitDoc) {\n\t\tvar groups =3D =
groupDecorations(line);\n\t\tfor (var i =3D 0, l =3D groups.length; i =
&lt; l; i++) {\n\t\t\tdrawDecoration(groups[i], x, y, =
pdfKitDoc);\n\t\t}\n\t}\n\n\tfunction drawBackground(line, x, y, =
pdfKitDoc) {\n\t\tvar height =3D line.getHeight();\n\t\tfor(var i =3D 0, =
l =3D line.inlines.length; i &lt; l; i++) {\n\t\t\tvar inline =3D =
line.inlines[i];\n\t\t\t\tif(inline.background) =
{\n\t\t\t\t\tpdfKitDoc\t.fillColor(inline.background)\n\t\t\t\t\t\t\t\t.r=
ect(x + inline.x, y, inline.width, =
height)\n\t\t\t\t\t\t\t\t.fill();\n\t\t\t\t}\n\t\t}\n\t}\n\n\tmodule.expo=
rts =3D {\n\t\tdrawBackground: drawBackground,\n\t\tdrawDecorations: =
drawDecorations\n\t};\n\n/***/ },\n/* 105 */\n/***/ function(module, =
exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, =
__WEBPACK_AMD_DEFINE_RESULT__;/* FileSaver.js\n\t * A saveAs() FileSaver =
implementation.\n\t * 1.1.20150716\n\t *\n\t * By Eli Grey, =
http://eligrey.com\n\t * License: X11/MIT\n\t *   See =
https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md\n\t =
*/\n\n\t/*global self */\n\t/*jslint bitwise: true, indent: 4, laxbreak: =
true, laxcomma: true, smarttabs: true, plusplus: true */\n\n\t/*! =
@source =
http://purl.eligrey.com/github/FileSaver.js/blob/master/FileSaver.js =
*/\n\n\tvar saveAs =3D saveAs || (function(view) {\n\t\t\"use =
strict\";\n\t\t// IE &lt;10 is explicitly unsupported\n\t\tif (typeof =
navigator !=3D=3D \"undefined\" &amp;&amp; /MSIE =
[1-9]\\./.test(navigator.userAgent)) =
{\n\t\t\treturn;\n\t\t}\n\t\tvar\n\t\t\t  doc =3D view.document\n\t\t\t  =
// only get URL when necessary in case Blob.js hasn't overridden it =
yet\n\t\t\t, get_URL =3D function() {\n\t\t\t\treturn view.URL || =
view.webkitURL || view;\n\t\t\t}\n\t\t\t, save_link =3D =
doc.createElementNS(\"http://www.w3.org/1999/xhtml\", \"a\")\n\t\t\t, =
can_use_save_link =3D \"download\" in save_link\n\t\t\t, click =3D =
function(node) {\n\t\t\t\tvar event =3D new =
MouseEvent(\"click\");\n\t\t\t\tnode.dispatchEvent(event);\n\t\t\t}\n\t\t=
\t, webkit_req_fs =3D view.webkitRequestFileSystem\n\t\t\t, req_fs =3D =
view.requestFileSystem || webkit_req_fs || =
view.mozRequestFileSystem\n\t\t\t, throw_outside =3D function(ex) =
{\n\t\t\t\t(view.setImmediate || view.setTimeout)(function() =
{\n\t\t\t\t\tthrow ex;\n\t\t\t\t}, 0);\n\t\t\t}\n\t\t\t, =
force_saveable_type =3D \"application/octet-stream\"\n\t\t\t, =
fs_min_size =3D 0\n\t\t\t// See =
https://code.google.com/p/chromium/issues/detail?id=3D375297#c7 =
and\n\t\t\t// =
https://github.com/eligrey/FileSaver.js/commit/485930a#commitcomment-8768=
047\n\t\t\t// for the reasoning behind the timeout and revocation =
flow\n\t\t\t, arbitrary_revoke_timeout =3D 500 // in ms\n\t\t\t, revoke =
=3D function(file) {\n\t\t\t\tvar revoker =3D function() {\n\t\t\t\t\tif =
(typeof file =3D=3D=3D \"string\") { // file is an object =
URL\n\t\t\t\t\t\tget_URL().revokeObjectURL(file);\n\t\t\t\t\t} else { // =
file is a =
File\n\t\t\t\t\t\tfile.remove();\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tif =
(view.chrome) {\n\t\t\t\t\trevoker();\n\t\t\t\t} else =
{\n\t\t\t\t\tsetTimeout(revoker, =
arbitrary_revoke_timeout);\n\t\t\t\t}\n\t\t\t}\n\t\t\t, dispatch =3D =
function(filesaver, event_types, event) {\n\t\t\t\tevent_types =3D =
[].concat(event_types);\n\t\t\t\tvar i =3D =
event_types.length;\n\t\t\t\twhile (i--) {\n\t\t\t\t\tvar listener =3D =
filesaver[\"on\" + event_types[i]];\n\t\t\t\t\tif (typeof listener =
=3D=3D=3D \"function\") {\n\t\t\t\t\t\ttry =
{\n\t\t\t\t\t\t\tlistener.call(filesaver, event || =
filesaver);\n\t\t\t\t\t\t} catch (ex) =
{\n\t\t\t\t\t\t\tthrow_outside(ex);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t=
}\n\t\t\t}\n\t\t\t, auto_bom =3D function(blob) {\n\t\t\t\t// prepend =
BOM for UTF-8 XML and text/* types (including HTML)\n\t\t\t\tif =
(/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\=
\s*=3D\\s*utf-8/i.test(blob.type)) {\n\t\t\t\t\treturn new =
Blob([\"\\ufeff\", blob], {type: blob.type});\n\t\t\t\t}\n\t\t\t\treturn =
blob;\n\t\t\t}\n\t\t\t, FileSaver =3D function(blob, name, no_auto_bom) =
{\n\t\t\t\tif (!no_auto_bom) {\n\t\t\t\t\tblob =3D =
auto_bom(blob);\n\t\t\t\t}\n\t\t\t\t// First try a.download, then web =
filesystem, then object URLs\n\t\t\t\tvar\n\t\t\t\t\t  filesaver =3D =
this\n\t\t\t\t\t, type =3D blob.type\n\t\t\t\t\t, blob_changed =3D =
false\n\t\t\t\t\t, object_url\n\t\t\t\t\t, target_view\n\t\t\t\t\t, =
dispatch_all =3D function() {\n\t\t\t\t\t\tdispatch(filesaver, =
\"writestart progress write writeend\".split(\" =
\"));\n\t\t\t\t\t}\n\t\t\t\t\t// on any filesys errors revert to saving =
with object URLs\n\t\t\t\t\t, fs_error =3D function() {\n\t\t\t\t\t\t// =
don't create more object URLs than needed\n\t\t\t\t\t\tif (blob_changed =
|| !object_url) {\n\t\t\t\t\t\t\tobject_url =3D =
get_URL().createObjectURL(blob);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif =
(target_view) {\n\t\t\t\t\t\t\ttarget_view.location.href =3D =
object_url;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar new_tab =3D =
view.open(object_url, \"_blank\");\n\t\t\t\t\t\t\tif (new_tab =3D=3D =
undefined &amp;&amp; typeof safari !=3D=3D \"undefined\") =
{\n\t\t\t\t\t\t\t\t//Apple do not allow window.open, see =
http://bit.ly/1kZffRI\n\t\t\t\t\t\t\t\tview.location.href =3D =
object_url\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfilesaver.readySt=
ate =3D =
filesaver.DONE;\n\t\t\t\t\t\tdispatch_all();\n\t\t\t\t\t\trevoke(object_u=
rl);\n\t\t\t\t\t}\n\t\t\t\t\t, abortable =3D function(func) =
{\n\t\t\t\t\t\treturn function() {\n\t\t\t\t\t\t\tif =
(filesaver.readyState !=3D=3D filesaver.DONE) {\n\t\t\t\t\t\t\t\treturn =
func.apply(this, =
arguments);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\t, =
create_if_not_found =3D {create: true, exclusive: false}\n\t\t\t\t\t, =
slice\n\t\t\t\t;\n\t\t\t\tfilesaver.readyState =3D =
filesaver.INIT;\n\t\t\t\tif (!name) {\n\t\t\t\t\tname =3D =
\"download\";\n\t\t\t\t}\n\t\t\t\tif (can_use_save_link) =
{\n\t\t\t\t\tobject_url =3D =
get_URL().createObjectURL(blob);\n\t\t\t\t\tsave_link.href =3D =
object_url;\n\t\t\t\t\tsave_link.download =3D =
name;\n\t\t\t\t\tsetTimeout(function() =
{\n\t\t\t\t\t\tclick(save_link);\n\t\t\t\t\t\tdispatch_all();\n\t\t\t\t\t=
\trevoke(object_url);\n\t\t\t\t\t\tfilesaver.readyState =3D =
filesaver.DONE;\n\t\t\t\t\t});\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t// =
Object and web filesystem URLs have a problem saving in Google Chrome =
when\n\t\t\t\t// viewed in a tab, so I force save with =
application/octet-stream\n\t\t\t\t// =
http://code.google.com/p/chromium/issues/detail?id=3D91158\n\t\t\t\t// =
Update: Google errantly closed 91158, I submitted it again:\n\t\t\t\t// =
https://code.google.com/p/chromium/issues/detail?id=3D389642\n\t\t\t\tif =
(view.chrome &amp;&amp; type &amp;&amp; type !=3D=3D =
force_saveable_type) {\n\t\t\t\t\tslice =3D blob.slice || =
blob.webkitSlice;\n\t\t\t\t\tblob =3D slice.call(blob, 0, blob.size, =
force_saveable_type);\n\t\t\t\t\tblob_changed =3D =
true;\n\t\t\t\t}\n\t\t\t\t// Since I can't be sure that the guessed =
media type will trigger a download\n\t\t\t\t// in WebKit, I append =
.download to the filename.\n\t\t\t\t// =
https://bugs.webkit.org/show_bug.cgi?id=3D65440\n\t\t\t\tif =
(webkit_req_fs &amp;&amp; name !=3D=3D \"download\") {\n\t\t\t\t\tname =
+=3D \".download\";\n\t\t\t\t}\n\t\t\t\tif (type =3D=3D=3D =
force_saveable_type || webkit_req_fs) {\n\t\t\t\t\ttarget_view =3D =
view;\n\t\t\t\t}\n\t\t\t\tif (!req_fs) =
{\n\t\t\t\t\tfs_error();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tfs_min_si=
ze +=3D blob.size;\n\t\t\t\treq_fs(view.TEMPORARY, fs_min_size, =
abortable(function(fs) {\n\t\t\t\t\tfs.root.getDirectory(\"saved\", =
create_if_not_found, abortable(function(dir) {\n\t\t\t\t\t\tvar save =3D =
function() {\n\t\t\t\t\t\t\tdir.getFile(name, create_if_not_found, =
abortable(function(file) =
{\n\t\t\t\t\t\t\t\tfile.createWriter(abortable(function(writer) =
{\n\t\t\t\t\t\t\t\t\twriter.onwriteend =3D function(event) =
{\n\t\t\t\t\t\t\t\t\t\ttarget_view.location.href =3D =
file.toURL();\n\t\t\t\t\t\t\t\t\t\tfilesaver.readyState =3D =
filesaver.DONE;\n\t\t\t\t\t\t\t\t\t\tdispatch(filesaver, \"writeend\", =
event);\n\t\t\t\t\t\t\t\t\t\trevoke(file);\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\=
t\t\t\t\t\twriter.onerror =3D function() {\n\t\t\t\t\t\t\t\t\t\tvar =
error =3D writer.error;\n\t\t\t\t\t\t\t\t\t\tif (error.code !=3D=3D =
error.ABORT_ERR) =
{\n\t\t\t\t\t\t\t\t\t\t\tfs_error();\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t=
\t\t\t};\n\t\t\t\t\t\t\t\t\t\"writestart progress write abort\".split(\" =
\").forEach(function(event) {\n\t\t\t\t\t\t\t\t\t\twriter[\"on\" + =
event] =3D filesaver[\"on\" + =
event];\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\twriter.write(blob);\n\t=
\t\t\t\t\t\t\t\tfilesaver.abort =3D function() =
{\n\t\t\t\t\t\t\t\t\t\twriter.abort();\n\t\t\t\t\t\t\t\t\t\tfilesaver.rea=
dyState =3D =
filesaver.DONE;\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\tfilesaver.readyS=
tate =3D filesaver.WRITING;\n\t\t\t\t\t\t\t\t}), =
fs_error);\n\t\t\t\t\t\t\t}), =
fs_error);\n\t\t\t\t\t\t};\n\t\t\t\t\t\tdir.getFile(name, {create: =
false}, abortable(function(file) {\n\t\t\t\t\t\t\t// delete file if it =
already =
exists\n\t\t\t\t\t\t\tfile.remove();\n\t\t\t\t\t\t\tsave();\n\t\t\t\t\t\t=
}), abortable(function(ex) {\n\t\t\t\t\t\t\tif (ex.code =3D=3D=3D =
ex.NOT_FOUND_ERR) {\n\t\t\t\t\t\t\t\tsave();\n\t\t\t\t\t\t\t} else =
{\n\t\t\t\t\t\t\t\tfs_error();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}));\n\t\t\t=
\t\t}), fs_error);\n\t\t\t\t}), fs_error);\n\t\t\t}\n\t\t\t, FS_proto =
=3D FileSaver.prototype\n\t\t\t, saveAs =3D function(blob, name, =
no_auto_bom) {\n\t\t\t\treturn new FileSaver(blob, name, =
no_auto_bom);\n\t\t\t}\n\t\t;\n\t\t// IE 10+ (native saveAs)\n\t\tif =
(typeof navigator !=3D=3D \"undefined\" &amp;&amp; =
navigator.msSaveOrOpenBlob) {\n\t\t\treturn function(blob, name, =
no_auto_bom) {\n\t\t\t\tif (!no_auto_bom) {\n\t\t\t\t\tblob =3D =
auto_bom(blob);\n\t\t\t\t}\n\t\t\t\treturn =
navigator.msSaveOrOpenBlob(blob, name || =
\"download\");\n\t\t\t};\n\t\t}\n\n\t\tFS_proto.abort =3D function() =
{\n\t\t\tvar filesaver =3D this;\n\t\t\tfilesaver.readyState =3D =
filesaver.DONE;\n\t\t\tdispatch(filesaver, =
\"abort\");\n\t\t};\n\t\tFS_proto.readyState =3D FS_proto.INIT =3D =
0;\n\t\tFS_proto.WRITING =3D 1;\n\t\tFS_proto.DONE =3D =
2;\n\n\t\tFS_proto.error =3D\n\t\tFS_proto.onwritestart =
=3D\n\t\tFS_proto.onprogress =3D\n\t\tFS_proto.onwrite =
=3D\n\t\tFS_proto.onabort =3D\n\t\tFS_proto.onerror =
=3D\n\t\tFS_proto.onwriteend =3D\n\t\t\tnull;\n\n\t\treturn =
saveAs;\n\t}(\n\t\t   typeof self !=3D=3D \"undefined\" &amp;&amp; =
self\n\t\t|| typeof window !=3D=3D \"undefined\" &amp;&amp; =
window\n\t\t|| this.content\n\t));\n\t// `self` is undefined in Firefox =
for Android content script context\n\t// while `this` is =
nsIContentFrameMessageManager\n\t// with an attribute `content` that =
corresponds to the window\n\n\tif (typeof module !=3D=3D \"undefined\" =
&amp;&amp; module.exports) {\n\t  module.exports.saveAs =3D saveAs;\n\t} =
else if ((\"function\" !=3D=3D \"undefined\" &amp;&amp; =
__webpack_require__(106) !=3D=3D null) &amp;&amp; =
(__webpack_require__(107) !=3D null)) {\n\t  =
!(__WEBPACK_AMD_DEFINE_ARRAY__ =3D [], __WEBPACK_AMD_DEFINE_RESULT__ =3D =
function() {\n\t    return saveAs;\n\t  }.apply(exports, =
__WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !=3D=3D =
undefined &amp;&amp; (module.exports =3D =
__WEBPACK_AMD_DEFINE_RESULT__));\n\t}\n\n\n/***/ },\n/* 106 */\n/***/ =
function(module, exports) {\n\n\tmodule.exports =3D function() { throw =
new Error(\"define cannot be used indirect\"); };\r\n\n\n/***/ },\n/* =
107 */\n/***/ function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION =
*/(function(__webpack_amd_options__) {module.exports =3D =
__webpack_amd_options__;\r\n\n\t/* WEBPACK VAR INJECTION =
*/}.call(exports, {}))\n\n/***/ }\n/******/ =
]);"],"sourceRoot":"/source/"}</PRE></BODY></HTML>
